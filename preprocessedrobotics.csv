,title,content,complete_tags,words_in_tags
0,change pwm values according encoder output,motor encoder set speed motor change speed encoder readings second fit equation ax^2 bx c x speed value given motor encoder readings second get motor encoder reading counted equal value encoder output get motor calculated using equation pwm input motor vary in-order get desired encoder output want control value using pid controller confused writing equations help appreciated..,motor pid pwm,pwm pid motor
1,removing quadcopter drift side,wrote quadcopter firmware based older code code stabilize copter equilibrium model behaving nice control laptop noticed copter hovering side controlled likely wind balanced turbulence idea gps accelerometer data implement function help hold position likely work hold altitude function changes pitch roll change height changed added routine allow hold altitude someone experiences mean avoiding side drifts model software problem opinion know position change wanted remote control hard localize correct position calculate distance caused drift gps precise void hold_altitude int_fast16_t ifl int_fast16_t ibl int_fast16_t ifr int_fast16_t ibr const int_fast32_t rcalt_m // enhance performance // function needed autonomous flight mode // hold altitude // gps auto-navigation _recvr.m_waypoint.m_emode == gpsposition :nothing_f return // return estimated gps barometer float fcuralti_cm _hal_board.get_alti_m // estimate current climb rate float fbaroclimb_cms _hal_board.get_baro .climb_rate_ms float facclclimb_cms _hal_board.get_accel_ms .z // calculate float faltstabout _hal_board.m_rgpids pid_thr_stab .get_pid fcuralti_cm float rcalt_m*100 float fbaracclout _hal_board.m_rgpids pid_thr_accl .get_pid faltstabout fbaroclimb_cms float faccacclout _hal_board.m_rgpids pid_thr_accl .get_pid faltstabout facclclimb_cms int_fast16_t ialtoutput _hal_board.m_rgpids pid_thr_rate .get_pid faltstabout fbaracclout // modify speed motors ifl += ialtoutput ibl += ialtoutput ifr += ialtoutput ibr += ialtoutput copter control // stabilise pids float pit_stab_output constrain_float _hal_board.m_rgpids pid_pit_stab .get_pid float rcpit vatti.x -250 float rol_stab_output constrain_float _hal_board.m_rgpids pid_rol_stab .get_pid float rcrol vatti.y -250 float yaw_stab_output constrain_float _hal_board.m_rgpids pid_yaw_stab .get_pid wrap180_f targ_yaw vatti.z -360 // pilot asking yaw change feed rate pid overwriting yaw stab output abs rcyaw yaw_stab_output rcyaw targ_yaw vatti.z // remember yaw pilot stops // rate pids int_fast16_t pit_output int_fast16_t constrain_float _hal_board.m_rgpids pid_pit_rate .get_pid pit_stab_output vgyro.x -500 int_fast16_t rol_output int_fast16_t constrain_float _hal_board.m_rgpids pid_rol_rate .get_pid rol_stab_output vgyro.y -500 int_fast16_t yaw_output int_fast16_t constrain_float _hal_board.m_rgpids pid_yaw_rate .get_pid yaw_stab_output vgyro.z -500 int_fast16_t ifl rcthr rol_output pit_output int_fast16_t ibl rcthr rol_output pit_output int_fast16_t ifr rcthr rol_output pit_output int_fast16_t ibr rcthr rol_output pit_output // hold altitude hold_altitude ifl ibl ifr ibr rcalt hal.rcout- write motor_fl ifl hal.rcout- write motor_bl ibl hal.rcout- write motor_fr ifr hal.rcout- write motor_br ibr,arduino quadcopter,quadcopter arduino
2,grasshopper effect quadcopter kk2.1.5,builded quadcopter use flight manager kk2.1.5 latest firmware increase throttle flight keep hand stick able maintain touch throttle goes see example video tried different values pid know best large quadcopter medium propellers small weight quadpcoter width propellers factor problem,quadcopter multi-rotor,quadcopter rotor multi
3,quadcopter hover tilted,way make quadcopter maintain steady hovering lateral movement constant altitude tilted left right accomplish,quadcopter,quadcopter
4,i-robot create connectors,correct assuming i-robot create 25-pin connector original version i-robot create thanks ... rick,irobot-create,create irobot
5,make bipedal robots,friend colleague mine studies robotics says bipedal robots present greater challenges stability locomotion much effort develop bipedal robots practical advantages course see advantage arm-like free appendages seems legs arms better design,mobile-robot design legged,mobile design robot legged
6,implement code inner outer pd controllers quadrotor position tracking,"quadrotor system multi-odes equations linearized model used position tracking determine desired x-y positions based roll pitch angles result nested loop inner outer controllers needed controlling quadrotor implementation put while-loop ode45 inner attitude controller asking read paper inner attitude controller run faster position controller i.e 100-200 hz code loops run inside while-loop correct position tracking insert while-loop running inner loop please suggest pseudocode position tracking dynamics equations nonlinear model quadrotor provided small angles model reduced following equations \begin align \ddot x \frac u_ \theta \cos\psi \phi \sin\psi \\ \ddot \frac u_ \theta \sin\psi \phi \cos\psi \\ \ddot z \frac u_ g \\ \ddot \phi \frac l i_ x u_ \\ \ddot \theta \frac l i_ u_ \\ \ddot \psi \frac i_ z u_ \\ \end align aforementioned equations linear position tracking need control x z choose desired roll pitch i.e \phi^ \text \theta^ \begin align \ddot x \frac u_ \theta^ \cos\psi \phi^ \sin\psi \\ \ddot \frac u_ \theta^ \sin\psi \phi^ \cos\psi \\ \end align closed form desired angles obtained follows \begin bmatrix \phi_ \\ \theta_ \end bmatrix \begin bmatrix \sin\psi \cos\psi \\ -\cos\psi \sin\psi \end bmatrix -1 \left \frac u_ \right \begin bmatrix \ddot x \\ \ddot \end bmatrix desired trajectory shown results actual trajectory vs desired code experiment position controller clear clc dt initial values system x dx dy z dz phi dphi theta dtheta psi pi/3 dpsi system parameters mass kg l arm length jx inertia seen rotation axis kg.m^2 jy inertia seen rotation axis kg.m^2 jz inertia seen rotation axis kg.m^2 g acceleration due gravity m/s^2 errorsumx errorsumy errorsumz errorsumphi errorsumtheta pose load desiredx pose ,1 desiredy pose ,2 desiredz pose ,3 ddesiredx ddesiredy ddesiredz desiredxpre desiredypre desiredzpre ddesiredphi ddesiredtheta desiredphipre desiredthetapre torque input ux kpx kdx kix ux kpx* desiredx x kdx* ddesiredx dx kix*errorsumx errorsumx errorsumx desiredx x ddesiredx desiredx desiredxpre dt desiredxpre desiredx uy kpy kdy kiy uy kpy* desiredy kdy* ddesiredy dy kiy*errorsumy errorsumy errorsumy desiredy ddesiredy desiredy desiredypre dt desiredypre desiredy u1 kpz kdz kiz u1 kpz* desiredz z kdz* ddesiredz dz kiz*errorsumz errorsumz errorsumz desiredz z ddesiredz desiredz desiredzpre dt desiredzpre desiredz desired phi theta r sin psi cos psi -cos psi sin psi dangles r\ m/u1 ux uy wrap angles desiredphi wraptopi dangles /2 desiredtheta wraptopi dangles u2 kpp kdp kip u2 kpp* desiredphi phi kdp* ddesiredphi dphi kip*errorsumphi errorsumphi errorsumphi desiredphi phi ddesiredphi desiredphi desiredphipre dt desiredphipre desiredphi -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- u3 kpt kdt kit u3 kpt* desiredtheta theta kdp* ddesiredtheta dtheta kit*errorsumtheta errorsumtheta errorsumtheta desiredtheta theta ddesiredtheta desiredtheta desiredthetapre dt desiredthetapre desiredtheta -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- u4 kps kds kis u4 kps* psi kds* dpsi ode equations quadrotor =================== x ===================== ddx u1/m theta*cos psi phi*sin psi dx dx ddx*dt x x dx*dt =================== ===================== ddy u1/m theta*sin psi phi*cos psi dy dy ddy*dt dy*dt =================== z ===================== ddz u1/m g dz dz ddz*dt z z dz*dt =================== phi ===================== ddphi l/jx *u2 dphi dphi ddphi*dt phi phi dphi*dt =================== theta ===================== ddtheta l/jy *u3 dtheta dtheta ddtheta*dt theta theta dtheta*dt =================== psi ===================== ddpsi *u4 dpsi dpsi ddpsi*dt psi psi dpsi*dt store erro errorx x desiredx errory desiredy errorz z desiredz errorphi phi pi/4 errortheta theta pi/4 errorpsi psi x x z z drawnow plot3 desiredx desiredy desiredz hold plot3 x z dt end figure1 figure set figure1 set subplot plot errorx title x -axis position xlabel sec ylabel x_ x subplot plot errory title -axis position xlabel sec ylabel y_ subplot plot errorz title z -axis position xlabel sec ylabel z_ z subplot plot errorpsi title \psi xlabel sec ylabel \psi_ \psi grid figure2 figure set figure2 figure plot3 x z grid hold plot3 desiredx desiredy desiredz pos get figure2 set figure2 pos pos print figure2 legend code desired trajectory clear clc fileid fopen angle -pi radius z z z z x end z angle angle angle wraptopi angle x radius cos angle radius sin angle z end x x z z fprintf fileid f \t f \t f\n x z end fclose fileid plot3 x z grid",quadcopter matlab microcontroller,quadcopter microcontroller matlab
7,program parallel pid control loops give robot multiple set points follow,process building robot encoders wheel measuring speed position compass sensor measuring heading seperate pid loops moment control robots speed control robots position make follow heading using line following type algorithm stuck merge control loops control robots heading speed say go degrees go metres stop like able control heading speed position say go degrees metres speed idea merge loops end day inputs heading speed position output pwm motors need use kind miso control scheme looked cascaded control accepts set point want set different set points kind state machine stuck,motor sensors control pid,control sensors pid motor
8,line follower robot program,working line follower robot part microelectronics project confused sort code use program pic18f microcontroller using someone give source code code,c line-following,following c line
9,risk overloading motor controller,bought brushed motor controllers china hobby-weight battle robot http intended use cordless drill motors driving left right wheel using lipos charged voltage someone put rest .8 volt excess unlikely damage controller rated fact motor controllers rated likely damage motors honest clear current drawn lipo battery instance connecting lipo motor result massive discharge motor take needs terms current someone point article casts light subject explain,motor battery,battery motor
10,software libraries parsing sensor data,"software libraries assisting general problem parsing stream sensor data use various sensors lidars gpsins units provide messages proprietary binary formats write drivers lot similar concepts used sensor general purpose datagram messages consisting e.g start/end sentinels length specifications checksum variety well-defined message formats payload ends tedious work develop driver time love solution write packet/message specifications format library finds extracts valid messages stream provides simple data structure format fussed language want general purpose datagram parsing library lot customisation sensors odd format parsing initial configuration start data stream something want library processing data real-time used part driver/application everything find basic low level tools interpreting individual elements lots time spent extracting individual elements specific i.e parsers written particular protocol concrete example consider nmea messages basic outer datagram starts followed message name comma separated data ends checksum line terminating character data ascii needs parsed binary computational use outer datagram allows validation removal incomplete/corrupted messages message name content parsed consumption field names specified ease use message turned gpgll,4533.21 n,17739.11 w,113215.22 a*31 programmatic data structure containing latitude longitude utc timestamp validity",sensors software driver,sensors driver software
11,finding cubic polynomial equation joints,professor gave assignment find cubic equation 3-dof manipulator end effector resting moves stops seconds go use jacobian matrix use path planning coefficient matrix solve problem assuming coefficient matrix given original position form taught use path planing original angles given,motion-planning inverse-kinematics motion jacobian,motion inverse planning kinematics jacobian
12,short distance ball transport,looking way transport balls diameter mm slope mm considering usage belt system seem good belt system space constraints robot take nylon belt jam nails make little slots use result considerable reduction available space means take account extra space required nails way means way reduce space used nails way anybody good solution,kinematics manipulator,manipulator kinematics
13,using accelerometer gyroscope sensor track speed position,problem working reverse engineering application zepp.com/baseball wearable device track users speed positional tracking object makes contact 3-d rendering using gyroscope get yaw pitch roll orientation device know use information calculate speed device collided object,imu accelerometer precise-positioning,precise positioning imu accelerometer
14,servo motor considerations quadruped,building quadruped sure features looking servo motor e.g digital vs analog signal vs dual bearings ones considering,rcservo walking-robot,walking robot rcservo
15,buy continuous servos absolute positioning,looking parts beginners robotics kit teach museum wondering servos buy continuous servos relative position encoders find continuous rotation servos absolute position encoders exist understand forums shopping questions suspect part exist understand understand servos use potentiometer position encoder turn rotation types encoders seem job thanks help,servos quadrature-encoder,quadrature servos encoder
16,using range-only sensors mapping slam,slam trying implement algorithm fuses odometry data mapping based wifi signal strengths robot various readings different resources came http //www.qucosa.de/fileadmin/data/qucosa/documents/8644/dissertation_niko_suenderhauf.pdf explained sensors used mapping categorized range-bearing sensors stereo cameras rgb-d cameras provide distance angle range bearing easy locate x coordinates landmarks -- develop map case using wifi signal strengths received signal strengths etc case meaning establish robot pose x theta signal coming developing map question similar algorithm use constructing map explored area using number ultrasound sensors using imu/gps using gps develop map state space getting gps signals wifi signals/ radio signals estimating transmitter/ap location map walls room navigating map lot slam literature talks motion model measurement model former gives pose robot odometry imu latter development map understanding yes say walls room using lidar scanner gives location wall using number beams give bearing average distance beams b single laser scanner use camera distance heading robot calculate location wall map https //shaneormonde.wordpress.com/2014/01/25/webcam-laser-rangefinder/ more-403 wireless signal strengths distance distance transmitter getting rss distance wall coming estimating location walls term correspondences mean slam literature,localization slam artificial-intelligence mapping wireless,localization intelligence mapping artificial wireless slam
17,scale factor robot model relative real measurements robot,measurements real life robot model robot lets say unity want know scale factor dont want find models measurements real world ones find scale factor order get confused mathematics methodology mentioned,3d-model,model
18,start programming proto x quad,bought small proto x quad joystick navigates device looking way send signal thing computer anyone point turn propellers quad using laptop decent knowledge python/matlab/c hardware new world,quadcopter programming-languages,quadcopter languages programming
19,controlling hubsan x4 crazyflie usb dongle,crazyflie usb dongle works crazyflie software usb dongle control crazyflie drones drones operate ghz get dongle software work hubsan x4 help great link usb dongle software http //www.seeedstudio.com/depot/crazyradio-pa-long-range-24ghz-usb-radio-dongle-with-antenna-p-2104.html https //github.com/bitcraze/crazyflie-clients-python,python,python
20,anyone tell things roomba robot clean please,doubt proper ask question apologizing delete roomba robot worked years working producing strange sounds decided clean disassembled point got stuck sort glass things marked red rectangles picture filthy figure clean anyone know remove dust things roomba creators thanks advance,roomba,roomba
21,choosing motor type high reliability many cycles,designing multi modal stent testing machine bend twist compress stents thin light fragile cylindrical meshes arteries tube machine operate maximum hz months time cycles machine lab people noise minimal choosing actuators design overwhelmed range products available rotating stents axis need rotary actuator following specs torque negligible max angle deg angular velocity needed deg/s hollow shafts compressing stents need linear actuator following specs force low max stroke possible allowing different stent lengths stroke velocity needed price motors driving factor looked stepper motors servo motors piezoelectric motors seems huge selection fits requirements motor types reliability suits needs characteristics/advantages/disadvantages consider determine selection suitable actuators know difference motor types lot concrete suggestions welcome,actuator reliability,actuator reliability
22,work specifications motors propellers quadcopter,specifications motors propellers approx produce thrust quadcopter planning lift total weight kg kg weight throttle total thrust produced kg motor total thrust kg looked answer calculate quadcopter lift capabilities understand use information work specifications motor propeller required application answer given previous question limited small quad require specifications bldc motor kv torque imax v power etc propeller suitable motor,quadcopter,quadcopter
23,space elevator needed cable propulsion,order build operate space elevator moving crafts people space big challenges solved finding cable enough tensile strength moving stuff cable reasonnable speed ones technical challenges solve things exist robotics need invented,mobile-robot research,mobile robot research
24,interpretation unsampled particles particle filters,implemented particle filters years experimenting things particle filters learned resolve robot kidnapping problem introducing new particles left particles unsampled population interpretation unsampled particles context effect localization output,localization algorithm particle-filter,filter particle algorithm localization
25,pid control poles represent,read text control e.g pid control mentions mean physical state pole describe,control pid,control pid
26,color sensor alternatives,making white line follower using ir sensor module based taking adc reading arduino uno printing values serial monitor observe values white 25-35 ok. problem arises try detecting surface sensor gives values white 25-40. use color sensor bulky sure get readings faster take finite time sampling pulses someone please tell alternate approach detecting colours possible solution problem edit like add line wish follow width hence plan use sensors outside line sides centre sampling frequency arduino uno sampling ir issue quick using color sensor takes lot time,sensors line-following,following sensors line
27,servo controlled valve,trying build servo-controlled water valve max pressure psi valve size anyone recommend suitable 1/4-turn valve ceramic ball valve anything else easy turn even pressure require little torque turn standard servo rotate small lever attached,servos valve,valve servos
28,problem uploading roboduino atmega328,bought new roboduino atmega board roboduino modded version arduino uno made robokits.co.in problem windows plaform tried upload simple blink program listed examples arduino ide got error avrdude stk500_getsync sync resp=0x00 chose correct com port verifying device manager installed prolific drivers board selected board arduino arduino ide complete verbose upload follow \softwares\installed files\arduino-1.0.4\hardware/tools/avr/bin/avrdude -cd \softwares\installed files\arduino-1.0.4\hardware/tools/avr/etc/avrdude.conf -v -v -v -v -patmega328p -carduino -p\\.\com10 -b115200 -d -uflash w c \users\ankits~1\appdata\local\temp\build5865304215250534760.tmp\blink.cpp.hex avrdude version compiled sep copyright c 2000-2005 brian dean http //www.bdmicro.com/ copyright c 2007-2009 joerg wunsch system wide configuration file \softwares\installed files\arduino-1.0.4\hardware/tools/avr/etc/avrdude.conf using port \\.\com10 using programmer arduino overriding baud rate avrdude send avrdude send avrdude send avrdude recv avrdude stk500_getsync sync resp=0x00 avrdude done thank plug board power led pin led blinks ide shows uploading pin led blinks 3-4 times error appears screen blinks 5-6 times tried example programs follows using bit windows ultimate baud rate set ubuntu downloaded ide software center added dialouts group run connecting board pc ran commands lsusb returned following output bus device id prolific technology inc. pl2303 serial port bus device id linux foundation root hub bus device id linux foundation root hub bus device id linux foundation root hub bus device id linux foundation root hub bus device id linux foundation root hub dmesg tried upload program blink gave following error avrdude stk500_recv programmer responding using bit ubuntu selected arduino uno board thank reading please provide suggestions problem,arduino,arduino
29,rocker bogie suspension system pitch angle,sentence mean chassis maintains average pitch angle rockers put words pitching angle chassis average pitch angles rocker arms pitching angle context please explain pitching angles,mobile-robot wheeled-robot,mobile robot wheeled
30,learn language robotics,ask assembly language close micro-controller hardware micro-controller reccomend bot search object show object note know anything micro-controllers,microcontroller software programming-languages,languages microcontroller programming software
31,maximum ball screw speeds,maximum rotational velocity miniature ball-screw diameters thrust cycles type/brand speed limited ball return mechanism fastest find rpm n thrust datasheet big safety margin millions cycles looking experience data general method/formula used find maximum velocity load function cycles way similar ball bearings suggestions knowledge faster types brands ballscrews ones able find welcome information ball screws interesting transmissions actuated legged robotics provide high-geared rotary-to-linear transmission accurate precise energy efficient backlash-free big downside limited rotational speed maximum rotational velocity limited resonance ball return mechanism former limit easy calculate eigenfrequency calculation problematic small spindles bigger problem balls screw roll threaded recirculated end nut recirculation limits rotational velocity ballscrews corresponding maximum rotational velocities calculate-able know provided manufacturers catalogues rpm so-called d_n -value rotational velocity rpm n=d_n/d diameter ball screw maximum rotational velocity ball screws capped rpm lower according datasheets depending brand ball return mechanism highest permissible rotational velocities found ballscrews rpm using end-cap-return mechanism note electrical motors ideal maximum power velocities higher rpm high many brushless motors appears ball screws run higher speeds specified reality specifications hold many millions cycles find single unofficial source someone claims run ball-screws rpm missiles rpm interested theory experimental data backs,driver,driver
32,roboclaw seem ignoring pid gain settings,seeing behavior roboclaw explain trying tune velocity pid settings windows box use ionmc tuning tool using command set velocity pid gains command verify set spin wheel half maximum speed problem combination pid gains seems make difference set motor spins set point something wrong pouring datasheet see rights motor spin use ideas,control pid,control pid
33,ros kinect depth data duplication,trying get depth data kinect ros project looks arrive done depth_sub rospy.subscriber /camera/depth/image image depth_cb ... def depth_cb data img bridge.imgmsg_to_cv2 data img np.array img dtype=np.float32 img cv2.normalize img img cv2.norm_minmax cv2.imshow depth img cv2.waitkey launch openni.launch openni_launch package publishes depth data get weird warning node seen image complexwarning casting complex values real discards imaginary part understand data type 32-bit floats values appear like depth image corresponds rgb image array size tracking rgb space using tracked coordinates x index depth array thanks edit turns /camera/depth/image published array uint8s actual data floats listed hunt people code uint8s interpreted floats quartered number data points explain image times smaller hence accessing datapoints bounds nan,ros kinect,kinect ros
34,possible use hc-sr04 ultrasonic range sensor indicate thickness material,hc-sr04 connected arduino board end echo connected analog pin transmitter trigger connected digital pin wondering use sensor sense change saturation object block path receiver transmitter positioned line middle supposed paper using see difference paper paper travel sure possible way see working kind similar ir led arduino program connected led paper passes light gets little bit weaker takes heavier hit possible,arduino sensors,sensors arduino
35,logic implementing auto-level function pid flight controller,multi-rotor basic pid controller keeps axis stable gyroscope multi rotor keep height position like use accelerometer keeping rough position auto level want use gyro accelerometer accelerometer values used implemented pid ways gyro values degrees second rate used calculate pid adjusting esc confused part basic logic using accelerometer values,quadcopter pid imu accelerometer,quadcopter imu pid accelerometer
36,language code beaglebone,trying build hexapod beaglebone linux environment im thinking using ubuntu best language use coding purpose make robot controls camera wifi integration etc,control programming-languages beagle-bone linux,control beagle programming languages linux bone
37,jacobian transpose calculate orientation error,confused compute error orientation documents read explain error position difference points let assume orientation effector axis represent rotation quaternions questions describing orientation quaternions good approach compute error orientation quaternions use jacobian transpose,inverse-kinematics jacobian,inverse kinematics jacobian
38,micro quadcopter pid problem,designed mini quadcopter main body main body pcb enter image description weighs ~20 grams battery using mpu6050 dmp using i2cdevlib using raw radians pitch roll yaw measures read mpu6050 dmp motors attached body using electrical tape black thing motors motors diameter driven n-channel mosfet mode control right hc-05 module code used control loop axes pitch roll values quadcopter symmetrical problem pid tuning next impossible best got ~2 second flight video slow-motion first using code control loop effective arduino pid library output pid loops mapped -90 axes seen code mypid.setoutputlimits -90 //y angle mypid1.setoutputlimits -90 // x angle mypid2.setoutputlimits -90 // yaw angle mypid.setmode automatic mypid1.setmode automatic mypid2.setmode automatic full code think problem code http //pastebin.com/cng6vxr8,arduino quadcopter pid,quadcopter pid arduino
39,fixed point arithmetic microcontrollers,use microcontrollers things robots need make calculations decimal using floating point variables slow software floating point library included high-end microcontroller use fixed point arithmetic whenever use integer remember decimal place take care ensure everything consistent calculations involve variables decimal point different place implemented fixed point atan2 function trying squeeze last drop limited precision bits change definition decimal point change tweaked addition constants quasi look-up table implied decimal point want know better way library set macros simplify use fixed point variables making multiplication division mixed variables easier allowing declaration decimal numbers constant expressions converting desired fixed point representation compile time,microcontroller c,c microcontroller
40,relationship point cloud maps graph maps,familiar slam maps point clouds form vector x \theta f_ f_ ... f_ nx f_ ny understand create map using ekf today came .graph file format expect consists vertices edges format vertex2 id x orientation edge2 observed_vertex_id observing_vertex_id sideward rotate inf_ff inf_fs inf_ss inf_rr inf_fr inf_sr know connection matrices graphs adjacency matrix example clear graph format map equivalent point cloud map familiar relationship vertices poses landmarks global reference frame created say velocity information range/bearing sensor transformation graph map point cloud,slam mapping,slam mapping
41,triangulation measuring angles beacons find location work large outdoor area,determine outdoor location think measure angles least beacons take account order sweep beacons workable solution get positional accuracy house block sized area rewrite question note distance measurement suggested angle measurements proposing possible minimum local rf beacons robot device sweeps antenna circle identifying angles beacons use information order beacons seen find absolute location tried prove seems beacons unique solutions knowing order solution order known believe need try find distance beacons question implemented reasonable cost nrf24l01 based transcievers sort rotating antenna,localization,localization
42,understanding correct drift using breezyslam aka tinyslam coreslam,looking python implementation slam stumbled breezyslam implements tinyslam aka coreslam robot equipped hokuyo urg-04lx-ug01 odometry hence passing updater self.slam.update ls_array dxy_mm dtheta_deg dt start moving robot starts discovering room room b c seems rotated come room return initial pose end=start using path noticed room rotated relation room map correct path travelled robot slam supposed keep boundaries first room discovered rotation happening try troubleshoot issue data collected odometry calculated position lidar scans tune better job robot slam new please bear pointers literature clarify moderate expectations slam extra ... best video found understand particle filter,localization slam mapping,slam mapping localization
43,sensor type measures position,building joystick need measure displacement central device mechanical connection edges discussion best way achieve range motion small accuracy important sensors measured impulse response rotational linear potentiometers reliable others arguing using gyros/accelerometers heard hall effect sensors used great effect,control sensors accelerometer,control sensors accelerometer
44,c++ robust model fitting library,perform model fitting find looking decent c++ library ransac implementation mrpt wondering alternatives available give example type problems like solve set point pairs b like find isometry transform maps points tb \epsilon like get largest subset given \epsilon guess subset size fixed ask lowest \epsilon,c++ ransac,ransac c
45,help ultrasonic sensors obstacles avoiding robot,problem working project days left idea simple wheeled robot ultrasonic sensors avoid obstacles developed code working fine using arduino uno l293d driver dc motors hc-sr04 ultrasonic sensors newping library made kind shield soldered common points gnd order connect l293 ic sensors pins problem ultrasonic sensors functioned expected behavior sending result number showed disconnect sensor power problem using usb cable power arduino sensors motors powered using li-po batteries provide guidance,arduino power ultrasonic-sensors,sensors ultrasonic power arduino
46,programable drone robotic arm hand,wondering possible buy build programmable drone robotic arm hand knife want program drone harvest crops -object recognition live video stream -identify grab objects arm make cut necessary -transport produce collection site know take much knowlege many fields forsight limitations energy power estimates cost hardware,robotic-arm design quadcopter dynamic-programming,quadcopter programming dynamic design robotic arm
47,best practice ros service serial-communication class many options,asked write code implement serial communications camera order control pedestal movable base set dozen camera options catch make usable ros best practice implement functionality ros understand concept services think better way creating different service/file option thanks daniel,ros cameras serial,serial ros cameras
48,convert rotation matrix equivalent quaternion using eigen library,eigen library http //goo.gl/cv5ly used ros pcl thank,ros,ros
49,rotate covariance,working ekf question regarding coordinate frame conversion covariance matrices let say get measurement x z roll pitch yaw corresponding covariance matrix c measurement c given coordinate frame g_1 need transform measurement coordinate frame g_2 transforming measurement trivial need transform covariance correct translation g_1 g_2 irrelevant need rotate correct covariances x z thought apply rotation matrix works submatrix full covariance matrix need apply rotation blocks,kalman-filter,filter kalman
50,create portable solar panel lipo charger,working quadcopter carry solar panel top charging lipo battery quad smallest easiest way recreate charger allow safe charging lipo battery,quadcopter battery,quadcopter battery
51,choice motor robotic arm,post hello hope learn lot guys trying build robotic arm carry object put different boxes placed different fixed locations found robotic arms trying find right motor job read on-line different motors sure pick boxes located fixed places motors move precise way according research servo motors ones low budget project college student sure motor choose lot servo motors found several servo motors on-line example analog feedback servo wondering best servo motor buy low cost project think spend 10-20 motor need motors rpi know pwm pin controls motor precision movement purchase pwm controller additional motors need run testing precise motor way calculate amount weight motor handle ideas information appreciated thank,robotic-arm raspberry-pi servomotor python,raspberry python servomotor robotic pi arm
52,sporadic sensing rates hc-sr04 ultrasonic distance sensor,working robot uses ultrasonic sensors integral part navigation testing sensors noticed strange behaviour sensors seem stop functioning bring entire arduino mega working stop strange part stops seem random occasions sensor read values vals second seconds sudden sensor slow reading 2-3 values second stalls tested several sensors different codes pinging distances problem persisted leads believe issue arduino mega unsure verify advice thanks advance ps pins mega seem working fine i.e analog pins ir reflectance sensors pwm pins driving dc motors,arduino ultrasonic-sensors,sensors ultrasonic arduino
53,stereo camera baseline needed calibration,stereo camera calibration described blog post wonder need input camera baseline calibration fact goes basic mathematics triangulation someone explain,computer-vision calibration stereo-vision,stereo computer vision calibration
54,using genetic algorithm tuning controllers,read papers controlling nonlinear systems e.g nonlinear several approaches targeting nonlinear systems common ones linearizaing backstepping sliding mode controllers case done theoretical practical parts controlling nonlinear model simple pendulum manipulators problems c++ utilized backstepping controller solving tracking task angular displacement velocity results \ddot \theta k/m \dot \theta g/l \sin\theta= u m=0.5 k=0.0001 l=.2 g=9.81 results good tuning controller time consuming majority papers use genetic algorithms tuning controllers pd pid backstepping controllers clueless field hope someone sheds light concept preferable matlab sample least controlling simple pendulum designed simple gui c++/qt order tune controller picture response controller step function,control,control
55,realistic grasping simulator,looking physics simulator model robot hand picking object main requirement accuracy realism speed needs able model soft bodies rubber skin robotic finger tips needs dynamics engine object moved hand modelling effects slippage research done good candidates graspit http //graspit-simulator.github.io/ open-source designed grasping physics simulation general second mujoco http //www.mujoco.org/ general simulator commercial product adopted big names deepmind tried using bullet physics engine robot grasping simulation realised going strong bullet designed games sacrifices realism speed interested something realistic possible computation slow anyone suggestions proceed anybody experience graspit mujoco thanks,robotic-arm simulator simulation,simulation simulator arm robotic
56,get data kinect,try using openni_launch works try viewing image using kinect rgb depth camera recording simple bagfile data kinect unable see picture rosbag record data seconds running image_view rosbag record got error terminate called throwing instance :openniexception' virtual void :opennidevice :startimagestream /tmp/buildd/ros-groovy-openni-camera-1.8.8-0precise-20130418-2203/src/openni_device.cpp starting image stream failed reason xiron os got event camera_nodelet_manager-2 process died pid exit code -6 cmd /opt/ros/groovy/lib/nodelet/nodelet manager __name =camera_nodelet_manager __log =/home/rosbotics/.ros/log/16b63744-e043-11e2-ac16-080027486aa8/camera_nodelet_manager-2.log log file /home/rosbotics/.ros/log/16b63744-e043-11e2-ac16-080027486aa8/camera_nodelet_manager-2*.log searching trying various fixes figured problem openni started using freenect encountered problems record data using bagfiles see images kinect using rviz image_view someone asked something unrelated freenect-glview gave black screen lsusb shows parts kinect connected able control kinect motor ubuntu know least connection established additional info run ros ubuntu using virtualbox v.4.2.14 windows usb ports using ubuntu ros-groovy date exact errors mac osx lion try using rviz kinect virtualbox crashes appreciate anyone help matter,ros kinect,kinect ros
57,highspeed gearbox low speed brushless motor,attempting control small vehicle slow .5 m/s m/s speeds extreme accuracy drive system considering using brushless motors greater power volume ratio able find brushed motors small size using wheels diameter rpm looking rpm max suggest driving motors low speed driving high speed gearing understand setups give high torques brushless motors decrease torque speed brushed motors obvious gearbox necessary torque system choice clear asking tl dr use brushless motors high speed gearbox low speed ungeared high torque low speed high precision application,motor brushless-motor,brushless motor
58,maximum distance using ultrasonic sensor arduino,maximum distance say car measure using ultrasonic sensor compatible arduino sensor ultrasonic measure distance car say upto meters used arduino,arduino ultrasonic-sensors,sensors ultrasonic arduino
59,pom gears metal fittings,looking setup pom bevel gears fitted kind metal bronze tube fits shaft benefits provide shaft free-spin metal fitting able grip shaft supposed canonical approach fitting pom gear high-load applications,motor mechanism gearing,gearing mechanism motor
60,cool robotics projects,robotics student new field suggest websites provide projects/helpful info learn thanks,mobile-robot,mobile robot
61,attach wheel encoder motor,couple dc motors http //www.pololu.com/product/2202 extended motor shaft sticks diameter trouble trying think best way attach encoder disk shaft thought getting custom wheel printed make opening tight fit know small taking encoder disks pc mouse drilling problem added trying drill small hole small thing wondered anyone knows better way made disk attach find anything shaft,motor,motor
62,displacement accelerometer,want use sensor find displacement accelerometer use accelerometer find displacement want use quadcopter,quadcopter imu accelerometer uav,quadcopter imu accelerometer uav
63,ekf localization robot parallel landmark,"facing real weird problem ekf localization filer gives wrong error time robot parallel landmark debugged many times failed solve problem found problem occurs following picture shows scenario robot moves circular motion landmarks indicted picture filer gives wrong estimated state see robot parallel landmarks got wrong estimated robot pose picture shows estimated wrong red circle estimated robot pose actual robot pose track problem found estimated measurement landmark opposite direction actual measurement landmark -- -- landmark est_robot zobs -0.2208 zpre -0.2333 real_robot mubar -- -- landmark est_robot zobs zpre real_robot est_robot -- -- landmark -200,200 est_robot zobs zpre real_robot est_robot -- -- landmark -200,0 est_robot zobs -- actual measurement landmark zpre -3.0658 -- problem real_robot est_robot -0.5621 computed angles actual measurements zobs sqrt map i,1 real_robot ^2 map i,2 real_robot ^2 atan2 map i,2 real_robot map i,1 real_robot real_robot add gaussian noise zobs zobs sigma_r*randn zobs zobs sigma_phi*randn zobs zobs mod zobs zobs pi positive zobs zobs elseif zobs -pi negative zobs zobs end predicted measurements q map i,1 est_robot ^2 map est_robot ^2 zpre sqrt q atan2 map i,2 est_robot map i,1 est_robot est_robot zpre pi positive zpre zpre elseif zpre -pi negative zpre zpre end",localization ekf,ekf localization
64,keyboard control map scalar based movement,working wild thumper wheel chasis designed rc controller mapping keyboard control set keys behaviors used deal continuous value control offered joystick pair joysticks standard wasd keys accelerate/decelerate pair take pointer videogame think,untagged,untagged
65,definition determine something robust controller,bit uncertain interpret definition robust controller closed loop system including controller high gain frequencies disturbance appears decay frequencies higher work area noise determined using bode plot determining robustness closed-loop system,control,control
66,good simulator outdoor autonomous navigation,appropriate tool simulating car driving simple closed-loop racetrack trying implement control logic autonomous vehicle able first simulate behaviour testing physical platform target environment obstacle small ramps arches use simulator looked robotics simulators listed seem overkill none seemed designed model outdoor environments done little work gazebo find guide texturing ground/sky/background need way apply texture map ground sky create handful obstacles calculate camera feed simple two-wheeled chassis moves course need video input realistic possible access real world racetrack need able test train control logic simulator load logic real mobile platform navigate course,navigation simulator cameras,cameras navigation simulator
67,increasing gyro accelerometer sensor range good bad affect accuracy,using imu unit gyro accelerometer found set acc range +/- till g gyro +/- deg/sec deg/sec know low cost full noise settings range best ensure higher accuracy,sensors imu accelerometer gyroscope,sensors imu gyroscope
68,non-markovian problems/approaches robotics,tell markov assumption ubiquitous probabilistic methods robotics see notion summarize robot previous poses current pose makes many methods tractable wondering classic examples problems robotics markov assumption used circumstances future state robot dependent current least past states non-markovian cases done alleviate computational expense way minimize dependence previous states previous k states k chosen small desired,probability,probability
69,check collision robot environment openrave,robot arm environment check collision robot arm environment,robotic-arm motion-planning python,motion python planning arm robotic
70,someone explaine code,static void set_default_param dpmtticparam param param.overlap param.threshold -0.5 param.lambda param.num_cells,c++,c
71,determine rotation axis given rotation matrix,find axis coordinate system rotate rotation matrix given r_ b \left \begin matrix \\ -1 \\ \\\end matrix \right r_ c \left \begin matrix \\ \\ \\\end matrix \right r_ b thought rotation z-axis r z \theta \left \begin matrix cos \theta -sin \theta \\ sin \theta cos \theta \\ \\\end matrix \right values positions a_ a_ a_ a_ a_ r_ b r z \theta identical solved cos \theta \theta rotation z-axis solve rotation r_ c,joint,joint
72,type servos used industrial robot arms universal robot ur5,noticed industrial robot arms smooth strong movement anyone know type servos use trying build want jerky movement seen lot diy robot arms thanks,robotic-arm servos,servos arm robotic
73,glasses eye sensors,someone tell wearable devices glasses sensors detect eye movement particular need device google glass sensor camera facing eye capture movement interfaced mobile device micro-cameras market connected usb mobile device,sensors motion,motion sensors
74,world files simulating roads tracks,hello wanted simulate busy urban road similar darpa urban challenge autonomous self-driving-car search simulators seen gazebo integration ros easier editing world files creating difficult torcs simulator seen many world files many sensors want much physics simulation want light weight simulator checking path planning urban road creating roads searched gazebo sdf files similar urban city vain,simulator gazebo,gazebo simulator
75,tracking objects camera pid controlling parrot ar drone,working project perform object tracking using camera parrot ar drone main idea drone able identify specified colour follow keeping distance using cvdrone api establish communication drone api provides function ardrone :move3d double vx double vy double vz double vr moves space vx x velocity m/s vy velocity m/s vz z velocity m/s vr rotational speed rad/s written application simple image processing images obtained camera drone using opencv finds needed contours object tracked see example part struggling finding technique using find velocities sent move3d function read common way controlling using pid controlling read get related problem summarise question move robot towards object detected camera find coordinates certain objects camera,control pid quadcopter tuning opencv,control quadcopter pid tuning opencv
76,best strategy area scanning using little sensing bots,working school project simulating robots scanning area struggle find strategy robots use details given certain amount robots sensing range r spawn task scan rectangular area communicate communication range looking best strategy i.e time efficient solution reply clue strategy appreciated,mobile-robot sensors coverage,mobile sensors robot coverage
77,computercraft minecraft mod navigation collision avoidance path planning/finding space,programming lua controlling computers robots in-game minecraft mod computercraft computercraft robots called turtles able move grid based world minecraft equipped sensors making able detect blocks obstacles adjacent turtles execute lua programs written player hobby project like program goto x z function turtles turtles equipment remove obstacles like make avoid obstacles prevent destruction in-game environment prior experience robotics b.sc computer science lead web developer research found basic strategies grid based based experience area strategies old school note turtles able move dimensions hover height share obstacles free coordinates common database discovered help obstacles stationary placed best options matter easy fixes look additional resources thank much advance edit thank feedback started reading book artificial intelligence modern approach edition get speed basic theory suggested ian pointers educational resources appreciated started developing basic navigation moving unexplored areas similar cube suggested priority moves possible costs time fuel cells additional move seconds fuel cell move direction plan using euclidean heuristics function greedy best-first search computing path expected optimal reducing number moves reach goal enough data available shared database previous exploration time obstacle reached plan use following basic algorithm exploiting fact turtles able move calculate direct horizontal path goal turn direction next step obstacle detected front turtle go time obstacle detected front turtle moving go move go obstacle detected turtle move go go backtrack coordinates turtle moving upwards turn left go using algorithm records kept explored coordinates uploaded shared database cases consider move goal reachable coordinate horizontal move direction possible long backtrack detect unreachable goals obstacles removed requested enough exploration data area available jump point search performed calculate optimal path assumes map take dimension account good data structure store exploration data,mobile-robot navigation,mobile navigation robot
78,get projection matrix odometry/tf data,like compare results visual odometry groundtruth provided kitti dataset frame groundthruth projection matrix example 9.043683e-12 2.326809e-11 1.110223e-16 2.392370e-10 2.220446e-16 2.326810e-11 2.392370e-10 9.999999e-01 -2.220446e-16 instructions provided readme row represents i'th pose left camera coordinate system i.e. z pointing forwards transformation matrix matrices stored row aligned order first entries correspond first row take point i'th coordinate system project =0th coordinate system hence translational part vector column corresponds pose left camera coordinate system i'th frame respect =0th frame know produce kind data frame case tf transformation init_camera fix left camera moving translation vector quaternion rotation odometry data pose twist camera calibration parameters data compare groundtruth need find projection matrix data know someone help thank,mobile-robot odometry stereo-vision,mobile odometry stereo robot vision
79,dji wookong-m unstable take,built quadcopter using dji wookong-m. couple weeks able get everything work small thing throttle drone tends flip side tested motors know spinning right direction right motors tested grass concrete times flipped starts flip throttle know catching something balance think problem quadcopter tips different directions time tell appreciate lot project due weeks thanks advance,quadcopter,quadcopter
80,motor controller calibration,bought brushed motor controllers china hobby-weight battle robot http intended use cordless drill motors driving left right wheel robot steered tank mode varying speed direction rotation motors using joysticks turnigy transmitter question seen videos youtube people calibrate brushless motor controllers escs using system pushing joystick standard transmitter listening tones reverse asked suppliers similar procedure brushed controllers say need calibration exact words seems talking transmitter copters esc rc car boat pull trigger goes push trigger reverse need calibrate plug work transmitter gun shaped ones used cars trouble controllers work box supplier seems implying ask tried simple answer lipo charger arrived power anything,motor,motor
81,rotation ratio left rocker right rocker rocker-bogie system,following previous question trying calculate much rocker rotate rotated attached calculation trying calculate rotation gear b connects right rocket given gear rotates rad rotation gear b rad gear ratio b end ended rotational gear gear b. puzzles calculation correct,wheeled-robot,wheeled robot
82,inter-processor communication robotic arm,building hobby 6-dof robotic arm wondering best way communicate processors 3-4 avrs inches max separation control loop run computer sends commands microprocessors atmega32u4 usb-to- bridge ideas considering rs485 pros processors wire differential signal robust cons requires additional chips need write find protocol prevent processors transmitting time uart loop ie tx processor connected rx next pros simple firmware processors uart built cons last connection travel length robot processor spend cycles retransmitting messages canbus know little main considerations hardware firmware complexity performance price buy expensive out-of-box system,microcontroller electronics arm,electronics microcontroller arm
83,microcontroller used flight control esc,working building quadcopter scratch noticed many solutions available online use arduino fan arduino questions microcontrollers used crucial features microcontrollers like build total scratch thinking pic microcontrollers used esc build scratch summing escs gyro acceloremeter gps slaves master microcontroller,microcontroller quadcopter esc,quadcopter microcontroller esc
84,connecting analog input pins arduino,planning stages project using arduino uno control distance sensors run little road block uno input pins wondering way work,arduino microcontroller input,input microcontroller arduino
85,wall following using hokuyo lidar sharp ir sensors,mobile robot like follow walls room map room wheel encoders odometry kalman filter fusing data wheel encoders imu hokuyo lidar localization obstacle avoidance kinect see obstacles seen hokuyo amcl localization couple sharp sensors side wall following planning use global local costmap localization robot perfect robot think closer wall wall following fail planning use data hokuyo lidar sharp sensors wall following maintain constant distance wall say cm like know best technique wall following manner deal issue open gaps wall open doors etc.. wall following using approach know general question suggestions regarding appreciated please let know information update trying wall following given room vertices room global reference frame example lets say map room shown want make robot follow wall say cm wall open space bottom left robot go adjacent room keep wall following given room boundary limits room use make sure robot given room approach thinking come initial global path set points wall wall following make sure robot goes point making sure maintains certain distance wall wall robot follow global path assuming localization good sure implementation complexity better algorithm/ approach something,sensors localization navigation,sensors navigation localization
86,arduino mobile robot,way control arduino robot world robot goes range home wifi wifi shield help way make sure robot internet matter goes,arduino mobile-robot raspberry-pi,mobile pi raspberry robot arduino
87,dynamic programming algorithm aka bellman equation robotics,dynamic programming algorithm refers bellman equation open-loop control decides movement initial point closed-loop control decides control movement robotic application looks closed-loop control point checks respect reward function thinking participants threads mature real-time programming robotics differentiate scope thought interested know dynamic programming used robotics research dp usage robotics,research dynamic-programming,programming dynamic research
88,implementing position control uav flight controller plant model unknown,using naza-m-lite flight controller gps localization obtained rgb-d camera sensor able teleoperate implement pid controllers roll pitch yaw throttle channels quadrotor know plant model inputting arduino naza-m-lite servo pwm ranging throttle altitude hold maximum throttle minimum throttle pitch roll yaw maintain angle moves quadrotor towards respective axes channel quadrotor drifts due flying indoors wind pushes quadrotor gains momentum drifts trouble tuning know relationship output position output velocity easier case way find plant model naza-m-lite tune,localization pid quadcopter uav,quadcopter uav pid localization
89,get windows kinect working beaglebone,tried following number guides internet fall libfreenect exist apt-get anyone got working method,kinect,kinect
90,localising robot placed unknown position known environment,third-year electrical engineering student working intelligent autonomous robot summer vacations robot trying make supposed used rescue operations information know position person coordinates person json file rescued building fire know rooms building map know robot placed building start rescue operation means localise robot placed unknown position known environment robot plan person rescued domain like guide best method localising given use imu gyro accelerometer magnetometer ultrasonic sensors localising job use gps module camera purpose know path planning research internet concerned found method called kalman filtering localising job think filtering methods use simpler/better method know attaching map building known edit terrain flat like know robot map coordinate etc,mobile-robot localization imu accelerometer gyroscope,accelerometer localization mobile robot imu gyroscope
91,differences scara arm design,interested scara arm designs beginner questions find answers comparing professional arms made epson staubli ... noticed actuator used translation z axis end arm hobby arms makerarm project kickstarter use leadscrew actuator beginning arm thought smarter put handling dof begining arm weight end assume companies experience company makerarm like understand like understand kind actuators used arms flx.arm kickstarter project seems using stepper motors say using closed loop control added encoder stepper motors better use stepper instance use dc brushless motors servos saw arms using belts z axis rotation advantage allows put begining arm,robotic-arm design actuator,actuator design arm robotic
92,calculating force system,native language english know specific terms expect use apologize motor connecting rods french bielles point c circular trajectory thanks sliding pivot pivot glissant hope using right translations vertical trajectory question calculate force f need piece paper thanks lot attention,force,force
93,issues upgrading arduino code kinect controlled arm servos,arduino code operating servos using servos trouble getting talk program make angles calculated processing side sent shoulder elbow wrist wrist2 repeated arduino program gets data stores array written pin appropriate array segment shoulder elbow wrist wirst2 get servos run problem try add get response anyone please help get servos work knowledge code limited help appreciated processing data sent arduino byte new byte byte shoulderangle byte elbowangle byte wristangle byte wrist2angle port.write arduino code include servo.h //declares servos servo shoulder servo elbow servo wrist servo wrist2 //setup servo positions int int servoangles //define pins servo void setup shoulder.attach elbow.attach wrist.attach wrist2.attach serial.begin void loop serial.available int servoangle serial.read servoangles nextservo servoangle nextservo++ nextservo shoulder.write servoangles elbow.write servoangles wrist.write servoangles wrist2.write servoangles sorry lengthy post stuck,arduino kinect robotic-arm,kinect robotic arm arduino
94,turn rover degrees using wheel encoders,wheel dc rover optical wheel encoders executing rover turns controlling direction wheel motion side rover turn left wheels left rotate backwards right wheels rotate allows rover remain position turning directions reversed right turn use sensors execute degree turn possible fusing additional sensor data,sensors motion,motion sensors
95,math course beneficial,let know academia posted get responses people active robotics development undergraduate student completing majors mechanical engineering computer science new field interest electronic mechanical systems year take courses multivariable calc linear differential equations want take time schedule allows therefore wondering explain little bit applied robotics field believe helpful learn now.thanks advance,beginner theory,theory beginner
96,passing power motor,go passing power motor let say basic robot motor spins limb end limb motor spins limb first motor going spinning wires twist break wired approach work goes subsequent motors know dc motors use brushes get past solved engineering/robotics problem come solution ideas,motor stepper-motor power,stepper power motor
97,simple range sensor described sufficient implement particle filter localization,trying implement monte carlo localization/particle filter localization simple range sensor range sensor sees direction robot heading returns obstacle line sight obstacle sensor returns distance boundary wall i.e maximum range sensor problem able locate robot position feeling cause sensor powerful feasible localization sensor change sensor type please tell guys think,localization particle-filter,filter particle localization
98,perform reference system transformation,quaternions indicate initial orientation wheel robot relative reference systems robot orientation given quaternion q reference systems reference system quaternion q1 refer robot looking positive x quaternion components q1 second reference system refer robot looking negative x. matrices indicate position robot time correspondent reference system want find correspondent points first matrix second reference system matrix built different sensor results similar think find transformation reference system second point matrix find transformation translation part think clear rotation edit wildcrustacean solution proposed solve problem think reason system represents robot different way initial robot moving forward rotation increase x axis goal referential system b robot moving forward rotation increase z axis see figure details first system ______ |\ \_____\ z |b r \| \|____| -- x second system b ______ |\ \_____\ x |b r \|____| -- z r right side b side top think apply extra rotation change initial quaternion belongs first system accordance second system applying transformation post rotation degrees x followed y. rotate b tried solve quaternion adjust reference system first_quat make_quaternion unitary_x pi generates quaternion rotates pi x second_quat make_quaternion unitary_y pi/2.0 generates quaternion rotates pi/2 composed_fs_q first_quat*second_quat quaternion rotate reference system quaternion_ini_a quaternion_ini_a*composed_fs_q a2b_quaternion quaternion_ini_b* quaternion_ini_a.inverse a2b_quaternion quaternion use rotation perform right rotation idea,mobile-robot localization odometry,mobile odometry robot localization
99,robotic legs technologies,robotic leg technologies available sorry basic question software developer looking get field robotics interested robotic legs similar used boston dynamics atlas robot mechanism required allows move joints see videos many boston dynamics robots make engine sound uses engine cant find details configuration used,legged,legged
100,memory alloy used alternative compressor found refrigerator,curious alloy say used alternative traditional compressor anyone explain work goal understand use case adapt alloys robotic projects gut tells perfect kinematics mechanisms missing pieces puzzle work,kinematics mechanism,kinematics mechanism
101,pd controllers quadcopter angles control,question lot cases possible find internet pd pid control euler angles quadcopter integral part neglected kind applications thanks,control quadcopter pid,control quadcopter pid
102,calculate robot hand positions using roll pitch angles,want calculate humanoid robot hand position given shoulder roll pitch angles elbow roll angle able calculate elbow position using rotation matrix includes shoulder angles dont know calculate hand position using elbow position elbow roll angle propose method calculate hand position,robotic-arm forward-kinematics,forward kinematics arm robotic
103,ekf localization approaching singularity sensors noisy,getting warning matlab kalman gain warning matrix singular scaled results inaccurate rcond problem coming high variance measurement model question ekf work high noise sensor,localization ekf,ekf localization
104,inverse kinematics java,planning write inverse kinematics controlled dof virtual robot android research packages choose right satisfy needs project seen work eigen c++ used fine experienced java wanted ask start someone knows appropiate packages operations found jama vecmath jmathtools ejml jampack ask dont want get stuck middle project thanks advance,inverse-kinematics programming-languages,languages programming inverse kinematics
105,dynamic system equations represent,equations dynamic system need physical system equations \begin align \dot x _1 =bx_1+kx_2+x_3\\ \dot x _2 =x_1\\ \dot x _3 =\alpha u-x_2 -\beta x_3 \end align figure mass-spring-damper system feedback control sure terms x_3 \dot x _3 terms mean,control dynamics,control dynamics
106,happened butler car,read article car electric brains popular mechanics august questions practical methods work acquired car manufacturer company methods developed corner navigation work think needed know distances road segments think used sonar radar detect corner cars entering corner misinterpret cars wall absence corner think sonar/radar systems sides cars mentioned mentioned set relays compensator mentioned said function gyroscope find information device sure relevant,design navigation,navigation design
107,setting gimbal dji wookong-m using separate transmitter receiver,bought wookng-m multi copter wondering possible man system controls main craft transmitter controls camera gimbal transmitter know set gimbal wookong-m use separate transmitter control control waiting 3-axis gopro gimbal arrive control pan control gimbal separate use wookong-m gimbal camera beginner time working wookong-m please keep answers understandable thanks advance,quadcopter,quadcopter
108,lifting robotic leg servo,note start put anything planning changes require shape change anything accepted working making walking robot arduino printing pieces need legs needs mobile want power supply huge decided best get leg require servo know get leg move forth want able lift brings leg needs lift foot thing think rotation locking sort gear motor begins rotating clockwise power short motion move object begins moving counterclockwise power short distance servos using rotation go way loop know important peculiar construction foot best lifted straight angle necessary robots unaware thanks time,mechanism motion-planning servomotor legged gearing,servomotor legged motion planning mechanism gearing
109,denavit hartenberg parameters,anybody help figure hd parameters case links revolute joint plane variable angle twist simple drawing think x-axis perpendicular z-axis points goes intercection z-axis link length twist offset d. whould correct thanks,dh-parameters,parameters dh
110,estimate yaw angle tri-axis accelerometer gyroscope,like estimate yaw angle accelerometer gyroscope data roll pitch estimate used following trigonometric equations roll ax az rad_to_deg pitch atan2 ay az rad_to_deg simpified version kalman filter consider angular rates roll pitch estimates accurate accelerometer values need filtered presence chassis vibrations order get yaw using following equation yaw atan2 ax ay rad_to_deg work advice,sensors quadcopter kalman-filter imu accelerometer,quadcopter kalman accelerometer filter imu sensors
111,change message interval ardupilot,using mavlink protocol c++ communicate ardupilotmega able read messages attitude example getting message rate like increase found message_interval order change use command mav_cmd_set_message_interval set question send command using mavlink c++ tried code work guess use command mentioned know mavlink_message_t command mavlink_message_interval_t interval interval.interval_us interval.message_id mavlink_msg_message_interval_encode command interval p_sensorsport- write_message command update tried code giving right system id component id mavlink_message_t command mavlink_command_long_t interval interval.param1 mavlink_msg_id_attitude interval.param2 interval.command mav_cmd_set_message_interval interval.target_system interval.target_component mavlink_msg_command_long_encode command interval p_sensorsport- write_message command missing something difference target_system target_component sysid compid tried values nothing worked able tell got command,quadcopter c++ ardupilot mavlink,quadcopter c ardupilot mavlink
112,computing jacobian matrix -- chain rule,learning robot kinematics jacobian matrix trying understand compute jacobian matrix given kinematic chain robot arm understand theory jacobian matrix sure calculated practice let say dof robot arm joints links joints know compute transformation matrix joint applying kinematics know pose end effector configuration joint angles calculate written code stores transformation matrix multiplies series create transformation matrix joint end effector go computing jacobian matrix solution write transformation matrix hand multiply hand yield overall transformation matrix respect joint angles differentiate create jacobian matrix problem maths becomes complicated move kinematic chain end many terms result multiple matrix multiplications becomes tedious hand better way case calculating kinematics hand wrote code multiply individual matrices want jacobian matrix seems need compute derivative overall transformation matrix computed need hand standard solution something chain rule differentiation ... applies ... thank,robotic-arm kinematics inverse-kinematics jacobian manipulator,manipulator robotic inverse kinematics jacobian arm
113,confused variables robotc,trying program advanced functions robotc sure right want specify motor port using assigned names motors funny thing work regular variables instance motor port7 alternate name light_blue pragma config motor port7 light_blue tmotorvex393 openloop sure new variables specifications variable signature int motor tmotor motor code plans something similar void testthing motor motorname motorname somevalue testthing light_blue int/motor hybrid variable/unidentified sure work,robotc,robotc
114,good imu wheeled robot,lab several kurt type robots size pioneer wheels differential drive built-in gyroscopes outdated main problem gyroscopes large drift increases gyro heats error use imu get initial pose estimates corrected localization algorithm large initial pose error caused annoying used android phone galaxy s2 replacement imu results better compared old imus depending wifi connection imu control computer laptop running ros/ubuntu looking buy new imu imu choose criteria important consider application please share experiences,ros imu odometry gyroscope ugv,ros imu ugv gyroscope
115,get create communicate laptop serial usb cable,computer recognize serial usb cable tried mac hp driver need install supposed install,irobot-create serial usb,create irobot serial usb
116,many methods use acquire depth data,newbie robotics know ways acquire depth information scene stereo vision method applies cameras rgbd sensors kinect primesense seems methods use know advantages think kinect perfect solution stereo vision ignoring expense questions advantages binocular methods kinect expense know methods confined limited distance detection range real world applications need depth data distance method acquire estimate data information distance considering laser-based detectors application small flight vehicle method equipment choose traditional binocular camera slow application,computer-vision stereo-vision,stereo computer vision
117,equipment used design robot,look robot http //www.meccanotec.com/step781b.jpg see rods lot holes planes holes seems way create flexibility things connected create final robot name type equipment metals holes get aware people using lego blocks create robots sure metal rods plates holes free application design mechanical structure image add gears simulate see rotate bend real robot created quickest way create robot edit thankyou frank lanyusea wants simulation mechanical model others words play robot computer building gears action software suitable purpose,robotic-arm,arm robotic
118,control robot pymorse morse simulator question,new morse robotics code control robot giving linear angular velocity scene description morse.builder import robot atrv motion motionvw motion.add_stream robot.append motion semanticl semanticcamera semanticl.translate x=0.2 y=0.3 z=0.9 robot.append semanticl semanticr semanticcamera semanticr.translate x=0.2 y=-0.3 z=0.9 robot.append semanticr motion.add_stream semanticl.add_stream semanticr.add_stream env environment env.set_camera_location -10.0 env.set_camera_rotation control script import pymorse pymorse.morse simu simu.robot.motion.publish v w -1 robot moves remove semantic cameras scene description robot move confused sensor robot move,mobile-robot sensors control,mobile control sensors robot
119,model robot,answers received question training line following robot using reinforcement learning techniques got think train robot believe ways train physical robot model robot simulate training miss something approach better approach priori knowledge motion response certain pwm signal stimulus cause robot given state required motion caused pwm signal depend current battery voltage mass robot current velocity miss something model robot model quick change battery add boards peripherals change mass robot remodel retrain robot providing random stimulus pwms measuring response added related question dsp.se update suggested edit title ian worth mentioning model train robot dynamics change complete re-training think good question different asking re-training,reinforcement-learning pwm,pwm learning reinforcement
120,powering multirotor dedicated batteries motor,thinking extending battery life quad powering motor esc using dedicated battery motor dedicated battery flight controller bringing total batteries entire quad thinking powering motor dedicated battery given power draw/consumption flight-time quad increased motor capacity draw putting problem weight feasible idea using battery power motors plug single battery calibrate escs calibrate escs using dedicated batteries apm motors able get powering using bec escs,quadcopter power battery,quadcopter battery power
121,accelerometer calibration get cross-axis sensitivities,asked related question accelerometer bias removal robotics got better results corrected accelerometer output get better results found calibration equations paragraph vectornav bit enhanced solution linked question variables needed sensitivity sensor x-axis y-axis inputs xy sensitivity sensor x-axis z-axis inputs m_ xz sensitivity sensor y-axis x-axis inputs yx sensitivity sensor y-axis z-axis inputs m_ yz sensitivity sensor z-axis x-axis inputs zx sensitivity sensor z-axis y-axis inputs m_ zy stated ieee-std-1293-1998 ... provides detailed test procedure determining calibration parameters searching 1293-1998 standard page google docs find clue calculate values b_ v_x values vectornav equations explained someone point,sensors accelerometer calibration errors,sensors errors accelerometer calibration
122,sonar obstacle avoidance many sensors place,avoiding obstacles robot navigation best position/angle place sonar sensors many like know theory examples problem placing realize depends way robot moves geometry searching general answers,mobile-robot sensors navigation acoustic-rangefinder,mobile robot rangefinder acoustic sensors navigation
123,brushless motor controller accepting updates/s,want use brushless line follower problem escs accept 400-500 updates/s due characteristic steering signal way overcome custom flash luck,brushless-motor esc line-following,following brushless esc line motor
124,crossing events brushless dc motors,like ask question crossing event trapezoidal commutation brush-less dc motor waveform shows crossing event occurs electrical degrees sinusoidal commutation trapezoidal commutation waveform found trapezoidal commutation see crossing occurs electrical degrees previous commutation electrical degrees commutation motor pole pair electrical degrees mechanical degrees waveform see crossing phase occurs magnet faces phase c words electrical degrees last commutation question crossing happen moment electrical degrees electrical degrees related law induction law law appear motor someone explain pics,brushless-motor,brushless motor
125,transfer function quadrotor position controller,trying find transfer function quadrotor controller loops following next structure know calculate attitude stability controller relate rotor speed desired angles clear implement translational controller transfer function whose output desired angle rotors achieve considering position want translate considering controllers pd calculate translational controller transfer function include system time domain equations outer loop next u terms relate thrust axis components thanks,quadcopter control,quadcopter control
126,measure diffrent battery voltages arduino,possible measure voltage different batteries arduino able use resistor divider voltage divider resistors analog pin read voltage battery supplying arduino system looks battery power regulator arduino resistor divider attached unregulated battery gnd common measure voltage battery given different circuit e.g different ground loop,arduino power,power arduino
127,right way motor mixing pid outputs quadcopter,motor mixing formulas written flight controller arduino-mega wondering right use roll-pitch-yaw esc signals esc1 throttle pid_output_pitch pid_output_roll pid_output_yaw esc2 throttle pid_output_pitch pid_output_roll pid_output_yaw esc3 throttle pid_output_pitch pid_output_roll pid_output_yaw esc4 throttle pid_output_pitch pid_output_roll pid_output_yaw,quadcopter arduino pid esc,quadcopter esc pid arduino
128,dualcopter degree freedom,drone field curious know type rotation translation dualcopter achieve rotation translation mean able roll pitch yaw quadcopters copter makes roll pitch yaw dualcopter design movable wings rotate rotors motion flying,quadcopter multi-rotor,quadcopter rotor multi
129,vector field histogram implementation python,trying implement vector field histogram described koren python using scipy stack able calculate polar histogram described paper smoothing function eliminate noise variable stored numpy array named self.hist function computetheta pasted computes steering direction able compute proper direction valleys i.e consecutive sectors polar histogram whose obstacle density certain threshold contain section full circle completed i.e sector corresponding make things clearer consider examples histogram contains peak angles say rest histogram valley steering direction computed peak contained say valley start go way end steering direction computed single valley considered valleys def computetheta self goal thrs s_max start calculating sector corresponding direction target target_sector int *np.arctan2 goal self.vcp goal self.vcp target_sector target_sector += target_sector /= next assume best sector best_sector -1 dist_best_and_target abs target_sector best_sector find sector valley closest target sector k range self.hist.shape self.hist k thrs abs target_sector k dist_best_and_target best_sector k dist_best_and_target abs target_sector k sector -1 return error print target_sector best_sector best_sector == -1 return -1 proceed ... elif best_sector -1 ... deciding valley best sector belongs wide narrow assume wide type_of_valley wide find sector contradicts assumption change minds sector range best_sector best_sector s_max sector self.hist.shape self.hist sector thrs type_of_valley narrow wide valley return corresponding sector k_n s_max /2 type_of_valley == wide theta best_sector s_max /2 return theta find border valley return angle corresponding mean value best sector border elif type_of_valley == narrow sector range best_sector best_sector s_max self.hist sector thrs far_border sector theta best_sector far_border /2 return theta address issue way treat histogram circular better way write function thank time,motion-planning python planning,motion python planning
130,using gazebo installed machine matlab,planning use matlab gazebo course projects tutorials seen till use gazebo using virtual machine ros gazebo installed installed ros gazebo machine os ubuntu installed possible use gazebo machine matlab toolbox thanks,ros matlab gazebo,ros gazebo matlab
131,cost material print,someone please share typical cost material print object raspberry pi case thank,3d-printing,printing
132,architecture testing autonomous flight sensors,designing simple autopilot software top ardupilot goal interface raspi top ardupilot mega apm stuck setting simulation environment using v-rep gazebo quadcopter basic sensors advanced sensors basic sensors talks advanced sensors talks autopilot software trying wrap head feasible setup test software using ardupilot mega hardware-in-the-loop planning stages simulation stage simulate quadcopter physics gazebo/v-rep run ardupilot software autopilot software vm sure do-able stage simulate quadcopter physics computer run autopilot software vm run hardware-in-the-loop fashion stage deploy autopilot raspi interface apm run hardwares hardware-in-the-loop fashion,quadcopter simulator,quadcopter simulator
133,issue using digit leds raw op code create2,understand manual leg segment displays labeled letter a-g. letters map specific bits byte byte displays setting bit turns corresponding leg setting leaves understanding tried turn segments sending segment display turning displays showed testing shows send numbers 1-9 displays display number sent sending number greater turns various combinations segments able activate individual segments following numbers g b c e f able determine bytes sent affect individual segments either understand manual digit leds raw work manual specifies update confirmed behavior exists following firmware versions r3-robot/tags/release-3.4.1:5858 clean r3_robot/tags/release-3.2.6:4975 clean,irobot-create,create irobot
134,quadcopter position measurement accelerometer gps,thought quadcopter used find position integrating data got read lot watched video time sensor fusion android devices seem get use little correct realized filter considerable noise generated error integration get useful information position realized used gyroscope magnetometer fused information orientation linear translation outdoor flight thought gps data get relative position accurate enables position measurement good precision commercial quadcopters measure positions x z gps data fused accelerometer data,quadcopter accelerometer navigation sensor-fusion,sensor fusion navigation accelerometer
135,dynamixel inverse rotation direction,wondering feature flip rotation direction dynamixel using mx-106 example give +1.57 motor interprets -1.57. way using ros driver package seem claim feature question user reported able source code failed replicate wanted ask capability device know limitation comes dynamixel device ros thank update usecase mine multiple robots direction dynamixel attached different robot flip motor direction driver level keep using controller software,servomotor dynamixel,servomotor dynamixel
136,robots microcontrolers beam robots limited,beam robotics seem good approach teach learners electronics robotics robots regular programmed cognitive robots robots analog circuits take level robotic assistants worker robots kinds self sufficient autonomous robots want know creating mission critical robots areas robotics impossible real time software system areas field done programming yes areas feasible software system intelligent space rover work cpu future,control software electronics artificial-intelligence embedded-systems,control embedded intelligence artificial systems electronics software
137,jacobian observation model,state vector \textbf x \begin bmatrix x \\ \\ v_ x \\ v_ \end bmatrix transition function \textbf x k f \textbf x k-1 \delta \begin cases x_ k-1 v_ xk \delta \\ y_ k-1 v_ yk \delta \end cases z_ b atan2 x z_ r \sqrt x^ y^ jacobian observation model \frac \partial h \partial x \begin bmatrix \frac -y x^ +y^ \frac x \frac x \\ \frac x \sqrt x^ y^ \frac \sqrt x^ y^ \end bmatrix question jacobian observation model obtained model kalman filter,kalman-filter,filter kalman
138,direct vs semi-direct methods visual inertial odometry,reading papers visual inertial odometry iros semi-direct ekf-based monocular visual-inertial odometry robust visual inertial odometry using direct ekf-based approach appreciate someone explain semi-direct direct methods vary understand direct methods use pixel intensities framework papers listed photometric intensities/pixel intensity values semi direct direct,ekf,ekf
139,wind flow diagram quadcopter,trying determine wind flow diagram quad-copter action looked internet find reliable source wind flow diagram mean quad-copter mid-air hovering fixed position air moving directions needed kept top bottom vertical direction horizontal direction thank,quadcopter dynamics,quadcopter dynamics
140,best localization method,making robot supposed roam house pick trash using opencv plan send information arduino mega arduino nano connected window pc using radio transceivers plan send video feed raspberry pi camera wifi windows pc windows pc uses opencv processes information sensors sends command arduino mega arduino mega raspberry pi usb camera wifi dongle xbox kinect wheel encoders sonar distance sensor arduino nano windows pc want know keep track robot room think trying slam need make map rooms change open ideas cost factor,arduino mobile-robot localization,mobile localization robot arduino
141,roll pitch calculation problem,problem hold sensors mpu9150 +y downward axis horizontal plane expect pitch degree roll degree pitch degree roll degree roll degree pitch degree expect know cause problem thanks,quadcopter,quadcopter
142,increase pid sampling rate embedded system,robotic project running processes taking running pid max clock rate half processing time taken spi peripherals imu encoders recommendation run faster pid sampling rate,pid embedded-systems,pid systems embedded
143,phantom type robot inverse kinematics solution,guys robot looks thanks croco came know much similar phantom omni looks similar phantom omni trying get inverse kinematics geometric solution using inverse kinematics solution build fpga design good research paper http //ieeexplore.ieee.org/xpl/login.jsp tp= arnumber=6318365 url=http understand page find l3 l4 shown image find robot project done find l3 l4 robot bring end effector position shown fig2 amd measure l3 l4 work great guys help cheers,inverse-kinematics geometry,geometry inverse kinematics
144,motors use require gearboxes car robot,new robotics ime looking motor used power car-like robot.i turn on-spot furthermore want require gearbox attach wheels know start looking heard servos built gearboxes degree rotation body know motor described paragraph least point right direction,motor,motor
145,best sensor determine versus,want start designing arduino project telemetry readings indicate tilt angle placement accelerometer best determining good tutorials,mobile-robot arduino,mobile robot arduino
146,denavit hartenberg parameters articulated manipulator,trying solve kynematics problem manipulator working robotics toolbox matlab created peter corke calculte dh parameters introduce matlab compute fordward kynematics plotted robot guess made mistakes calculating dh parameters attached file see dh frames calculated joint dh parameters frame anyone give clue correct answer image frames calculated robot get matlab using robotics toolbox p.corke,robotic-arm inverse-kinematics forward-kinematics,forward inverse kinematics arm robotic
147,know powerful take calculate max thrust g given current voltage v,build quadcopter following components take frame f450 glass fiber polyamide landing gear high landing gear battery burst motor xxd a2212 brushless outrunner motor esc burst brushless bec prop propeller set assume total weight quad ~1.1kg like payload upto making quad weigh ~1.5kg learnt thrust weight ratio fall recommended better control creates problems lifting planning high maneuverability cruise sky pushing quad limits want fly motors pull g -amps -voltage v -power w -specificthrust g/w information a2212 x props battery discharge rate limited wrong give entire circuit motors take max table produce ~600g thrust motors mean get thrust weight throttle quad take confused efficacy motor meaning buy bigger motor get thrust same/bigger props efficient combination motor prop maximum thrust practical pulling force g n get outta equation tells defines exact relation provided fly quad usual conditions exttemp/80 -90 relhumidity/max15malti ps tried prop power thrust efficiency calculations online stuff update replacing 3000mah-20c/30c battery 5000mah-20c/30c keeping everything solve problems increase flight time provided keep everything,quadcopter brushless-motor battery lithium-polymer,quadcopter polymer battery motor brushless lithium
148,hard real time safe,know question asked many times clear read online people say control robots ros applications hard real time constraints need technical arguments plain ros real time specific suppose ros rtos read ros uses tcp/ip-based communication ros topics know tcp/ip reliable means use topics real time loop instance send control signal system publishing topic system sending feedback topic rtos eg linux+xenomai build real time control loop robot using ros ros bottleneck naive lack knowledge please enlighten note define hard real time system eg system guarantee miss thing control loop fails run system fails,ros real-time,real ros time
149,plans use vendor id identify ethercat devices,asked question ros answers getting much interest ethercat package ros uses slaves product ids identify devices load correct drivers works great devices manufactured single vendor plans prevent product id collisions multiple vendors make ros compatible ethercat devices manufacture ethercat devices using large values product id hoping collide anyone ros concatenate vendor product ids single 64-bit value use identify correct driver,ros,ros
150,determines speed quadrotor,design quadrotor travels particular maximum speed determine power required quadrotor hover,mobile-robot quadcopter power,mobile quadcopter robot power
151,determine battery power robotic circuit,robotic circuits draw different amounts power/current given battery say connecting different circuits deplete different rates robot/circuit drain battery minutes robot/circuit drain battery minutes ratings batteries allows figure long power circuit bonus points rating uphold solar panels deed power supplies batteries,power battery circuit,battery circuit power
152,electric piston longitudinal electric motor,electric motors apply force rotational motion longitudinal motion electromagnetic design gears worms motors great linear actuators transfer force feedback name devices,motor actuator,actuator motor
153,bs2 inconsistant pin state connected wire,"bs2 mounted parallax board education rev d. trying use wire determine control pressed wire connected state seems fluctuate staying connected desired button exhibits behavior added quality switching button pressed stay buttons pressed flickers unpressed causes behavior wire connected anything bus code used get state debug crsrxy,0,3 p5 bin1 in5 loop",microcontroller,microcontroller
154,difference planetary precision gear motors,working building rover like advice selecting motors particular want understand difference precision planetary gear motors robot way 10-15lbs think like responsive quick sabertooth motor controllers supply looking motors sure better choice application sets motors thinking https //www.servocity.com/html/precision_robotzone_gear_motor.html https //www.servocity.com/html/3-12v_precision_planetary_gear.html googling provide info planetary gears application unclear thanks,mobile-robot motor gearing,mobile gearing robot motor
155,ackerman steering model,trying create simulation robot ackerman steering car assuming 3-wheeled robot wheels steering wheel front knowing wheel velocity steering angle need able update robot current position velocity new values time t+1 obvious way calculate position centre rotation axles wheels meet leads undefined centre rotation means model work normal case robot driving straight line model steering works reasonable range,mobile-robot simulation,mobile robot simulation
156,difference yaw attitude quad rotor,big miss conception attitude represent quad earth post calculate imu gyro +accele magent,imu,imu
157,extended kalman filter using odometry motion model,prediction step ekf localization linearization performed mentioned probabilistic robotics thrun fox page jacobian matrix using velocity motion model defined \begin bmatrix x \\ \\ \theta \end bmatrix \begin bmatrix x \\ \\ \theta \end bmatrix \begin bmatrix \frac \hat v _t \hat \omega _t -\text sin \theta \text sin \theta \hat \omega _t \delta \\ \frac \hat v _t \hat \omega _t \text cos \theta \text cos \theta \hat \omega _t \delta \\ \hat \omega _t \delta \end bmatrix calculated g_ \begin bmatrix \frac υ_ ω_ -cos μ_ t-1 θ cos μ_ t-1 θ +ω_ δ \\ \frac υ_ ω_ -sin μ_ t-1 θ sin μ_ t-1 θ +ω_ δ \\ \end bmatrix apply using odometry motion model described book page robot motion approximated rotation \delta rot1 translation \delta second rotation \delta rot2 corresponding equations \begin bmatrix x \\ \\ \theta \end bmatrix \begin bmatrix x \\ \\ \theta \end bmatrix \begin bmatrix \delta \text cos \theta \hat \delta rot1 \\ \hat \delta \text sin \theta \hat \delta rot1 \\ \hat \delta rot1 \delta rot2 \end bmatrix case jacobian g_ \begin bmatrix \delta sin θ \hat \delta rot1 \\ \delta cos θ \hat \delta rot1 \\ \end bmatrix good practise use odometry motion model velocity mobile robot localization,localization kalman-filter,filter kalman localization
158,ekf slam mahalanobis distance,done ekf localization known unknown correspondences ekf slam known correspondences stated probabilistic robotics moved ekf slam unknown correspondences algorithm page \psi_ k h^ k \bar \sigma h^ k q \pi_ k z^ \hat z k \psi^ -1 k z^ \hat z k endfor \pi_ n_ t+1 \alpha j \underset k argmin \pi_ k n_ max\ n_ j understand line book page authors state line sets threshold creation new landmark new landmark created mahalanobis distance existing landmarks map exceeds value \alpha ml correspondence selected line \alpha line computed mahalanobis distance research mahalanobis distance understand role ekf slam edit found book university library robotic navigation mapping radar authors state mahalanobis distance measure slam define d^ z^ j k \hat z k provides measure spatial difference measurement z^ j k predicted feature measurement z k given d^ z^ j k \hat z k z^ j k \hat z k s^ -1 k z^ j k \hat z k value calculated possible z^ j k \hat z k combinations d_ j k \hat z k \leq \alpha referred validation gate leave question \alpha,slam ekf mapping,ekf slam mapping
159,compute relative pose robots,"compute relative pose robots robots matlab code poser1 poser2 corresponding covariance matrix probability distribution movement robot asociate gaussian distribution co1 diag co2 diag auxiliar functions solve function compose poses x theta function tac=tcomp tab tbc composition transformations given poses ang tab +tbc ang pi ang -pi ang anglewrap ang end sin tab c cos tab tac tab c -s c *tbc function get inverse pose pose function tba=tinv tab tba zeros size tab t=1:3 size tab,1 tba t+2 tinv1 tab t+2 end solution get relative pose compute things pose composed poser1 get poser2 means need get pose_inc satisfy equality tcomp psoer1 **pose_inc** poser2 next code compute relative pose allows poser1 reach poser2 computing relative pose r1 r2 pose composed poser1 reach poser2 pose_inc tcomp tinv poser1 poser2 covariance matrix relative pose uncertainty r1 reach position poser2 c cos poser1 sin poser1 x_1 poser1 y_1 poser1 x_2 poser2 y_2 poser2 jacobians compute covariance relative pose jacf_1 -c -s x_2-x_1 *s+ y_2-y_1 *c -c x_2-c_1 *c- y_2-y_1 *s -1 jacf_2 c -s c computing covariance relative pose c_p12 jacf_1*co1*jacf_1 jacf_2*co2*jacf_2 jacf_1 jacobian define difference poser1 pose_inc jacf_2 jacobian define difference poser2 pose_inc c_p12 covariance matrix r1 move poser2",sensors movement pose first-robotics,robotics sensors pose first movement
160,volt input volt ouput arduino,ended supplying v arduino output pin vin pin mean use output pin i.e fried,arduino,arduino
161,read multiple channels rx-tx arduino,channel rf rx/tx want connect motors able connect channel motor unable connect channel motor arduino code using int motor1left // defines pin connected motor int motor1right= // defines pin connected motor int motor2left // defines pin connected motor int motor2right // defines pin connected motor int enable int enable2 int channel1 // defines channels connected int channel2 // pins arduino int channel1 // used int channel2 // store values void setup pinmode motor1left output // initialises motor pins pinmode motor1right output pinmode motor2left output pinmode motor2right output // outputs pinmode channel1 input // initialises channels pinmode channel2 input // inputs serial.begin // sets baud rate bps void loop channel1 pulsein channel1 high // checks value channel1 serial.println channel1 //prints channels value serial monitor delay channel2 pulsein channel2 high // checks value channel1 serial.println channel2 //prints channels value value serial monitor delay channel1 channel1 /*these values got transmitter customize according transmitter values */ digitalwrite motor1left low // sets digitalwrite low // motors low enable channel1 // checks channel1 lesser digitalwrite motor1left high // turns left digitalwrite motor1right low // motor enable channel1 // checks channel1 greater digitalwrite motor1left low // turns right digitalwrite high // motor enable channel2 channel1 digitalwrite motor2left low // sets digitalwrite low // motors low enable2 channel2 // checks channel2 lesser digitalwrite motor2left low // turns left digitalwrite motor2right high // motor analogwrite enable2 channel2 // checks channel2 greater digitalwrite motor2left high // turns motor2right low // motor analogwrite enable2,arduino,arduino
162,autonomous variable terrain yaw sensor,programming robot drive variable terrain obstacles variable terrain knock robot initial heading like design autonomous sequence correct change direction using accurate sensor compass yaw best way correct changes maintain heading side side motion stay perfect heading needs stay correcting overpowering side wheels depending direction correction needed heading correct seems antiquated method looking cleaner smooth method,compass automation,automation compass
163,building servo tester measure peak/stalled amp draw,finding data stalled use load free amp draw servos seems impossible want build/create servo tester want know amps servo drawing idle movement load stalled/full position think cover bases relative amp usage servo please let know missing questions going need power supply exact seems standard measurement voltages need way measure amp draw need way control servo movement missing anyone suggestions please let know thanks help seems uncharted waters rc hobby area someone robotics field path,rcservo,rcservo
164,motorize elbow socket joints powered exo-skeleton,motorize joints iron man suit need something shallow think dual servos sitting side elbow knee joint side hips get motorized action adding thickness joint bicycle-style chain drives work think length chain need vary depending position least lot joints motorize joints,design mechanism,design mechanism
165,rocker bogie suspension stability,designs shown rocker bogie systems whole weight platform seems supported rod differential bar gear bit unstable system arms rover end high torque rod understanding rocker bogie systems correct solutions problem sacrificing functionality rover clarify want know rovers curiosity designed balance heavy platform differential bar mechanism trying make small rocker bogie want avoid anticipated problem,mobile-robot design wheeled-robot,mobile design robot wheeled
166,stereo vision moving vehicle,put stereo camera moving platform sync cameras kind delay cameras tolerable depend motion guidelines practitioner guides build moving stereo system,stereo-vision,stereo vision
167,create artificial integelent robot ability communicate computer language use,know languages php c/c++ java expert languages want create artificial intelligent robot task able communicate computer usb able perform specific task present visual interface finding path speed others access micro controller device attached devices on.. editor note solve world hunger please suggest programming language good programing type robot heard c/c++ assembler robotc labview unable decided language use project sorry bad english,microcontroller artificial-intelligence robotc,intelligence microcontroller robotc artificial
168,meaning equation graphical model,paper topology-based representations motion planning generalisation dynamic environments interactions ivan et.al. says page approximate inference control aico framework translates robot dynamics graphical model following equation p x0 u0 mean feel p means uncertain quantity sure,mobile-robot control robotic-arm motion-planning,control mobile robot motion planning robotic arm
169,path following robot converting xy axis path input wheels,moment creating android program steer simple wheel motors balance robot move online following path drawn screen robot operated wifi motors react input signals imagine drawing path robot smartphone screen aquired points xy axis time beginning idea convert points voltage input motors signals sent connection single axis point taken consideration skips irrelevant path done robot reasonable error scale idea make robot follow defined axis points overall create path edit voltage computed robot input -255 velocity increase decrease lineary borders like solve perfect conditions need feedback crazy models let assume data true sensors additional devices xy axis path required input ommit wheel slide,wheeled-robot wifi two-wheeled,wifi wheeled robot
170,modelling point clouds collision detection gazebo,applying path planning robotic arm gazebo chosen use rrt order detect points collision thinking getting point cloud kinect subscriber feeding something octomap collision map import gazebo gazebo plugin import octomap files write next idea feed point cloud mesh generator meshlab turn urdf starting get input somebody experienced right way go keep mind environment static things moving arms thank picture octomap,robotic-arm localization slam kinect gazebo,localization kinect slam robotic gazebo arm
171,mckibben artificial muscles ratio,reading artificial muscles highest power/weight ratio electric motors ratio less electrical engineer worked pneumatics big idea air pumps question much ratio change consider autonomous system side mckibben actuators air pumps valves energy source side electric motors energy source example let suppose somebody found way model control artificial muscles good electric motors make autonomous walking leg models higher resulting power/weight ratio,control power actuator torque battery,control actuator torque battery power
172,choose connect camera robot,tons cameras devices days used photo cameras smartphones tablets home gathering dust wonder easiest way get camera module device connect robot project soldering iron make work software point view planning use something arduino stm32 platform intel edison camera modules easier solder program custom project look way better find camera module designed custom projects,cameras,cameras
173,public dataset monocular visual odometry,planning develop monocular visual odometry system indoor dataset available public ground truth approach note aware kitti vision benchmark suite provides stereo data outdoor vehicles anyone access datasets used following paper svo14 great http //rpg.ifi.uzh.ch/docs/icra14_forster.pdf,computer-vision odometry,odometry computer vision
174,quadcopter stability vs pid error signal lag sample time,question asking effect stability increasing decreasing sample time lagging error signal pid helps stability degrade,quadcopter pid stability,quadcopter stability pid
175,rc helicopter connect computer,planing control rc helicopter computer experience programming .net use .net control rc helicopter start project,control radio-control,control radio
176,generate synthetic accelerometer data based x coordinate,like create simulation model signal generator allow generate output signals accelerometer based location input signals x z like realistic model data produced accelerometer noise bias offsets convert series points simulated accelerometer output series positions describe trajectory space ... moving trajectory described series positions interested knowing simulating data produce result moving described trajectory calculate derivative trajectory ideal looking model realistic,accelerometer simulation,accelerometer simulation
177,make robot work,holiday project building surveillance robot capable transmitting live images using webcam capable lifting small objects uses cc2500 module communicating robot interface designed visual basic allows set port computer transreceiver connected connected usb rs232 port usb side connected computer tried settings shown get error config unsuccessful tried settings different computers work circuit diagram robot designed using atmel please tell settings try make work,electronics computer-vision wheeled-robot robotic-arm,robot arm computer robotic electronics wheeled vision
178,lidar points landmarks,trying implement graphslam/sam lidar papers read generate directed graph expected lidar measurements landmarks similar image taken square root slam paper dellaert practice point clouds obtain lidar similar taken kitti car collected dataset seems algorithms sift point clouds accurate used technique find features consecutive point clouds find landmarks slam algorithms using points point cloud,localization slam lidar,lidar slam localization
179,ideas shooting ball soccer robot,best option use shooting system soccer robot implemented solenoid-based system shooting works methods check better mine,soccer mechanism,soccer mechanism
180,scara arm lead screw choices,thinking building scara arm lift moderate loads high degree accuracy want quick inexpensive z axis gantry thinking using lead screw dual linear rail trouble certain linear velocity best method choosing lead screws associated given desired linear velocity nema stepper motor driving,robotic-arm mechanism,arm mechanism robotic
181,reduce motor maximum current draw,motor stall current motor controller peak current rating way reduce stall current protect motor controller realize right solution buy better motor controller bit low funds thought putting resistor series motor came value reduce maximum current draw given maximum impedance motor downside harming performance motor reducing stall torque,motor microcontroller current,current microcontroller motor
182,easiest efficient way detect human close range distance make robot follow,thesis regarding robot research requires robot attached linear guide rail robot detect human close range meters distance easiest efficient method components use,sensors wheeled-robot industrial-robot,sensors industrial wheeled robot
183,balancing robot control model,trying find control model system balancing robot purpose project control \theta_2 motors wheels i.e torque τ started dynamic equations went transfer function find pid gains control robot keep balanced optimum response time interested finding transfer function dynamic model example https //www.youtube.com/watch v=fdsh_n2yjzk sure free body diagrams wheels inverted pendulum robot body calculations dynamic equations \begin array lcr m_1 \ddot x _1 f_r f_ \rightarrow \\ m_2 \ddot x _2 f_ \rightarrow \\ j_1 \ddot \theta _1 f_r r \tau \rightarrow \\ j_2 \ddot \theta _2 \tau mgl\theta \rightarrow \mbox linearized pendulum \\ \end array kinematics x_1 r\theta_1 \\ x_2 r\theta_1 l\theta_2 \\ equating m_1 \ddot x _1 f_ f_r \\ \frac j_1 \ddot \theta _1 r \frac \tau r f_r yields \frac j_1 \ddot \theta _1 r m_1 \ddot x _1 \frac \tau r f_ \rightarrow equating \frac j_1 \ddot \theta _1 r m_1 \ddot x _1 \frac \tau r m_2 \ddot x _2 \rightarrow \\ using kinematic equations j_1 m_1 r^2 m_2 r^2 \ddot \theta _1 m_2 l r \ddot \theta _2 -\tau \rightarrow \\ equating \begin array ccc \underbrace j_1 m_1 r^2 m_2 r^2 \ddot \theta _1 \underbrace m_2 l r j_2 \ddot \theta _2 \underbrace m_2 gl \theta \rightarrow \\ b c \\ \end array using laplace transform finding transfer function \frac \theta_1 \theta_2 -\frac bs^2 c as^2 \\ substituting transfer function equation j_1 m_1 r^2 m_2 r^2 \frac \theta_1 \theta_2 \theta_2 s^2 m_2 lr\theta_2 s^2 -\tau \\ yields \frac θ_2 τ \frac -1 mlr-b s^2+c simplifying \frac θ_2 τ \frac j_2 s^2-m_2 gl comments -this expresses pendulum wheel i.e dependent pendulums properties -poles real verify instability,arduino control pid wheeled-robot,control robot pid wheeled arduino
184,find difference consecutive sensor readings real-time c,working micromouse sensors call s1 s2 s3 use s1 idea s1 controls left motor s3 right motor s2 detect wall front anyways trying write code c dspic30f4011 mcu read sensor values reading consecutive values compare values read happens flow code follows // initialize timer generating interrupts // pseudo-code void __attribute__ interrupt auto_psv _t1interrupt void int count //read sensor1 store value sensor1value sensor1value sensor1 int count++ //now part lost // want diff_s1value sensor1value n+1 sensor1value n // mathematical sense n+1 n // want compare new value previous sensor value diff_s1value // checks difference //duty cycle pwm controls speed motor sensor1value sensor1value n+2 diff_s1value pdc1 float k/sensor1value look line compare sensor values real-time let know wants info,c micromouse,c micromouse
185,prop orientation tricopters,question stems previous question asked prop orientation matter much multirotor research† found reasons need tri copter reasons general multi rotors odd number motors rotors † forum talks lot tricopters prop orientations nothing answers question,multi-rotor,rotor multi
186,rc transmitter quadcopter arduino,wl v262 quadcopter want control using arduino joysticks transmitter opened transmitter saw joystick potentiometers pcb voltage pot goes used arduino pwm low pass filter connected output filtered output potentiometer analog pin connected pcb desolder take pots v_ going analog pin transmitter display gave confused frustrated know control transmitter attaching stepper motors joysticks controlling transmitter last resort someone help spent hours hours trial error getting pcb transmitter,arduino sensors radio-control wireless,control wireless sensors radio arduino
187,lithium ion battery monitors designed hobbyists quadcopters,friend getting quadcopters good techie buddy trying find right technology battery monitoring expensive machine fall sky technology hobbyists seeing voltage monitors useful battery chemistry flat voltage curve liion expect voltage monitor report low battery draw extra current seeing buddy fast maneuvers mid flight day job use charge counting battery monitors bms battery chemistry custom designed battery pack laptop batteries etc built battery pack sold cell suppliers missed product electric aircraft hobbyists battery dark ages,battery lithium-polymer,battery polymer lithium
188,error building map ros slam_gmapping,recorded rosbag data simulating robot gazebo played logged bag file tried build map using slam_gmapping node ended error warn laser mounted planar z-coordinate -1 gave -0.03982 iterations able build map modifying laser scanner joint origin urdf file origin xyz= -0.040 rpy= -1.5708 -1.5708 origin xyz= -1 rpy= -1.5708 robot model become weird laser scanner robot get issue relocating laser scanner find urdf file,slam ros navigation mapping simulation,ros slam navigation mapping simulation
189,total hand calculations procedure formulaes mega-quadcopter,student taking mega-quadcopter final year project.can u please help total hand calculations mega-copter i.e procedure formulaes wanted know calculate dimensions frame specifications motor propeller rating esc power rating batteries total no.s.i want direct answers procedure formulaes.i want lift aload 20-30 kgs .please feel free help,quadcopter,quadcopter
190,power switch common ground battle robot,constructing hobby-weight battle robot safety rules robot power switch turns power motors weapon robot sub-systems drive motors battery weapon battery lighting small volt battery read connected receiver important electronics sharing common ground everything work know live wire connected switch thinking hitting birds stone connecting ground wires live wires switch way turn power common ground terms safety shorts etc concerned using xt connectors careful use female plugs power leads prongs visible seems work safe dealing mains voltage levels hand want look stupid way connecting switch make sense violating unwritten law normal practice effect circuitry way grounds connected thinking using switch pc power supply rated high currents case cordless motors drawing amps load say amps anyone used switches buy high current ones case ask thanks,control power battle-bot,control battle bot power
191,difference rao-blackwellized particle filters regular ones,read seems rao-blackwellized particle filter normal particle filter used marginalizing variable p r_t s_t y^t sure conclusion like know precise differences types filters thanks advance,slam particle-filter,filter slam particle
192,information filter kalman filter approach,read many sources kalman filter approach filtering canonical parametrization moments parametrization used difference questions using forget kf remember prediction complicated link imagine uncertainty matrix turning ellipse see area uncertainty mean boundaries simple addition information possible assumption sensor read different object hence association problem posted,kalman-filter algorithm sensor-fusion,filter fusion sensor algorithm kalman
193,standard equation steering differential drive robot,"writing code arduino ide board control differential drive wheeled robot able steer direction reason steering response time little awkward better strategy code using using app called virtual joystick controls feeds data virtual pins v1 x y. x left right joystick forward information app available http //www.blynk.cc/ working part latency cloud service main problem stuck steering driving // define blynk_debug // define blynk_print serial // comment disable prints save space define blynk_print serial // comment disable prints save space include esp8266wifi.h include blynksimpleesp8266.h int motora int motorb int x=0 int y=0 int steer=0 int maximo=0 // get token blynk app // go project settings nut icon char auth b41ff7f1659b4badb694be4c59601c2c void setup // set console baud rate serial.begin blynk.begin mob4life pinmode motora output pinmode motorb output pinmode output pinmode output pinmode output pinmode output v1 int x1 param .asint x=x1 int y1 param .asint y=y1 blynk_write v0 // slider de int vel param.asint maximo=vel void loop x == == // stop motora motorb analogwrite motora motora motorb motorb x x //forward motora motorb motora map motora maximo,130 analogwrite motora low motorb map motora maximo,130 analogwrite motorb digitalwrite high x x //reverse motora motorb motora map motora maximo,126 analogwrite motora high motorb map motora maximo,126 //something wrong high signal motorb low x //steer left motora motorb steer map x maximo steer x maximo motora map motora maximo,130 analogwrite motora steer low motorb map motora maximo,130 analogwrite motorb steer digitalwrite high x //steer right motora motorb steer map x maximo steer x maximo motora map motora maximo,130 analogwrite motora steer low motorb map motora maximo,130 analogwrite motorb steer digitalwrite high blynk.run help appreciated thanks",differential-drive,differential drive
194,get manufactured part cad file,working book learning robotics using python python programmers want learn robotics chapter shows use librecad design plates poles form chassis turtlebot-like robot instance base plate looks nothing chapter picture manufactured plates assembled chassis author acts something know cad drawings plates manufactured magical process book discusses gives things tolerances material supposed made etc. kinds things discussed http //www.omwcorp.com/how-to-design-machined-parts.html know nothing stuff terms go cad design specs getting actual part manufactured kinds companies use reasonable price expect process general go cad design manufactured item find local machine shop specializes robotics bring cad drawings work try build parts noob hope question http //blog.stackoverflow.com/2010/11/qa-is-hard-lets-go-shopping/,design software manufacturing chassis hardware,hardware manufacturing design chassis software
195,manipulator end-effector orientation quaternions,following problem given points surface adjust manipulator end-effector i.e pen baxter robot normal surface points get coordinate frame normal vector question use tell manipulator supposed orientation baxter inverse kinematics solver takes x z -tuple cartesian coordinates desired position x z w -quaternion desired orientation set orientation feeling use normal vector n_1 n_2 n_3 calculation,inverse-kinematics orientation,inverse kinematics orientation
196,servo motors large scale rc car,want convert electric atv quad kids highper atv-6e radio control robotics project small atvs weigh kg need choose servo motors steering braking grade servos much torque need use strongest rc servo find metal gears course need industrial grade servo plan use servo steering braking braking atv mechanical disc brakes discs front common disc rear brake levers front/rear plan use servo use front rear plan mount brake wire servo simulate lever movement guess make weak servo stronger adding proper gear mechanical engineering prefer off-the-shelf component,servomotor rcservo steering brake,servomotor brake steering rcservo
197,robotic pollenators designed,hive collapses growers desperate pollenation options anyone working swarms tiny flying robots augment bees look certain color poke flower moment move need recharging fly hive reason bees fly course replacing germinators run seeds digestive systems different problem,mobile-robot,mobile robot
198,manipulate real-time sonar data arducopter arduino,quad radio telemetry kit like send real-time sonar data laptop running windows order manipulate additional arduino sketch sonar sensor connected analog channel arduino data processed altitude calculations like send altitude data sort ground station computer use telemetry kit radios computer sure go task way modify source code gcs.h gcs_mavlink.pde conjunction mission planner mav ground station need write python module accomplish,quadcopter python sonar,quadcopter python sonar
199,control servo motor raspberry pi,trying make hexapod servo motors asking control raspberry pi used saw lot stuff control ... working arduino mega ssc-32 board found slow jerky end want add camera processing image know arduino handle process raspberry pi thank information subject,arduino raspberry-pi cameras servomotor,servomotor pi raspberry cameras arduino
200,lidar solutions,surprised price range lidar applications considering simplicity design try make simple project requires lidar object recognitions etc like use visual recognition opencv trying understand lidar solutions expensive see http //velodynelidar.com/lidar/hdlproducts/hdl32e.aspx small lidar sensor goes believe lidar next step robotic applications sure exclusive seen projects go performance bad hope answer makes expensive cheap systems hobbyist afford,arduino computer-vision lidar,lidar computer vision arduino
201,including raspberrypi robot ... allow universal api,know broad statement got support tcp full fledged computer board integrate/run arduino allow anything run box raspberrypi run operate robot know clock speed dependency libraries given code base pi add complexity big issues overlooking vertically-integrated control system including raspberrypi robot ... allow universal api,software arduino raspberry-pi,pi arduino raspberry software
202,gazebo import robot gives error,trying import tutorial robot given link gives following error error param.cc:181 unable set value key horizontal_fov error param.cc:181 unable set value key error parser_urdf.cc:2635 unable call parseurdf robot model error parser.cc:278 parse old deprecated model file failed error parser_urdf.cc:2635 unable call parseurdf robot model error parser.cc:278 parse old deprecated model file failed error parser.cc:278 parse old deprecated model file failed sugest something wrong parsing point towards line code example lines link name='chassis pose .1 /pose collision name='collision geometry box size .4 .2 .1 /size /box /geometry /collision visual name='visual geometry box size .4 .2 .1 /size /box /geometry /visual collision name='caster_collision pose -0.15 -0.05 /pose geometry radius .05 /radius /sphere /geometry surface friction ode mu /mu mu2 /mu2 slip1 /slip1 slip2 /slip2 /ode /friction /surface /collision visual name='caster_visual pose -0.15 -0.05 /pose geometry radius .05 /radius /sphere /geometry /visual /link link name= left_wheel pose /pose collision name= collision geometry cylinder radius .1 /radius length .05 /length /cylinder /geometry /collision visual visual geometry cylinder radius .1 /radius length .05 /length /cylinder /geometry /visual /link link name= right_wheel pose -0.13 /pose collision name= collision geometry cylinder radius .1 /radius length .05 /length /cylinder /geometry /collision visual visual geometry cylinder radius .1 /radius length .05 /length /cylinder /geometry /visual /link joint type= revolute name= left_wheel_hinge pose -0.03 /pose child left_wheel /child parent chassis /parent axis xyz /xyz /axis /joint joint type= revolute name= right_wheel_hinge pose /pose child right_wheel /child parent chassis /parent axis xyz /xyz /axis /joint /model /sdf ubuntu hint wrong information better come solution,simulator gazebo simulation,simulation gazebo simulator
203,slam goal babbling,struggling good links use goal babbling slam applications technique used method optimizing movement slam environment,localization slam motion-planning mapping,motion planning slam mapping localization
204,best power solution robot,built quadruped robot using servos towerpro sg90 servo raspberry pi model b right feeding charger make un-tethered look selecting batteries think separate powering rpi servos power jumping moves good rpi little video testing walking algorithm,mobile-robot raspberry-pi power battery walking-robot,walking raspberry power mobile robot battery pi
205,safety cages quadcopter rotors/blades affect lift capabilities,interested building quadcopter scratch err side caution considering adding safety cages propeller/rotor prevent least minimize chance spinning rotor blades coming contact someone knowing much physics lift works imagine cages present main problems rotors add weight copter making harder lift payload sheer presence/surface area makes harder spinning rotor generate lift push ground former problem obvious self-evident latter problem mean surface area imagine caging spinning rotor difficult lift instance spinning rotor ability generate enough power lift say construct entire box cage entire rotors sides openings imagine lift capability drop interested cage design provides adequate safety box rotor much causes rotor ineffective incapable providing lift looking optimal tradeoff safety boxing/caging spinning rotor lift performance imagine calculating designing huge undertaking lot math wondering anyone figured stuff anyone knows way model safety-vs-lift-performance trade way,quadcopter,quadcopter
206,possible use lipo charger lab bench power supply,thought building lab bench power supply comes cheaper love build things ... lipo charger imax b6ac bought quadcopter came idea use charger lab bench power supply ... questions work make work,power,power
207,accuracy estimated position localization better estimated position slam,estimate position robot localization slam intuition says get better position estimation localisation slam better sensor model likelihoods localization given complete environment slam like know difference accuracy estimated position localization slam,localization slam particle-filter,filter slam particle localization
208,best protect sensitive components damage vibration,common components types robots experience large environmental stresses key vibration something need worry typical electronics sensitive components secure components heard main philosophies first use damping system springs absorb shock second keep everything place move hit anything break follow answer depends use guide best protect sensitive components,electronics protection,electronics protection
209,outputting precise voltage millivolts arduino mega,need output varying voltage arduino mega range millivolts attempted sending pwm signal board low-pass filter steps voltage works problem arduino analogwrite function accepts value represent duty cycle pwm precise enough value yields millivolts value yields millivolts way duty cycle precise range think precise better way get precise voltage output mega running outputting max voltage volts low pass filter contains kiloohm resistor microfarad capacitor,arduino pwm,pwm arduino
210,robotics advice needed,high school project building robot draw image whiteboard based instructions give accomplish motor move pen axis similar printer moves z axis code goes fine wondering anyone give insight go building robot i.e motors system moving axises etc help appreciated thanks,motor mechanism,mechanism motor
211,spp profile compatibility phone,building project uses cell phone control microcontroller bluetooth decided use hc-05 bluetooth module hc-05 manual http //www.exp-tech.de/service/datasheet/hc-serial-bluetooth-products.pdf phone using nokia c3-00 series http //developer.nokia.com/devices/device_specifications/c3-00/ hc-05 module uses spp bluetooth phone supports dun ftp gap goep hfp hsp pan sap sdap profiles knowledge phone api utilizes rfcomm question use bluetooth module phone thanks advance apologies question trivial new bluetooth -shaun,microcontroller,microcontroller
212,position object data tracking,class project working weight stack trying measure position moving weight stack value weight based calibrated/preloaded position stack load sensor e.g think stack plate weights sensor knows plate plates etc weight stack base camp chip/sensor/laser feet weight stack need anything strong requirement small/unobtrusive cost effective looked options engineer right track research check,sensors,sensors
213,localising robot swarm,question localizing swarm robots summary want create swarm robots measure position room high ceiling accuracy ±5mm good answers optical methods interested hear non-optical localisation ideas impose following constraints localisation method use optical means visible invisible nothing added floor ceiling appreciable gap top robots ceiling walls equipment added perimeter room look hearing creative ideas,wireless swarm,wireless swarm
214,possible simulate vision perception gazebo simulators,vision important part robotics unavoidable component control loop many clothes/garment handling algorithms visual cues deciding proceed question simulation environments gazebo others allow design world robot garment simulate garment dynamics simulate robot sees robot perceives garment simulation step possible simulate vision simulate algorithms vision component control loop simulation vision good research theme trend good articles initial projects expanded stated general question possible simulate sensors gazebo e.g food handling soft-body handling involve tactile sensors principle gazebo calculate deformation forces soft-body format data simulated values sensor readings similar mechanism used simulation vision,computer-vision simulator research simulation gazebo,simulator simulation computer research gazebo vision
215,effective distribution grayscale sensors robot,working robotics project using grayscale sensors follow black line turning degrees going round circle passing gaps lines etc wondering effective way detect colours move lines grayscale sensors thank much,mobile-robot sensors automatic line-following,mobile robot following line automatic sensors
216,magnets affect imu values,im process making robot requires cylindric magnets construction center robot plan imu thinking using mpu-6050 magnets affect values yes solution shield something imu,sensors imu,sensors imu
217,simplest cheapest way create spring latch,friend hacking nespresso coffee pod dispenser heart set particular design thinking countless ways dispensing single pod design single flavour pods vertical tube tend fall latches base tube stop pods falling releasing latch allow pod fall lip pod catching next latch problem component found suitable product shelf ideally solution compact cheap latch ideas date considered linear motion solenoid seems over-kill tend dollars ultrasonic motor find linear actuator dollars bulky piezoelectric actuator tuned nm scale precision hard come rotating disk release notch driven stepper motor bulky rotating latch string attached rack pinion powered electric motor think simple enough solution rotating cam gumball machine works suspect suggested answer involve mechanical electronic motor component simple option printer open mechanical solutions custom latch crude electromagnet example note desired size latch holding pods orange tube black yes motors work quite obvious solution clever finds suitable product understand latch side pods sit vertical latch need higher,mechanism,mechanism
218,state space control space,like know difference state space control space relation motion planning like simpler explanation,motion-planning,motion planning
219,sensors mcu vectornav vn300 use,hesitant open mucho- vectornav vn300 see anybody know underlying sensors uses accel gyro mag outputs low-noise compared high end 3-axis mems devices ie kionix kxr94 maxim st lis3mdl everything fits small package guessing using devices integrated axes navigation grade devices tend analog fewer axes enormous compared consumer-level mems automotive mems sensors mention using web pages tend single dual axis less noisy consumer-grade sensors,imu navigation,navigation imu
220,determine trajectory reference real robot trajectory tracking,know use algorithms lqr mpc pid make robot follows trajectory references simulation matlab specify trajectory reference function let say given sequence points generated path planning algorithm want real experiment trajectory tracking sequence points question specify errors towards real situation impression generated path path planning algorithm uncertain due error robot sensing line following robot real physical line reference generated path path planning virtual e.g exist real world confused matter,mobile-robot control,mobile control robot
221,much input current destroy motor driver,v rated using drive v dc gear motors using arduino bought new battery pack rated mah making total current input a. rated v min v max current rating given motors max current load a. sure using battery destroy motor driver datasheet,motor battery current,battery current motor
222,downgrade ros jade indigo,possible downgrade ros jade indigo familiar robot operating system ros ros,ros,ros
223,creating robot ez-b regular arduino,anyone experience ez-b sold ez-robot.com comes sdk visual studio direct scripting runtime usb wifi irc https question get regular arduino board able ive read arduino needs hold instructions memory brain computer feed signals forth microcontroller arduino alone step website niceley puts thanks help advance,arduino microcontroller,microcontroller arduino
224,hubsan x4 drone camera recording black,unsure correct community ask question vs stackexchange electronics aviation example purchased hubsan x4 hd video drone amazon second hubsan drone familiar using recording feature recording recordings correct length correct audio image black tried formatting micro sd using different micro sds reading forums nothing seems trick mine defective someone issue able solve thanks,quadcopter cameras,quadcopter cameras
225,actuate pneumatic muscle signals received emg sensors interfaced raspberry pi,aim actuate pneumatic muscle based signals received emg sensors placed biceps matlab code process received emg signals convert form useful muscle actuation linked video gives better insight question exoskeleton arm pneumatic muscle,raspberry-pi matlab,pi raspberry matlab
226,dc converter,built r/c car runs dc deep cycle batteries motors motors draw full power motor controller handle reclaiming braking energy way saying power system issue want run device service want hassle battery maintain like power main batteries becs converters found supply amp device looking powering take 4-5a dc anyone know device,bec,bec
227,autonomous car steering using ir sensors,want steer rc car straight line.the car sharp ir sensors corner car help steer corridor.the corridor irregular looks something similar picture car needs stay middle shown lighter line take help ir sensors correct path car servo front wheel steer controls speed tried running using algorithm summed values side car took difference.the difference fed pid control output went steer car.the greater value pid sides greater value steering angle till reaches middle works part walls similar distance center oscillates lot center fails bumps corridor need make changes algorithm need help steering right direction ir sensors finicky way filter make readings stable help regarding changes implemented appreciated car uses ir sensors guide.i use ultrasonic sensors,mobile-robot sensors,mobile sensors robot
228,building autonomous pesticide spraying system using swarm robotics based volatile organic compounds detection,visible worms pests diseased parts plants emit unique odor volatile organic compounds different concentrations understand sensors detect compounds development developed idea build swarm robots spray pesticides detecting vocs targets present plants fields target visible worms pests larvae eliminated target invisible pathogens certain areas plant target areas pesticides sprayed prevent disease targets administered correct concentration idea optimize use pesticides treat plant properly questions swarm robotics sci-fi implement specific scenarios implemented swarm robotic systems coming help establish ease implemented system idea conception help formation solution problem much time required realize idea hope question sound sci-fi practical intention solve definite problem work following steps make idea concrete,sensors research,sensors research
229,mature real-time programming robotics,edit know question seems confusing many people aware when/where/why/how use real-time interested knowing people real-time task care enough implement real-time need mention real-time operations important robot question much used robotics take question example answer mentions platform real-time capabilities top ros popular platform real-time real-time world rtai1 seems workable free real-time platform use limited linux problem documented developed much real-time behavior sought robotics developers question much developers inclined write real-time applications real-time behavior needed much example reflexive behavior based tactile data go ros lose real-time property people come real-time solution use ros ignoring real-time property xenomai,software platform real-time,real platform time software
230,actuator control steam valve,steam radiator home valve similar picture please note valve grooves top attach things want something turn depending temperature certain points room taken care find way attach actuator actuator right word context guess turn valve directions rented apartment like avoid making modifications radiator,actuator valve,actuator valve
231,create pure yaw motion quadcoptor work tricoptor,answer question quadcopters propellers name said need degrees control yaw pitch roll props minimum number actuators required tricoptors require servo tilt rotors complicated comment asked get pure yaw motion quadcoptor possible work tricoptor understand get yaw motion system rotors plane first tilting moving thought main difference quadcopters tricoptors kinematic calculations complex answer explained get pure yaw following way north south motors rotating speed higher lower speed east west motors speed explains works quadcopter explain work fact asymmetry means imbalance torque effects provide movement keeping thrusts balanced keep pitch roll constant,design quadcopter uav,quadcopter design uav
232,questions irobot create,interested getting create project working wanted information somebody much weight carry talked irobot tech support told maximum searching internet seems limit strict appears asking need put laptop top mean ~3.5-4kg consider kinect eventual supports guess use netbook send data need computer wanted avoid additional overhead wireless link long run using aa batteries inclined getting battery pack using robot europe need transformer went battery pack option thanks,mobile-robot irobot-create,mobile create robot irobot
233,using sick laser matlab windows,matlab toolbox available use sick lasers windows found toolbox matlab gnu/linux way use sick laser matlab windows,mobile-robot localization,mobile robot localization
234,algorithm following analog controller digital controller,continous control following form u \left k_ p \frac k_ k_ \frac \frac e need convert digital control need something y_ k y_ k-1 q_ e_ k-1 q_ e_ k-2 everything use digital way achieve transformation problem term equation thought pid controller n term understanding thank much happy christmas,control pid,control pid
235,arduino raspberry pi,want make object tracking quadcopter project using arduino mega flight controller thinking using additional offboard microcontroller/board getting data camera send appropriate command onboard arduino hoping someone provide clarification advantages/disadvantages object tracking choice thanks,quadcopter arduino raspberry-pi,quadcopter pi raspberry arduino
236,need control dc servo using 4-20ma linear analog signal,looking find way small servo using 4-20ma linear analog signal generated plc industrial setting purpose allow automation task done turning adjusting potentiometer removable dial trying ghetto oldschool motor operated potentiometer mop removed affecting operation original process spent hours looking servo controllers/encoders capable able find way get pointed right direction fantastic thing exist thanks,rcservo,rcservo
237,provide power robot/raspberry pi,building robot powering raspberry pi looking battery pack flexible use problem need able charge robot good single battery pack charging used seemed say video wrong go charging keeping raspberry pi running edit robot lego nxt kit prior experience robot batteries,mobile-robot battery,mobile battery robot
238,much pause messages irobot create-2,send several commands row get executed example script starts roomba driving circle plays john cena theme song speakers play music drive noticed guides pauses command documentation describes pauses needed,irobot-create,create irobot
239,pid line follow sensors c,working line-following robot uses sensors follow black line sensors much line right simple line follow line go turn left right regain line means robot wiggling line time looking better way robot follow line using sensors program writing c code trying get robot utilize power pid control sure go writing three-sensor pid line-follower program nxc,nxt programming-languages mindstorms algorithm not-exactly-c,languages mindstorms c programming algorithm
240,piezo sensors multiplexers,got asked make sort trigger pads foot section working midi electric piano friend wants pressure sensitive program note velocity using organ sound https //www.youtube.com/watch v=duariihwjqg try achive want pads able control velocity midi note im planning use adruino uno mux shield ii mayhew labs get analog inputs sure wiring looked guides videos google get feel made piezo- sensors planned hard push pedals send midi signal specific note correspondig pedal velocity electric piano control low notes feet http //www.thomann.de/se/clavia_nord_pedal_key_27.htm pedals lot cheaper arduino able read analog output piezo sensor going multiplexer,control electronics,control electronics
241,millisecond rate robot-create respond different drive commands,want issue different drive commands smallest loop rate robot-create accepts new commands know reading documentation appears sensors read sure command rate,irobot-create,create irobot
242,split tasks interrupts main loop bare metal controller,working robotics project services running sensor daq logic isr motor controller ethercat slave controller daq ethercat run idle logic runs interrupt logic calculations controls motor ethercat service kinda canbus runs daq idle loop run daq interrupt leaves less ethercat service run sure right way considering scary things read regarding data corruption using interrupts anyone nice ideas handle services running code zynq arm cortex written c++ example code /** get sensor data */ void supervisor :communication void // get sensors data dispatchcomm.getdata motorangle motorvelocity jointangle springangle tuningparameter /** run logic */ void supervisor :logic void dispatchlogic.calculate tuningparameter motorangle motorvelocity jointangle springangle dispatchlogic.getdata angle magnitude // dispatch values motor drive dispatchcomm.setmotordrivesetpoint angle magnitude dispatchcomm.writetopiggyback uint32_t tuningparameter motorangle motorvelocity,c++ interrupts,c interrupts
243,active sensor data fed autodesk inventor simulation,drive position various components virtual assembly based sensor data collected real time external device inventor support setup goal match relative movements components screen real-world counterpart example absolute rotary encoder records current angle physical joint virtual joint rotated match feasible past searches information turned empty using wrong search terms results point irrelevant mechanical stress simulations,sensors kinematics,sensors kinematics
244,modified dh parameters,notation geometry robots khalil kleinfinger considered many modified dh parameters,dh-parameters,parameters dh
245,cheap toy robotic arms move,cheap toy robotic arms move move load words real industrial robotic arms cheap toys,robotic-arm,arm robotic
246,arduino motor control,working low budget project need way control motors using arduino looked motor shields little shield top female input top motor shield work suggestions,control arduino microcontroller motor power,control microcontroller power motor arduino
247,use nicolas ziegel approach system becomes unstable,use nicolas ziegel approach root locus plot system becomes stable gain negative .. estimate ultimate gain value,control pid,control pid
248,information gain based exploration differ frontier based,come concept using information gain mutual information criteria metric minimizing entropy map aid robotic exploration basic question lot papers talk minimizing entropy consider example case something laser scanner try compute best pose maximum entropy reduction achieved mentioned information gain based approaches help finding best spot move robot entropy minimized using raycasting techniques opposed based exploration greedy etc understand underlying reason information gain/entropy based exploration better let say robot room walls open space front range limitations see walls frontier based exploration robot choices move towards third wall realize obstacle move towards open space keep going information gain based method pick open space frontier wall frontier idea frontiers raycasting help,mapping exploration information-gain,information exploration mapping gain
249,tell stepper motor position detect slippage,creating cnc machine budget using old motors printers/scanners/etc limited whole system fear cutting bit touches material stepper moving enough torque mean become rotation behind mess cnc project detecting motor misses step allow readjust motor speed reaches balance working adequate torque achieve,arduino stepper-motor current cnc,current stepper cnc motor arduino
250,electronic compass work underwater,building submersible rov need way navigate using compass help brings question electronic compass work underwater thoughts water act faraday cage interfere magnetic field therefore work gyroscope better solution,sensors compass,sensors compass
251,propeller drone works hope,propeller drone work good flight stable camera footage drone flight,quadcopter,quadcopter
252,tried normal distributions transform files correct pcd format throws errors,http //pointclouds.org/documentation/tutorials/normal_distributions_transform.php normal-distributions-transform used program sample pcd given came confirmed experienced users trying use pcd want bother changing program changed names room_scan1 room_scan2 attempt use get error loaded data points room_scan1.pcd loaded data points room_scan2.pcd filtered cloud contains data points room_scan2.pcd normal_distributions_transform /build/buildd/pcl-1.7-1.7.1/kdtree/include/pcl/kdtree/impl/kdtree_flann.hpp:172 int pcl :kdtreeflann :radiussearch const pointt double std :vector std :vector unsigned int const pointt pcl :pointxyz dist flann :l2_simple assertion `point_representation_- isvalid point invalid nan inf point coordinates given radiussearch failed aborted core dumped program compiled http //robotica.unileon.es/mediawiki/index.php/pcl/openni_tutorial_1 _installing_and_testing testing_.28openni_viewer.29 suggest let know changed pointxyzrgba designations pointxyz threw error thing confuses looked produced pcd files seem samples given mine sample ndt page anyone ideas,kinect computer-vision openni,kinect computer openni vision
253,using kinect medical application computer possible,use kinect application final work mobile means computer thought using microcontroller handle data kinect possible job mesuring points body axis x z get coordinates know accurate,microcontroller kinect,kinect microcontroller
254,nameerror name defined,reference following article http //www.egr.msu.edu/classes/ece480/capstone/spring15/group02/assets/docs/nsappnote.pdf followed article code appears solve problem,irobot-create,create irobot
255,tring run v dc geared motor using samsung li ion icr16850 batteries,trying run motor using batteries stated title motor requires v supplying motor motor driver motor keeps slowing battery voltage drops 5-6 v remove battery motor driver shows battery capable enough run motors need new,motor battery,battery motor
256,quadcopter props wood vs plastic vs carbon fiber,pro fpv builds expensive quads seem using plastic props reason,quadcopter,quadcopter
257,quadcopter loop,working quad copter awhile finished interface pid tuning leading question several design decisions quad uses raspberrypi pilot entire loop takes less imu data gathered throttle speeds calculated sent arduino micro spi interface analogwrite ... quadcopter fly slow,arduino quadcopter raspberry-pi,quadcopter pi raspberry arduino
258,dock command seem work,bought new create2 robot started using issue dock command robot moves go base base hidden obstructed create2 couple feet need help figure see base clarify using dock button create2 make create2 go base,irobot-create,create irobot
259,efficient way visit reachable space grid unknown obstacles,trying create map obstacles coarse grid space using exploration detect obstacles attempting move space adjacent space fails destination space concept rangefinding sensor problem example process complete reachable squares visited words spaces unreachable obstacles surrounded expected simplest case use dfs algorithm worried take long time complete — robot spend time backtracking exploring new territory expect problematic attempting reach unreachable squares robot exhaust option sophisticated method proper thing seems boustrophedon cell decomposition seem good description boustrophedon cell decomposition algorithm complete description simple terms resources general vertical cell decomposition offer much insight high-level algorithms low-level data structures involved visit map grid exists like algorithm performs better respect total number grid squares i.e better n^4 n*n grid,algorithm coverage planning,planning coverage algorithm
260,whats logic implement particle filter robot range sensor,trying implement particle filter robot java robot range sensor world obstacles top bottom calculating distance robot obstacle center performing activity particle calculate difference robot particles particles difference robot measured distance small give higher probability resampling problem approach told friend assuming know locations obstacles make process useless approach sense know obstacles particle implemented particle filter work case know obstacles location example process great help thanks,localization particle-filter,filter particle localization
261,imu sensor compensation,hi using minimu dof imu gyro accelerometer compass sensor gives pitch roll yaw values slope desktop touch vibration steady axis angle degree x axis time second x axis length seconds fix pitch roll yaw note1 minimu code,sensors imu sensor-fusion,sensor sensors imu fusion
262,remote control laser meter,looking buy laser distance meter connect motor cellular control motor mesure distance appriciate advice thanks,laser,laser
263,inverse kinematics parallel manipulator delta robot,let start saying going university majoring computer engineering love software/hardware love robotics want apply knowledge software/hardware robots taken formal class robotics know start approach mathematics robots entail interested calculating inverse kinematics delta robot clarify bit trying determine required joint angles position end-effector delta robot specific location given x z coordinate delta robot basing design shown image based research past days found sort mathematics involved denavit-hartenberg parameters jacobian matrices etc going honest encountered denavit-hartenberg parameters jacobian matrices know solve kinematics equations let find kinematics equations articles read deal serial manipulator robots mathematics finding kinematics equations serial manipulators find good material material easy understand given current situation parallel manipulators wanted ask question hopes someone community direct start learning obtaining inverse kinematics equations parallel manipulators solving equations help appreciated thank,kinematics inverse-kinematics,inverse kinematics
264,numerical-example paden-kahan subproblems,writing kinematics library go part final year project working product exponentials method implemented forward kinematics part need help inverse kinematics understand theoretical aspect like numerical example actual numbers used paden-kahan subproblems ones mathematical introduction robotic manipulation murray li sastry freely-available online pdf need help knowing p q trying solve inverse kinematics book says given point p q axis rotation joint know points practice robot moving keep track points reasons need numerical example understand,inverse-kinematics product-of-exponentials,exponentials product inverse kinematics
265,calculate quadcopter lift capabilities,looking equation set equations allow predict fair accuracy heavy payload quadcopter capable lifting assume main variables weight size power rotors general approach use make determination,quadcopter,quadcopter
266,emax esc simon series arduino,want control brushless motor emax simon series esc arduino leonardo board confused understand beep sounds mean tested many code examples useful,arduino brushless-motor esc,brushless esc motor arduino
267,arduino lightsensor blocking code,gy-31 light sensor trying make skittle sorting machine little wheel skittles drop turn degrees read light sensor dropped bottom problem code seems get stuck reading light sensor flows execute moving servo take readsensor line servo works normal dispose color sensor include servo.h include md_tcs230.h include freqcount.h define s2_out define s3_out md_tcs230 cs s2_out s3_out servo myservo // create servo object control servo // maximum servo objects created void setup myservo.attach // attaches servo servo object serial.begin serial.println simple blocking example serial.println move sensor different color see value serial.println note values read sensor calibration serial.println reality cs.begin cs.setfilter tcs230_rgb_x cs.setfrequency tcs230_freq_hi cs.setsampling void readsensor uint32_t v v cs.readsingle serial.print simple value serial.println cs.readsingle void loop serial.println start myservo.write delay myservo.write delay readsensor delay,arduino sensors rcservo,sensors rcservo arduino
268,stop working,new robotics first time building quadcopter unable work keep losing escs testing managed calibrate escs control speed motors securing frame motor work recalibrated escs running motor work motors continued run stopped research suggested escs cut-off voltage indicating battery flat looked recharging surprise new battery appeared bulged indicating damaged research suggested size battery using insufficient amount current drawn motors pwm applied reconnected new charged battery hope listening beeps esc coughed huge puff smoke happened managed get escs run motors several attempts tweaking pwm signals calibrating ended replacing obvious reason escs keep dying assume specific escs made ask money components using raspberry pi model b 16-channel 12-bit pwm/servo driver i2c interface pca9685 rctimer mini esc opto blheli firmware oneshot125 support 2-6s rctimer 2208-8 outrunner brushless motor gens ace lipo battery pack raspberry pi powered micro usb interface step-up voltage regulator connected lipo battery pwm controller powered vcc pin gpio1 pin raspberry pi happens power sensors time motors worked able control 1-2 millisecond duty cycles,quadcopter power esc pwm,quadcopter pwm esc power
269,storing map,trying build map using cameras found coordinates objects best way store data.i like display map range 5-6 meters 500-600 cms accuracy managed cm used opencv python laptop.i like shift raspberry pi pi perform main issue store map,cameras mapping 3d-reconstruction opencv,opencv cameras mapping reconstruction
270,improve map autonomous robot using kinect,little background aim process building autonomous robot navigate unknown area avoid obstacles receive speech input various tasks recognize faces objects etc using kinect sensor wheel odometry data sensors chose c primary language official drivers sdk available completed vision nlp module working navigation part robot uses arduino module communication intel i7 x64 bit processor laptop cpu overview robot electronics problem implemented simple slam algorithm gets robot position encoders adds sees using kinect slice point cloud map maps room look rough representation actual room see different bad maps expected using dead reckoning aware particle filters refine ready implement ways improve result update forgot mention current approach earlier forgot program using hashtable store dynamic map grab point cloud kinect wait incoming serial odometry data synchronize using time-stamp based method estimate robot pose x theta using equations wikipedia encoder data obtain slice point cloud slice array x z parameters plot points based robot pose x z params repeat,arduino slam kinect odometry,kinect odometry slam arduino
271,off-the-shelf micro fluid dispenser,way dispense micro liter amounts water lets say 1-10ul thing found piezoelectric dispensers suggestions build off-the-shelf component,electronics,electronics
272,choosing motors wheel drive robot,making wheel drive robot suppose know robot going weight x kg finished know diameter wheels geared motors connected wheels choose several geared motors know peak torque motor idling speed calculate load specific motor take i.e motor given torque able move robot overloaded rpm motor load,motor,motor
273,motor shaft swapped threaded shaft,looking n20 dc motor popular anyone know shaft swapped threaded shaft,motor,motor
274,detect stepper motor stalled,detect stepper motor stalled google search led people say stepper motor stalls current spikes detectable hall sensor suppose current sensors mentioned sense motor current measured current wires stepper motor percent stepper driver holding position moving application stepper driver thinks telling stepper move motor pegged hard limit measuring current +12v power supply going stepper motor driver seemed give constant current turned current limit amount chopper stepper motor driver missing key detail measure current approach google search led people measure back-emf bemf coil stepper time stepper driver driving coil seems distinguish motor moving vs motor stopped seem distinguish case motor moving vs motor stopped way apply bemf approach system drive stepper spin using stepper driver board ti drv8825 chip hoped fault pin tell stepper motor stalled hard stop seem anything -- supposed tell wired wrong chip drive technique detects stepper stalled hard stop technique detecting hard stall add system using off-the-shelf stepper motor driver stackexchange site appropriate questions motors motor drivers,stepper-motor stepper-driver force-sensor,driver force sensor stepper motor
275,establishing data transfer raspberry pi using gpio,good day implementing autonomous quadcopter stereo vision using raspberry pi let call pi_1 responsible stereo vision responsible motor control trajectory planning pi_2 looking way transfer element float vector gpio pi_1 pi_2 pi_1 stereovision program runs pi_2 motor control runs protocol deliver amount information second raspberry pi gpio looking spi saw raspberry pi turned slave making option looked uart slow needs i2c ports pi used stereo vision cameras imu gpio option feasible open suggestions using hardware middle man wireless options,quadcopter raspberry-pi communication,quadcopter pi raspberry communication
276,recursive tree representation multi agent robots,going code base multi agent motion planning came recursive tree building algorithm agents able figure algorithm anyone know called similar kinds algorithms read got code node tree follows struct agenttreenode int begin int end float minx maxx miny maxy int left int right node max min value x y. begin end left right value tree split based limits longer x optimal value found agents split split agents build thank,multi-agent,multi agent
277,good book mechanisms,working students grade robotics wanted get good book covers basic mechanisms anyone recommendations searching google amazon yields many results thought community standard book use,design mechanism,design mechanism
278,smallest rotation brush-less motor perform,example brush-less outrunner poles stator windings connectors motor controlled way performs single step degrees,motor brushless-motor,brushless motor
279,unable read pushbutton press arduino,trying use push button order know print number time push button pressed using counter.but everytime press button counter get incremented time counter start continue preferred link wiring push button arduino code const int buttonpin // number pushbutton pin const int ledpin // number led pin // variables change int buttonstate // variable reading pushbutton status int count void setup // initialize led pin output pinmode ledpin output // initialize pushbutton pin input pinmode buttonpin input pinmode buttonpin input serial.begin buttonstate digitalread buttonpin digitalwrite ledpin low void loop // read state pushbutton value buttonstate digitalread buttonpin // check pushbutton pressed // buttonstate high buttonstate == high // turn led digitalwrite ledpin high count count serial.print count // turn led digitalwrite ledpin low dont know count coming,arduino c serial,c serial arduino
280,need help regarding development extended kalman filter sensor-data fusion odometry imu data,trying develop extended kalman filter ekf positioning wheeled vehicle robot frame static wheels driven motor rear wheels encoder want fuse odometry data data dof imu mathlab code call ekf uses data encoders accelerometer x gyroscope z-axis medium-size ekf inputs x priori state estimate vector sampling time p estimated state covariance vector z current measurement vector encoder left encoder right x-acceleration y-acceleration z-axis gyroscope output x posteriori state estimate vector p posteriori state covariance vector state vector x vector \begin bmatrix x \rightarrow x-position global frame \\ \dot x \rightarrow speed x-direction global frame \\ \ddot x \rightarrow acceleration x-direction global frame \\ \rightarrow y-position global frame \\ \dot \rightarrow speed y-direction global frame \\ \ddot \rightarrow acceleration y-direction global frame \\ \theta \rightarrow vehicle angle global frame \\ \dot \theta \rightarrow angular speed vehicle \end bmatrix measurement vector z vector \begin bmatrix \eta_ left \rightarrow wheelspeed pulses left wheel \\ \eta_ right \rightarrow wheelspeed pulses right wheel \\ \dot \theta_z \rightarrow gyroscopemeasurementinz-axisvehicleframe \\ a_x \rightarrow accelerometermeasurementx-axisvehicleframe \\ a_y \rightarrow accelerometermeasurementy-axisvehicleframe \end bmatrix function x p moodieekfmedium x p z sigma_ax sigma_ay sigma_atau sigma_odo sigma_acc sigma_gyro check input matrixes correct size rows columns size x rows ~= columns ~= error vector size incorrect end rows columns size z rows ~= columns ~= error data vector size incorrect end constants n0 r b q zeros q sigma_ax q sigma_ay q sigma_atau q q q deal small dfdx eye dfdx dfdx dfdx dfdx dfdx deal dfdx dfdx deal t^2 /2 dfda zeros dfda dfda dfda deal dhdn eye r zeros r r deal sigma_odo r sigma_gyro r r deal sigma_acc r r deal small predict next state xk f xk-1 xtemp zeros xtemp x t*x t^2 /2 *x xtemp x t*x u1 sigma_ax xtemp x u1 xtemp x t*x t^2 /2 *x xtemp x t*x u2 sigma_ay xtemp x u2 xtemp x t*x u3 sigma_atau xtemp x u3 x xtemp predict next state covariance pk dfdx pk-1 transpose dfdx dfda q transpose dfda p dfdx p transpose dfdx dfda q transpose dfda calculate kalman gain kk p transpose dhdx dhdx p dhdn r transpose dhdn ^-1 dhdx zeros x == x == dhdx dhdx deal dhdx dhdx deal dhdx dhdx deal t*n0 x /sqrt x ^2+x ^2 dhdx dhdx deal t*n0 x /sqrt x ^2+x ^2 end dhdx dhdx deal t*n0 x /sqrt x ^2+x ^2 dhdx dhdx deal t*n0 x /sqrt x ^2+x ^2 dhdx t*n0*b dhdx t*n0*b dhdx sin x dhdx -cos x dhdx x *cos x x *sin x dhdx cos x dhdx sin x dhdx -x *sin x x *cos x kk p transpose dhdx dhdx p transpose dhdx dhdn r transpose dhdn -1 update state h zeros n1 sigma_odo h t*n0 *sqrt x ^2+x ^2 t*n0*b *x n1 n2 normrnd sigma_odo h t*n0 *sqrt x ^2+x ^2 t*n0*b *x n2 n3 normrnd sigma_gyro h x n3 n4 normrnd sigma_acc h x *sin x x *cos x +n4 n5 sigma_acc h x *cos x x *sin x +n5 x x kk* z-h update state covariance p eye -kk*dhdx *p end filter schematic state transition equations use x_ t+1 x_ \cdot \dot x_ \frac t^ \cdot \ddot x_ \dot x_ t+1 \dot x_ \cdot \ddot x_ \ddot x_ t+1 \ddot x_ u_ y_ t+1 y_ \cdot \dot y_ \frac t^ \cdot \ddot \dot y_ t+1 \dot y_ \cdot \ddot y_ \ddot y_ t+1 \ddot y_ u_ \dot \theta_ t+1 \dot \theta_ \cdot \ddot \theta_ \ddot \theta_ t+1 \ddot \theta_ u_ observation equations use \eta_ left \frac \cdot n_ \cdot \pi \cdot r \cdot \sqrt \dot x^ \dot \frac \cdot n_ \cdot b \cdot \pi \cdot r \cdot \dot \theta \eta_ right \frac \cdot n_ \cdot \pi \cdot r \cdot \sqrt \dot x^ \dot \frac \cdot n_ \cdot b \cdot \pi \cdot r \cdot \dot \theta \dot \theta_ z \dot \theta a_ x \ddot x \sin \theta \ddot \cos \theta a_ \ddot x \cos \theta \ddot \sin \theta small-size ekf wanted test filter started smaller give odometry measurements input know receive amount pulses left right encoder vehicle driving straight line inputs x priori state estimate vector sampling time p estimated state covariance vector z current measurement vector encoder left encoder right output x posteriori state estimate vector p posteriori state covariance vector state vector x vector \begin bmatrix x \rightarrow x-position global frame \\ \dot x \rightarrow speed x-direction global frame \\ \rightarrow y-position global frame \\ \dot \rightarrow speed y-direction global frame \\ \theta \rightarrow vehicle angle global frame \\ \dot \theta \rightarrow angular speed vehicle \end bmatrix measurement vector z vector \begin bmatrix \eta_ left \rightarrow wheelspeed pulses left wheel \\ \eta_ right \rightarrow wheelspeed pulses right wheel \end bmatrix check input matrixes correct size rows columns size x rows ~= columns ~= error vector size incorrect end rows columns size z rows ~= columns ~= error data vector size incorrect end constants n0 r b q zeros q sigma_ax q sigma_ay q sigma_atau q q q deal small dfdx eye dfdx dfdx dfdx deal dfda zeros dfda dfda dfda deal dhdn eye r zeros r r deal sigma_odo r r deal small predict next state xk f xk-1 xtemp zeros xtemp x t*x u1 sigma_ax xtemp x u1 xtemp x t*x u2 sigma_ay xtemp x u2 xtemp x t*x u3 sigma_atau xtemp x u3 x xtemp predict next state covariance pk dfdx pk-1 transpose dfdx dfda q transpose dfda p dfdx p transpose dfdx dfda q transpose dfda calculate kalman gain kk p transpose dhdx dhdx p transpose dhdx dhdn r transpose dhdn ^-1 dhdx zeros x -6 x -6 dhdx dhdx deal t*n0 dhdx dhdx deal t*n0 dhdx dhdx deal t*n0 x /sqrt x ^2+x ^2 dhdx dhdx deal t*n0 x /sqrt x ^2+x ^2 end dhdx dhdx deal t*n0 x /sqrt x ^2+x ^2 dhdx dhdx deal t*n0 x /sqrt x ^2+x ^2 dhdx t*n0*b dhdx t*n0*b kk p transpose dhdx dhdx p transpose dhdx dhdn r transpose dhdn -1 update state h zeros n1 sigma_odo h t*n0 *sqrt x ^2+x ^2 t*n0*b *x n1 n2 normrnd sigma_odo h t*n0 *sqrt x ^2+x ^2 t*n0*b *x n2 x x kk* z-h update state covariance p eye -kk*dhdx *p end odometry observation equations wonder come observation equations odometry data v_ vl v c \dot \theta \cdot b \rightarrow v_ vl \sqrt \dot x^ \dot \dot \theta \cdot b problem try small-size ekf using matlab user interface seem drive straight line heading expect start state vector x= \begin bmatrix bmatrix meaning starting position global coordinate frame speed acceleration angle top right corner see measurement data give input wheelspeed counts wheel sampling period simulating straight driving vehicle top left corner see plot x coordinate state vector end predict+update cycle filter labeled timecycle bottom left corner plot angle state vector see cycles angle expect anyone please provide insights wrong solutions thinking use motion model explained question difference odometry data inserted predict step filter see problems see make small-size version testing purposes know measurements add update-step medium-size version know make observation equations state vector imply velocity acceleration use motion model update step euler-angle linked \theta euler-angle obtain digital motion processor dmp implemented imu problem angular velocity state matrix problem acceleration observation equations,kalman-filter imu sensor-fusion odometry,odometry kalman filter fusion imu sensor
281,controlling motor batteries arduino board,want build robotic vacuum vacuum motor want switch set time night batteries using deep cycle gel batteries connected series want arduino switch motor real question guess supplied arduino able switch motor big second question mosfet answer apologies pretty new it.. control motor batteries arduino board mosfet type mosfet use,arduino,arduino
282,battery damaged,please see attached battery images tell safe continue using battery discard,battery lithium-polymer,battery polymer lithium
283,program inovatic usb interface,possession inovatic usb interface detail ui-8x8 v1.1 like program simple stuff things familiar c programming heard possible program interface c looks find drivers interface checked inovatic website v1.0 version drivers pretty sure need v1.1 program language use,microcontroller,microcontroller
284,quad copter attitude control,built quad copter scratch electronics mechanics software point sensor data looks correct tilt quad copter correct motors increase decrease trying tune pids couple days rate mode stays level rotates correct degrees second give command stability mode lot time spins axis get stable kept rotating upright maintaining flat position come conclusion something wrong signs mixed anyone knowledgeable quad copter control code able take look done works struggling work needs change try next flight control code posted relevant classes hardware.h main.cpp include mbed.h include rtos.h include hardware.h //declarations float constrain const float const float min const float max float map float x float in_min float in_max float out_min float out_max void getattitude void task500hz void const *n void task10hz //variables float _gyrorate // yaw pitch roll float _ypr // yaw pitch roll float _yawtarget int _notflying float int _10hziterator float _ratepidcontrolleroutputs //yaw pitch roll float _stabpidcontrolleroutputs //yaw pitch roll float _motorpower //timers rtostimer *_updatetimer // thread monitor serial ports void flightcontrollerthread void const *args //update timer _updatetimer new rtostimer task500hz ostimerperiodic void int updatetime update_frequency _updatetimer- start updatetime // wait thread :wait //constrains value min max float constrain const float const float min const float max float max max min min return //maps input output float map float x float in_min float in_max float out_min float return x in_min out_max out_min in_max in_min //zeros values void getattitude //take zero values account inbetween pcb level ground _ypr _ypr _zerovalues _ypr _ypr _zerovalues //swap pitch roll imu mounted right angle board //gyro data need swapping done freeimu class float pitch _ypr float roll _ypr _ypr pitch _ypr roll void task500hz void const *n _10hziterator++ _10hziterator == task10hz //get imu data _freeimu.getyawpitchroll _ypr _freeimu.getrate _gyrorate getattitude //rate mode _rate == true _stab == false //update rate pid process value gyro rate _yawratepidcontroller- setprocessvalue _gyrorate _pitchratepidcontroller- setprocessvalue _gyrorate _rollratepidcontroller- setprocessvalue _gyrorate //update rate pid set point desired rate rc _yawratepidcontroller- setsetpoint _rcmappedcommands _pitchratepidcontroller- setsetpoint _rcmappedcommands _rollratepidcontroller- setsetpoint _rcmappedcommands //compute rate pid outputs _ratepidcontrolleroutputs _yawratepidcontroller- compute _ratepidcontrolleroutputs _pitchratepidcontroller- compute _ratepidcontrolleroutputs _rollratepidcontroller- compute //stability mode //update stab pid process value ypr _yawstabpidcontroller- setprocessvalue _ypr _pitchstabpidcontroller- setprocessvalue _ypr _rollstabpidcontroller- setprocessvalue _ypr //update stab pid set point desired rc _yawstabpidcontroller- setsetpoint _yawtarget _pitchstabpidcontroller- setsetpoint _rcmappedcommands _rollstabpidcontroller- setsetpoint _rcmappedcommands //compute stab pid outputs _stabpidcontrolleroutputs _yawstabpidcontroller- compute _stabpidcontrolleroutputs _pitchstabpidcontroller- compute _stabpidcontrolleroutputs _rollstabpidcontroller- compute //if pilot commanding abs _rcmappedcommands _stabpidcontrolleroutputs _rcmappedcommands //feed rate pid overwriting stab pid output _yawtarget _ypr //update rate pid process value gyro rate _yawratepidcontroller- setprocessvalue _gyrorate _pitchratepidcontroller- setprocessvalue _gyrorate _rollratepidcontroller- setprocessvalue _gyrorate //update rate pid set point desired rate stab _yawratepidcontroller- setsetpoint _stabpidcontrolleroutputs _pitchratepidcontroller- setsetpoint _stabpidcontrolleroutputs _rollratepidcontroller- setsetpoint _stabpidcontrolleroutputs //compute rate pid outputs _ratepidcontrolleroutputs _yawratepidcontroller- compute _ratepidcontrolleroutputs _pitchratepidcontroller- compute _ratepidcontrolleroutputs _rollratepidcontroller- compute //testing _ratepidcontrolleroutputs // yaw //_ratepidcontrolleroutputs // pitch _ratepidcontrolleroutputs // roll //calculate motor power flying _rcmappedcommands _armed == true //constrain motor power means max throttle overhead stabilising _motorpower constrain _rcmappedcommands _ratepidcontrolleroutputs _ratepidcontrolleroutputs _ratepidcontrolleroutputs _motorpower constrain _rcmappedcommands _ratepidcontrolleroutputs _ratepidcontrolleroutputs _ratepidcontrolleroutputs _motorpower constrain _rcmappedcommands _ratepidcontrolleroutputs _ratepidcontrolleroutputs _ratepidcontrolleroutputs _motorpower constrain _rcmappedcommands _ratepidcontrolleroutputs _ratepidcontrolleroutputs _ratepidcontrolleroutputs //map 0-1 value actual pwm pulsewidth _motorpower map _motorpower motors_min //reduced limit power testing _motorpower map _motorpower motors_min _motorpower map _motorpower motors_min _motorpower map _motorpower motors_min //not flying _armed == true _yawtarget _ypr //set motors armed state _motorpower motors_armed _motorpower motors_armed _motorpower motors_armed _motorpower motors_armed _notflying ++ _notflying //not flying second //reset iteratior _notflying //reset _yawratepidcontroller- reset _pitchratepidcontroller- reset _rollratepidcontroller- reset _yawstabpidcontroller- reset _pitchstabpidcontroller- reset _rollstabpidcontroller- reset //disable motors _motorpower motors_off _motorpower motors_off _motorpower motors_off _motorpower motors_off //set motor power _motor1.pulsewidth_us _motorpower _motor2.pulsewidth_us _motorpower _motor3.pulsewidth_us _motorpower _motor4.pulsewidth_us _motorpower //print data void task10hz int batt _wirelessserial.printf _motorpower _motorpower _motorpower _motorpower _ypr _ypr _ypr batt _ratepidcontrolleroutputs _ratepidcontrolleroutputs _ratepidcontrolleroutputs _stabpidcontrolleroutputs _stabpidcontrolleroutputs _stabpidcontrolleroutputs _armed _initialised _rate _stab _gyrorate _gyrorate _gyrorate _rcmappedcommands _rcmappedcommands _rcmappedcommands _rcmappedcommands _yawratepidcontrollerp _yawratepidcontrolleri _yawratepidcontrollerd _pitchratepidcontrollerp _pitchratepidcontrolleri _pitchratepidcontrollerd _rollratepidcontrollerp _rollratepidcontrolleri _rollratepidcontrollerd _yawstabpidcontrollerp _yawstabpidcontrolleri _yawstabpidcontrollerd _pitchstabpidcontrollerp _pitchstabpidcontrolleri _pitchstabpidcontrollerd _rollstabpidcontrollerp _rollstabpidcontrolleri _rollstabpidcontrollerd whole program seen mbed page http //mbed.org/users/joe4465/code/quadmk6/ need info something explaining let know anyone point right direction idea try next appreciated thanks joe,quadcopter pid imu,quadcopter imu pid
285,controlling robots serial,working little project ran bit road block controlling servos using serial commands servos appear move put character serial little type say characters random gibberish servos connected move several degrees code include servo.h servo ulf // upper left front servo servo llf // lower left front servo byte index int commandnum=1 int steps // position llf servo int partnum // unused string command // command building void setup llf.attach ulf.attach serial.begin void loop serial.available // bytes read char serial.read in== // escape character commandnum++ partnum serial.println new command command +commandnum break command+=in == partnum++ //if space new section command command == llf serial.read //skip space serial.println lower left foot selected int angle serial.parseint // find angle want serial.println angle +string angle int pos pos angle pos++ // loop positions reach goal llf.write pos // write servo position delay int pos angle pos pos -- // loop positions reach goal llf.write pos // write servo position delay help appreciated edit note nothing printed serial monitor micro towerpro rc servos,arduino rcservo serial c++,serial rcservo c arduino
286,using fri aticombineddaqft visual studio,trying force control experiment kuka lwr iv mini45 ati force sensor data acquisition board pcie-6320 supported using linux seems use windows lab guys tried use fri aticombineddaqft windows hopeful libraries work anybody experiment kuka least encounter problem sensor fri noteworthy force sensor net box use udp bit hurry appreciate suggestions thanks,force-sensor kuka,kuka sensor force
287,go implementing kalman filter pose estimation algorithm,process writing pose estimation algorithm using image data receive images fps image program computes x z roll pitch yaw camera respect certain origin means accurate obvious problems much exposure image enough feature points image etc. positions go haywire want write kalman filter take care part read basics kf ekf etc reading tutorial implementation kalman filter algorithm pose estimation object matches use case well understand using linear kalman filter specifying parameters dt*dt state transition matrix reference state transition matrix considering /* dynamic model */ // dt dt2 // dt dt2 // dt dt2 // dt // dt // dt // // // // dt dt2 // dt dt2 // dt dt2 dt // dt // dt // // // little confused main question broken parts linear kalman filter suffice pose estimation filtering go ekf come model system camera obeying trajectory whole point pose estimation track position rotation noisy movements understand came matrix kalman filter understand instance pose estimation says camera moved half meter frame plain wrong 1/30th second way happen thank,kalman-filter pose,filter pose kalman
288,ctl port motor controller,look motor controller port called ctl ctl stand sort protocol rs232,motor,motor
289,raise/drop spider,halloween build spider drops ceiling detects motion rewinds scare next kids lightweight foamish spider hobby lobby use need help adding smarts scare kids able detect tall/far kid drop custom height time settle standard dropping height idea motion sensor shoot string webs front people technical total n00b comes robotics ideas components considerations need appreciated,motor rcservo,motor rcservo
290,way stress-ball-like device acceleration control interface,thinking project proposal robotics course required make potential application physical therapy medical fields thing came mind motorized wheelchair moves control squeezed user robotics novice wonder integrate sensor circuit rubber ball pressed stroke patient triggers driver circuit possible experience robotics limited arduino servo motors basic sensors,wheeled-robot,wheeled robot
291,building open loop controller simple dc motor position problem,order identify dynamics dc motor trying command xcos using arduino tool box problem facing give motor input command get given angle position output control input voltage motor pwm thinking converting angle voltage figure somebody help,arduino motor control,control motor arduino
292,changing stm32 nucleo board microcontroller,stm32f072rb board microcontroller application chose stm32f103rg bigger ram size flash size remove f072r board put top testing code f103c flash ram size meeting requirement f072r nucleo board lying quick developmental test swap r series pin compatible anyone done microcontroller swapping,microcontroller,microcontroller
293,models perfect represent robotic environments,sebastian thrun says paper particle filters model detailed fails represent complexity simplest robotic environment means someone please elaborate,localization theory,theory localization
294,make stepper motor rotate come position certain degress say degrees initial position,tried coding working void loop int int x2 vertical2.currentposition int y-x2 int x1 horizontal2.currentposition int y-x1 horizontal2.moveto z1 horizontal2.run vertical2.moveto z2 vertical2.run problem coding placed loop loop working anyone help figuring problem using accelstepper library coding void loop int dummy=1 dummy==1 int int x2 vertical2.currentposition int y-x2 int x1 horizontal2.currentposition int y-x1 horizontal2.moveto z1 horizontal2.run vertical2.moveto z2 vertical2.run,arduino stepper-motor,stepper motor arduino
295,mobile robot algorithm implementation error,working reproducing robotics paper simulating matlab order implement real robot afterwards robot model \dot x =v cos\theta \dot =v sin\theta \dot \theta =u idea algorithm avoid obstacles reach determines target algorithm uses cone vision measure obstacle properties information required apply system minimum distance robot obstacle obstacle modelled circle know radius r obstacle speed v_ obs angles \alpha_ form robot cone vision heading h robot target safe distance d_ safe robot obstacle defined robot reach target closer d_ safe obstacle extended angle \alpha_ \ge arccos\left \frac r r+d_ safe \right defined \le \alpha_ \le \pi following auxiliary angles calculated \beta_ =\alpha_ -\alpha_ \beta_ =\alpha_ +\alpha_ following vectors defined l_ v_ max -v cos \beta_ sin \beta_ l_ v_ max -v cos \beta_ sin \beta_ v_ max maximum robot speed v constant fulfills \|v_ obs \| \le v \le v_ max vectors represent boundaries cone vision vehicle given vectors l_ l_ angle \alpha l_1 l_2 angle l_ l_ measured counterclockwise direction \alpha \in -\pi \pi function f evasion maneuver starts time t_0 robot find index h h min|\alpha v_ t_0 +l_j t_0 v_r t_0 j= v_r robot velocity vector vectors v_ obs t_0 +l_j t_0 choose forms smallest angle robot velocity vector h determinded control law applied u =-u_ max f v_ +l_h v_r v =\|v_ obs +l_h \| \quad \quad sliding mode type control law steers robot velocity v_r switching surface equal vector v_ +l_h robot avoids obstacle surrounding robot avoiding obstacle follows control law u =0 v =v_ max \quad \quad hence rules switch laws r10 switching occurs whenthe distance obstacle equal constant c means t_0 =c distance becoming smaller time i.e r11 switching occurs vehicle pointing towards obstacle i.e \theta t_* =h t_* a_*=\frac r cos\alpha_0 -r result similar getting understand theory flaw implementation able solve opinion robot manages avoid obstacle certain point red circle robot turns wrong side making impossible condition h \theta achieved feel measuring angle alpha v_ +l_h v_ r debugging see certain point stops switching negative positive values become positive leading robot wrong side seems related problem angle circle tangent line,mobile-robot kinematics matlab geometry,mobile geometry kinematics robot matlab
296,verifying motor selection calculations,trying select brushed dc motor project tried following advice sizing electric motors mentioned question details missing unsure followed procedure application need nm number motors wd wheel diameter cm wp estimated weight platform kg minc maximum incline load degrees vmax maximum velocity load km/hr fpush maximum pushing force kg ur coefficient rolling friction calculations step determine total applied force worst case ftotal wp ur*cos minc sin minc fpush kilogram step calculate power requirement vradps maximum velocity load radians/second radian second pmotor required power motor ftotal vradps wd/2 /nm kilogram meter radian second step calculate torque speed requirement tmotor required torque motor pmotor/vradps centimeter gram inch ounce rpmmin required revolutions minute motor vradps rev minute calculations correct final tmotor rpmmin values seem right calculation pmotor match used link conversion radians second therefore result proper units python script reproducing calculations math import http //pint.readthedocs.org/en/0.6/tutorial.html pint import unitregistry ureg unitregistry def velocity_to_rpm v r kph kilometer/hour r r.to kilometer r*2 rpm kph *minute rev return rpm def velocity_to_radps v r return velocity_to_rpm v r .to radian/second units km kilometer ureg.kilometer meter ureg.meter newton ureg.newton cm centimeter ureg.centimeter hr hour ureg.hour mm millimeter ureg.millimeter rev revolution ureg.revolution minute ureg.minute sec second ureg.second kg kilogram ureg.kilogram gm gram ureg.gram deg degree ureg.degree rad radian ureg.radian oz ureg.oz inch ureg.inch conversions km_per_mm *mm hour_per_minute *minute minute_per_second minute_per_hour gm_per_kg cm_per_km constraints target_km_per_hour average walking speed estimated_platform_weight maximum_incline_degrees maximum_incline_radians maximum_incline_degrees pi*rad maximum_pushing_force estimated_platform_weight/4 maximum_velocity_at_worst_case rolling_friction rubber pavement target_km_per_hour number_of_powered_motors variables wheel_diameter_mm wheel_radius_mm wheel_diameter_mm/2 wheel_radius_km wheel_radius_mm km_per_mm rev_per_minute_at_6v_unloaded rev_per_minute_at_6v_loaded rev_per_minute_at_6v_unloaded/2 mm_per_rev wheel_diameter_mm pi target_rpm velocity_to_rpm target_km_per_hour wheel_radius_mm target_radps target_km_per_hour wheel_radius_mm calculate total applied force worst case total_applied_force_worst_case estimated_platform_weight rolling_friction*cos maximum_incline_radians sin maximum_incline_radians maximum_pushing_force print total_applied_force_worst_case calculate power requirement vel_in_radps velocity_to_radps velocity_under_max_load wheel_radius_mm print vel_in_radps required_power total_applied_force_worst_case velocity_to_radps velocity_under_max_load wheel_radius_mm wheel_radius_mm.to meter required_power_per_motor required_power/number_of_powered_motors print required_power_per_motor calculate torque speed requirement required_angular_velocity hour_per_minute minute_per_second rad rad/sec required_rpm required_angular_velocity rev/rad sec/minute required_torque_per_motor required_power_per_motor/required_angular_velocity .to gm*cm print required_torque_per_motor required_torque_per_motor.to oz*inch print required_rpm,mobile-robot motor design torque force,force mobile torque robot design motor
297,powering servomotors requiring,title much says team building robotic arm capstone project engineering degree design similar dobot degrees purchased servomotors requires preliminary research able find power source satisfy purchase individual ac/dc power source servo introduce problems voltage-regulated suggestion received buy computer power source modify output voltage amperage need raises concerns professor running course find dangerous input power servos going overboard costs students thanks,power servos servomotor arm,servomotor servos arm power
298,inverse kinematics calibration,working robot arm project big question derived inverse kinematics ik algorithm decoupling spherical wrist get equations based nominal dh values alpha degrees many zeros a_i d_i kinematics calibration identified dh parameters longer ideal ones certain small non-zero bias added nominal values question ik algorithm used actual dh parameters yes end-effector errors actual operation change ik algorithm p.s working modular robot arm means dh bias bigger traditional robot arms,inverse-kinematics calibration,inverse kinematics calibration
299,path following precise positioning system rtk,general problem using precise positioning centimeter-accurate gnss rtk system meant autonomous car guidance given predefined path car follow mean autonomous cars topic ces simple system seems introduced date ... course path planning part autonomous package problems need solved collision prevention etc wonder something simple rtk guidance used rtk system relies little amount live correction data kb/s mobile networks ubiquitous today see technical problem solution given enough rtk base stations question using precise positioning follow predefined obstacle-free environment asking systems need implemented autonomous car collision prevention etc systems employ lidar stereo camera collision prevention autonomous system consider theoretical case updated question precise satellite positioning accurate enough guide/navigate full-scale passenger car obstacle-free outdoor environment speed km/h given precise-enough path prerecorded follow answers say solved problem nice answers elaborated detail regarding existing solutions accuracy possible problems etc. solutions open source apm autopilot work rovers example emlid seem use rtk accuracy low,navigation gps precise-positioning,precise positioning navigation gps
300,ekf-slam shrink covariance matrix direction,implemented ekf mobile robot x theta coordinates problem detect landmark like correct estimate defined direction example robot travelling plane meets landmark orientation degrees want correct position estimate direction perpendicular landmark i.e degrees position estimate update x_posterior normal case store x_temp calculate error x_temp x_prior project error vector direction perpendicular landmark add projected quantity x_prior working covariance matrix want shrink covariance direction perpendicular landmark thank help,mobile-robot slam kalman-filter ekf,kalman mobile ekf robot filter slam
301,slam starting point quardrant issue,question puzzling simple rectangle enclosure extracted lidar odometer data test run put starting position gives bad map shift something map seems fine,slam,slam
302,introduction robotics mechanics control john j craig. ed. transformation problem examples,reading book introduction robotics mechanics control john j craig. ed. transformation problem examples ex page frame b rotated relative frame x axis degrees translated units axis units z axis find p frame p frame b book answer answer ex page vector p1 rotated degrees clockwise x axis translated units axis units z axis p1 given find p2 ex.2.2 problem transformation matrix ex translation vector column given answer sure typo missing genuine operation please let know opinion thanks,forward-kinematics books,books kinematics
303,questions quadcopter radio controller,bought parts making quadcopter done research know parts need many guides sponsored cost euros/dollars explaining things found flight control board need microcontroller arduino nano work anyone experience board let know board work radio controller controllers universal please tell right section count relevant topic,microcontroller quadcopter radio-control,quadcopter control microcontroller radio
304,genetic alogorithm suitable mobile robot path planning,regarding project work mobile robot planning chosen genetic good mobile robot path planning start get guidelines,mobile-robot navigation algorithm,mobile navigation robot algorithm
305,mobile camera calibration rectification frame rate,searching internet answer question come anything help meka humanoid robot lab shell head pointgrey usb camera embedded use pointgrey_camera_driver obtaining images camera head degrees up/down left/right intending use camera ar_pose package detect track ar tags objects understand camera calibrated effective use forgive know camera camera_calibration package question camera mobile meaning head move camera go calibrating head fixed position calibrated camera position got parameters yaml file load rectification particular head moves calibration file obtained previous position become invalid asked calibrate camera possible field view obtained moving camera different video modes mode using get frame rate i.e driver launched get rostopic hz /camera/image_raw rectify image using image_proc get frame rate rostopic hz /camera/image_rect_color normal way increase frame rate please let know information required thanks help,ros cameras calibration,ros cameras calibration
306,difficult build simple robots example line follower using raspberry pi ros,want build low cost robot running ros educational purposes simple line follower using raspberry pi ir sensor overambitious beginner project difficult make ros run custom hardware p.s robotics programming interested building actual robots running simulations cant afford buy ros compatible robots,ros raspberry-pi electronics,pi electronics ros raspberry
307,see cc3d actual configuration,received first hobby-grade quadcopter eachine racer comes preassembled transmitter receiver included comes kind cc3d flight board people say original configured software flying box im sure want touch fc config im interested learning fly manual/acro mode transmitter seems switch flight modes looks low/high rates self-level mode im expect third acro mode im sure right couldnt test weather third higher rate way look actual fc config changing anything witch software need flight modes set fc transmitter able see edit thanks advance,quadcopter,quadcopter
308,visualizing debugging ekf,debugging tuning ekf extended kalman filter task classical mobile robot pose tracking landmarks ar markers surprised measurement affects estimate look calculate numbers matrices involved work update step got executed happened tedious wonder anyone using technique trick clever visualization get better feel happening ekf update step update specific show first approximation mind looking way visualize update step way gives feel component measurement affects component state first idea plot measurement prediction vectors taken k matrix vectors k represent innovation vector measurement measurement prediction plotted affect component state working ekf state pose x angle measurements poses attached image open new page/tab see full resolution scaled vector k matlab syntax take submatrix matrix give idea component ekf state change current innovation vector k second component ekf change etc example innovation vector large x component aligned vector k second component state coordinate change problem plot give feel third component angle innovation vector affects state first component state increases bit contrary k indicates third component innovation causes visualize first improvement visualize third component innovation affects state nice add covariance data get feel k matrix created update plot vectors state-space show component measurement changes position plot see third component measurement changes state,ekf visualization,visualization
309,calculate uncertainty 6-dof pose graph-based slam,question related question estimating 6-dof poses x_ trajectory using graph-based slam approach estimation based 6-dof transformation measurements z_ ij uncertainty \sigma_ ij connect poses avoid singularities represent poses transforms vector consisting 3d-vector unit-quaternion x_ \left \begin matrix \\ q \end matrix \right optimization yields manifold increment vectors \delta \tilde x _i \left \begin matrix \\ log q \end matrix \right applied pose estimates optimization iteration x_i \leftarrow x_i \boxplus \delta \tilde x _i uncertainty gets involved hessian update optimization step \tilde h ii += \tilde ij ^t \sigma_ ij -1 \tilde ij \tilde ij \leftarrow a_ ij m_ \frac \partial e_ ij x \partial x_i \frac \partial x_i \boxplus \delta \tilde x _i \partial \delta x_i |_ \delta \tilde x _i e_ ij log \left x_ j \ominus x_ \ominus z_ ij \right error function measurement z_ ij estimate z ij x_j \ominus x_i \tilde ij matrix optimizing 6-dof \sigma_ ij matrix based imu measurements acceleration rotational velocity \omega build sensor noise matrix \sigma_ sensor \left \begin matrix \sigma_ ^2 \\ \sigma_ \omega ^2 \end matrix \right process model integrates acceleration rotational velocity obtain pose measurement model uncertainty sensor noise integration noise considered anything want calculate uncertainty \sigma_ ij j_ iterate \sigma_ ij t-1 j_ iterate ^t j_ process \sigma_ sensor j_ process ^t j_ iterate \frac \partial x_ \partial x_ t-1 j_ process \frac \partial x_ \partial \xi_ current measurement \xi \omega according formula \sigma_ ij matrix need matrix think include manifold projection details take look following publication algorithm g. grisetti r. kümmerle c. stachniss w. burgard “a tutorial graph-based slam ” ieee intelligent transportation systems maga- zine vol pp similar calculation uncertainty take look end section iii a. corominas murtra andreu josep m. mirats tur imu cable encoder data fusion in-pipe mobile robot localization technologies practical robot applications tepra ieee international conference ieee .. section iii a. iv a. ila viorela josep m. porta juan andrade-cetto information-based compact pose slam robotics ieee transactions 78-93,slam ekf jacobian,ekf slam jacobian
310,advanced line following robot maze solving,know make line follower video done giving source destination map robot moves based instruction given map procedure mapped path please watch video,wheeled-robot mapping line-following,following mapping line wheeled robot
311,calculate right left speed tank-like rover,trying control robot using android app touch-based joystick control app ui want calculate speed left right motors rover joystick moved joystick get values pan tilt convert polar coordinate system r theta r ranges theta want derive equation convert r theta left_speed right_speed speed values range figured value r theta left_speed r right_speed -r turning spot theta left_speed r right_speed r moving speed r theta left_speed -r right_speed r turning left spot theta left_speed -r right_speed -r moving backwards speed r values want moving turning example theta left_speed alpha*r right_speed moving turning r theta set speeds left_speed right_speed alpha*r beta*r need formulate equation generalize cases finding alpha beta based theta existing work refer,control kinematics movement,control kinematics movement
312,topology-based representation invariant certain change environment,article topology-based representation page line says topology-based representation invariant certain changes environment means trajectory generated topology-based space remain valid certain changes environment possible simple example understand concept,mobile-robot control robotic-arm motion-planning,control mobile robot motion planning robotic arm
313,ros run raspberry pi,ros run raspberry pi ros resigned run network machines different machines different cores machine different jobs machines raspberry considering using r-pi ethercat master mobile robot communicating main pc wifi using dongle r-pi run ros r-pi processing power servoing possible run servoing host wifi connecion,ros raspberry-pi wifi,pi ros raspberry wifi
314,connectors reliable,used connectors signal wiring length time find unreliable find unreliable used long time number disconnections re-connections due loss springy-ness crimped metal end wire causes contact problems connectors rapid connection time reliable multiple re-connections simple signal wiring excludes screw terminals connectors screws eg d-subminiature connectors simple plug-in connectors,wiring,wiring
315,instantaneous velocity calculation accelerometer,trying derive velocity accelerometer mpu9250 sensor-tag board saw blogs talk noise exact estimation problems started seeing velocity derivation integration accelerometer data time yielding towards ramp presence mpu9250 velocity estimated need assistance sensor gps gyroscope please let know see velocity calculations converge limitation compute power kalman filter kind estimation techniques difficult implement please suggest right direction,sensors accelerometer,sensors accelerometer
316,android phone adk arducopter apm autonomous quadcopter,project robotic lab build automous quadcopter able follow path land use onboard android phone image processing recognition part avoid send video stream control station process send commands need use indoor environment gps coordinate need phone guide quadcopter giving relative directions sec stop something normal pilot rc radio apm arduino mega adk thinking connect phone adk adk apm guide copter think options adk generate ppm/pwm signals rc use mavlink protocol best/easiest solution info -i read checked uav related websites find something close want try build new type controller use ab android phone adk stick something tested known work apm arducopter software want use phone imu trust sensors -i built quad hexa -i set connection phone adk able send commands i.e turn hover etc ... -i checked andro-copter project similar ones -i consider platforms apm something easier use -it nice keep rc receiver loop regain control quad something goes wrong,arduino control quadcopter ardupilot,control quadcopter ardupilot arduino
317,low power computer stereo vision,like build motorized robot stereo vision sends visual input pc wifi processing raspberry pi perfect task possible connect cameras pi powerful usb webcams minimum guess shared usb seems bottleneck cameras wifi dongle options send cameras control motor arduino,computer-vision cameras,computer cameras vision
318,prototyping irobot roomba,project building tele-op robot using irobot roomba drivetrain order robot work need extra castor irobot provides .stl .stp files use used printed files printed link create® bin modification file new part drivetrain caster downloaded first link called full bin bottom caster mount piece great made castor different height wheels wondering anyone file saved something different edit solidworks phone irobot hours today told post please help,irobot-create roomba,create roomba irobot
319,calibrate scanner mounted rotary axis,laser scanner mounted rotary axis wish determine transformation matrix center axis center scanner using input scanner angle rotation scanner assumed calibrated measure position object plane laser regards scanner origin rotary axis calibrated measure angle movement scanner aligned mounted close center rotation exact offset unknown drift time assume impractical measure position orientation scanner looking way determine exact values degrees offset scanner relation axis determined information scanner rotation angle axis interested offsets depicted matter regard generating consistent point cloud input data scanning known calibration object possible determine offsets mathematical formulas sort calibration information required minimum example possible determine parameters scanning flat surface knowing nothing surface flat transformation matrix rotation world trivial determine transformation camera known example left camera placed rotational axis camera scans planar object reference points b c. based laser distance measurements angle axis planar object reconstructed right camera unknown offset axis scans object point cloud constructed knowing offset planar surface maps curved surface calculate offset based surface curvature know real-world distances angles b c calculate camera offsets minimum number reference points need offsets,calibration,calibration
320,pid tuning unbalanced quadcopter know i-gain set high,good day working autonomous flight controller quadcopter configuration using angles inputs setpoints used single loop pid controller running pid implementation quadcopter pid controller derivative measurement removing derivative kick trying get quadcopter stabilize setpoint degrees able come +-5 degrees bad position hold tried using pd controller quadcopter front heavy due stereo cameras amount stabilize system example image added small gain see image second plot oscillations occur level zero degrees due front heavy means quad oscillates level postion degrees negative angle/towards front compensate behaviour discovered set level oscillations occur using gain reach setpoint image shown think adequate gain applied adjusted pid gains reduce jitters caused much p gain gain current settings tests corresponding footage test https //youtu.be/8jsraze6xgm test https //youtu.be/zzte6vqerq0 seem tune reach setpoint least +-1 degrees error noticed increasing i-gain longer increases dc offset know i-gain set high reflect plot edit perr graphs difference setpoint cf complementary filter angle derr plotted divided deltatime execution time small make errors p hard see ierr plotted integrated time errors plotted perr ierr derr multiplied kp ki kd constants plot images response quadcopter values axis correspond value placed input gpiopwm function pigpio library mapped using scope values pigpio integer input corresponds time high pwm esc's edit current code implementation setpoint degrees cout starting quadcopter endl float //1510ms float //this current set max throttle pitch yaw roll pid give allowance altitude pwm maximum equivalent time high pwm float basecompensation //for altitude pid implemented delay float starttime= float gettickcount deltatimeinit= float gettickcount //starting value pass //read sensor data readgyro gyroanglearray readaccelmag accelmaganglearray //time stamp //the loop used get consistent dt proper integration obtain correct gyroscope angles found variable dt impossible obtain correct angles gyroscope float gettickcount -deltatimeinit float gettickfrequency //0.00209715|0.00419 deltatime2= float gettickcount -deltatimeinit float gettickfrequency //get time elapsed cout dt endx deltatime2 endl //deltatime2= float gettickcount -deltatimeinit float gettickfrequency //get time elapsed deltatimeinit= float gettickcount //start counting time elapsed cout dt end deltatime2 endl //complementary filter float pitchanglecf= alpha pitchanglecf+gyroanglearray.pitch*deltatime2 1-alpha accelmaganglearray.pitch float rollanglecf= alpha rollanglecf+gyroanglearray.roll*deltatime2 1-alpha accelmaganglearray.roll float yawanglecf= alpha 1-alpha accelmaganglearray.yaw //calculate orientation error current target float pitcherror pitchanglecf pitchtarget pitcherrorsum += pitcherror*deltatime2 float pitcherrordiff pitcherror pitchpreverror pitchpreverror pitcherror float rollerror rollanglecf rolltarget rollerrorsum += rollerror*deltatime2 float rollerrordiff rollerror rollpreverror rollpreverror rollerror float yawerror yawanglecf yawtarget yawerrorsum += yawerror*deltatime2 float yawerrordiff yawerror yawpreverror yawpreverror yawerror //pid controller list float pitchpid pitchkp*pitcherror pitchki*pitcherrorsum pitchkd*pitcherrordiff/deltatime2 float rollpid rollkp*rollerror rollki*rollerrorsum rollkd*rollerrordiff/deltatime2 float yawki*yawerrorsum yawkd*yawerrordiff/deltatime2 //motor control mixing //motor front left float motorpwm1 -pitchpid rollpid yawpid basethrottle basecompensation //motor front right float motorpwm2 -pitchpid rollpid yawpid basethrottle basecompensation //motor left float motorpwm3 pitchpid rollpid yawpid basethrottle basecompensation //motor float motorpwm4 pitchpid rollpid yawpid basethrottle basecompensation //check pwm saturating method used trim outputs pwm gets fed gpiopwm function avoid exceeding earlier set maximum throttle maintaining ratios motor throttles float motorpwm1 motorpwm2 motorpwm3 motorpwm4 float minpwm motorpwm int i=0 i++ // get minimum pwm filling motorpwm minpwm minpwm=motorpwm cout minpwm minpwm endl minpwm basethrottle float fillpwm=basethrottle-minpwm //get deficiency use fill motors cout fill fillpwm endl motorpwm1=motorpwm1+fillpwm motorpwm2=motorpwm2+fillpwm motorpwm3=motorpwm3+fillpwm motorpwm4=motorpwm4+fillpwm float motorpwm2 motorpwm1 motorpwm2 motorpwm3 motorpwm4 float maxpwm motorpwm2 i=0 i++ // get max pwm trimming motorpwm2 maxpwm maxpwm=motorpwm2 cout maxpwm maxpwm endl maxpwm maxthrottle float trimpwm=maxpwm-maxthrottle //get excess use trim motors cout trim trimpwm endl motorpwm1=motorpwm1-trimpwm motorpwm2=motorpwm2-trimpwm motorpwm3=motorpwm3-trimpwm motorpwm4=motorpwm4-trimpwm //pwm output gpiopwm motorpwm1 //1 gpiopwm motorpwm2 //2 gpiopwm motorpwm3 //3 gpiopwm motorpwm4 //4,pid raspberry-pi quadcopter tuning,quadcopter pi raspberry pid tuning
321,sensors field view car driving,want develop autonomous driving rc car detecting obstacles plan mount 3-5 ultrasonic sensors front car minimum necessary combined field view sensors car hits obstacle i.e minimum angle detection combined sensors car detect obstacle path data car know data relevant separation right left wheel cm wheelbase distance front wheels steering front maximum angle steering degrees car uses steering,mobile-robot sensors wheeled-robot,mobile sensors robot wheeled
322,send video arduino camera module video android screen,trying connect camera module arduino mega connect mega android phone throught send live view camera phone saw video online showed images -- image captured camera module arduino sent android output image viewed couple seconds time send image bt doable live video image yes please guide please suggest workarounds,arduino cameras,cameras arduino
323,quadcopter pid output duty cycle conversion,trying design pd controllers control roll pitch angle quadcopter p controller control yaw rate give system reference roll pitch yaw rate smartphone controller wifi .in case roll pitch feedback outer loop given attitude estimation algorithm inner loop reference angle rate feedback provived filtered version gyroscope data yaw rate concerned controller reference yaw rate given feedback loop provived smartphone illustrate situation sampling frequency imposed attitude estimation kalman filter using tuned controller gains matlab imposing rise time seconds maximum percent overshoot root locus matlab able found solution large gains p tuning using quadcopter model euler angle based linearized model quadcopter instance \ddot \tau_\phi i_x\ddot \phi g_\phi \frac i_x s^2 order starting point gains re-tune reality transfer function continous model used discrete version sampling rate premise following questions map controller outputs duty cycle using pwm frequency period tim channel configuration checked activation threshold motor starts move stops increasing speeds second following good answer quadcopter pid output questions throttle mapping concerned map way values coming controller interval mapped whole interval speed order allow quadcopter angular movement exploiting differences motor speeds throttle coming fact matlab propose huge gains controllers leads fact sum controller output duty cycle stated metioned answer go bound tim pulse proportion result altering gains systems placing else poles systems procedure done matlab became useless wrong tried enforce matlab gainsm instance interval case find gains constraints verified thank,control quadcopter pid matlab,control quadcopter pid matlab
324,mapping algorithm noise,simulated robot moving discretized grid world various simplification time-restriction reasons noise problem robot creates initial map world algorithms slam occupancy grid mapping based uncertainty case uncertainty wondering simple algorithm mapping environment noiseless position,mapping,mapping
325,transform x z coordinates tx ty tz,need get coordinates specific points cad file transform use move robotic arm points problem get x z coordinates robotic arm needs x z tx ty tz coordinates move certain position suggestions edited task need robotic arm go certain points pcb board heat soldering paste setting points pendant easier way get coordinates points cad file write code using pc movl motionspeedtype linear mm/s angular °/s speed mm/s max angular speed coordinate x z tx ty tz toolno type move robot cartesian coordinates linear motion code linear motion certain point looks find manual pendant manual helpful second year student robotics mechatronics internship scientific research institution appreciate help,robotic-arm,arm robotic
326,implement distance proximity sensor wider range,line robotics observing environment trying implement proximity sensor sense objects front least -30^ \circ \space \space+30^ \circ direction propagation ways think multiple infrareds con spacious fast-motor con expensive money time-complexity wise using proximity sensor distance capability,sensors,sensors
327,remote car controlling,start asking help let know newbie electronic field want know principle wheel rotation left-right remote car gadget talking changing spin rotation dc motor buttons remote asking left right movement wheel know spin change depends polarity dc motor changing polarity changes spin principle changing left right positions front wheels,control wheel,control wheel
328,optical object avoidance,beginning work larger scale 250-350 lbs wheeled robot looking use optical means object avoidance concerned large causing issues running things including people top speed cause issues safety starting remote control looking robot become self contained following darpa driver-less car project fiscal power budget sensors computers thinking afield idea self-contained robot 250-300 lbs range break bank optical object avoidance comments experiences appreciated,computer-vision wheeled-robot,computer wheeled vision robot
329,avoid roomba error code,trying run series roomba large open space recognize large open space throws error code recognize edge -3 fall edge become stuck suggestions,mobile-robot irobot-create roomba,mobile create roomba robot irobot
330,mechanism changing gears bicycle,looking make shifting bicycle senior design project additional features tbd come electrical/software mechanical need figure decent way shift gears thinking leaving gear system place using sort motor servo stepper motor worm gears pull release wire cable needed concerns amount torque needed pull wire finding something enough holding torque option use trigger shifters use solenoid concern worm gear slow like pick brains moment thanks,motor automatic,automatic motor
331,meaning s_last star lite algorithm,d*lite algorithm described line figure page d* lite main starts defining s_ last =s_ start value s_ last updated entire algorithm purpose defining term mean,mobile-robot control robotic-arm motion-planning algorithm,control algorithm mobile robot motion planning robotic arm
332,good robotics software platforms operating systems available,company starting brand new robotics project trying design code robotics software platform scratch good existing ones useful software platform used academics industry robotic system compatible others people familiar like software platform able integrate new robotic hardware components contain wide array useful data processing visualisation tools make efficient use computing hardware,software platform,platform software
333,updating firmware kk2,facing problems updating kk2 board used usbasp header connecting pc kk2firmware software fails says valid vid pid values etc please help idea updating firmware used usbasp header connecting kk2 board pc,arduino,arduino
334,slam odometer requirement,accurate odometer reading slam writing extra section says question body meet quality standard,slam,slam
335,purpose programming esc,planning buy esc tricopter setup purpose programming esc cost effective necessary buy programming card program esc model,esc,esc
336,robot structure kit materials,arduino wires resistors good stuff materials build structure robot guys recommend place solder solder kit material guys recommend work motors stuff thanks p.s plan building standard driving robot want able make robots materials/kit want kit makes robot want lego-esque approach building structure build want bump2,arduino beginner,beginner arduino
337,analogue video digital,fpv camera outputs analog video rca pal want capture video image processing need way convert analog video digital recommend advice shield assist please note want convert frames minimum latency real time flying drone need convert image compressed format decoding take time get rgb matrix straight preferred thought digital output camera need grams found,quadcopter cameras,quadcopter cameras
338,matlab system simulation dynamic state matrix input matrix,"following system \dot x x+b u x b scalar time-dependent constant simulate system matlab using sys ss b c,0 lsim sys u x0 nice simulate system dynamic state input matrix matrices based measurement data means discrete time step matrix t_i suggestions",dynamics matlab simulation,dynamics matlab simulation
339,autodesk inventor rounding specific edge,using autodesk inventor need round component device want round green marked edges red marked click round bottom edge added rounding de-select hints solve problem,design,design
340,dc motor control speed-torque curve,trouble understanding use speed-torque curve dc motor understand gradient speed-torque curve defined design motor exact position curve depending voltage applied voltage changed speed-torque curve changed remains parallel initial curve voltage changed see figure intuitive guess using motor given desired operation point desired speed desired torque corresponding speed-torque curve cd gradient specified data sheet motor passes operation point curve cd obtained corresponding voltage vd see diagram next guess order motor operate desired operation point set voltage applied motor vd apply current id computed using torque torque constant read done dc motor controllers seem drive motor using current sort pwm magic shown following diagram maxon anyone knows voltage used dc motor control current understand set speed modify voltage pwm useful looked hours internet find anything relevant thanks antoine,motor control,control motor
341,open source implementations gps+imu sensor fusion,open source implementations gps+imu sensor fusion coupled i.e using gps module output degree freedom imu sensors -- kalman filtering based find open source implementations imu sensor fusion merge accel/gyro/magneto raw-pitch-yaw found anything includes gps data filtered location speed info,kalman-filter imu sensor-fusion gps,kalman filter fusion imu sensor gps
342,evaluated computer technology influence robotics embedded systems forseeable future,first question site little subjective ongoing process many cool cyclonic changes technology electronics software industry concurrency parallelism implications gpgpu multi-core programming large model specific case embedded software influence styles conventions community single board multicore hardware released parallela example programming language research results excellent functional programming started reaching masses late night previous weekend briefly skimmed example functional reactive programming solve real time problems ai people suggesting programming robots declarative domain specific languages nice know implications robotics community tremendous growth frameworks ros urbi region look upon.. robotics embedded high performance ai codebase depends c/c++ languages rust bubbling take massive amount time adopt new languages adaptation begins ai correct seems lot time passed many major production results ai community cognitive architectures old act-r seem hibernation mode seems lot work intelligent systems solved problems computer vision data mining problems cater supercomputing industrial crowd possible shift towards low powered systems thanks,software artificial-intelligence programming-languages beginner embedded-systems,embedded intelligence programming artificial languages systems software
343,problem simulated sensor matlab,simulating sensor sensor determine p \theta \phi \theta rotation z-axis \phi rotation x-axis sensor given position point x z p sqrt x^2 y^2 z^2 theta acos z/p -- -- guessing problem phi atan2 x need get cartesian coordinates x z p theta phi getmeasurement x z x p*cos theta *sin phi p*sin theta *sin phi z p*cos phi sensor working fine beginning particular point behaves state vector compare measurement guessing \theta problem edit sorry mistake aforementioned calculations based following picture point rotate first z-axis \theta rotate x-axis \phi,sensors sensor-error,sensors sensor error
344,best ugv platform,lab interested good all-terrain ugv used indoors interested clearpath husky clearpath jackal robotnik summit xl xl hl though welcome suggestions anyone happen experience speak pros cons,ugv platform,platform ugv
345,path planning arm robot,working path planning arm dof arm robot using centralised planning methodology considering robot system single higher dof case a* algorithm find shortest path problem high computation time.is way reduce computation time obtaining shortest route note decentralised path planning good case,robotic-arm motion-planning path-planning,motion path planning arm robotic
346,telemetry apm xbee,transmission telemetry data ground base station arducopter using xbee documented documentation telemetry-xbee specify xbee version used checking guess version p2p link others like know xbee modules people use flying drones problems apm connection control drone using xbee link mavlink protocol,quadcopter radio-control mavlink,quadcopter control mavlink radio
347,solution ins gps integration,gps module imu gyro accelerometer magnetometer need build autonomous navigation system quadcopter know position time track predefined path know order improve precision need merge sensors data kalman filter technique matter thing kalman filter way common according research problem stuck know something simple seem find solution least answer basic questions start know get position accelerometer readings filters help eliminate noise minimize integration errors gps readings latitude longitude first question sensor fusion make measurements compatible latitude longitude gps mix displacement given starting point calculate displacement gps readings assume starting latitude longitude update accelerometer applying filter developed simple kalman filter plug new reading values obtain next estimate position wheeled car sources merge filter inputs find function get best estimate average accelerometer gps lost guys examples code use learn easy find articles full boxes arrows pointing direction data flow long equations start get confusing presented article http //isas.uka.de/material/samba-papierkorb/vorl2014_15/si/terejanu_tutorialukf.pdf problems equations seen real life example implementation help topic deeply appreciated thank much,kalman-filter sensor-fusion gps,filter fusion sensor kalman gps
348,irobot create screw size/thread,looked think find information come anything anyone know kind screws use replace ones top roomba realize create series expect replace screws roomba standoffs stick mounting plate top additional sensors cpu etc,irobot-create roomba,create roomba irobot
349,panasonic msmo22f2g stepper motor hook-up,panasonic msmo22f2g servo motor using stepper motor motor wires coming port wires coming port towards rear unit presumed encoder trying drive motor arduino motor shield question hook read stepper leads bipolar stepper group coil wires found wires stepper coil fourth seems effect stepper checking process using ohm meter see connected connecting wires feeling resistance,arduino stepper-motor,stepper motor arduino
350,ekf slam c++ code openslam.org,working code robot maze solver using laser sensors odometry data went pdf available online \textbf dummies understand process master student control part writing code c++ difficult task ekf slam codes available site \textbf openslam.org seem advanced beginner find site missed simplest ekf slam algorithm implementation anyone guide open source code c++ implementation build suit robot working,slam,slam
351,measure weight object using servo,assuming quality industrial servo possible calculate weight/resistance load comparing current draw holding position time takes lift/lower object measure grams kilograms kind tolerance achieved trying eliminate need dedicated weight measurement sensor,sensors robotic-arm servomotor,servomotor sensors arm robotic
352,pid control tuning,designing robot undergraduate project task robot follow wall purpose using pid control system reference given ultrasonic sensor problem im hard time tuning pid know find p coefficient plotting desired set point range vs desired motor output speed robot stable adding di part pid find values coefficients trying random values manual tuning thank appreciated,motor control pid,control pid motor
353,stall current free current motors,stall free currents electric motor example vex motor lists stall free currents bottom page think general idea detailed description helpful,motor current,current motor
354,ir distance sensor,trying make ir distance sensor seen online goal see distance ir transmitter ir sensor example uses ir led ambient light timing track distance way find distance lets say ir remote sensor accurate meter open ideas tracking distance objects weither bluetooth/ir/ultrasonic,sensors,sensors
355,xbee xtend recovery/troubleshoot,broke xbee xtend module firmware-writing job restarted windows tried recovery procedure xctu new version work working old version error facing,radio-control,control radio
356,make invisible line following robot,like build robot follows virtual path visible path line white surface etc enthusiastic seeing sci-fi videos show robots carry goods materials crowded place follow physical line sense obstacles depth like build robot follows specific virtual path point b. tried couple things using magnetic hall effect sensor robot wire carrying current beneath table problem vicinity hall effect sensor small difficult judge robot line line using series magnets solve issue table inch thick idea flopped p using ultraviolet paint line using uv leds robot sensors give zig-zag motion robot due potential threats using uv light source idea flopped p thought camera top using image processing see robot line diverging better solution looking creative simple solutions,mobile-robot localization wheeled-robot industrial-robot line-following,industrial localization mobile robot following line wheeled
357,control position pneumatic piston,control position pneumatic piston way know using magnetic reed switch magnetic sensor matching piston use type control algorithm pid instance keep piston sensor problem gives limited control position adds state open closed sensor position full control example want time using sensor position like options available mean percentages pre-defined example pistons use good example want http //www.youtube.com/watch v=a8lz15uiuxu,sensors control pid movement,control sensors pid movement
358,linear actuators cartesian robots,like make cartesian robot maximum speed -1 x/y plane acceleration -2 accuracy least expected loads x axis expected reliability work hours seen printers belt drive seems precise much backlash screw drive slow types linear actuators available used commercial grade robots i.e http //www.janomeie.com/products/desktop_robot/jr-v2000_series/index.html,actuator industrial-robot cnc,actuator industrial robot cnc
359,commutation waveforms look brushless motor,seen waveforms driving brushless motor guess waveform used simpler block commutation want sinusoidal waveforms pwm signal look need synchronise edges phases,brushless-motor pwm,brushless pwm motor
360,tough make robotic workshop,want make robotic workshop.. recruited members work ... please give tips robotic workshop,irobot-create,create irobot
361,quadcopter charging,thesis multicopter using batteries wherein first battery used power goes placed use charge first battery second battery powering multicopter process repeats power battery drained process possible achieved edit clear everything thesis quadcopter uses batteries power source batteries attached switching circuit system allow battery drained transferred battery solar panels serve charger battery standby mode discharged battery battery used connected solar panel charging battery battery drained quadcopter switch charged battery continue go batteries drained achievable,battery multi-rotor,battery rotor multi
362,using device os microcontrollers,im working robot needs image processing analyze data recieves cameras searched arm avr libraries found library micros limited ram hard image data process want know hardware connects win android ... devices make possible device connect actuators sensors thank helping,microcontroller,microcontroller
363,numpy alternatives linear algebra kinematics python,decent python numerical package libraries numpy python numpy relies gfortan compiled platform avoid hidden/insidious numerical errors numpy need matrix algebra package kinematics planing machine learning python sensitive gfortran version compiler options,kinematics python,python kinematics
364,best way attach printed part servo robotics use,trying make custom parts fit servo proved difficult expected hoping avoid incorporating provided servo horns printed part trying method images current test printed attachment servo indentation m3 nut servo accepts m3 bolt attachment servo plastic ring spline print level detail think tight top piece attaches nut use threaded rod laying difficulty setup working level torque spinning place ... correct approach going design piece servo horn inside get servo connect better approaches considered,servos 3d-printing,printing servos
365,joints discretize ik,using ikfast openrave inverse kinematics analytical solver robot dof matches ik type dof get possible solutions robot dofs need pick joints constant value openrave python interface discretize joint i.e give set solutions radians joint question holds interface dof anthropomorphic arm joints roll-pitch-roll-pitch-roll-pitch-yaw seen image discretized joints call free joints openrave terminology let ikfast decide picks joint upper arm roll free joint using joint elbow free joint easier think realized joint discretize closer end chain ik solutions suffer joints closer chain large discretization openrave picking optimal joint discretize wondering standard practices known conventions sort thing put want set ik solutions end-effector pose fix joint start end kinematic chain set going perfect lets say ideal position epsilon imagine want hand in-front robot pick bad angle shoulder straight example rest joints hard time getting end-effector target pose fix wrist angle good chance getting end-effector lease close kind trade-offs better set solutions,inverse-kinematics,inverse kinematics
366,modular arm joints work,hello trying figure modular arm joints designed kind bearings/shafts used modular-type robotic arm take ur arm example believe pipes include drive bearing system see second image detached think simple motor shaft connecting member want rotate mechanism wondering type mechanism bearing system t-shaped pipes transfer rotational motion member using shafts,mechanism joint arm,joint arm mechanism
367,imu based acceleration parameters differential drive robot,differential drive robot whose motors quiet driving flat surface motors make lot noise incline likely due correction required maintain speed high inertial load robot accelerate pid keep noticed noise related acceleration higher acceleration smaller amount noise hear smaller time level noise lasts certain acceleration limit otherwise motors get noisy trying find use imu available order change acceleration based steep path incline documentation papers tutorials etc motion planning related topic point,ros imu differential-drive noise,ros imu drive noise differential
368,power model humanoids,process creating power prediction model hubo robot robot degrees computer sensors motor boards motors powered motor boards boards powered main power board exists robots chest model able predict power trajectory robot say instance robot raises hand degrees degrees model able predict power heres idea came idea equate electrical torque mechanical torque joint instance right arm pitch moves degrees follows mgsin \theta kt*i getting proper prediction current value way read software installed robot know losses wondering approaches fault approach add joint currents specific trajectory give estimate total power consumption,brushless-motor power inverse-kinematics motion-planning torque,inverse power torque motion planning kinematics motor brushless
369,humans single audio crowd take robot,robotics conference today speakers mentioned robots able function single audio person people single audio well take robot aware active noise reduction bose aviation headset talking thinking ability take everything process feel important,artificial-intelligence,intelligence artificial
370,figure pid values drone specs,specs quadcopter everthing possible figure pid specs,quadcopter pid,quadcopter pid
371,slam vision good resources,like know good source combines slam problem vision mathematical perspective numerous resources handle slam find good source focuses slam vision,kalman-filter slam ekf,filter ekf slam kalman
372,finding rotation quaternion,trying use quaternions robotics thing understand understand define position quaternions define rotation quaternions difference.. please watch understanding steps correct wrong lets assume vehicle positions described rotation quaternions q_1 w_1 x_1i y_1j +z_1k \cos \pi/4 \sin \pi/4 quaternion normalized represents rotation x axis \pi/2 angle understand q_2 w_2 x_2i y_2j z_2k \cos \pi/4 \sin \pi/4 k represents rotation angle \pi/2 axis q_1*q_2 q_3 rotation made q_1 first q_2 second q_3 \frac \frac +\frac j +\frac k question given q_2 q_3 find q_1 question find rotation angle vector given rotation quaternion example want find angle q_3 turned 2i+j-k quaternion,kinematics,kinematics
373,reasons autonomous robots daily activities,fact search less autonomous real robots use companion robots limited useless functionality natural disaster don’t see operational search rescue robots news military robots service controlled machines intelligent machines industrial robotic arms deterministic machines robots levels autonomous functionality cleaning bots operations bots farming robots hand today artificial intelligence good making decisions sensing technologies sophisticated communication technologies fast manufacture cheap parts people gadget savvy real robot day day life investment domain market knowledge domain missing technology idea,mobile-robot,mobile robot
374,stepper turn,wanted cnc make pcb home got kit zentools put attached battery powered screw shaft stepper moved axis way wiring axis moves turn steppers hand piece works mechanical jam decided use grbl controller software tested software shield stepper qv testing grbl arduino board steppers use universal gcode sender communicate grbl got arduino cnc shield arduino uno put attached arduino uno re-tested grbl worked used reprep stepper wiring article connect stepper driver wired stepper stepper driver x axis powered shield dc regulated power supply power adaptor old notebook notebook died kept adaptor move steps command g1 x5 sent stepper makes small move direction makes grinding seen youtube tried switching pair cables using stepper driver drivers turning potentiometer increase current luck attached photos cnc controller controller unit tried everything think suggestions,stepper-motor cnc,stepper cnc motor
375,create robot ez-b using regular arduino,interested building robot ez-b sold ez-robot.com comes sdk visual studio direct scripting runtime usb wi-fi irc https connection get regular arduino board able control remotely way read arduino needs hold instructions memory brain computer feeding signals forth microcontroller arduino alone step website niceley puts,arduino microcontroller research machine-learning artificial-intelligence,arduino intelligence microcontroller artificial research machine learning
376,use quaternions feed pid quadcopter stabilization loop,making quadcopter set pid loop stabilize given euler angle pitch roll problem arises roll approaches degrees degrees values make sense approaches gimbal lock intend make complex maneuvers looping etc. exceeds degree roll limit use quaternions overcome problem get quaternions mpu-9150 read many articles matter quaternions talk rotations software tweening rotation points makes little sense know imaginary numbers matrices,quadcopter pid stability,quadcopter stability pid
377,use accelerometer altitude estimation,implementing autonomous quadcopter got flying stable unable correct presence significant external disturbances assume tuned pid gains tweaked inflight current progress ruled barometer scope research indoor flight barometer deviation +-5 meters according colleague using ultrasonic sensor hc-sr04 altitude estimation resolution found ultrasonic sensor refresh rate slow get enough response altitude correction tried use accelerations z get height data integrating acceleration get velocity used rate pid cascaded pid controller scheme current implementation altitude pid controller single loop pid controller using p controller position input ultrasonic sensor taken account negative acceleration measurements due gravity matter much compute offset negative acceleration eg -0.0034 computed gravitational offset setting quadcopter flat surface collecting samples z axis averaged get offset stored constant variable variable subtracted z-axis output remove offset get accelerating said question negative acceleration eg -0.0034 quad proceeds climb altitude ultrasonic sensor p controller quad oscillates cm consistent negative acceleration reading dealt possible solution planning cascading pid contoller altitude hold innerloop pid controller using accelerometer outer loop p controller using sonar sensor adviser said single loop p controller enough make quadcopter hold slow sensor noticed p gain quadcopter overshoot altitude leaky integrator found article explaining dealt negative accelerations using leaky integrator trouble understanding work think negative error turn positive error solving problem sure http //diydrones.com/forum/topics/multi-rotors-the-altitude-yoyo-effect-and-how-to-deal-with-it single loop pd controller ultrasonic sensor feasible using feedback slow sensor sources lsm303dlhc datasheet http //www.st.com/web/en/resource/technical/document/datasheet/dm00027543.pdf leaky integrator http //diydrones.com/forum/topics/multi-rotors-the-altitude-yoyo-effect-and-how-to-deal-with-it ardupilot pid loop http //copter.ardupilot.com/wp-content/uploads/sites/2/2012/12/alt-hold-pid-version-3.0.1.jpg,quadcopter control pid raspberry-pi sensor-fusion,quadcopter control pi pid fusion raspberry sensor
378,interface multiple i2c slaves microcontroller,want communicate tiva c arm cortex m4 sensorhub ti multiple sensors different i2c addresses mpu9150 bmp180 temperature sensors ... single i2c slave communicate project involves interface microcontroller mpu9150 bmp180 get stuck anybody suggest process commnunication case,i2c,i2c
379,connecting multiple different voltage servos controller,using pololu micro serial servo controller connected arduino multiple servos total make robot arm servos require 4-6 volts require 7-10 volts planning powering servos separate pololu arduino pololu connecting flashing green led servo move plugged control pins servos work plugged servo-tester think problem fixed connecting grounds servos ground pololu like advice sure work end frying parts fried pololu connecting grounds batteries ground pololu help damage parts figure show micro serial servo controller,rcservo,rcservo
380,difference different types mecanum wheels,looking mecanum wheels noticed different designs popular type holds rollers wheels frame holds rollers center significant advantage using,wheel,wheel
381,enable communication irobot create,got new irobot create used use element direct bam bluetooth adapter module irobot create communicate create using bluetooth accessories need,irobot-create,create irobot
382,force measurement grab bars,start project measure force bathroom grab bar force/load applied person grab bar assistant want measure load wall real-time monitoring load analysis improve design sure kind sensor suitable measurement looking different load cells get idea mount commercial load cells measurement trying right using strain gauge measure strain end bar wall side calculate load think wrong exists kind force/load sensors clamp bar measurement sensor types/models suggestion welcome posted question ee forum http //electronics.stackexchange.com/questions/57197/how-to-measure-force-that-applied-on-grab-bar,sensors force,sensors force
383,free charge robot magazine journal newsletter similar,free charge robot magazine journal newsletter similar publication available geared technical professionals general public,untagged,untagged
384,firmware upgrade irobot create,firmware upgrade available create issues march using assigning university tennessee programming project getting ready use get updated latest firmware,irobot-create,create irobot
385,using rgb depth camera locate x z coordinates ball,trying use gazebo modelling couple tasks robot able locate ball get x coordinates terms pixels using simple rgb camera kinect point cloud generated kinect hope find depth perception ball using x coords sent circle recognition rgb camera plan earlier convert x coordinates rgb camera meters using dpi kinect find info much harder object recognition using point cloud hoping stick using rgb camera recognition considering simple hough transform anybody pointers,localization computer-vision kinect cameras gazebo,localization cameras kinect computer gazebo vision
386,orienting rectangular plastic bricks,part sorting machine need orient plastic brick-shaped objects identical size x x end white side facing fed bowl feeder type machine re-orienting accomplish optical sensors thinking cutting bricks putting magnets elegant solution,mechanism orientation,orientation mechanism
387,stm32_oc_timing irqhandler,created program simple time base delay seconds problem read interrupt flag channel etc. use __hal_tim_get_flag htim2 tim_flag_cc1 reset error occurs occurred uc clear flag set blue led discovery board program main.c /* includes include stm32f3xx_hal.h /* private variables br **tim_handletypedef htim2 ** /* private function prototypes br void systemclock_config void br static void mx_gpio_init void br static void mx_tim2_init void br int main void /* mcu configuration -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- */ br /* reset peripherals initializes flash interface systick */ br hal_init /* configure system clock */ br systemclock_config br /* initialize configured peripherals */ br mx_gpio_init br mx_tim2_init br /* infinite loop */ hal_gpio_writepin gpioe gpio_pin_11 gpio_pin_reset /** system clock configuration*/ void systemclock_config void rcc_oscinittypedef rcc_oscinitstruct br rcc_clkinittypedef rcc_clkinitstruct br rcc_oscinitstruct.oscillatortype rcc_oscillatortype_hse br rcc_oscinitstruct.hsestate rcc_hse_on br rcc_oscinitstruct.hsepredivvalue rcc_hse_prediv_div1 br rcc_oscinitstruct.pll.pllstate rcc_pll_on br rcc_oscinitstruct.pll.pllsource rcc_pllsource_hse br rcc_oscinitstruct.pll.pllmul rcc_pll_mul9 br hal_rcc_oscconfig rcc_oscinitstruct br rcc_clkinitstruct.clocktype rcc_clocktype_sysclk|rcc_clocktype_pclk1 br rcc_clkinitstruct.sysclksource rcc_sysclksource_pllclk br rcc_clkinitstruct.ahbclkdivider rcc_sysclk_div1 br rcc_clkinitstruct.apb1clkdivider rcc_hclk_div2 br rcc_clkinitstruct.apb2clkdivider rcc_hclk_div1 br hal_rcc_clockconfig rcc_clkinitstruct flash_latency_2 br hal_systick_config hal_rcc_gethclkfreq br hal_systick_clksourceconfig systick_clksource_hclk br /* tim2 init function */ br void mx_tim2_init void tim_clockconfigtypedef sclocksourceconfig br tim_masterconfigtypedef smasterconfig br tim_oc_inittypedef sconfigoc br htim2.instance tim2 br htim2.init.prescaler //72mhz/7200 br htim2.init.countermode tim_countermode_up br htim2.init.period br htim2.init.clockdivision tim_clockdivision_div1 br hal_tim_base_init htim2 br sclocksourceconfig.clocksource tim_clocksource_internal br hal_tim_configclocksource htim2 sclocksourceconfig br hal_tim_oc_init htim2 br smasterconfig.masteroutputtrigger tim_trgo_reset br smasterconfig.masterslavemode tim_masterslavemode_disable br hal_timex_masterconfigsynchronization htim2 smasterconfig br sconfigoc.ocmode tim_ocmode_timing br //0.0001 delay br sconfigoc.ocpolarity tim_ocpolarity_high br sconfigoc.ocfastmode tim_ocfast_disable br hal_tim_oc_configchannel htim2 sconfigoc tim_channel_1 br sconfigoc.ocmode tim_ocmode_timing br br sconfigoc.ocpolarity tim_ocpolarity_high br sconfigoc.ocfastmode tim_ocfast_disable br hal_tim_oc_configchannel htim2 sconfigoc tim_channel_2 br hal_tim_base_start_it htim2 br hal_tim_oc_start_it htim2 tim_channel_1 br //hal_tim_oc_start_it htim2 tim_channel_2 br /** configure pins br analog br input br output br br exti br pc9 -- -- -- i2s_ckin br */ void mx_gpio_init void br br gpio_inittypedef gpio_initstruct br /* gpio ports clock enable */ br __gpiof_clk_enable br __gpioc_clk_enable br __gpioe_clk_enable br /*configure gpio pin pc9 */ br gpio_initstruct.pin gpio_pin_9 br gpio_initstruct.mode gpio_mode_af_pp br gpio_initstruct.pull gpio_nopull br gpio_initstruct.speed gpio_speed_high br gpio_initstruct.alternate gpio_af5_spi1 br hal_gpio_init gpioc gpio_initstruct br br /* configure gpio pin pe8 blue led */ br gpio_initstruct.pin=gpio_pin_8 br gpio_initstruct.mode=gpio_mode_output_pp br gpio_initstruct.pull=gpio_nopull br gpio_initstruct.speed=gpio_speed_high br hal_gpio_init gpioe gpio_initstruct br gpio_initstruct.pin=gpio_pin_12 br gpio_initstruct.mode=gpio_mode_output_pp br gpio_initstruct.pull=gpio_nopull br gpio_initstruct.speed=gpio_speed_high br hal_gpio_init gpioe gpio_initstruct br br /* configure gpio pin pe11 green led */ br gpio_initstruct.pin=gpio_pin_11 br gpio_initstruct.mode=gpio_mode_output_pp br gpio_initstruct.pull=gpio_nopull br gpio_initstruct.speed=gpio_speed_high br hal_gpio_init gpioe gpio_initstruct low level implementation br void hal_tim_base_mspinit tim_handletypedef* htim_base br htim_base- instance==tim2 br br /* peripheral clock enable */ br __tim2_clk_enable br /* peripheral interrupt init*/ br hal_nvic_setpriority tim2_irqn br hal_nvic_enableirq tim2_irqn br void tim2_irqhandler void br /* user code begin tim2_irqn */ br hal_gpio_writepin gpioe gpio_pin_8 gpio_pin_set br // hal_gpio_togglepin gpioe gpio_pin_12 br hal_tim_irqhandler htim2 br //this function implemented stmcubemx tim2_irqhandler look channel generate delay +1 sec debugging program led set period equal time set led,microcontroller,microcontroller
388,stabilize quadcopter,today quadcopter first flight running megapirate crius aiop v2 turnigy talon v2 frame touched throttle stick remote nothing felt quadcopter take pushed little bit oscillated times flipped landing propellers broke props frame feels bit loose tighten screws hope ... tune software stabilize take edit know true oscillation random air flows making unstable made tests yesterday ok crashed times time oscillating windy quadcopter managed stabilize tune pids find way crashing edit pid tuning managed stabilize quadcopter oscillating little bit guess change values get perfect stabilization,quadcopter stability,quadcopter stability
389,encoder use dc motor shaft,like control position velocity dc motor zy motor comes tooth sprocket diameter shaft possible apply encoder motor see picture angular velocity description rpm encoder recommend,motor quadrature-encoder,quadrature motor encoder
390,quadcopter pid controller saturating,good day creating autonomous quadcopter using cascading pid controller p-pid controller using angle setpoints outer loop angular velocities inner loop finished tuning roll pid last week +-5 degrees error stable able withstand disturbances hand able tune nights pitch axis different story introduction problem pitch asymmetrical weight front heavy due stereo vision cameras placed front tried move battery backwards compensate due constraints dji f450 frame front heavy pid controller asymmetrical quadcopter i-gain responsible compensating able remember accumulating error problem hand saw tuning pitch gains tune due irregular oscillations made hard pinpoint due high p gain quadcopter pitch pid settings prate=0.0475 irate=0.03 drate=0.000180 pstab=3 giving error angle setpoint +-10degrees data corresponding video rate kp ki kd stab kp=3 video https //youtu.be/nmbldhrzp3e plot analysis results seen controller saturating motor controller set limit pwm pulse used control esc code maximum minimum set enough quad lift itselft feel weightless make room tuning altitude/height pid controller maintaining throttle ratio motors pid controllers something wrong implementation limiting maximum throttle implementation //check pwm saturating method used trim outputs pwm gets fed gpiopwm function avoid exceeding earlier set maximum throttle maintaining ratios motor throttles float motorpwm1 motorpwm2 motorpwm3 motorpwm4 float minpwm motorpwm int i=0 i++ // get minimum pwm filling motorpwm minpwm minpwm=motorpwm cout minpwm minpwm endl minpwm basethrottle float fillpwm=basethrottle-minpwm //get deficiency use fill motors cout fill fillpwm endl motorpwm1=motorpwm1+fillpwm motorpwm2=motorpwm2+fillpwm motorpwm3=motorpwm3+fillpwm motorpwm4=motorpwm4+fillpwm float motorpwm2 motorpwm1 motorpwm2 motorpwm3 motorpwm4 float maxpwm motorpwm2 i=0 i++ // get max pwm trimming motorpwm2 maxpwm maxpwm=motorpwm2 cout maxpwm maxpwm endl maxpwm maxthrottle float trimpwm=maxpwm-maxthrottle //get excess use trim motors cout trim trimpwm endl motorpwm1=motorpwm1-trimpwm motorpwm2=motorpwm2-trimpwm motorpwm3=motorpwm3-trimpwm motorpwm4=motorpwm4-trimpwm possible solution possible solutions mind redesign camera mount lighter 20-30 grams less front heavy increase maximum throttle leaving less room altitude/throttle control anyone know optimum solution problem additional information quadcopter weighs motor/esc set dji e310 rated recommended thrust motor real world test showed capable motor setup weighing take-off weight tune roll pid gains set first rate pid gains setpoint dps set gains increase p gain response system disturbances steady oscillation increase gain remove oscillations increase gain correct long term errors bring oscillations setpoint dc gain repeat desired system response achieved using single loop pid controller checked data plots testing make adjustments increasing kd minimize oscillations increasing ki bring oscillations setpoint similar process cascaded pid controller reason rate small rate kp set gains started oscillate wildy characteristic high p gain https //youtu.be/scd0hda0fty set rate pid maintain placed setpoint degrees second used gain outer loop stabilize pid translate angle setpoint velocity setpoint used control rate pid controller roll degrees set point https //youtu.be/voaa4ctc5ru rate kp ki kd stabilize kp stable reaction time/rise time slow evident video,quadcopter pid stability,quadcopter stability pid
391,quadcopter carry heavy things,drinking couple friends said something like cool beer came got thinking seen crazy things people quadcopters polycopters possible expensive build quadcopter carry say crate beer 16-20kg bit tinkerer built minor things rasp tried quadcopter big piece work able fly crate beer right front pretty awesome aside strong quadcopter terms motors propellers battery frame complete noob comes rpm know begin course read available tutorials internet answer question look want quadcopter able carry something specific,quadcopter raspberry-pi,quadcopter pi raspberry
392,ipc-bridge problem,anyone able help getting ipc-bridge working ubuntu lucid installation matlab able finish last step compiling messages folders https //alliance.seas.upenn.edu/~meam620/wiki/index.php n=roslab.ipcbridge installation able rosmake ipc_bridge_ros enter roscd ipc_roslib make seems mex recognize commands get screen shot http //img13.imageshack.us/img13/6031/screenshot20121108at191.png note going ipc-bridge control pioneer implement fast-slam algorithm matlab,mobile-robot software slam ros,mobile ros slam robot software
393,need help regarding odometry using encoder motor raspberry pi,project odometry using raspberry pi know encoder motor tell much distance robot covered idea ho implement need guideline steps follow till interfaced motor raspberry pi counted number rotation questions follow plot map odometry using language library know anything give guideline steps follow,motor raspberry-pi odometry,pi raspberry motor odometry
394,determine current roomba state operating mode,using sci messages like determine current operating mode state irobot roomba like detect separate states cleaning docking station returning docking station error e.g trapped obstacle reliable way detect states using sci data roomba sci sensor packets remote control command buttons seem return called commands executed ones,roomba,roomba
395,typical method integrating neural net plc,integrate neural network online automation system example developed neural network predicts difficult measure variable reactor using multiple sensors use predicted variable tell automation system example increase/decrease stirrer speed someone implement idea commercial system develop function block simulate neural network run software reads writes plc control tags,sensors control,control sensors
396,software real-time ros system,know hardware real-time robot control system requires specific computing unit solve kinematics dynamics robot interval rtx assigns cpu cores calculation dsp board calculation configuration makes sure calculation ms. understanding ros runs ubuntu exclusive computing unit kinematics dynamics run different threads cpu operates ubuntu system path plan everything else question ros achieve software-real time slow sampling time makes sure calculation done time sampling time changes cycle time order fast possible ros somehow compensates cycle,microcontroller ros real-time,ros real microcontroller time
397,magnetometer measure high angular velocity small object,measure frequency little circle rotation image circle flying air circle touch anything rotation use simple trick count number complete rotation amount time supposed chance use gyroscope magnetometer accelerometer detect centripetal acceleration gyroscope magnetometer calculus frequency problem high frequency circle reach hz simple calculus know need gyroscope measure big angular velocity need big range values radius circle cm w angular velocity rad/sec acc_centr w^2 r seen accelerometer gyroscope industrial purposes range question understand magnetometer used kind application considering magnetic field circle magnetometer used measure change inclination datasheet read ofter sensor communicate arduino nothing quick rotation reason magnetometer limits gyroscope accelerometer,electronics,electronics
398,get live audio robot,building robot want able hear sounds environment laptop best way get live audio robot microphone computer looked solutions hosting live audio streams using packages icecast wondering better solutions robotic applications additional details access hardware raspberry pi arduino etc,real-time digital-audio,real digital audio time
399,choosing motors quadcopter frame,bought drone frame q450 glass fiber quadcopter frame http //hobbyking.com/hobbyking/store/__49725__q450_v3_glass_fiber_quadcopter_frame_450mm_integrated_pcb_version.html considering buying ax-4005-650kv brushless quadcopter motor http //hobbyking.com/hobbyking/store/__17922__ax_4005_650kv_brushless_quadcopter_motor.html motor fit frame determine motor fit frame,quadcopter,quadcopter
400,instantaneous center rotation differential drive robot,want find instantaneous center rotation differential drive robot assuming know robot travel particular linear angular velocity v w use equations given path following circular arc point specified range bearing come x_c x_0 |\frac v w \cdot sin \theta_0 y_c y_0 |\frac v w \cdot cos \theta_0 using webots simulator dumped gps points robot moving circle constant v w single x_c y_c get center point point plot matlab look red points image perceived centers seem trace curve detail missing confused happening trying figure center check obstacle circle collision occur,mobile-robot motion,mobile motion robot
401,rc servo motors rotate,know rc servo motors designed precise movement d.c. motors continual rotation rc servo motors limited movement rotation made continually rotate say movement limited specific arc depend type rc servo motor seen videos industrial size steppers rotating wondering mg995 rc servo motors test want make sure make purchase keep seeing conflicting information example instructable modify rc servo motor continuous rotation motor walker robot implies rc servo motor rotate else need modify addendum realised digging google highvoltage points answer confused steppers servos addition found towerpro mg995 servo continuous rotation,stepper-motor rcservo,stepper motor rcservo
402,need gyro airplane flight stabilization system,working basic airplane flight stabilization system precursor full autopilot system using salvaged wii motion nunchuk create imu goal keep wings level mix users commands correct saying require gyro axis accelerometer detect pitch roll adjust ailerons elevator compensate extend design goal keeping wings level flying straight line different things given wind turbulence gyro become necessary accomplished gps guidance tried integrating gyro values get roll pitch yaw evidenced question level knowledge topic prefer simpler mathematics code thanks help,uav accelerometer imu gyroscope,imu gyroscope accelerometer uav
403,interpret specs motor motor driver,ran confusion reading motors consider motor specs maximum motor voltage load current max stall current considering using texas instruments l293d specs output current channel peak output current channel use l293d run motor forth safe happen motor requires mean need different driver ic specs say want drive motors need compensate current current power supply motor driver,mobile-robot motor,mobile robot motor
404,identify objects space,using depth sensing camera kinect like retrieve position predetermined object e.g cup fork etc able grab object way achieve,computer-vision algorithm,computer algorithm vision
405,assigning serial number guid microcontroller,league question seems using multiple arduino uno boards network want assign guid serial number board send data central able find device assign name device way assign guid serial number device message send central server programming burn hex arduino way burn program give output string guid+serial number device program eeprom burn main code arduino pick guid+serial id combo write message arduino pushing central server way asking program eeprom different program arduino files running possible way,arduino microcontroller communication,communication microcontroller arduino
406,designing ackerman steering principle autonomous robot,working high speed autonomous robot 6-7 m/s obstacle detection senses traffic lights used raspberry pi arduino uno steering mechanism wanted implement ackerman steering read principle understood basics make design using switchboards sold strong lightweight waterproof switchboards cheap got big axle small axle cut l-shaped pieces join axles ... confused connect wheels axle make rotate side site let upload pics right try asap electric drill anything make happen p access printer help appreciated ... p.s- suggestions robot feel free share looking good steering method robot,arduino raspberry-pi navigation steering,pi raspberry navigation steering arduino
407,cheapest printer gears,useful print gearing solutions print gears time know market cheapest printers accommodate task -- gears need 2-3 inches diameter bear light load less foot pound material need strong machinable -- tolerances need sufficient teeth mate preventing hang sense tolerances allow gears mate -- machine precise print hole mate shaft specified dimensions due friction excellent improvise tiny shaft hole -- used proximity pavement melting temperature excess desirable required -- given element interact elements printed metallic shaft compatibility external resources required grateful anyone shed light issue,wheeled-robot,wheeled robot
408,current-limiting stepper motors reprap,working robot project tired finding parts job time create parts printer trick many parts printers share lot cnc mill terms control parts question building reprap style printer use heavy duty parts motors hoping make aluminum capable axis mill found bipolar stepper motors amps coil according reprap.org website recommend low voltage seems use voltage limit current build reprap use current limiting stepper drivers arduino software find online get large stepper motors lot trouble,arduino stepper-motor stepper-driver cnc reprap,arduino stepper driver cnc motor reprap
409,cc3d replacing rc emitter rpi,trying control quadcopter using te openpilot cc3d board raspberrypi main idea replace signals rc cc3d rc receiver rpi connected rc receiver inputs cc3d know rc signals cc3d pwm rpi able control channels using rpio library create pwm software make tests find way move motors using ground control system openpilot software configure cc3d sure need send pwm signals order something sure flight mode switch works suposse works way channels using pwm anyone made anything similar,raspberry-pi quadcopter uav,quadcopter pi raspberry uav
410,wiring unipolar stepper bipolar stepper driver decrease holding torque,read wire unipolar stepper bipolar driver ignoring extra wires concern connecting unipolar stepper bipolar driver cause lose torque holding operating increase read bipolars bang energy-wise transform unipolar stepper bipolar good driver work think run true,torque stepper-driver stepper-motor,driver stepper torque motor
411,building quadcopter motors props calculations,year old like apologise beginner understand professional talk hobby building quadcopter flight controller kk esc q brain frame kk fpv frame addon kk/fpv long frame upgrade kit tx rx hobbyking tx rx mode battery nano-tech mah sure motor propellers use know frame motor mounts m3 screws sure means questions calculations find much thrust quad needs produce useful calculations using calculations best cheapest motors propeller suited motor p.s looking durable cheap motors live london shipping problem immense bill thanks lot time sid,quadcopter motor,quadcopter motor
412,need suggestions object recognition,tasked creating system recognize fish pulled lake system able identify type species fish turn arduino projects based read image processing sounding arduino processing power anyone suggestions development boards cameras interface board look option http //www.finboard.org/videos/introducing-finboard utm_campaign=embedded 2013-q3 utm_medium=email utm_source=eloqua seems nice type thing anyone used anything thanks,arduino microcontroller raspberry-pi cameras,pi microcontroller cameras raspberry arduino
413,inverse kinematics joint contraints,manipulator revolute joints movement limitations apply inverse kinematics getting results limits please provide algorithm implements inverse kinematics considering joint limitations,inverse-kinematics,inverse kinematics
414,bldc motors erratic behavior arduino program,"making quadcopter flight controller using arduino mega sample code wrote order test esc timers motors byte channelcount_1 channelcount_2 channelcount_3 channelcount_4 int receiverinput_channel_1 receiverinput_channel_2 receiverinput_channel_3 receiverinput_channel_4 start unsigned long channel_timer_1 channel_timer_2 channel_timer_3 channel_timer_4 current_time esc_looptimer unsigned long zero_timer timer_1 timer_2 timer_3 timer_4 void setup // put setup code run |= b11110000 //setting digital pins output ddrb |= //setting led pin output //enabling pin change interrupts pcicr |= pcie0 pcmsk0 |= pcint0 //channel pin pcmsk0 |= pcint1 //channel pin pcmsk0 |= pcint2 //channel pin pcmsk0 |= pcint3 //channel pin //wait till connected receiverinput_channel_3 || receiverinput_channel_3 || receiverinput_channel_4 start++ portc |= b11110000 delaymicroseconds // pulse esc portc b00001111 delay //wait ms next loop start == // loops digitalwrite digitalread //change led status start //loop start low //turn led zero_timer micros void loop // put main code run zero_timer micros zero_timer micros portc |= b11110000 channel_timer_1 receiverinput_channel_3 zero_timer //time calculation pin channel_timer_2 receiverinput_channel_3 zero_timer //time calculation pin channel_timer_3 receiverinput_channel_3 zero_timer //time calculation pin channel_timer_4 receiverinput_channel_3 zero_timer //time calculation pin portc //execute till pins set low esc_looptimer micros esc_looptimer channel_timer_1 portc b11101111 //when delay time expires set low esc_looptimer channel_timer_2 portc b11011111 //when delay time expires set low esc_looptimer channel_timer_3 portc b10111111 //when delay time expires set low esc_looptimer channel_timer_4 portc b01111111 //when delay time expires set low //interrupt routine pci0 receiver isr pcint0_vect current_time micros //channel pinb b00001000 channelcount_1 == channelcount_1 channel_timer_1 current_time channelcount_1 == channelcount_1 receiverinput_channel_1 current_time channel_timer_1 //channel pinb b00000100 channelcount_2 == channelcount_2 channel_timer_2 current_time channelcount_2 == channelcount_2 receiverinput_channel_2 current_time channel_timer_2 //channel pinb b00000010 channelcount_3 == pinb b00000010 channelcount_3 channel_timer_3 current_time channelcount_3 == channelcount_3 receiverinput_channel_3 current_time channel_timer_3 //channel pinb b00000001 channelcount_4 == channelcount_4 channel_timer_4 current_time channelcount_4 == channelcount_4 receiverinput_channel_4 current_time channel_timer_4 issue bldc motors using work connected arduino stop change direction rotation throttle input tested connecting transmitter work fine perfect rotation speed someone please help tell going wrong edit realize posting entire arduino code overkill trying solve problem days june,16 hope someone point improvements/corrections code",quadcopter arduino brushless-motor esc,quadcopter brushless esc motor arduino
415,papers algorithms robotics,cs student need give 30-minute lecture 1-2 papers describing 1-2 algorithms main problems robotics navigation coverage patrolling etc. background robotics take classes algorithms ai including basic ai algorithms a* ids ucs subjects decision trees game theory etc. difference describing need paper refer actual physical robots algorithms real problems physical world opposed ai agents theoretical algorithms required lecture 1-2 academic papers published respectable amount citations suggestions papers appreciated,navigation algorithm theory coverage,coverage navigation theory algorithm
416,turning differential drive robot specific angle,given robot wheels radius r axle length want set wheel speed turns phi fast possible timestep milliseconds thought wheel speed set v desired_heading-actual_heading circumference_wheel_trajectory wheel_radius converge right angle slow becomes slower approach angle want alternative/better way,kinematics,kinematics
417,rpm rpm dc motors cost,today going buy motor online saw rpm rpm dc motors cost possible change rpm requiring additional parts cost,motor,motor
418,ros kinect data callbacks,get rgb depth data kinect found little tutorial http //wiki.ros.org/cv_bridge/tutorials/convertingbetweenrosimagesandopencvimagespython fine able get data demand callback triggered assuming try get data faster available appreciate help go easy ros jargon learning ... thanks,ros kinect,kinect ros
419,provides degree-of-freedom imu reduntant data,basic question concerning sensor fusion standard dof imu mean cheap things tinkerer home provides values accelerometers gyroscope magnetic field measurements pressure sensor temperature know accel-data provide long term stability useless short term gyroscope less vice versa tons strategies marry values magnetic field measurement fit framework magnetic field measurement provide sensors combined guess measurement reliable sensors fit br,imu sensor-fusion,sensor fusion imu
420,implement ins accelerometer gyros magnetometer,building walking robot need know moves using on-board intelligence plan using accelerometers gyros magnometers needed able detect robot moves problem dont know program internal navigation system imu software algorithms needed clarify problem need know program micro controller read sensors able tell robot displaced previous measurement used sensor board similar use determine displacement,software imu deduced-reckoning artificial-intelligence,software intelligence artificial imu reckoning deduced
421,simple robot learn ros,beginner ros wanted know build simple robot learn ros following components available arduino uno simple wheeled robot chassis motors l293d motor driver ultrasonic sensors infrared sensors,arduino slam ros beginner ultrasonic-sensors,beginner arduino slam ultrasonic sensors ros
422,irobot create sensors,someone please provide list sensors create hoping get want sure ultrasonic sensors bump sensors,irobot-create roomba,create roomba irobot
423,simple data-glove go mega due,mcu/robotic world working atmega+cvavr please bear making prototype data glove keyglove much simpler consist imu sensors mpu reading fused built dmp reads hand position orientations minimum flex sensors reads figer flexion specific sensors plugged arduino reading filtered low pass kalmann arduino transferred serial pc pc translates data virtual gripper move object vr planned use uno pansenti’s mpu9150 library code realised flash memory size left tiny i.e mpu9150 lib code size ~29k uno project early stage lot things expected changed added little flash memory left much looking mega replacement flash realised newer due faster processor cost main concern robustness compatibility designing hw interface arduino making circuits addding shield code development available library streaming filtering sensor readings bit mcus helps overkill know question sound localized believe lot projects utilize multiple sensor reading filtering benefits discussion revise question needed main question bit mcus perform better multiple sensor reading signal filtering compared bit mcus case.. go mega due,arduino imu,imu arduino
424,sparse matrix ekf slam,done ekf localization algorithm known unknown correspondences stated probabilistic robotics results make perfect sense estimate position robot using gps odometry moved ekf-slam known correspondences book understand matrix f_ x j \begin bmatrix \cdots \cdots \\ \cdots \cdots \\ \cdots \cdots \\ \cdots \cdots \\ \cdots \cdots \\ \underbrace \cdots 3j-3 \underbrace \cdots 3n-3j \\ \end bmatrix bottom matrix following f_ x j \begin bmatrix \cdots \cdots \\ \cdots \cdots \\ \underbrace \cdots 3j-3 \underbrace \cdots 3n-3j \\ \end bmatrix following assuming n f_ x j \begin bmatrix \\ \\ \end bmatrix f_ x j \begin bmatrix \\ \\ \end bmatrix ones represent specific landmark,slam ekf,ekf slam
425,connect arduino uno3 l293d motor driver colour sensors,trying autonomous multi coloured lines following robot parts bought include arduino uno colour sensors taos tcs l293dne motor driver robot chassis including dc motors wheels caster wheel trying figure connect components example arduino colour sensor l293d motor connect order motor rotate directions need solder anything,mobile-robot,mobile robot
426,continuous variation discontinuous function,differential equation connects velocity point fov camera velocities robot joints \dot s=j \dot q vector x coordinates point fov j interaction matrix q vector joint positions certain point whose velocity tracking point remains fov \dot defined change point online time instant point s_t time instant t+dt point s_ t+dt \dot defined create filter produce continuous variation \dot want perform occlusion avoidance order want compute minimum distance feature point target object occluding object discontinuous due fact occluding object appear fov nearer target measured,cameras visual-servoing filter,filter visual cameras servoing
427,tune pid parameters using fuzzy logic,used ziegler method tune parameters pid controller control robot position implemented fuzzy logic self-tuning parameters inputs fuzzy logic controller position error error rate know problem due understanding effect parameter well problem confused setting fuzzy rules need use high low values kp kd ki achieve best tuning kp low error hence robot desired position question applies parameters,control pid tuning,control pid tuning
428,regarding finding sensor,looking sensor able read displayed data lcd display digits output sensor fetched microcontroller anyone suggest sensor please,sensors hall-sensor,sensors sensor hall
429,arduino power supply,want power arduino uno know connecting usb pc dc power supply.but want connect battery source see image know silly question battery connector regular dc jack found rc toys power arduino battery connect dc power supply adapter charge discharged please mention specifications dc power supply adapter used charging battery,arduino battery,battery arduino
430,controlling quadrotor pc,need control quadrotor pc using joystick got mini-beetle quad v929 beetle 4-axis nrf24l01+ wireless transceiver module chip transceiver possible write arduino program make speak research found v929 model uses flysky protocol works nrf24l01 transmitter chip mentioned better ways controlling quad pc arduino board,arduino quadcopter radio-control,quadcopter control radio arduino
431,build liquid filling machine using piston,team developed filling machine liquids uses piston measure deliver liters bottles built mechanical parts replace electronic ones build machine pull liquid reservoir fills bottle using piston electronic parts stepper motor linear actuators sensors understand vague aligned response appreciated update machine max speed litter bottle water seconds bottles minute higher viscosity liquids take longer spill liquid needs filling acceleration control assume operation modes bubbles bubbles able change volume lcd menu thought single main valve switches reservoir controlled use valves,sensors stepper-motor mechanism,sensors stepper mechanism motor
432,get data serial port,project related telemetry want make ardupilot programmed arduplane send serial port sensors informations height gps position etc.. tried ardustation change firmware want idea read ardupilot serial port using arduino uno saving sd card real-time ardupilot needs send data user input something tried manipulate arduplane source code either someone something need advice,arduino ardupilot,ardupilot arduino
433,build garage robotic assembly lines,new robotics like build smaller robotic arm manufacturing facilities want small robotic material handlers pick handle small objects x12 x12 objects small robotic assembly line garage kits purchase deals robotic assembly lines wondering anyone dealt suggestions,robotic-arm,arm robotic
434,meaning writhe matrix,following equation writhe matrix article topology based representation page meaning second part equation sure typo article article hierarchical motion planning page neglects term ...,mobile-robot control robotic-arm wheeled-robot motion-planning,control mobile robot arm motion planning robotic wheeled
435,public training data vehicle detectors computer vision,question anyone familiar object vehicle detection research new computer vision confused training object detection classifiers objective vehicle detection reading vehicle detection literature weeks bit confused confused evaluation evaluation system research community benchmarked dataset used testing data performance system depends much data used train training datasets make uniform method comparisons seem keep finding papers using benchmarked datasets evaluation making mention got training data,computer-vision,computer vision
436,need specifications operate stepper motor rpi arduino,disassembled stepper motor working contains photo motor label bottom motor need identify stepper motor retrieved scrap project budget constraints force use scrap motor tried drive using l298 h bridge find right bit sequences get running tried search specifications sheet internet label using rpi arduino board run need pin diagram specifications motor guys seen type,arduino raspberry-pi stepper-motor,pi raspberry stepper motor arduino
437,differential drive robot control,edited differential drive robot needs drive hall stay ultra sonic sensors side thought implementing pure pursuit lookahead distance etc sure correct approach lower level pids motor control working need help choosing path planning algorithm pure pursuit work needs people suggestions,control pid differential-drive,control differential pid drive
438,magnetic low insertion force connector,building robotic tea-maker/watchdog robot power problem like able robot approach socket insert power cord cheap immersion heater see links turn power precision required plug wall capabilities stepper motors/arduino solution magnetic breakaway power cord charger mac higher voltage deep fat fryers suitable ones high power see links problem need sides connector find magnetic breakaway power cord opposite side built deep fat fryer fancy buying whole fryer get little part ... ideas alternatives cord anyone know induction chargers resort mechanical on/off switch leave robot plugged hoping something bit sleeker links immersion heater fryer cord,untagged,untagged
439,robot mechanical part programmed exert specific force,thinking projectiles need propellant gunpowder seen coils gun little way wondering know force required propel object program robot exert force propel object way propelled fashion,force-sensor,sensor force
440,ardrone navdata reading error,"trying read ardrone using following callback function int state battery void callback const ardrone_autonomy :navdata :constptr msg state msg- state battery msg- batterypercent std state state std :endl std :cout battery battery returing value echo navdata linux terminal topics publishing non-zero value error edit debugging found callback function called wrote subscriber node ros :subscriber sub ardrone.subscribe /ardrone/navdata ,1 callback going wrong",quadcopter,quadcopter
441,pid quadcopters,mentioned pid output values correspond error desirable error current error units let say using proportional part pid better map output pid values corresponding thrust values motor better increase proportional coefficient kp output values correspond proper thrust value motors example desired angle sensor reading degrees difference multiplied kp output added subtracted current thrust depending motor increase kp much quadcopter oscillating listening controller command sending desired degrees joystick map values listening joystick commands oscillating much happening mapping pid output values bigger values increasing kp,arduino pid,pid arduino
442,composition rotation matrices,moment learning rotation matrices seems confusing r_a^c=r_a^br_b^c rotation coordinate frame c c b c different coordinate frames r_a^c matrix defined r_a^c= \left \begin matrix xa⋅xb xa⋅xb \\ ya⋅yb ya⋅yb \end matrix \right x_a y_a x_b y_b coordinates points given different coordinate frame see using standard multiplication stated give matrix r_a^c form clarification helpful,frame,frame
443,erratic motor behavior due faulty remote control grounding something,using arduino mega run motors motor controllers using ps2 controller remote control joystick rest motor stop problem motor moves joystick rest joystick produce forward motion motor grounding issue ps2 remote control issue ir others.. gnd arduino board connected gnd external battery troubleshoot thanks,mobile-robot control power,mobile control robot power
444,simple equation calculate needed motor torque,suppose dc motor arm connected arm length arm weight motor speed connect weight end arm much torque needed motor complete spin provided motor placed arm vertical simple equation input weight get required torque provided factors remain,motor torque,torque motor
445,px4 communication,"anyone know px4 software using eclipse program want open new uart door write following commands ... static int uart2=open /dev/ttys1 o_rdwr o_nonblock write uart2 hi ,3 working anyone idea",microcontroller communication,communication microcontroller
446,plotting location using wheel encoder data,context working sfu mountain dataset http //autonomylab.org/sfu-mountain-dataset/ ugv image sfu mountain dataset website used following state update equations husky a200 differential drive state update prob robotics thrun al x theta represent state next time step plotting x positions based wheel encoder data v_fwd w dataset provides vr vl curve seems weird unexpected wheel odometry data http //autolab.cmpt.sfu.ca/files/datasets/sfu-mountain-workshop-version/sfu-mountain-torrent/encoder-dry-a.tgz blue wheel red gps actual path question curve expected considering inaccuracy wheel something missing wheel encoder data bad ekf odom imu work ps worried ekf update step concerns horrible wheel odometry data,localization wheeled-robot ekf odometry differential-drive,odometry localization ekf differential robot drive wheeled
447,bipedal robots difficult,sure asked lots simulations bipedal locomotion algorithms online evolutionary algorithms converge good solutions seems algorithm part bipedal locomotion well-understood well simulations able real world model delay noise model servo response curve understand difficult make walking robot robot big dog rare,walk,walk
448,iphone controlled rc car,r.c car program computer code car perform movements.i like application design.where shows cars path available software code saves lots time,software research,research software
449,upload sketches arduino raspberry pi,robotics project raspberry pi arduino arduino uno connected raspberry pi using raspberry pi putty ssh want setup user interface raspberry pi want use arduino ide work load arduino sketch system,arduino raspberry-pi embedded-systems first-robotics linux,raspberry embedded arduino robotics systems linux pi first
450,low-cost centimeter accurate satellite positioning gnss/gps,looking cheapest possible gps setup centimeter precision much hw hacking able produce pcb soldering though way kind easy-to-assemble setup welcome know piksi thing expensive seems cm precision possible less employing usd raw gps sensor ordinary pc rtklib software sure better use gps sensor setup rtk base station rover get corrective dgps data region czech republic seems national grid allowing stream correction data reasonable cost application passenger car limited power source low power needed nice using position readings opencv need get data c/c++ code application data collection raw gps post-processing,gps,gps
451,sending commands ubuntu,irobot create model need send commands open interface ubuntu using gtkterm baud press button drives tried send commands raw data hexadecimal data work wrong,irobot-create roomba linux,create roomba irobot linux
452,drone need magnetometer accelerometer gyroscope sufficient,drone need magnetometer drone information think tell direction need accelerometer gyroscope,mobile-robot magnetometer,mobile magnetometer robot
453,bec multiple esc quadcopter,building quadcopter discovered esc built-in bec wondering better use delivered power esc unique bec work think easier configure set esc prevent esc behavior wrong image talking edit trying find original image upload given ian mcmahon appears right thing misunderstood role becs right schema look edit trying find original image upload sure getting need escs integrated becs connect cables flight controller,electronics quadcopter bec esc,quadcopter bec electronics esc
454,stereo camera calibration data standardized,standard format stereo calibration data various matrices saved xml stored load calibration data generated say opencv script c opencv script say c++ different software create disparity image,computer-vision calibration stereo-vision,stereo computer vision calibration
455,apm mission planner install firmware failure mac os x,installed multiple versions apm windows ubuntu osx connect ardupilot install firmware error get started downloading http //firmware.diydrones.com/copter/stable/apm2-hexa/arducopter.hex finished downloading /var/folders/r4/s_j4c02s3wvcx6wy41__rnwh0000gp/t/apm planner.uq1800 opening firmware file ... unable open file /var/folders/r4/s_j4c02s3wvcx6wy41__rnwh0000gp/t/apm planner.uq1800,ardupilot,ardupilot
456,get prevent twisting cables,planning create motor turret described question simplify problem thinking wind turbine generator main head rotate degrees face wind prevent power sensor wires coming head shaft twisting,sensors wiring,sensors wiring
457,correcting gps track visual odometry sensor fusion,trying build low cost precise outdoor positioning explored ns-raw rtklib doable need base station get correction data rover external correction data hassle action radius base station limited solution straightforward deal in-house streamed correction data wondering able improve accuracy ordinary uncorrected gps+glonass device found common smartphone stereo visual odometry today consumer gnss chips seem stable accuracy range viso library translation error distance idea use visual odometry smoothing rough gps track question done terms sw. input tracks gps device viso library think kind filter fuse sensor data get greater precision,computer-vision gps sensor-fusion odometry,odometry fusion computer sensor vision gps
458,servos power supply quadruped robot,facing problem building quadruped robot figuring efficient power supply needed servos using mg995 tower pro servos powered lithium batteries volts know servos something needed added fitted batteries robot body suggestions please,power battery servomotor walking-robot,battery servomotor walking robot power
459,cheapest way detect identify vehicles entering gate real time,want detect identify vehicles passing gate live video feed gate thought process detect number plates help opencv graphics library available problem size number plates vary language number plates written good ocr performance next idea put qr code windshield vehicles vehicles supposed enter area private enlisted vehicles confident able detect identify qr codes real time accuracy qr codes get pixelated due low resolution video anyone suggest cheap way adopt detect identify vehicles nfc cheap sensors used purpose,sensors design computer-vision,sensors computer design vision
460,polling timer interrupt,hope build simple line follower robot got problem discussing pic programming planed write endless loop check sensor panel reading relevant stuff reading friends told use timer interrupt generate interrupts definite time periods interrupt check sensor panel reading relevant stuff reading figure best endless loop main method timer interrupt method best way,sensors microcontroller interrupts,sensors microcontroller interrupts
461,much drawn max battery,using brushless motors octocopter motor run use batteries high c number needed running motors load draw battery max used run hot many ampere hours drawn battery empty many car batteries drawn stated capacity need charged,battery,battery
462,mapping area mav,researching cost-effective way scan area mav exploraton use cad/civil purposes use point cloud data cad major sensors available problems kinect use outside high computation power stereo high computation power expensive lidar expensive real time heavy need system mav/quadrotor work wifi/wireless scan outdoors expensive gives data real-time.please suggest system close requirements stereo operated wifi,kinect mapping stereo-vision 3d-reconstruction,kinect stereo mapping vision reconstruction
463,jacobian abb irb140 robot,someone please help jacobian matrix equations abb irb140 robot easy way derive given dh parameters need implement form control working thanks,control robotic-arm kinematics dh-parameters,control dh parameters kinematics robotic arm
464,frequency quadcopter output-sense-calculate-output update loop need stay stable,mm foot motor-to-motor quadcopter frequency output-sense-calculate-output update loop need stay stable estimating total takeoff weight pounds kg expect motors batteries,stability quadcopter,stability quadcopter
465,rviz transform error base_link camera_link,working differential drive robot motor wheels encoders caster wheels robot intel realsense depth camera launch rviz thee global option fixed frame set base_link shows transforms differential driver nodes error appears depth camera nodes message saying transform camera_depth_frame baselink transform camera_depth_optical_frame baselink transform camera_link baselink transform camera_rgb_frame baselink change global option fixed frame camera_link see transforms depth camera differential drive transforms available hope help,ros,ros
466,navigating maze using path-planning dijkstra,working robot able navigate maze avoid obstacles identify objects monochromatic bitmap maze supposed used robot navigation till processed bitmap image converted adjacency list use dijkstra algorithm plan path problem extract entrance point/node exit node bmp image dijkstra algorithm plan path robots starting position different inch entrance point entrance point maze supposed move entrance point using arbitrary method apply dijkstra algorithm plan path maze entrance exit way stop x marked bmp file attached x boxes pot balls plan path entrance point exit point entrance box second exit point think boxes placed shortest path starting position different entrance point match robot physical location coordinates program move entrance position starting position error deal navigate bases coordinates provided dijkstra use ultrasonics prevent collisions yes give idea use ultrasonics coordinates,arduino mobile-robot localization motion-planning mapping,localization mobile arduino robot mapping motion planning
467,finding light load high precision servo motor,project requires able rotate object degrees object small lightweight let say several grams axis spin direction needs able stop +/- +/-240 degrees origin limited experience motors robotics understanding servo motor best bet accuracy incorrect please let know know nothing motors spec sheets list lot specs mean much hoping learn mean time specifications need focusing requirements need high speed say accurate perfect micrometer like able run loop stopping hundreds times noticeable variance precise better specific accuracy let say object rotated flat surface top stopping points inspection surface needs appear level time hundreds cycles requirements met servo used building quadricopter going looking something higher grade,servomotor,servomotor
468,using arduino control connection pins,got http //www.pololu.com/catalog/product/1182 ... a4988 stepper motor driver carrier attempting control connection reset sleep pins logic code running arduino motor runs pins connected control stepper powered arduino generating extra heat designate pin control connection pins use digitalwrite pin high low switch power stepper note data sheet mentioned powering stepper reset sleep needed switched high,arduino logic-control stepper-motor stepper-driver,control arduino stepper driver motor logic
469,quadruped learning simulator,building robot legs quadruped dof degrees suggested use simulator learning computer upload algorithms robot using arduino uno robot software use simulate learning able upload arduino board,mobile-robot arduino microcontroller machine-learning simulator,arduino mobile microcontroller simulator robot machine learning
470,building mobile camera platform,experience robotics need build mobile platform streaming camera idea plug android phone pan/tilt unit wheeled robot drive look wifi solved software interface controller issues appreciate advice build wheeled platform initial idea buy cheap rc car remove electronics replace approach worked purchased new bright f-150 truck size good plenty storage space ran problem thing assumed front wheel turned kind servo found small gear shaft driven servo conventional motor spins jammed extremes travel wheels straightened power removed small spring side means angle wheels turned angle way small need using rc car work buying things like hear opinions experienced people right track need get better rc car designed options suitable,mobile-robot,mobile robot
471,arduino mega shield v2.0 compatibility arduino due,title says.. work know due volt limitations want build hexapod servo shield looking http //yourduino.com/sunshop2/index.php l=product_detail p=195 compatible alternative shield work seem much due,arduino,arduino
472,real time simulation model sensors matlab,trying make real time simulink model leddar sensor ledddar sensor evaluation kit matlab using usb port use acquisition toolbox control toolbox leddar vendor listed toolboxes appreciate someone help new real time simulink,sensors matlab simulator real-time,real sensors time matlab simulator
473,approach using pid get differential robot driving straight,consider differential drive robot motorized wheels encoder attached feedback supposed function dc motor takes float sets pwm signals provide proportional amount power motor motors created equal sending motor pwm signal makes robot veer left right trying think drive robot straight using encoders attached motor input pid loop take difference left right encoders error range normalize -1 map motor powers get error left motor turned right motor left motor set right motor set causing hard left issues better approach,pid differential-drive,differential pid drive
474,manage interrupts avr,number interrupt service routines avr include interrupts usart serial communication timers spi communication use circular queues using start end pointer boundary checking problems start occur avr starts get overloaded circular queues lose chunks data solve reduce load avr example skipping cycles timer manual process reduced avr appears problems want consistent timer periods average processor load queues fill chance case spurious overloading times make adaptive avoid queue overflows,microcontroller avr interrupts,interrupts microcontroller avr
475,force servo motor reasonable choice actuator,working application need linear angular force operate linkage mechanism know amount force need anticipate less kg n travel distance linkage input cm look available servos seem exist scale-model realm remote control vehicles uncertain suitable application example futaba digital servos mega-high torque s9152 listed kg/cm understand means cm center servo shaft expect kg force wanted cm travel distance need cm radius diminish applied force kg required question understanding calculation accurate looking types actuators servos seem become expensive kg/cm torque purposes project budget actuator application reasonable control intermediate positions travel range good holding power fast operation reason dismissed idea using linear actuator driven gearmotor worm drive new robotics usage motorized actuators used pneumatic cylinders many years application use pneumatics edit comments additional constraints important linkage details linkage planar degree-of-freedom part portable system similar scissor lift mechanism theatrical effect motion amplified force reduced speed ratio mechanical advantage power carried person actuation needs battery-operated tubing wiring person tubing wiring self-contained okay portable system battery-power used control system designed appropriate actuator rechargeable batteries likely employed actuators operate high motor exceed 1-2 amperes draw continuous operation hard limit pneumatic considered pneumatic actuation using co2 cartridges example client prefer use pneumatics ability stop/hold intermediate points motion range desirable complicated pneumatic actuators speed ideal actuator able move input coupling cm 1-2 seconds weight weight constraints well-defined carried person lightweight actuator less vary rest mechanism 6-8 kg size primary size constraint everything fit space measuring x x mm h x w x linkage mechanism extends collapses outside enclosure parallel width noise quieter better noise least priority servos seemed best choice job seem available sort torque need,servomotor,servomotor
476,piezoelectric sensors crushed,found load sensors piezoelectric measure small weights order grams need ... robot bursts high pressure bursts need measured ... wash pressure appears kg question sensors likely break fatigue realize piezos measure deformation ... big load order try ...,sensors,sensors
477,mah battery mean longer power power,lipo battery mah slower run energy larger power output thanks advance,power battery,battery power
478,motor current proportional thrust,making sure circuit airboat working safe checking motor amps max current running esc current burst amps recommended tested prop 3-blade runs motor amps quick calculations online calculator appears give value force way lbs measured ... type prop want gives thrust value motor current proportional thrust lbs amps running amount amps prop theory little less case safe application make sense physics terms power current*voltage proportional thrust need make sure thought process work choosing prop device short runs less seconds near-boundaries safe ...,quadcopter brushless-motor,quadcopter brushless motor
479,electronic noses detecting dog urine,limited experience sensors robotic components hope excuse lack detail question want set posts electronic noses detect dog urine want use information make map yard dogs perspective possible todays technology cost information relevant requesting lacking insight something think consider research please say,sensors electronics,sensors electronics
480,go home feature dji phantom project built quadcopter,access order make home feature work gps enough approach needed make happen used arduino mega imu stable quadcopter,arduino quadcopter sensors localization gps,quadcopter gps sensors localization arduino
481,robot arm stepper motors tool-chain hobbyist,built simple robot arms home using rc servo motors stepper motors till like build new arm steppers used arduino a4988 stepper drivers gcode calculating inverse kinematics real time think arduino enough powerful searching new tool-chain gcode interpreter inverse kinematics calculation stepper controller see linuxcnc beaglebone black cnc cape expensive hobbyist possibility found possibilities hobbyist implement robot arm working stepper motors,stepper-motor arm,stepper arm motor
482,best way fuse measurements imu lidar encoder information recursive bayesian filter,wheeled drive differential drive robot driving hall way flat robot turns spinning place traveling resulting direction slam algorithm need run online robot takes measurements strap imu/gyro measuring ax ay az wx wy wz ax refers acceleration x direction wx measures angular acceleration x-axis lidar scans hall way 270-degree arc measures ranges angles know way discernable features corners need find best way fuse proposed action measured encoder imu lidar data makes sense fuse yaw imu encoder data get better sense heading incorporate lidar data essence appropriate measurement model incorporate noise motion model adding gaussian noise σ addendum orthogonal question confusing using particle filter slam little confused represent uncertainty angular acceleration particles see options separate navigation filter using ekf anything find vector best-estimate angular acceleration matrix use matrix absolute truth particle filter drift particles uncertainty angular acceleration incorporate uncertainty particle drift option appears sensible sure principled way,kalman-filter slam particle-filter,filter slam particle kalman
483,distance calculation robots obstacles,problem robots obstacles space robot communicate measurements measure angles distances obstacles environment identical robot see obstacles angle theta combined distance distance robots calculated placed circles radius measured distance landmark triangles workings provides possible positions robot red black circles correspond robot blue green robot using relative size angle measurements discount positions robot leaves possible positions robot shown filled hashed circles possible calculate side robot landmarks distance robot measurements angle distance assign id obstacle information transmitted robot robot know obstacle designated id,localization kinematics,kinematics localization
484,wiring sensors black,cape make wiring sensors beaglebone black easier read guide wiring sensor beaglebone recommends attaching wires gnd +v signal pins messy unmaintainable small projects end several wires connected gnd/5v+ pins need replace repair something end disrupting wiring component project arduino guides assume bad practice least various gvs shields help organize groups gnd/5v/signal pins attach individual sensor cables anything similar beaglebone find anything appropriate googling breakout io cape find gvs cape less ideal exposes gpio pins everything exposes incompatible peripherals,beagle-bone,beagle bone
485,software use design pcb robotics field,best software price designing circuits pcb boards robots mean lots components different designing methods accuracy ... use altium designer think answers needs better ones market know,software circuit,circuit software
486,interfacing gpu image processing motor control,like make robotic system takes input video feed runs gpu-based image recognition video outputs commands set motors goal motors react video little latency possible order ms. gtx laptop running ubuntu connected camera heavy image processing takes output motor commands frequency days looking web design system loose end feasible b best approach interface laptop motors image processing run linux leeway change part things,control real-time,control real time
487,considerations design actuators loop systems robotic arm,let say industrial sized robotic arm want control joints non-linearity produced chain structure gravity weight loads lift focus speed power limitations want arm respond like avoid use prior knowledge inertial computation considerations considering play actuator design loop feedback control system limit maximum speed actuator smooth error variation increase damping actuators avoid high frequency instability find good control system pid make sure targets reached oscillations considerations mind know process es industrial designers follow edit said comments question concern design adaptive controller robot arm design joint control system actuator loop control need inertia masses computed controller adapt structure loads much interested know paper adaptive control field robotic arms,control pid robotic-arm design actuator,control pid design robotic actuator arm
488,dh parameters kinematic decoupling,possible decouple manipulator question asked earlier believe got right answers show drawings manipulator hesitating setup dh parameters forward kinematics see drawing depicted,kinematics forward-kinematics dh-parameters,forward kinematics parameters dh
489,neuromorphic engineering robotics,boggling paper research neuromorphic engineering implications robotics applications less applied field full academic papers difficult skim many ongoing projects applying analog digital circuitry design implement neurosynaptic simulations brain consumer oriented products ibm synapse qualcomm focus digital hardware academic research standford neurogrid etc zurich human brain project focus actual brain study using analog hardware anybody following engineering field he/she spread light explain implications methodologies toolsets community detail ps regarding toolsets talking feasible engineering methodologies commit field,mobile-robot artificial-intelligence research machine-learning,mobile intelligence robot artificial research machine learning
490,vacuum lifter moving playing cards,buy small vacuum lifter move playing cards robotics google-fu failing know search terms look ... webpages look find kind component essence want electronic version vacuum pen know search kind component found pneumatic valves complicated machinery ... want self-contained electronic vacuum pen planning move playing cards anyone idea look something thanks,robotic-arm actuator,actuator arm robotic
491,common process place robotic arm gripper,implemented simulation robotic arm grab things arm structure simple gripper top made simple ccd ik algorithm control arm use ways compute position last joint arm hand part means end-effector use analytical method place hand good orientation compute arm hand position giving ccd ik algorithm end-effectors finger hand used method grabbing arm robot willing find solution know people,robotic-arm inverse-kinematics,inverse kinematics arm robotic
492,aluminum vs carbon fiber,building quadrocopter scratch lot decision making need input material choice short listed aluminum carbon fiber arms support little short cash experiment considering enough money buy assuming access general tools table saw horizontal band saw cnc router water jet better material work edit deciding specs frame allow design liberty right goal assemble durable as-light-as possible frame withstand lot experimentation electrical side,design quadcopter,quadcopter design
493,notable limitations using java mindstorms nxt,long time java developer starting learn lego mindstorms nxt limitations using java api language robust platform found programming language use nxt mentions many alternatives answer helpful mention different languages limitations,nxt programming-languages mindstorms,languages mindstorms programming
494,guidance compensating internal forces closed loop chain,working legged robot generating joint torques robot seems stable extend robot goes instable center pressure moves border feet looking method move center pressure feet edges calculated joint torques sentis thesis http //ai.stanford.edu/~lsentis/files/thesis-sentis-2007.pdf mentioned somehow manages cancel internal forces keep feet flat supporting surfaces anyone got dealing internal forces understood literature modify nullspace calculated torques achieve cop remains geometrical center considered foot looking methods virtual linkage model seem work someone discuss virtual linkage model described http //ai.stanford.edu/~lsentis/files/tro-2010.pdf understood,stability legged,stability legged
495,rail material best used linear bearings,printer reprap several rails smooth rods guide head different axises printer head uses several linear bearings rails specification kind material best suited purpose linear bearings first assumption stainless steel corrode rust surface sure true printers printers different material allow linear bearings glide second choice reservations grade least resistant resource limited information help best suited particular application material suited purpose,reprap 3d-printing linear-bearing,reprap bearing printing linear
496,running dof inverse kinematics code works matlab python,asked question similar earlier believe new problem working figuring inverse kinematics given x z coordinate adopted jacobian method taking derivative forward kinematics equations respect angles input jacobian take inverse multiply step towards goal distance details look http //www.seas.upenn.edu/~meam520/notes02/introrobotkinematics5.pdf page onwards better picture something code matlab script runs gives solution seconds ycurrent using xcurrent starting position x zcurrent starting position xgoal .5 goal x/z values zgoal .5 theta1 angle dof theta2 angle second dof theta3 angle third dof xchange xcurrent xgoal current distance goal zchange zcurrent zgoal length segment segment segment xchange .02 || xchange -.02 || zchange -.02 || zchange .02 in1 theta1 equations stated link provided in2 theta1+theta2 in3 theta1+theta2+theta3 in4 -0.370*sin theta1 in5 -0.374*sin theta1+theta2 in6 -0.2295*sin theta1+theta2+theta3 jacob in1+in2+in3 in2+in3 in3 in4+in5+in6 in5+in6 in6 invjacob inv jacob xcurrent .3708 sin theta1 .374 sin theta1+theta2 .229 sin theta1+theta2+theta3 zcurrent .3708 cos theta1 .374 cos theta1+theta2 .229 cos theta1+theta2+theta3 xincrement xgoal xcurrent /100 zincrement zgoal zcurrent /100 incrematrix xcurrent zcurrent dx/dz/phi change invjacob incrematrix dtheta1/dtheta2/dtheta3 theta1 theta1 change theta2 theta2 change theta3 theta3 change xcurrent .3708 sin theta1 .374 sin theta1+theta2 .229 sin theta1+theta2+theta3 zcurrent .3708 cos theta1 .374 cos theta1+theta2 .229 cos theta1+theta2+theta3 xchange xcurrent xgoal zchange zcurrent zgoal end python code goes infinite loop gives results looked differences matlab code look exact clue grateful somebody take look point def sendarm xgoal ygoal zgoal lj ycurrent xcurrent zcurrent theta1 theta2 theta3 xcurrent zcurrent forwardkinematics theta1 theta2 theta3 xchange xcurrent xgoal zchange zcurrent zgoal xchange xchange -0.05 zchange -0.05 zchange in1 theta1 equations in1-6 pdf linked inv kinematics section in2 theta1+theta2 in3 theta1+theta2+theta3 in4 -0.370*math.sin theta1 in5 -0.374*math.sin theta1+theta2 in6 -0.2295*math.sin theta1+theta2+theta3 jacob matrix in1+in2+in3 in2+in3 in3 in4+in5+in6 in5+in6 in6 jacobian invjacob inv jacob inverse jacobian xcurrent zcurrent forwardkinematics theta1 theta2 theta3 xincrement xgoal xcurrent /100 dx increment zincrement zgoal zcurrent /100 dz increment incrematrix matrix xincrement zincrement change invjacob*incrematrix multiplying matrixes theta1 theta1 change.item theta2 theta2 change.item theta3 theta3 change.item xcurrent zcurrent forwardkinematics theta1 theta2 theta3 xchange xcurrent xgoal zchange zcurrent zgoal print xchange f zchange f xchange zchange print goals f f f theta1 theta2 theta3 right.set_joint_positions theta1 first pitch joint right.set_joint_positions theta2 second pitch right.set_joint_positions theta3 third pitch joint def forwardkinematics theta1 theta2 theta3 xcurrent .3708 math.sin theta1 .374 math.sin theta1+theta2 .229 math.sin theta1+theta2+theta3 zcurrent .3708 math.cos theta1 .374 math.cos theta1+theta2 .229 math.cos theta1+theta2+theta3 return xcurrent zcurrent,kinematics inverse-kinematics matlab python jacobian,python inverse kinematics matlab jacobian
497,dynamic model manipulator,stuck equation page http //www.cds.caltech.edu/~murray/books/mls/pdf/mls94-complete.pdf equation \frac \partial m_ ij \partial \theta_k \sum_ l=\max j ^n \bigl a_ ki \xi_i \xi_k ^t a_ lk ^t \cal _l a_ lj \xi_j \xi_i^t a_ li ^t \cal _l a_ lk a_ kj \xi_j \xi_k \bigr seems impossible process requires adding matrix going rowsxcolumns notation matrices \xi addition statement fit rules matrix addition mistake see,dynamics matlab,dynamics matlab
498,ekf-slam computing jacobians landmark updates,working informative guide ekf-slam difficulty understanding jacobians required update page jxr jz taking input taking current rotation robot addition odometry update ie rotation stored state vector taking angle inverse sensor model angle thanks,slam ekf python,python ekf slam
499,get continuous tracks tank treads move rate,got couple vex motors hooked duemilanove motors run tank treads motors run arduino using servo library problem tracks turn speed sent servo angle due fact continuous tracks many moving parts identical friction forces hard get get move speed moving speed given servo angle regardless friction vex motors strong meaning use vex powerful motor best trial error enough figure servo angle results equal speeds tinker tracks identical frictions thank much,mobile-robot motor tracks,mobile tracks robot motor
