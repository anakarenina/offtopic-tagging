,title,content,complete_tags,words_in_tags
0,approach write spin controller soccer robot,imagine programming wheel soccer robot type controller use spinning p pid goal controller make robot stand defined degree turn rotated hand robot use stepper motors robot servos need implement software written sample p type controller movement good like make better possible code follows void spinspeed int devidedvalue int addedvalue int correction degree correction degree -correction motorspeed degree motorspeed degree devidedvalue addedvalue motorspeed degree devidedvalue addedvalue correction range robot movement degree number -127 returned compass motorspeed number applied pwm,soccer control,control soccer
1,modify low cost hobby servo run,got hobby servos power hd able control arduino go angle set put running mode load take wherever goes possible going end stripping gears thought kill power servo force required move state possible looking hardware change software,control rcservo,control rcservo
2,good microcontrollers/socs robotics project,looking starting point project using popular systems ones support arduino uno raspberry pi lot willpower anyone built project using systems observation start simple line-following vehicle build afterwards,microcontroller arduino raspberry-pi,pi microcontroller raspberry arduino
3,nearest-neighbor data structure non-euclidean configuration space,trying implement nearest-neighbor structure use rrt motion planner order better linear brute-force nearest-neighbor search implement something kd-tree seems classical implementation kd-tree assumes dimension space split left right notion seem apply non-euclidean spaces instance working serial manipulator arm rotational links meaning dimension robot configuration space non-euclidean kd-tree algorithm modified handle kinds subspaces nearest-neighbor structure handle non-euclidean subspaces easy update query took look flann clear documentation handle non-euclidean subspaces,motion-planning rrt,motion planning rrt
4,good robotics software platforms operating systems available,company starting brand new robotics project trying design code robotics software platform scratch good existing ones useful software platform used academics industry robotic system compatible others people familiar like software platform able integrate new robotic hardware components contain wide array useful data processing visualisation tools make efficient use computing hardware,software platform,platform software
5,software use design pcb robotics field,best software price designing circuits pcb boards robots mean lots components different designing methods accuracy ... use altium designer think answers needs better ones market know,software circuit,circuit software
6,good methods tuning process noise kalman filters,tuning kalman filter noise matrices done trial error domain knowledge principled ways tuning kalman filter parameters,odometry localization kalman-filter,filter odometry kalman localization
7,ideas shooting ball soccer robot,best option use shooting system soccer robot implemented solenoid-based system shooting works methods check better mine,soccer mechanism,soccer mechanism
8,right propeller/motor combination quadcopter,many sites explain briefly problem propose combinations like detailed explanation going give quad agility need bigger motors/props heavy quad achieve level agility lighter quad edit understood subject quadcopter need high revving motors propellers providing thrust high revving motors require battery power larger propellers give thrust revolution motor question focused general characteristics various combinations specific questions spring mind given combination effect upgrading propeller size comparison installing higher revving motors changes need made lift heavier quad achieve agility quad,quadcopter,quadcopter
9,cheap web buy robotic pieces,love computer programming interact world programming better used steal school make little robots bounce collided wall want go needed pieces know good place buy pieces servos etc spanish page sell places spain better appreciate help aritzh,servos,servos
10,mobile robot localization known map,want localize mobile robot equipped laser scanner known indoor environment map occupancy grid perfect algorithms appropriate mobile robot localization,localization mobile-robot,mobile robot localization
11,use gesture based input robot pros cons xtion live kinect,title implement gesture recognition robot looking pros cons kinect xtion sensible options available thinking following open suggestions accuracy price driver quality power draw,kinect input,kinect input
12,tyre tread best suited road robot expected deal muddy conditions,looking build autonomous robot venture road remain autonomous hours time found limited information best tyre tread purpose suitable looking tread pattern need regular cleaning save setting tread gets clogged effective tackling tough terrain,wheel,wheel
13,algorithm use balancing wheeled robot using gyroscope,good popular reliable algorithm use taking input gyroscope using control independant wheels keep balanced robot upright looking algorithm let use drive robot keep upright stationary ability deal inclines people nudging bonus essential,control gyroscope balance two-wheeled,control balance wheeled gyroscope
14,choosing right dimensions underwater glider,looking build underwater glider type submarine slow operate low power draw order work found several sources hinting dimensions components wings critical success found sparse information dimensions happy bit trial error comes save work anyone information critical dimensions,design underwater auv,underwater design auv
15,effective type rechargeable battery taking account size weight ah,looking build underwater glider robot need remain autonomous long periods time months power draw minimal thinking including form charging device solar charger like battery capacity large need worry large current draw needed battery need hold charge periods time considering underwater vehicle weight size concern cost much issue reason hobbyist project looking understand pros cons technology lead acid lipo nicad fuel cell decide type battery best suited purpose looking battery technology looking specific shopping recommendation,underwater battery auv,battery underwater auv
16,best protect sensitive components damage vibration,common components types robots experience large environmental stresses key vibration something need worry typical electronics sensitive components secure components heard main philosophies first use damping system springs absorb shock second keep everything place move hit anything break follow answer depends use guide best protect sensitive components,electronics protection,electronics protection
17,accurate way obtain locational fix using gps,gps obvious accessible technology obtaining locational fix robot particular time great sometimes locations situations accurate investigating easy way improve accuracy turns case considered following options found limited information online using much better antenna help low signal areas thinking yes construct know improvement good guides use ready made antenna expensive using multiple separate receivers tandem help similar amount able extract meaningful average approach sort characteristics look choosing good gps receiver help accuracy anything else consider missed,localization gps,gps localization
18,algorithm use constructing map explored area using number ultrasound sensors,ultrasound sensors cheap days makes popular choice many hobbyist robotic applications use bunch say robot algorithm build rough map area robot explores interested dealing moving objects stage pinpointing stationary ones using gps location realise components laser scanner produce much accurate results devices expensive algorithm exist purpose,slam localization gps mapping acoustic-rangefinder,localization mapping slam rangefinder acoustic gps
19,adding external heat sinking dynamixel rx-24f servo,hobby servos sufficient real robotics number reasons quality precision range motion torque etc industrial servos emerson ge etc heavy expensive suitable small-humanoid scale actuation building servo motors gearboxes encoders akin trying design cpu control motor -- much detail getting way real work exists in-between level servos -- priced reasonable performance controllable -- form competing brands dynamixel herculex servos smallest offerings lines strong real-world interaction next step hold lot promise robotis dynamixel line rx-24f servo priced cheap ax-12f next step mx-28r asking seems specs interface servo great shuts thermal overload try run rated load -- something expect hobby servo robotics servo stepping mx-28r doubles price rx-24f heat flaw fixed positioned nice price/performance point anyone experience providing additional cooling servo anything thermal-gluing heat sinks case drilling holes running cooling fluid tubing hot parts reasonable approaches spend significant time effort investigating second opinion -- possible anyone experience worth,servos heat-management cooling,heat management servos cooling
20,detect dc motor robot starting fail,characteristics look reliable early warning signs dc motor robot say used drive failing looking answer deals terms sensors manual inspection circuit constructed warn potential failure happens ideas increase current draw decrease rotation speed voltage want guard false warnings caused reasonable wear tear robot struggling tough terrain system foolproof points look,sensors failure motor,failure sensors motor
21,possible move stabilize wheeled robot gyroscopes,wheeled robot managed stabilize keeping stationary done using digital feedback control system reading position wheels determine position natural electromotive force wheel motors used feedback loop determine velocity kept stable pid controller designed using root locus algorithm keep stable modulate performance parameters percent settling time etc. wanted attempt keep stable propelling figure go designing linear controller possible propel robot keep stable using feedback controller wheels gyroscope necessary,two-wheeled stability,stability wheeled
22,calculating efficiency mecanum wheels,part robotics team looking using mecanum wheels robot advantages disadvantages using mecanum wheel regular ones looking google looks mecanum wheels give mobility much traction advantages disadvantages compared regular wheels mecanum wheels less efficient efficient way quantifiable way determine much equations use calculate efficiency inefficiency and/or speed moving forwards arbitrary angles picture robot mecanum wheels,mobile-robot design movement wheel first-robotics,wheel mobile robotics robot design movement
23,using arduino control connection pins,got http //www.pololu.com/catalog/product/1182 ... a4988 stepper motor driver carrier attempting control connection reset sleep pins logic code running arduino motor runs pins connected control stepper powered arduino generating extra heat designate pin control connection pins use digitalwrite pin high low switch power stepper note data sheet mentioned powering stepper reset sleep needed switched high,arduino logic-control stepper-motor stepper-driver,control arduino stepper driver motor logic
24,mechanical design motorized spherical caster wheels,design goal mobile robot operates large casters inch diameter steel ball bearings motorized mechanism touch surface robot able move xy direction flat surface steering achieved varying speed rolling direction wheels robot designated front side need turn order move given direction conventional wheels tracks preferred approach looking suggested mechanical layouts multiple rubber wheels pressing steel ball castor housing drive ball direction single wheel stepper rotated vertical axis using sail-winch servo approach consideration ideal serious flaws approach suggested method driving steel ball arbitrary direction electronic control,servos mobile-robot stepper-motor,mobile stepper servos robot motor
25,determines amount actuator produces,many robots mechanical devices produce signature whirring noise move produce less makes difference restrictions silence requirement places robot,motor actuator noise,actuator noise motor
26,bldc servo drive takes sinusoidal hall sensor signals,looking servo drive control brushless dc motor least rating want know exist take sinusoidal hall sensor signals know servo drives taking hall sensor pulses different phases trapezoidal control note servo drive includes driving electronics additional transistors required,brushless-motor hall-sensor,brushless sensor hall motor
27,developing 8-bit avr-s current open free libraries,interested ask list repos free open code applicable 8-bit avr-s relation robotics object avoidance process controllers battery management etc huge help preventing wasting weeks months invent wheel,software microcontroller,microcontroller software
28,manage interrupts avr,number interrupt service routines avr include interrupts usart serial communication timers spi communication use circular queues using start end pointer boundary checking problems start occur avr starts get overloaded circular queues lose chunks data solve reduce load avr example skipping cycles timer manual process reduced avr appears problems want consistent timer periods average processor load queues fill chance case spurious overloading times make adaptive avoid queue overflows,microcontroller avr interrupts,interrupts microcontroller avr
29,model noise range sensor return,range sensors example sonar infrared lidar noisy characterize noise characteristics include probabilistic localization sensor model,sensors noise,sensors noise
30,difference 4-point 8-point connectivity graph based planning,graph-based planning say a* states connected neighbors decide connect neighbors neighbors pros cons approach,motion-planning artificial-intelligence planning,motion intelligence planning artificial
31,flashing firmware lego mindstorms nxt,attempting upload custom firmware lego mindstorms nxt issues attempting use nxtosek let run c++ programs problem put firmware update mode download seem occur mean according output terminal mac windows successful nxt reboots see normal logo nxtosek holding reset button seconds hitting orange button giving tic-tic-tic sound run firmware update using windows nexttool mac osx gui nexttool attempt download get success message robot using old firmware cause problem solve,mindstorms nxt,mindstorms nxt
32,better weight distributed wheels center robot,designing standard wheel robot better weight distributed center robot wheels difference weight distribution make robot less likely tip,mobile-robot design stability wheeled-robot,mobile stability design robot wheeled
33,mature real-time programming robotics,edit know question seems confusing many people aware when/where/why/how use real-time interested knowing people real-time task care enough implement real-time need mention real-time operations important robot question much used robotics take question example answer mentions platform real-time capabilities top ros popular platform real-time real-time world rtai1 seems workable free real-time platform use limited linux problem documented developed much real-time behavior sought robotics developers question much developers inclined write real-time applications real-time behavior needed much example reflexive behavior based tactile data go ros lose real-time property people come real-time solution use ros ignoring real-time property xenomai,software platform real-time,real platform time software
34,connecting microcontrollers using i2c,atmega16 mc master i2c atmega8 mc slave i2c connected mcs sda scl ports pullup resistor want read register atmega8 using atmega16 problem want assign variables libs headers thing,software microcontroller i2c,i2c microcontroller software
35,mathematical prerequisites beginning graduate student robotics,beginning graduate student robotics asked areas mathematics brush prerequisites begin masters research program robotics good materials/books indispensable research student ones suggest order student develops solid foundation robotics,research,research
36,calculate required loop frequency servo controller,motor drives string connected load cell like implement closed controller control load applied motor string go determining required loop frequency order create stable control system something nyquist frequency loop speed least highest frequency inherent mechanical system,control motor force,control force motor
37,detect nao robot kinect,sure tried trying use kinect detect gestures made nao robot made kinect application gesture based picture viewer detects humans fine wanted try lazy see use say voice command tell right gesture application identify gesture identify command gesture problem put nao front kinect sensor kinect track want know basics kinect human body motion tracking fails robot placed front human ps kept right distance sensor checked entire robot field view sensor edit posted stackoverflow msdn target large audience problem encountered anyone past,kinect,kinect
38,preventing leaks motor shafts underwater bots,building aquatic bot take care prevent leakages obvious reasons holes wires made watertight -- motors seal casing place fill holes casing part axle meets casing left unprotected water leaking motor bad doubt way seal area solid seal let axle move liquid seal something grease rub thinking putting second casing motor custom rubber orifice shaft something forgive bad drawing used gimp stop leakage reduce torque/rpm friction prevent water leaking motor affecting motor performance clarify want buy special underwater motor prefer way make motors watertight,motor underwater auv protection,underwater protection motor auv
39,fixed point arithmetic microcontrollers,use microcontrollers things robots need make calculations decimal using floating point variables slow software floating point library included high-end microcontroller use fixed point arithmetic whenever use integer remember decimal place take care ensure everything consistent calculations involve variables decimal point different place implemented fixed point atan2 function trying squeeze last drop limited precision bits change definition decimal point change tweaked addition constants quasi look-up table implied decimal point want know better way library set macros simplify use fixed point variables making multiplication division mixed variables easier allowing declaration decimal numbers constant expressions converting desired fixed point representation compile time,microcontroller c,c microcontroller
40,good imu wheeled robot,lab several kurt type robots size pioneer wheels differential drive built-in gyroscopes outdated main problem gyroscopes large drift increases gyro heats error use imu get initial pose estimates corrected localization algorithm large initial pose error caused annoying used android phone galaxy s2 replacement imu results better compared old imus depending wifi connection imu control computer laptop running ros/ubuntu looking buy new imu imu choose criteria important consider application please share experiences,ros imu odometry gyroscope ugv,ros imu ugv gyroscope
41,good strategies tuning pid loops,tuning controller gains difficult general strategies work get stable system converges right solution,control pid tuning,control pid tuning
42,absolute positioning gps,using imu robot estimate current position relative starting position incurs error time gps useful providing position information biased local error accumulation gps used indoors outdoors spotty methods sensors robot use localize relative frame reference using gps,localization gps sensors slam,sensors gps slam localization
43,suitable control algorithm air muscle based joint,joint actuated antagonistic pair pneumatic muscles valves muscle fill empty muscle joint angle sensor muscle contain air pressure sensor suitable control algorithm set pid controller controlling valve orifice sizes pid controller controlling mass flow rate pid controller controlling pressure using pid pressure controllers fuzzy logic controller neural network,control pid air-muscle,control muscle pid air
44,robotics trends,robotics engineering fields promised taking long time deliver things people imagine someone asks long x type robots resources call try calculate rough answer resources include rate computational power estimate needed various types ai rate progress electrical energy storage density estimate needed various types robot rate progress actuation systems estimate needed various types robot lists milestones towards various types robot ones achieved types studies performed results published added response jakob comment looking opinions discussions subject looking published studies shed light question,research,research
45,creating uniform linear actuator,linear actuators seen nonuniform slow using cam crankshaft-like mechanism anything hydraulic/pneumatic moved constant speed programming using screw-like mechanism uniform slow rack pinion/rope wound stick fast uniform linear actuators exist uniform mean speed uniform distance moved dependant angle rotated motor,actuator,actuator
46,determine quality icp matches,slam frontends use iterative closest point icp identifying association matching point clouds determine algorithm stuck local minimum returns wrong result problem defined matching pointclouds samples arbitrary surface structure sampled areas overlap 0-100 unknown know trimmed icp variant works trying determine overlap stuck local minimum naive approach look mean square error identified point pairs estimate sampling seems risky thresholding manual leica cyclone suggest manual inspection pair error histogram gaussian shape fit good linear fall-off match bad seems plausible seen used algorithm,slam,slam
47,adjust pid parameters fly,simple servo system uses pid controller implemented mcu perform feedback properties system change pid parameters tuned circumstances robot light weight arm back-drivable electric motors similar arm performs several tasks including picking heavy weights pushing pulling objects desk tasks requires different pid tuning parameters predict like higher level function adjust parameters response arm behaviour example notices arm oscillating reduce p increase d. noticed arm reaching target increase i. algorithms exist happy algorithm perfect parameters e.g arm oscillate times parameters adjusted new values,control pid automatic tuning,control automatic pid tuning
48,integrate smart phone robotics project,smart phones days come gyroscope accelerometer compass camera gps sensor board connection internet wifi mobile data networks seen many cases using phone remote control robot seems phone perfect lightweight computing sensing platform autonomous robot main obstacle see interfacing actuators able control motors steer table-top robot control servos example connecting communicating microcontroller obstacle robot hobbyist know overcome obstacles able harness power smart phone robotics projects,actuator,actuator
49,starting advice making robots tinkering microcontrollers,start making robots tinkering microcontrollers start need make robots comfortable programming c got part covered electronics/circuits knowledge little weak idea material start tools need put stuff microcontroller thinking going pololu orangutan lv-168 arduino leaning towards built-in lcd pushbuttons expect use debugging user interaction seems number i/o ports small case practice,arduino microcontroller beginner,microcontroller beginner arduino
50,red error output python ros,ros get error logs print red use python make appear red black example following python rospy.logerr analog input received produces output black error walltime analog input received whereas following c++ ros_error analog input received produces following output red error analog input received,ros python,python ros
51,ros run raspberry pi,ros run raspberry pi ros resigned run network machines different machines different cores machine different jobs machines raspberry considering using r-pi ethercat master mobile robot communicating main pc wifi using dongle r-pi run ros r-pi processing power servoing possible run servoing host wifi connecion,ros raspberry-pi wifi,pi ros raspberry wifi
52,frequency quadcopter output-sense-calculate-output update loop need stay stable,mm foot motor-to-motor quadcopter frequency output-sense-calculate-output update loop need stay stable estimating total takeoff weight pounds kg expect motors batteries,stability quadcopter,stability quadcopter
53,better batteries distributed rotors center multicopter,seen approaches mounting batteries multicopter batteries mounted center airframe batteries bag hanging center airframe rotor share batteries mounted near/under example quadcopter batteries mounted underneath motor design best best design advantages/tradeoffs designs design overlooking better way question focuses multirotor flying machines ground vehicles see better weight distributed wheels center robot,design stability quadcopter,stability quadcopter design
54,calculate serial speed buffer requirements pc microcontroller communications,common scenario pc sends commands microcontroller rs232 pc program sending commands composed multiple bytes small robot microcontroller robot parallax propellor noticed process bytes microcontroller side things default buffers popular serial port drivers available propellor buffers bytes increase buffers create larger circular buffer like methodical approach determining appropriate size requirements and/or minimal amount time wait pulling bytes serial port driver buffer glance == bits millisecond == ~12.8 bytes millisecond assuming stop bit valid way calculate timing serial transmissions given specific setup pc program -- serial profile driver -- transceiver -*- bluesmirf wireless modem -- parallax propellor program maximum amount data send given period time running problems complicating things seems multiple buffers involved transmission chain others deal throttle pc sending known safe rate implement flow control implementing flow control affect bandwidth response times matters experiment use joystick pc control multiple servos instant reaction joystick movements small movement joystick results multiple commands sent microcontroller commands simple positional commands involve acceleration/deacceleration servos time reason microcontroller spends significant amount clock cycles processing new bytes,microcontroller serial rs232,serial microcontroller rs232
55,six-axis force/torque sensor work,like six-axis force/torque sensor robot afford thinking making experience using strain gauges work arrange create six-axis force/torque sensor something make work theory curious know work feasible make added clear talking force torque sensors ati nano talking accelerometers gyros mems imus,sensors force-sensor,sensor sensors force
56,switch servo system brushed brushless motors,robot uses brushed motors servo system maxon motors planetary gearboxes motors controlled pic microcontroller running pid controller servos low speed high torque application significant backlash sensor motor maxon offer brushless motors size many ways double torque better heat dissipation higher efficiency problem require complex drive electronics heard couple people mention brushed motors better servo applications explained anyone implemented kind system gotchas using brushed motors servos possible servo low speeds integral digital hall sensors encoder prefer add encoder money space cost torque ripple likely problem,brushless-motor servomotor,servomotor brushless motor
57,uav kit suitable beginner roboticist programming experience,new robotics programmer familiar several different languages ton money spend wondering good starter kit criteria kit inexpensive powerful functionality extensible -- something allow builder creative invent new ways use glorified model kit extendable smartphones looking something easy introductory something powerful flexible cost effective,uav kit,kit uav
58,quadcopter localization beacon,want use rf beacon localize quadcopter autolanding gps precise example feet wide gps showing 20-30 ft. accuracy proverbial lake lava side quadcopter use gps fly rough location strong signal beacon begin signal come landing precise location referenced said beacon someone please explain concepts theories building beacon accompanying receiver suitable connection arduino digital analog method achieving say better horizontal vertical accuracy quad range altitude i.e feet beacon feet added complexity take make robot position aware beacon i.e x ft. south ft. west z ft. coordinate system determined beacon linked sort geographic coordinate system beacon mounted say ft pole changes made versus ground presuming activity takes place x-y plane last note- thing operate band please presume operating devices operating band,localization quadcopter gps,quadcopter gps localization
59,commutation waveforms look brushless motor,seen waveforms driving brushless motor guess waveform used simpler block commutation want sinusoidal waveforms pwm signal look need synchronise edges phases,brushless-motor pwm,brushless pwm motor
60,effectiveness mobile robot relation mass,mobile autonomous robots become less effective bigger get example bigger robot bigger batteries bigger motors whereas smaller robot exact opposite making need less energy smaller motors known theorem models,mobile-robot design dynamics,mobile dynamics design robot
61,capacitors added motors parallel purpose,seen many motors capacitors attached parallel bots safety motor understand smoothen fluctuations -- doubt fluctuations adverse effects motor protect motor shaft slowed/blocked fail see function capacitor prevent,motor protection,protection motor
62,spatial tracking uavs,unmanned aerial vehicles planes work various waypoints using gps like fly formation like fly side-by-side close reliably use gps guarantee keep correct relative positions looking way uavs need able measure position orientation space relative kind sensor need following properties axes position orientation range plane centres planes touch wingtips works day night weather conditions light wingspan rc planes max extra weight need refresh rate get less using imu fill gaps,sensors uav multi-agent,sensors agent uav
63,low-cost servo digital control interfaces,years projects provided hardware software perform modifications standard hobby servos convert digital servos advantages come little outdated seem worked hardware buy sparkfun version least available buying know mods complete low cost digital servos interested position feedback servo chaining,servos i2c,i2c servos
64,need kalman filter,designing unmanned aerial vehicle include several types sensors 3-axis accelerometer 3-axis gyroscope 3-axis magnetometer horizon sensor gps facing ultrasound friend mine told put sensor data kalman filter understand put straight micro controller kalman filter help sensor data,kalman-filter uav,filter kalman uav
65,type actuator suitable strong robot arm,wish build robotic arm lift useful amount weight 3-6kg arm extend approx meters actuators available accomplish main factors design points expensive d.o.f mounted designed mobile platform battery powered stronger hobby servos least joints slow actuate,mobile-robot robotic-arm actuator,mobile actuator robot arm robotic
66,programming robots javascript,somebody spending majority time programming javascript best route get small-robotics needing much current language focus project kits tools make use javascript language make field approachable developers interested virtual environments code executed simulation,software programming-languages,languages programming software
67,inverse kinematics problem solved,kinematics robot arm solved represent joint using denavit–hartenberg transformation matrices example i^ th joint linear actuator transformation matrix t_i \left \begin matrix d_i\\ \end matrix \right extension length defined d_i whereas rotating link t_i \left \begin matrix l\\ \cos\alpha_i -\sin\alpha_i \sin\alpha_i \cos\alpha_i \end matrix \right \alpha angle l length link find position orientation end effector multiplying transformation matrices \prod t_i question solve inverse problem desired end effector position parameters d_i \alpha_i \prod t_i methods exist solve equation,inverse-kinematics kinematics joint arm,joint inverse kinematics arm
68,spline function best suited trajectory differential drive,best kind spline used generating trajectory adapted execution time use case differential drive move towards point x theta stopping movement e.g turn goal straight move goal position turn goal orientation robot provided laser scanner detecting dynamic obstacles avoided best kind controller case,control motion-planning,control motion planning
69,correct way subsumption architecture robot c,"lot reading subsumption architecture different ways people seem advocate instance people use global flag variable task take control others use endtimeslice allow arbiter choose think correct small section robotc code working line following robot sure track method take find method correct flow find guide robot line using spiral path find line line found take task evade sensorvalue forwardsonarsensor threshold //box obstruction task find sensorvalue lightsensor threshold //spiral robot task track sensorvalue lightsensor threshold //go straight //execute turns follow line task main true starttask evade,9 starttask track,8 starttask find,7 wait1msec used comments actual code keep brief statements good enough conditions robot line track takes due statement track track perform turns looses line taking forage start program",mobile-robot software two-wheeled robotc,mobile robotc robot wheeled software
70,much working cnc machines teach robotics,built simple x/y/z cnc machines learned g-code motor control firmware open loop systems see machines rovers big dog factory arms seem complex comparison seem magical important skills pick working cnc machines logical thing learn things cnc machines teach,control,control
71,ipc-bridge problem,anyone able help getting ipc-bridge working ubuntu lucid installation matlab able finish last step compiling messages folders https //alliance.seas.upenn.edu/~meam620/wiki/index.php n=roslab.ipcbridge installation able rosmake ipc_bridge_ros enter roscd ipc_roslib make seems mex recognize commands get screen shot http //img13.imageshack.us/img13/6031/screenshot20121108at191.png note going ipc-bridge control pioneer implement fast-slam algorithm matlab,mobile-robot software slam ros,mobile ros slam robot software
72,learning walking quadruped,building legged robot quadruped degrees leg goal project make robot able learn walk learning algorithms need implement work using arduino uno microcontroller,arduino microcontroller machine-learning walking-robot,walking arduino microcontroller robot machine learning
73,robot serial communication error,using koro robot pc based automation solution robot getting command refuses respond get serial communication error error happening random type commands happening time making troubleshooting difficult doubt driver problem approach problem. thanks,logic-control,control logic
74,list maneuvers related control tracked platform,platform tracks motors uses electronic speed control double tap reverse esc takes input train frequency neutral +/-700 interested learning algorithms list commands use control platform executes maneuvers example lock thread platform rotate using treads rotate opposite directions execute u turn struggling expressing code maneuvers executed dead zone pulse train frequency esc output weak cause platform move tap reverse makes tough understand track turned thank input,control motion-planning tracks,control motion tracks planning
75,6-axis robot given end-effector position range orientations find optimal joint values,given six-axis articulated robot arm holding tool end-effector desired tool position tool orientation solution inverse kinematics equation robot reach position different solutions depending range joints robot holding something pen want robot mark specific point pen target care pen oriented perpendicular marked surface inverse-kinematics equation many solutions pick solutions joint configuration closest current configuration require least amount movement reach joint configuration according similar criterion joint angles furthest maximum minimum,localization motion-planning industrial-robot inverse-kinematics kinematics,inverse industrial localization robot motion planning kinematics
76,subsumption architecture active area research,interested learning subsumption architecture read number books talk idea none go great detail read fair number dr. brooks papers topic published recent years active area research read papers topic,control research,control research
77,restricting range motion complex constraints,looking way restrict robot range motion using complex constraints tearing cable attached robot take articulated 6-axis robot arm shown attached cable red fixed points x axis a4 axis cable limit range movement robot stretch bend extend something full turn axis a4 axes remaining picture tie cable arm rip joint a5 a4 a6 move full diverge twist cable a5 tilted relationship becomes complicated express constraint simple joint constraint limit range joints positional constraint define region robot enter checking start goal posture sufficient path start goal posture posture much strain cable limiting robot small set pre-tested paths limit robot movements rip cable standard techniques used sort problem,motion-planning industrial-robot joint,motion industrial planning robot joint
78,kind performance expect using extended kalman filter calibration localization,tricycle style robot uses extended kalman filter order track state variables inputs system steer encoder distance encoder rotating laser returns bearing information known landmarks encoders located main wheel steers powered variables tracked kalman filter x heading distance scaling calibration distance encoder steer calibration offset steer encoder bearing calibration rotating laser kind system put vehicle give known good location plenty landmarks drive bit end calibrated vehicle drive extended distances landmarks simple works great time encoder drifts follow drift adjust attempting apply principles robot multiple steer drive wheels case vehicle able move direction spin place etc steer/drive wheel steer distance encoder need calibrated expect get kind reliability performance complex system common pitfalls look expanding kalman filter include variables risk settling sub-optimal values,localization kalman-filter,filter kalman localization
79,inverse kinematics reinforcement learning competitive techniques,inverse kinematics reinforcement learning techniques contending techniques solve problem viz movement robotic manipulators arm glance wikipedia article appears inverse kinematics seems attempt achieve solution opposed reinforcement learning attempts optimizes problem misunderstood anything,inverse-kinematics reinforcement-learning machine-learning,machine inverse kinematics learning reinforcement
80,processor command interface preference robot arm,want build robot arm meter able lift kilograms dof expensive project programmer brand new robotics facility robot want build led inverse kinematics parameters matrices think need tough processor sure assuming robots control interface android tablet thought develop program android send necessary commands control chip rs-232 interface question standart ghz android tablets suitable tasks anybody got advice,software inverse-kinematics arm rs232,inverse kinematics arm rs232 software
81,fuse linear angular data sensors,team setting outdoor robot encoders commercial-grade imu gps sensor robot basic tank drive encoders supply ticks left right wheels imu gives roll pitch yaw linear accelerations x z. add imus give redundancy provide angular rates roll pitch yaw gps publishes global x z coordinates knowing robot x position heading useful robot localize map environment navigate robot velocity useful making smooth movement decisions ground-based robot care much z axis robot lidar sensor camera -- roll pitch useful transforming lidar camera data better orientation trying figure fuse numbers way takes advantage sensors right using kalman filter generate estimate x x-vel x-accel y-vel y-accel simple transition matrix dt .5*dt*dt dt dt .5*dt*dt dt filter estimates state based accelerations provided imu imu best quality seconds show robot rest drifting good meters initial location want know use roll pitch yaw imu roll pitch yaw rates encoder data wheels gps data improve state estimate using bit math use encoders generate x heading information robot linear angular velocities encoders accurate susceptible slippage outdoor field seems separate sets data difficult fuse estimates x x-vel x-accel y-vel y-accel estimates roll pitch yaw rates roll pitch yaw crossover sets trouble reasoning put example robot going constant speed direction robot determined x-vel y-vel yaw robot rest yaw determined x velocities data provided encoders translated angular velocity update yaw rate ... update yaw rate end providing better positional estimates make sense put numbers filter kept separate well-developed way dealing type problem,sensors kalman-filter sensor-fusion,filter sensors sensor fusion kalman
82,use imus improve position/posture measurement fingers data glove,using cyberglove control humanoid robot hand found disappointing measure posture human hand wondering possibility using inertial measurement units mounted fingers track position measure posture sure feasible imu return enough data make tracking reliable circumstances possible fool system tracking fingers possible get using simple 3-axis accelerometers need 9-axis accelerometer gyro magnetometer,imu sensor-fusion hri,sensor fusion imu hri
83,selecting accelerometer deduced reckoning,used accelerometer aware come i2c spi analog outputs choose use i2c spi device accumulate errors due communication time fast sampling analog signal likely get accurate deduced position using i2c true robot moving room robot moving outdoor terrain likely slip roll slope sense gs tried move hand phone running andro-sensor fist saw readings saturated g expect robot experience hit fat moving bot bumped walking human,sensors deduced-reckoning navigation accelerometer,sensors reckoning navigation accelerometer deduced
84,questions quadcopter radio controller,bought parts making quadcopter done research know parts need many guides sponsored cost euros/dollars explaining things found flight control board need microcontroller arduino nano work anyone experience board let know board work radio controller controllers universal please tell right section count relevant topic,microcontroller quadcopter radio-control,quadcopter control microcontroller radio
85,best way power large number servos v,apologize question sound little vague working robotics project contain servos various sizes trouble figuring powered hoping use several 3-6 w battery boxes power smallest motors use w battery box power larger servos current plan using small number becomes infeasible enough room robot v car battery adding require recalculating sizes servomotors needed sure convert v gives v servomotors p.s stall current motors power supply able supply stall current motors supplies time working current use fuse handle servomotors stall use fuse circuit breaker make v fuses get something larger version box preferable,design servos power,servos design power
86,implement ins accelerometer gyros magnetometer,building walking robot need know moves using on-board intelligence plan using accelerometers gyros magnometers needed able detect robot moves problem dont know program internal navigation system imu software algorithms needed clarify problem need know program micro controller read sensors able tell robot displaced previous measurement used sensor board similar use determine displacement,software imu deduced-reckoning artificial-intelligence,software intelligence artificial imu reckoning deduced
87,inverse kinematics java,planning write inverse kinematics controlled dof virtual robot android research packages choose right satisfy needs project seen work eigen c++ used fine experienced java wanted ask start someone knows appropiate packages operations found jama vecmath jmathtools ejml jampack ask dont want get stuck middle project thanks advance,inverse-kinematics programming-languages,languages programming inverse kinematics
88,visual odometry options,pros/cons different visual odometry options stereo camera optical flow slam criteria performs vs odometry options/sensors lidar radar sensor fidelity computation accuracy precision drift native resilience repeadability sensor noise vehicle speed ease integrating imu/gps etc general course lot different ways trade-offs go get specifics applications hardware asking curiosity designing anything particular,mobile-robot localization computer-vision odometry,odometry localization mobile robot computer vision
89,model robot,answers received question training line following robot using reinforcement learning techniques got think train robot believe ways train physical robot model robot simulate training miss something approach better approach priori knowledge motion response certain pwm signal stimulus cause robot given state required motion caused pwm signal depend current battery voltage mass robot current velocity miss something model robot model quick change battery add boards peripherals change mass robot remodel retrain robot providing random stimulus pwms measuring response added related question dsp.se update suggested edit title ian worth mentioning model train robot dynamics change complete re-training think good question different asking re-training,reinforcement-learning pwm,pwm learning reinforcement
90,dynamic effects motor current digital compass characterized compensated,digital compasses magnetometers require hard/soft iron calibration order accurate compensates magnetic disturbances caused nearby metal objects -- robot chassis image http //diydrones.com digital compasses susceptible electric fields caused high amount current drawn motors order get accurate compass reading best way measure compensate interference caused changing motor current levels,mobile-robot sensors,mobile sensors robot
91,obtain dense point clouds stereo cameras,trying use stereo camera scene reconstruction obtain sparse point clouds i.e half image proper depth information realize stereo processing algorithms presence texture images parameters tweaked obtain better results disparity range correlation window size much tune parameters able get results close obtained using active sensor kinect reason want point clouds corresponding adjacent regions overlap obtain match reconstruction impaired question computer vision experts following obtain denser point clouds general modifying office environment,slam computer-vision,slam computer vision
92,much torque need cnc machine,handful 31.2oz-in stepper motors mouser.com applied motion ht17-268d curious big run printing/cutting/etching type think reprap machine mind attach simple gear screw-type drive run tool head forth maximum bed size ~1.5'3 heaviest tool head something half weight dremel tool hardest substances use hardwoods high speed cutter copper pcb etching figure amount torque needed drive head motors big job,stepper-motor reprap,reprap stepper motor
93,determine lipo battery going bad,lab use lipo batteries power quadrotors experiencing stability issues using certain batteries batteries seem charge balance battery monitor indicates fine putting load attempt fly quadrotor batteries severe tendency pitch and/or roll guess battery supplying sufficient power motors brings question behavior indicative lipo going bad best way test battery confirm suspicions,battery troubleshooting,battery troubleshooting
94,pid control poles represent,read text control e.g pid control mentions mean physical state pole describe,control pid,control pid
95,connecting pole motor motor driver,trying power motor motor driver using lithium-ion polymer battery heads need help checked company e-flite motor dc -- bit confused purpose wires connect motor help appreciated,brushless-motor driver,brushless driver motor
96,working implementation navigation movable obstacles bi-pedal robot,like better understanding work field navigation movable obstacles started michael stilman thesis james kuffner sated trying simulate scenario debris tables table parts disaster scenario block pathways debris forms part movable obstacle robot used bipedal humanoid thesis describes approach define search space possible actions leading start point goal mobile robot works gliding think state space definitions change bi-pedal robot wonder work done field work research groups give clues design reduce search space bipedal humanoid robot implementation navigation movable obstacles aid understanding reduce search space possible actions anyone know working implementation navigation movable obstacles supporting information professors research groups working similar problems useful hope edit sufficient problem description,navigation,navigation
97,usb rs232,rs232 popular used replaced usb wikipedia problems mentioned question help reputation new system design think using usb serial port communication seems rs232 serial communication protocol/port choice understand changing old machinery work rs232 costly prevents new system designers using usb rs232,rs232 usb,rs232 usb
98,optimise control parameters stepper motor,industrial roboticist spent time working robots machines used brushless dc motors linear motors lots tuning pid parameters motors moving hobby robotics using stepper motors building first reprap wonder need encoder feedback need conservative requests motor making sure keep envelope possible find tuning optimal sub optimal worst case unstable given load case extruder head need generate step trains cause demanded acceleration speed motor cope missing steps thought test sequences instance home motor home sensor move c steps home move steps home conservative move profile move steps test acceleration/speed profile move n steps start test move conservative move profile move steps home conservative move profile move c steps home sensor verifying sensor triggered correct position repeat variety n acceleration/speed load profiles detect missed steps move seem large space test wonder techniques developed stepper motor control parameters,control stepper-motor tuning,control stepper tuning motor
99,particle filters resampling,understand basic principle particle filter tried implement got hung resampling part speaking simple old weighted set particles draw new set particles replacement favor particles high weights particles high weights get drawn particles low weights less resampling weights get assigned weight idea implement normalize weights weight total number particles round scaled weights nearest integer e.g int python know draw particle due roundoff errors end less particles resampling step question fill missing particles order get number particles resampling step case track resample,localization particle-filter,filter particle localization
100,strategies managing power electrical systems mobile robots,good strategies follow designing power supply electrical systems mobile robots robots comprise systems microprocessor microcontroller dsp etc units boards immediate peripherals motor control analog sensors proximity audio voltage etc digital sensors vision imu exotica radio comm circuits wifi zigbee etc things specific purpose robot designed unified approaches/architectural rules designing power systems manage clean power supply various units distributed boards issues interference common ground etc furthermore including aspects redundancy failure management management/monitoring features explained examples existing power systems robots make excellent answers,mobile-robot electronics,mobile electronics robot
101,matlab function ros,possible use matlab system function call ros commands example using system pub /cmd_vel geometry.msgs.twist ... system find ipc_bridge trying send commands ros using something ipc-bridge ps know need use ipc-bridge subscribe topics,mobile-robot software ros,mobile ros robot software
102,powerful alternatives lego mindstorm nxt,interested build robot imagination looking purchase robotic kit find lego mindstorm interesting many reasons plug brick want develop language want developer use kind robotic interaction moving servo motors useless least regarding spec nxt main component feel low proc ram rom made wonder know something similar plug want program reaction powerful hardware price limitation nxt build want usd want spend usd first kit appreciate buying better robotic price distant nxt alternatives check thanks help,nxt,nxt
103,understand integral part pid controller,dont understand integral part pid controller let assume pseudocode wikipedia previous_error integral start error setpoint measured_value integral integral error*dt derivative error previous_error /dt output kp*error ki*integral kd*derivative previous_error error wait dt goto start integral set zero beginning loop integrating error time make positive change setpoint error become positive integral eat values time beginning dont understand error stabilizes integral part value integrated errors time contribute output value controller error output pid right somebody explain please,control pid,control pid
104,choosing motors wheel drive robot,making wheel drive robot suppose know robot going weight x kg finished know diameter wheels geared motors connected wheels choose several geared motors know peak torque motor idling speed calculate load specific motor take i.e motor given torque able move robot overloaded rpm motor load,motor,motor
105,find tutorial sample code juniper wifi arduino shield,got arduino wifi shield known juniper believe cutedigi tried find code examples saw code un-commented little explained use tutorial sample code good explanation anyone help find place start found code http //arduino.cc/forum/index.php action=printpage topic=103582.0 want connect network send get requests open socket edit poking found documentation get work code http //pastie.org/5455603 seem get input wifi shield,arduino electronics wifi,electronics wifi arduino
106,ekf-slam update step kalman gain becomes singular,"using ekf slam problem update step getting warning k singular rcond evaluates eps think traced problem inversion z. way calculate kalman gain inverting last term positive cause problem put entire code https //github.com/jdowns/ekf-slam main entry point slam2d function x p expectation x p lmk_idx observation expectation r_idx rl r_idx lmk_idx e e_r e_l project x r x lmk_idx e_rl e_r e_l e e_rl p rl rl e_rl innovation z observation e z e kalman gain k p rl e_rl z^-1 update x x k z p p k z k end function y_r y_p project r p p_r pr_r pr_p toframe2d r p y_pr scan p_r y_r y_pr pr_r y_p y_pr pr_p end function p_r pr_r pr_p toframe2d r p r r r cos -sin sin cos p_r r p px p py p x pr_r ... -cos -sin cos py sin px x sin -cos cos px x sin py pr_p r end function y_x scan x px x py x sqrt px^2 py^2 atan2 py px y_x ... px/ px^2 py^2 py/ px^2 py^2 -py/ px^2* py^2/px^2 px* py^2/px^2 end edits project x r x lmk project x r x lmk_idx corrected k goes singular little think seconds try changes josh suggested get home tonight post results update simulation observes landmarks k p rl rl e_rl inv z results matrix added x next line k becomes singular seconds measurements steps following advice http //www.mathworks.com/help/matlab/ref/inv.html tried k p rl e_rl /z results steps warning k singular produced tells problem matrix inversion causing problem update main loop robot object store x p landmark pointers sample_time max_time p robot.p x robot.x lmks robot.lmks mapspace robot.mapspace u robot.control robot.measure added show eigenvalues step val vec eig p disp disp val motion/prediction x p predict x p u dt correction lids intersect lmks find observed landmarks lids_new setdiff lmks lid lids expectation idx find lmks == lid lmk lmks idx mid == lid mid x p expectation x p lmk yi end end correction new landmarks id length lids_new id ~= lid lids_new id lmk find lmks ==false find mapspace ~isempty mapspace lmks ,lmk lid == lid x l_r l_y backproject x r yi p l_r p r p ,s p eye p l_r p r r l_r end end end new landmarks save state robot.save_state x p mapspace lmks end end end loop save x p robot believe propagating covariance iteration edits correct eigenvalues http //pastebin.com/vn4nzkqy number eigenvalues negative magnitude large 10^-2 happens iteration first landmark observed added map new landmarks section main loop",slam kalman-filter,filter slam kalman
107,computing jacobian matrix inverse kinematics,computing jacobian matrix solving inverse kinematic read many places use formula create columns joint jacobian matrix rotation world space r pivot point world space e_ pos position end effector world space understand work joints dofs take following example \theta rotational dof e end effector g goal end effector p_1 p_2 p_3 joints first compute jacobian matrix based formula diagram get something j=\begin bmatrix \times \vec e x \times \vec e -\vec p_ x \times \vec e -\vec p_ x \\ \times \vec e \times \vec e -\vec p_ \times \vec e -\vec p_ \\ \times \vec e z \times \vec e -\vec p_ z \times \vec e -\vec p_ z \\ \\ \\ \end bmatrix assumed rotation axes rotational dof believe column dof case \theta_\ problem joints full dofs say joint rotational dofs axes \theta_x \theta_y \theta_z translational dofs axes t_x t_y t_z make question clearer suppose apply formula dofs joints get jacobian matrix click full size weird columns dof joint repeating thing use formula build jacobian matrix dofs jacobian matrix look case,inverse-kinematics kinematics,inverse kinematics
108,compatable esc brushless phase motors,trying find right esc following motors http //www.e-fliterc.com/products/default.aspx prodid=eflm30180mdfa quickfeatures http //www.e-fliterc.com/products/default.aspx prodid=eflm3032dfa figure listed site best alternative cheaper better options,motor brushless-motor,brushless motor
109,rainbowduino arduino ide fails upload,ok robotics anyone able upload rainboduino v3.0 using arduino ide seem figure documentation online followed blog entry got connection board anyone give suggestions appreciate,software arduino programming-languages,languages arduino programming software
110,using imu build ins,needed utilize imu arduimu+ v3 used ins hardware needed,arduino slam imu deduced-reckoning,reckoning slam imu deduced arduino
111,earliest concept robot,highschool student studying electronics assessment task history electronics decided focus history robotics want begin earliest possible concept robot progress major developments robotics current day begin research,electronics research,electronics research
112,powerful arduino uno board,board uno course simple things controlling couple servos easy think uno board able preform real-time slam point cloud data gathered kinect sensor mobile robot robot speed arduino able keep correct slam moving able keep taking points kinect sensor processing examples resource limitations arduino board,arduino slam kinect,kinect slam arduino
113,wheels vs continuous tracks tank treads,building small robot using cheap vex robotics tank treads choice picking tank treads based fact seem fun wheels know much advantage disadvantage compared wheels pros cons wheels continuous tracks,mobile-robot design wheeled-robot tracks,mobile tracks design robot wheeled
114,quadcopters common robotics configurations,noticed research done helicopter robots done using quadcopters propellers little work done using tricopters comparison different number propellers propellers made quadcopters popular choice,quadcopter design uav,quadcopter design uav
115,determine heading compass,lets say drop robot featureless environment magnetic field based sensors magnetometer/compass allowed methods determining north tracking sun/stars option reliable weather considered pick rotation earth using gyros clever solutions,localization,localization
116,quadcopter lipo battery weight/capacity trade,trying find additional battery capacity becomes worthless relation added weight terms quadcopter mah battery get minutes flight time question quads lifting capability course way find added weight larger battery batteries cancels flight time improvement going separate flights landing swapping batteries trying continuous air time trying figure line crossed tacking bigger batteries quad seeing diminishing returns thanks presume quad strong lift throw grams max throttle,battery quadcopter power,battery quadcopter power
117,accelerometer sufficient detect displacement need ins,need complex system gyros accelerometers etc detect robot moved use accelerometer building robot learns walk need detect displacement machine learning use accelerometer need complicated/expensive internal navigation system,slam machine-learning deduced-reckoning gyroscope accelerometer,accelerometer machine slam learning reckoning gyroscope deduced
118,mars rovers designers prefer wheels tracks,mars rovers use wheels tracks guess spirit better chances getting soft soil tracks general mars surface structure known advance seems wiser prepaired difficult terrain use tracks mars rovers use wheels tracks,mobile-robot design,mobile design robot
119,kinect libfreenect vs openni+sensorkinect,pros cons maintained allows functionality utilizes hardware etc,software sensors kinect,kinect sensors software
120,decision trees solving inverse kinematics,experimenting opencv machine learning library tried make example learn inverse kinematics link arm using decision trees forward kinematics code looks const float link1 const float link2 cvpoint2d32f forwardkinematics float float beta cvpoint2d32f ret // simple link kinematic chain ret.x link1 std :cos alpha link2 std :cos alpha beta ret.y link1 std :sin alpha link2 std :sin alpha beta return ret generate random set xy alpha xy beta pairs use data train decision tree models opencv alpha beta use models predict joint angles given xy position seems gets right answer inconsistent understand inverse kinematic problems multiple solutions answers get wrong reasonable thing try work learning algorithms suited kind problem decision trees,inverse-kinematics machine-learning,machine inverse kinematics learning
121,possible run neural network microcontroller,implement simple neural network microprocessor arduino uno used machine learning,microcontroller machine-learning,machine microcontroller learning
122,inverse kinematics joint contraints,manipulator revolute joints movement limitations apply inverse kinematics getting results limits please provide algorithm implements inverse kinematics considering joint limitations,inverse-kinematics,inverse kinematics
123,king robota speak,want know possible robot speak self king robota someone speaking behalf youtube video,control software,control software
124,coined popularized term slam,according wikipedia article slam original idea came randal smith peter cheeseman estimation representation spatial uncertainty pdf refined hugh f. durrant-whyte j.j. simultaneous map building localization autonomous mobile robot paper uses term slam term come particular author popularized,slam,slam
125,vex motors tank treads drained battery expected,got couple vex motors hooked duemilanove motors run tank treads powered whole setup off-brand 9-volt battery everything seems run great able run seconds worth motor movement battery able pump energy needed move treads whole thing slows unusable problem tank treads seem enough think restricting motor pump much energy move nothing powered arduino motors enercell alkaline terrible battery choice expect long battery life robot something missing thank much,battery tracks troubleshooting,battery tracks troubleshooting
126,get continuous tracks tank treads move rate,got couple vex motors hooked duemilanove motors run tank treads motors run arduino using servo library problem tracks turn speed sent servo angle due fact continuous tracks many moving parts identical friction forces hard get get move speed moving speed given servo angle regardless friction vex motors strong meaning use vex powerful motor best trial error enough figure servo angle results equal speeds tinker tracks identical frictions thank much,mobile-robot motor tracks,mobile tracks robot motor
127,including raspberrypi robot ... allow universal api,know broad statement got support tcp full fledged computer board integrate/run arduino allow anything run box raspberrypi run operate robot know clock speed dependency libraries given code base pi add complexity big issues overlooking vertically-integrated control system including raspberrypi robot ... allow universal api,software arduino raspberry-pi,pi arduino raspberry software
128,stall current free current motors,stall free currents electric motor example vex motor lists stall free currents bottom page think general idea detailed description helpful,motor current,current motor
129,arduino vin current limit,found duemilanove current limit pin include vin pin vin pin sort work place board higher currents limit good way using using power supply jack board allowing sources draw supply needing pass chip first thank much edit second part wanted get something amps,arduino current,current arduino
130,programming esc reverse mode,program esc reverse mode looking control esc servo board robotics project assuming input looking full reverse achieve,control motor,control motor
131,taking vcc power arduino regulator need sets capacitors,building open-source bio-research hardware ask help got guy big questions get ground common got needing grounded need sets capacitors wired regulator wired regulator shown blue denoted connections go shield orange green anyone happens see something backfire feel free point first time making anything verified regulator positions correct proto-shield arduino r3 uno larger version image seen //i.imgur.com/bpxjn.jpg,arduino electronics,electronics arduino
132,formatting sd card panda board es,board es able get boot sent svtronics get checked said board ok able configure little research following directions panda board ubuntu website able get board boot think problem formatting sd card using disk utility mac format sd card msdos fat partition like know format sd card macintosh install ubuntu panda board es,electronics operating-systems,electronics operating systems
133,algorithm implement program room cleaning robot,question following things unknown size shape room location robot presence obstacles assume following things constant size shape room number shape location obstacles assume robot following properties move increments absolute units turn degrees operation moves return true succeeded false failed move due obstruction unlimited source power let say solar powered robot placed space station faces sun times ceiling movement rotation carried absolute precision time worry unreliable data please consider following properties robot environment ceiling-less space station room safe close distance passing comets dust ice littering environment asked much simpler version question room rectangle obstacles move guaranteeing part least started wondering approach guarantee shape presence obstacles started looking dijkstra algorithm fascinated hear others approach accepted answer roomba,mobile-robot artificial-intelligence algorithm coverage theory,theory algorithm mobile intelligence robot artificial coverage
134,charge lifepo4 battery,seen lifepo4 batteries seem top battery choices robotics applications seen people mentioning use charger different battery charge seen build setup charge lifepo4 batteries need kind voltages current rates need supply charge think setting solar charger batteries immediate reason bad solution battery needs charge current amount work ambitious provide example explanation thinking batteries pairs series parallel,battery,battery
135,turning nxt motor hand damage,many people claim turning nxt motor hand damage true matter motor idle set break facts confirm refute argument know projects e.g etch-a-sketch use built-in rotation sensor measure much motor turned indicate hand-turning nxt motors okay need put special sensor mode,motor nxt mindstorms,mindstorms nxt motor
136,protecting electronics voltage/current bad polarity,built robot wheelchair worked time take next step need implement permanent power circuit proper protection lowest level protection think like take step current/voltage/direction/switches/high/low voltages give insight project mine info appreciated moderator comment please see address questions related subject areas answering question boundary on-topic,mobile-robot wheeled-robot protection circuit,mobile protection robot circuit wheeled
137,good book mechanisms,working students grade robotics wanted get good book covers basic mechanisms anyone recommendations searching google amazon yields many results thought community standard book use,design mechanism,design mechanism
138,mma7361 accelerometer displays values,purchased 3-axis accelerometer amazon seem find works looking found real clues x z values seem return values change tilt move accelerometer revert reading using device arduino uno using following code int x=1 y=2 z=3 void setup pinmode x input pinmode input pinmode z input serial.begin void loop serial.println serial.print analogread x serial.print serial.print analogread serial.print serial.print analogread z go converting tilt,arduino sensors accelerometer,sensors accelerometer arduino
139,mems accelerometer calibration,trying calibrate mems accelerometer able calibrate current axis parallel gravity shows axes showing +-0.02g e.g. accelerometer x axis parallel gravity show -0.01g eliminate values e.g calibrate accelerometer edit acelerometer datasheet says nothing calibrating ic interface factory calibrated sensitivity zero-g level page,design electronics accelerometer calibration,electronics design accelerometer calibration
140,rrt* guarantee asymptotic optimality minimum clearance cost metric,optimal sampling-based motion planning algorithm \text rrt ^* described paper shown yield collision-free paths converge optimal path planning time increases see optimality proofs experiments assumed path cost metric euclidean distance configuration space \text rrt ^* yield optimality properties path quality metrics maximizing minimum clearance obstacles path define minimum clearance simplicity consider point robot moving euclidean space configuration q collision-free configuration space define function q returns distance robot nearest c-obstacle path \sigma minimum clearance \text min_clear \sigma minimum value q q \in \sigma optimal motion planning wish maximize minimum clearance obstacles path mean defining cost metric c \sigma c increases minimum clearance decreases simple function c \sigma \exp -\text min_clear \sigma paper introducing \text rrt ^* several assumptions made path cost metric proofs hold assumptions concerned additivity cost metric hold minimum clearance metric recent journal article describing algorithm several prior assumptions listed seemed minimum clearance cost metric optimized anyone know proofs optimality \text rrt ^* hold minimum clearance cost metric gave minimum experiments performed support algorithm usefulness metric,motion-planning algorithm rrt theory,motion planning rrt theory algorithm
141,make simple receiver,control relay android smartphone using arduino bluetooth seen seems costly using arduino receiver driving switch radio frequency possible make simple bluetooth receiver output drive relay yes tough going main factor cost 1-,sensors circuit,sensors circuit
142,difference kinect windows kinect xbox,see huge price gap vs amazon intention ubuntu linux perform depth sensing navigation etc prefer cheaper sure miss important point betting kinect xbox version seems windows version overpriced license development stated internal differences exact details minimum sensing distance seems better windows version. anyone give comparison chart good know connectivity usb special connector ... hardware differences differ weight energy consumption speed sensing range ... driver use xbox version ubuntu api usage develop xbox version use same/similar api api xbox mature enough license license xbox version develop home/hobby/educational use thanks,sensors kinect,kinect sensors
143,lightweight available robotic arms,wondering options terms lightweight lbs robotic arms see robai cyton gamma crustcrawler ax18 look interesting options lightweight arms people,mobile-robot arm,mobile robot arm
144,check task exists c,way check task function variable exists c know php use isset check variable exists function_exists function way nxc interested checking task exists alive,nxt programming-languages mindstorms not-exactly-c,languages mindstorms c programming
145,pid line follow sensors c,working line-following robot uses sensors follow black line sensors much line right simple line follow line go turn left right regain line means robot wiggling line time looking better way robot follow line using sensors program writing c code trying get robot utilize power pid control sure go writing three-sensor pid line-follower program nxc,nxt programming-languages mindstorms algorithm not-exactly-c,languages mindstorms c programming algorithm
146,mars rovers slow,mars rovers slow curiosity example average speed meters hour designed slow specific power restrictions reasons top reason slow,mobile-robot design,mobile design robot
147,lm2576 circuit cut power,lm2576 circuit adjuster adjust output voltage controlling motor speed line follower robot circuit works great adjusted give low voltages adjust higher voltages motors go faster works great 1-2 minutes cuts power motors start go slow decrease increase output voltage respond turn power turn something mentioned lm2576 datasheet overload ic cut power load comes lower think problem problem caused lose competitions teams like solve next competition lm2576 circuit reduce power,motor electronics power,electronics power motor
148,robotics kinect,want learn robotics interested making robot based kinect sensor see many projects http //www2.macleans.ca/2011/11/03/the-150-robot-revolution/ wondering works top level downloaded kinect sdk basic tutorials think microsoft sdk library use real robotics projects suggestions start library use good books particular online resources help appreciated thank,kinect,kinect
149,cable routing theta x motion control system better,building motion control platform dof axis rotation theta cartesian x applications wrist actuation x-y stage rotating servo stage payload configuration works little power data wiring needs transit non-linear moving portion platform inverted application stackup reversed rotating axis comes mounting plane stage connected rotating platform payload wiring power command sensor routed non-linearly moving section see broad approaches track route cabling center rotation track route cabling outside outer diameter rotating platform see results minimum cable length maximum torsional loading results maximum cable length minimum torsional loading wires limited experience cable routing associated carriers strategies products non-linear applications question ... ... approach better practice cost issue interested reliability ease construction availability commercial components says something popularity technique etc ... e.g generic concepts pick ... course part numbers upset -- know supposed ask,control wiring routing motion,control motion wiring routing
150,noise motion measurement models,using ekf slam see motion measurement models described noise term makes sense simulation need add simulated measurement make stochastic using real robot data measurement need added matrix mean something example probabilistic robotics page measurement model z_t^i h j q_t q_t noise covariance q_t need calculated working real data,slam kalman-filter,filter slam kalman
151,use ros roomba,anything different irobot roomba create want go start building turtlebot playing ros cost parts going piece piece easy find cheap used roombas,ros roomba irobot-create,create ros roomba irobot
152,standalone capable robotics simulator,software engineer volunteers non-profit introduces young girls technology talking methods introducing children world robotics curious types low-cost options appealing idea online simulator preferable off-line standalone-simulator build program simple robots nothing dragging components programming interactions components solution exist able make use outreach,software simulator children,simulator children software
153,wifly shield connecting,asked question juniper wifi shield working wifly spark fun using updated version experimental library attempting set unfortunately attempt connect web browser get error saying page sent data code include spi.h include wifly.h boolean current_line_is_blank=true void setup serial.begin wifly.begin wifly.join placeholderssid placeholderpass wpa_mode serial.println connection failed serial.println connection succesful serial.println wifly.ip serial.println receving client input ... s.begin void loop wiflyclient c s.available c serial.println ready current_line_is_blank=true c.connected serial.println client connected c.available serial.println client available data char tmp c.read serial.println tmp tmp == current_line_is_blank serial.println sent ok response c.println http/1.1 ok c.println content-type text/html c.println c.print wifly running c.println br break tmp == // starting new line current_line_is_blank true tmp // gotten character current line current_line_is_blank false delay c.stop using arduino uno serial monitor looks connection succesful receving client input ... anything wrong code edit new shield working problem malfunction hardware figure,arduino software wifi c,wifi c software arduino
154,servo motors noisy,working project make bedside night light stuffed butterfly bird making mechanism make wings flap servo motor small gears servo motor loud moved servo moving large amounts small amounts slow worked small servos realized pretty noisy machines explain small servo motors noisy move backlash internal gearing,rcservo,rcservo
155,quadruped learning simulator,building robot legs quadruped dof degrees suggested use simulator learning computer upload algorithms robot using arduino uno robot software use simulate learning able upload arduino board,mobile-robot arduino microcontroller machine-learning simulator,arduino mobile microcontroller simulator robot machine learning
156,c++ robust model fitting library,perform model fitting find looking decent c++ library ransac implementation mrpt wondering alternatives available give example type problems like solve set point pairs b like find isometry transform maps points tb \epsilon like get largest subset given \epsilon guess subset size fixed ask lowest \epsilon,c++ ransac,ransac c
157,computer vision distinguish object contained vs top,know object contained object lying top lets take example cup-plate-spoon cup lying top plate spoon cup distinguish situations criteria decide contained b lying b trying solve using kinect,kinect computer-vision algorithm,kinect computer algorithm vision
158,least squares map joining,lot scroll bottom question trying map joining algorithm described slam linear least squares problem formula code written seems take values second map landmark positions question understanding text making sort error try explain formulas understand show code implements trying simple case joining local maps paper says joining local maps finding state vector x_ join rel minimizes \sum_ j=1 k \hat x_j^l h_ j rel x_ join rel ^t p_j^l -1 \hat x_j^l h_ j rel x_ join rel expanded local maps x_1^l x_2^l x_1^l h_ j rel x_ join rel ^t p_1^l -1 \hat x_1^l h_ j rel x_ join rel x_2^l h_ j rel x_ join rel ^t p_2^l -1 \hat x_2^l h_ j rel x_ join rel understand submap viewed integrated observation global map p^l_j noise associated submap opposed process noise ekf used make submap different vector x_ join rel pose first map pose second map union landmarks maps function h_ j rel \begin bmatrix x_ r_ je r_ j-1 e \\ \phi_ r_ je r_ j-1 e \\ r \phi_ r_ j-1 e r_ m_ j1 e x^ r_ m_ j1 e f_ j1 x^ r_ m_ j1 e r_ j-1 e \\.\\.\\.\\ r \phi_ r_ j-1 e r_ m_ jl e x^ r_ m_ jl e f_ jl x^ r_ m_ jl e r_ j-1 e \\ x_ f_ j l+1 r_ j-1e \\ .\\.\\.\\ x_ f_ jn r_ j-1e \end bmatrix convinced assessment correct first elements robot pose reference frame previous map example map pose initial frame t_0 map frame next group elements common map map transformed map reference frame final rows features unique map frame map matlab implementation follows function g fval output exitflag join_maps m1 m2 x m2 m2 g fval exitflag output fminunc x fitness x m1 m2 x options end function g fitness x m1 m2 m1_f m1 end m2_f m2 end common intersect m1_f m2_f p eye size m1 .002 r x x x_join m1 h x common y_join m2 h x common g x_join inv p x_join y_join inv p y_join end function h_j h x com a0 x h_j zeros size x end h_j x x len length x end len id x find com == id h_j i+1 r a0 x i+1 h_j i+2 id new lmk h_j i+2 x i+2 end end end function r cos -sin sin cos end using optimization toolbox find minimum fitness function described fitness function straightforward think function h returns vector h described result run join_maps vectors map_1 -1.9404 robot x angle -1.0739 landmark x id map_2 -1.9404 -1.1463 note different x g fv output exitflag join_maps map_1 map_2 output warning gradient provided trust-region using line-search algorithm fminunc join_maps local minimum found optimization completed size gradient default value function tolerance stopping criteria details local minimum possible fminunc stopped decrease objective function current search direction stopping criteria details g -1.9404 -1.9404 -1.1463 fv output iterations funccount stepsize 1.0491e-16 firstorderopt algorithm quasi-newton line search' message char exitflag question program gives map minimum map joining function seems minimum map map pretty sure problem matrix h. wrong,slam,slam
159,guiding quadrotor towards target,working quadrotor know position -- like go -- target position b calculate vector c -- unit vector take target c b c normalize c quadrotor move direction rotation tried rotate c robots yaw angle split x components pass robot roll pitch angles problem ±5 works +90 -90 fails steers wrong directions question missing something obvious,quadcopter uav navigation,navigation uav
160,good method building pan tilt controller,seen video games headset/goggles stand look virtual scene building trying design simple controller need output controller emulate mouse input look left moving mouse left supposing use optical encoders pan tilt need separate locations couple inches seems many mouse hacks online components think possible encoders distance controller chip oem purposes good mouse controller chip output usb protocol mouse movements buy bulk many thanks suggestions cheers,microcontroller,microcontroller
161,comparing maps groundtruth,created map slam implementation groundtruth data best way determine accuracy map thought use euclidean distance map groundtruth measure better wondering possible take account covariance map estimate comparison,slam mapping,slam mapping
162,inter-processor communication robotic arm,building hobby 6-dof robotic arm wondering best way communicate processors 3-4 avrs inches max separation control loop run computer sends commands microprocessors atmega32u4 usb-to- bridge ideas considering rs485 pros processors wire differential signal robust cons requires additional chips need write find protocol prevent processors transmitting time uart loop ie tx processor connected rx next pros simple firmware processors uart built cons last connection travel length robot processor spend cycles retransmitting messages canbus know little main considerations hardware firmware complexity performance price buy expensive out-of-box system,microcontroller electronics arm,electronics microcontroller arm
163,methods dealing compass lag rate dependent hysteresis,got tread-driven robot low precision wheel encoders tracking distance electronic compass determining heading compass significant second lag robot turns e.g reaching waypoint — pivoting place point new heading ways dealing lag think take lot measurements model compass response seems problematic rate-dependent know instantaneous rate simple-but-slow approach robot turn pointed right direction make small incremental turns brief measurement pauses pointed right way ways dealing,sensors compass,sensors compass
164,determine ekf process pre-recorded data sets,seen question asks determining process noise ekf see anything pre-recorded data sets thought determine noise parameters assuming ground truth available run several times ekf minimize mean square error varying noise parameters acceptable way determine noise pre recorded data set better ways determining optimal noise values based data set,noise ekf,ekf noise
165,many amps want switching bec provide,trying power 7-12 servos impression need amp looking appropriate bec supply seem output 1-3.5 amps running say drawing enough juice move missing link understanding determine many amps needed power supply,design power rcservo bec,bec design power rcservo
166,confused variables robotc,trying program advanced functions robotc sure right want specify motor port using assigned names motors funny thing work regular variables instance motor port7 alternate name light_blue pragma config motor port7 light_blue tmotorvex393 openloop sure new variables specifications variable signature int motor tmotor motor code plans something similar void testthing motor motorname motorname somevalue testthing light_blue int/motor hybrid variable/unidentified sure work,robotc,robotc
167,upgrade existing robot higher torque sensored motor ~100 watts,like high torque motor oz-in rpm souping scorbot bought need encoder count number revolutions allow high start-up torque difficulty finding suitable motor closest found stubby ready purchase team ballistic found rc car motors big alternatives thought adding hall sensors existing motor hard rewinding motor turns increase torque decrease kv anybody know motors fit requirements modifications make existing ones update given hope someone homebrew robotics suggested using maxon motor finder type given torque speed returns motors powered search interprets specs continuous operating point whereas robot much power time second max type oz-in returns brushless motors motor ec best fit operating curve want pay maxon charging contacted guy makes released revolver stubby offered build custom high torque low rpm motor anyone comment high torque low rpm motors want seem rare due lack applications robotics intrinsic difficulty making,motor brushless-motor,brushless motor
168,hri uncanny valley experienced people autism spectrum,familiar idea uncanny valley theory human-robot interaction robots human appearance perceived creepy know research studies done support theory using mri scans effect important consideration designing robotic systems interact people order avoid uncanny valley designers create robots humanlike example many therapeutic robots paro keepon designed look animals cute non-threatening therapeutic robots kaspar look humanlike kaspar excellent example uncanny valley look kaspar creeps people autism spectrum experience kaspar way according shahbaz comment children autism responded kaspar application therapeutic robots people autism spectrum basic principles human-robot interaction uncanny valley valid find anecdotal evidence google people autism spectrum experience uncanny valley seen real studies area anyone know active research human-robot interaction people autism spectrum particular uncanny valley apply apply people autism spectrum interact humanlike robot,research hri uncanny-valley,valley hri uncanny research
169,differences ackermann steering standard bi/tricycles concerning kinematics,got following homework question general differences robots steering standard bicycles tricycles concerning kinematics see differences car-like robot fixed rear wheels dependent adjustable front wheels seen tricycle-like robot single adjustable front wheel middle let distance rear wheels approach get bicycle see difference mobile robots something missing,mobile-robot design kinematics theory,mobile kinematics design robot theory
170,relationship point cloud maps graph maps,familiar slam maps point clouds form vector x \theta f_ f_ ... f_ nx f_ ny understand create map using ekf today came .graph file format expect consists vertices edges format vertex2 id x orientation edge2 observed_vertex_id observing_vertex_id sideward rotate inf_ff inf_fs inf_ss inf_rr inf_fr inf_sr know connection matrices graphs adjacency matrix example clear graph format map equivalent point cloud map familiar relationship vertices poses landmarks global reference frame created say velocity information range/bearing sensor transformation graph map point cloud,slam mapping,slam mapping
171,balance flying quadcopter,im using code create quadcopter robot hardware part done need balance copter video current status https //www.dropbox.com/s/53tpf1jzaly6m33/movie 202013-01-10 tried play speed motor get balanced didnt go gyro accelerometer adjust motor speed based values rules beware better solution try error begin tips,balance quadcopter,quadcopter balance
172,getting started robotic arm design,like design robotic arm hold weight x length case want hold x=2.5 lbs inches starting like try building arm gripper servo joint servo joint -- -- -- -- -- gripper designing arm want say gripper torque hold desired weight lbs minimal distance long fingers design servo joint bear weight gripper load like able hold object full extension,design servos arm,servos design arm
173,building controllable knob,trying build semi-analog timer something old egg timers rotate face want knob turn read microcontroller want microcontroller able position knob implement stops letting microcontroller push knob towards certain positions runs knob turn project kind built small robots many years considered hacking servo motor read position small hobby servos tried hard turn noisy much momentum turned act good knob considering rotary encoder connected motor hunting several sites sparkfun servocity digikey trossen others able find anything seemed appropriate certain find motor going right kind low torque seems uncommon problem normal approach creating knob adjusted microcontroller,motor servos,servos motor
174,ros benefit multicore processor epiphany xmos,looking good embedded pc run ros came couple little machines using new multi-core processors epiphany xmos thing ros seems want cores ros able take advantage cores feeble little ram use make sense focus machines fewer powerful cores,ros,ros
175,toy robots move technology forwards,last month saw many robots real purpose made value saw dancing robot ces advanced lego based robots robots combined limited purpose saw ten year old children playing robots competitions someone told education logic spreading cases arguments informing people everything going forwards know people buy robotic vacuum cleaners think save time robotic cleaners reliable see marketing things children education dancing robots instances selling pig poke value terms robotics advancing field manufacturers say,research,research
176,series modems made compatible series,systems sells several types modems used robotics scada applications product lines series mhx910 n910 spectra obsolete longer sold older equipment built oem versions series soldered place sells series mhx920 n920 spectra shares many specs series establish radio link series modem due differences encryption hopping pattern want make new equipment communicate equipment using series options de-solder old modem replace footprint-compatible modem reconfigure series modem communicate series modem option undesirable access firmware older equipment question anyone know accomplish option,radio-control,control radio
177,plans use vendor id identify ethercat devices,asked question ros answers getting much interest ethercat package ros uses slaves product ids identify devices load correct drivers works great devices manufactured single vendor plans prevent product id collisions multiple vendors make ros compatible ethercat devices manufacture ethercat devices using large values product id hoping collide anyone ros concatenate vendor product ids single 64-bit value use identify correct driver,ros,ros
178,simple neural network hardcoded positions walk optimisation,building quadrupedal robot learn walk responses got asking possible run micro controller realised needed think clever system take years effective able demonstrate learning designed system sure effective hardcode 5-20 positions legs set simple neural network different set positions legs robot moves node weight joint determined robot moves strong connections best nodes/positions robot found pattern moves successful walking effective learning walk note positions write short gaits process work sets work combined,microcontroller machine-learning walk,machine microcontroller learning walk
179,control realtime system slow system,"designing mobile robot mounted arm multiple controlled degrees freedom sensors considering architecture parts set realtime controllers raspeberry pis running rtos xenomai bare metal microcontrollers control arm motors encoders let call machines rtx x=1,2,3… depending number microcontrollers control loop run powerful vanilla linux machine running ros compute slam mocap execute high-level logic decide robot’s task compute motors desired position speed control loop run know framework needs scalable account motors sensors pcs eg external mocap main problem decide different rtx communicate pc1 looked papers related robots architecture e.g hrp2 describe high level control architecture find information low level communicate high level scalable way miss something order connect fast rt machines ensuring motor control pc1 considered tcp/ip uart tcp/ip deterministic easy put place non determinism real issue used slow speed anyways slow reliable targeted cars seen exemples using robots looked exotic uart rt machine motor control considered uart guess port scale many rtx tcp/ip go non-deterministic characteristics easy use… moment solution seems obvious serious robot example using specific reliable scalable solution feel confident make choice anyone clear view point literature point typical mainstream communication solutions used robots",control design communication,control communication design
180,ultrasonic button sensors run analog port,running digital ports sensors fit definition possible run touch sensor quadrature encoder ultrasonic sensor analog port thinking run anything said,sensors,sensors
181,find motor taken vehicle,small motorized vehicle gears wheels running track made gear racks robot know run half track best method keep running track end return start robot carrying water amount time weigh amount steps stepper-motor time ideas work beginner know best solution gps tracking small scale kind distance measurer knob hit middle track telling program delay given time track amount steps motor performed accurate,mobile-robot arduino sensors,mobile sensors robot arduino
182,arduino motor control,working low budget project need way control motors using arduino looked motor shields little shield top female input top motor shield work suggestions,control arduino microcontroller motor power,control microcontroller power motor arduino
183,adding rotary encoders electronic wheel chair,electric wheel chair looking add rotary encoder wheel want hack motor want add encoder harming motor-to-wheel connection using arduino read signal anyone experience adding rotary encoders assembled wheel assemblies,arduino microcontroller,microcontroller arduino
184,use digital animation software define movements humanoid robots,working lifesize ~130cm humanoid robot hubo+ looking way program new motions gestures write tool looking solution leverage existing tools standards robot motion thought trying use animation software blender maya writing script extract joint angles keyframes robotics researchers proficient maya know kind posing tool robotics standard things seen comes pose utility roboplus choregraphe nao programs seem limited particular robots appear extendable hubo questions standard file formats robot motion wheeled robot motion arm leg motion something equivalent .bvh file format used motion capture know wysiwygish tool creating robot motion using keyframes inverse kinematics,software motion,motion software
185,model best feedback control robotic manipulators mimo parallel siso,designing robotic arm 6-dof goal able give setpoints position velocity orientation x z \dot x \dot \dot z \theta \alpha \gamma feedback-control siso systems college taking learning curve multivariable control consideration approach problem trying model system mimo multiple sisos possible please mention possible disadvantages advantages strategy,control manipulator robotic-arm,control manipulator arm robotic
186,interpret data received i2c controller nxt brick,trying write code connect hitechnic prototype board lego using msrds studio issue reading writing serial port device connected works fine lacking understand data sent received goes comes form byte array example byte array converted hex response telling total newbie program understand electronics trying make connection read i2c controller works happening send receive data serial port,nxt i2c,nxt i2c
187,cncing injection mold,want injection-mold several part fits x x bed like able use tooling make iterate tooling production problems discovered know typical injection-mold hard tooling created using electrical discharge machining requires first cncing carbon positive using electrode spark-burn negative mold hard steel equipment edm prefer cnc negative mold know soft steel cnced last long injection mold said run size tiny ok making new mold units necessary open buying endmill diamond-tipped work harder steel limitation much torque cnc produce endmill recommendations links helpful resources particular good cnc enough torque blend steel use thanks,cnc,cnc
188,microcontroller used flight control esc,working building quadcopter scratch noticed many solutions available online use arduino fan arduino questions microcontrollers used crucial features microcontrollers like build total scratch thinking pic microcontrollers used esc build scratch summing escs gyro acceloremeter gps slaves master microcontroller,microcontroller quadcopter esc,quadcopter microcontroller esc
189,sonar obstacle avoidance many sensors place,avoiding obstacles robot navigation best position/angle place sonar sensors many like know theory examples problem placing realize depends way robot moves geometry searching general answers,mobile-robot sensors navigation acoustic-rangefinder,mobile robot rangefinder acoustic sensors navigation
190,tool building analysing robots kinematics control,reading research papers robotics many follow pattern construction established kinematical formulas read mechanical structure state space analysed robot reach maximum speed left underspecified handle incorrect systems tool software product receive input mechanical structure output kinematical formulas provide kind plots analysis suggestions optimal design parameters e.g length angles sturcture optimum parameters motors exist,software design inverse-kinematics research kinematics,kinematics inverse design research software
191,identify objects space,using depth sensing camera kinect like retrieve position predetermined object e.g cup fork etc able grab object way achieve,computer-vision algorithm,computer algorithm vision
192,loop times 7-bit address example,learning i2c arduino looking sample program scan i2c devices saw // sketch tests standard 7-bit addresses // devices higher bit address // seen following code address address++ // i2c_scanner uses return value // write.endtransmisstion see // device acknowledge address wire.begintransmission address error wire.endtransmission error == serial.print i2c device found address serial.print serial.print address hex serial.println understand bit bits loop,arduino i2c,i2c arduino
193,optimal control simple pendulum,studying various optimal control methods implements matlab test case simple pendulum fixed ground want control upper position managed control using simple feedback method swing-up based energy control lqr stabilization upper position state trajectory show figure forgot axis description x theta theta dot want try full optimal control method starting iterative lqr method found implemented http //homes.cs.washington.edu/~todorov/software/ilqg_det.m method requires dynamic function cost function x theta theta_dot u motor torque motor function xdot xdot_x xdot_u ilqr_fndyn x u xdot x -g/l sin x d/ m*l^2 x m*l^2 u xdot_x -g/l*cos x -d/ m*l^2 xdot_u m*l^2 end end function l l_x l_xx l_u l_uu l_ux ilqr_fncost x u trying j x_f qf x_f int dt* u^2 qf eye r wt x_diff wraptopi x reference x -reference isnan l x_diff'* qf x_diff l u'*r*u end l_x zeros l_xx zeros l_u l_uu r l_ux zeros isnan l_x qf x_diff l_xx qf end end end info pendulum origin system pendulum fixed ground angle theta stable position pi unstable/goal position mass l rod length damping factor simplicity put m=1 l=1 d=0.3 cost simple penalize control final error call ilqr function tspan dt steps floor tspan /dt x0 pi/4 umin -3 umax x_ u_ l j_opt ilqg_det ilqr_fndyn ilqr_fncost dt steps x0 umin umax output time initial conditions goal length mass damping using iterative lqr control iterations cost nominal trajectory optimal trajectory control finds control ... try reach goal ... wrong algorithm todorov seems work.. least examples,control,control
194,sensors differential drive,following chassis arduino motor shield process developing tracking mechanism use differential drive photo reflector placed adjacent wheel reflect spoke passes allowing code written measure wheels position problem see wheels chassis small holes driveshaft placing sensors look ridiculous wall crash cause havoc able use photo reflector gears shown placed count spoke gear bit hesitant small bump misalign sensor causing havoc idea track wheel movements,arduino two-wheeled,wheeled arduino
195,seed kalman filter particle filter,way initializing kalman filter using population particles belong cluster determine good estimate mean value compute weighted average covariance matrix particle represented x θ weight,localization kalman-filter particle-filter,filter particle kalman localization
196,simulate assembly line,need simulate stream vehicles line automatons performing operations vehicles come reach automatons keep track individual vehicles collect data need choose method matching data gathered automaton vehicle belongs example guess identity vehicle using timing arriving operation range sensors automaton check possible problems face like little simple video/simulation tool play vehicles symbolized moving black squares automatons/sensors static points circles possible change time interval vehicles speed add random delays kind software search look consider developing scratch,simulator,simulator
197,tell stepper motor position detect slippage,creating cnc machine budget using old motors printers/scanners/etc limited whole system fear cutting bit touches material stepper moving enough torque mean become rotation behind mess cnc project detecting motor misses step allow readjust motor speed reaches balance working adequate torque achieve,arduino stepper-motor current cnc,current stepper cnc motor arduino
198,building robotic arm joint,new robotic design need determine parts need assemble arm joint joint contain timing belt pulley remote motor turning forearm pulley rotating upper-arm piece parallel arms grip pulley top bottom order brace pulley axis torque timing belt kind lost mount like mount forearm pulley parallel arms comprising upper-arm sandwich top pulley lower part forearm attached using turn table ideas shaft mount attach pulley arms kind direction links appreciated know names parts looking ascii art model dashed lines arms arm left forearm arms parallel parts upper arm stars belt bars || pulleys elbow |e| shoulder |s| -- -- -- -- -- -- -- -- |e|***********|s| -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- thinking mounting pulley left bushing using turntables mount pulley top arm turn table mount left arm bottom arm picture design help visualize,design arm joint,joint design arm
199,need gyro airplane flight stabilization system,working basic airplane flight stabilization system precursor full autopilot system using salvaged wii motion nunchuk create imu goal keep wings level mix users commands correct saying require gyro axis accelerometer detect pitch roll adjust ailerons elevator compensate extend design goal keeping wings level flying straight line different things given wind turbulence gyro become necessary accomplished gps guidance tried integrating gyro values get roll pitch yaw evidenced question level knowledge topic prefer simpler mathematics code thanks help,uav accelerometer imu gyroscope,imu gyroscope accelerometer uav
200,mapping quadcopter kinect,quadcopter robot kinect want mapping kinect reliable moving robot i.e. give stable images maps movement sdk producing maps kinect data slam algorithms work board copter powerful handle,arduino slam kinect quadcopter,kinect quadcopter slam arduino
201,remote car controlling,start asking help let know newbie electronic field want know principle wheel rotation left-right remote car gadget talking changing spin rotation dc motor buttons remote asking left right movement wheel know spin change depends polarity dc motor changing polarity changes spin principle changing left right positions front wheels,control wheel,control wheel
202,force measurement grab bars,start project measure force bathroom grab bar force/load applied person grab bar assistant want measure load wall real-time monitoring load analysis improve design sure kind sensor suitable measurement looking different load cells get idea mount commercial load cells measurement trying right using strain gauge measure strain end bar wall side calculate load think wrong exists kind force/load sensors clamp bar measurement sensor types/models suggestion welcome posted question ee forum http //electronics.stackexchange.com/questions/57197/how-to-measure-force-that-applied-on-grab-bar,sensors force,sensors force
203,measuring speed movement webots,experimenting different fitness functions webots robot simulation short using genetic algorithm evolve interesting behaviour idea reward/punish aibo based speed movement movement performed setting new joint position results jerky random movements looking nodes available webots gps node available aibo find anything relevant want achieve measure distance previous location current location movement,mobile-robot reinforcement-learning simulator,mobile learning robot reinforcement simulator
204,using sick laser matlab windows,matlab toolbox available use sick lasers windows found toolbox matlab gnu/linux way use sick laser matlab windows,mobile-robot localization,mobile robot localization
205,possible connect hitechnic prototype board arduino,anyone know possible i2c device right mean cut cable make plug pins arduino able use wire library say something wire.begintransmission nxt hardware developers kit tells pins http //mindstorms.lego.com/en-us/support/files/default.aspx thanks edit turns possible main problem hitechnic says short sketch reads prints device i.e manufacturer version include wire.h define address void setup wire.begin serial.begin void loop readchardata serial.println readchardata serial.println readchardata serial.println serial.println -- -- -- -- -- -- -- -- -- -- -- -- -- -- delay void readchardata int startaddress int bytestoread wire.begintransmission address wire.write startaddress wire.endtransmission address bytestoread wire.available char c wire.read serial.print c,arduino,arduino
206,arduino nano raspberry pi uav ground station,programmer trade amateur aerospace nut degree-level training fields working uav project good people diy drones helpful question less drone-related little general robotics/electronics looking options ground stations current rough plan something pc joystick broken sensor base plan dismantle separate handle base insert arduino hollow handle hook buttons thumbstick hole used accept stem base fit bracket runs hold smallish touchscreen think razer project fiona tablet stick mounted raspberry pi nano talks rpi usb hid input rpi running custom software display telemetry data sent uav main question nano enough power run xbee provides telemetry link causing lag control inputs mentioning uav fly-by-wire moderation slight stutters result flying serious interruptions problematic annoying worth mentioning used simplified guiding hand control regular remote control available least eu flight regulations want use nano options thought get second nano get drive xbee rpi usb ports better way,arduino control uav raspberry-pi radio-control,control raspberry arduino uav radio pi
207,possible achieve arbitrary precision camera calibration,possible achieve arbitrary precision calibration extrinsic parameters camera minimum error wich compensated dictated camera resolution,computer-vision calibration,computer vision calibration
208,select cameras stereo vision system,process building stereo vision system used ugv system robot used competition wherein robot teleoperated find small colored rocks large outdoor field understand calibrate system process data stereo vision system know select cameras system best practices picking cameras stereo vision system,computer-vision stereo-vision cameras,stereo computer cameras vision
209,high voltage motor control arduino,trying control higher voltage motor arduino source pin arduino trying hook transistor battery pack supposed batteries setup arduino code trying run int motorpin void setup pinmode motorpin output void loop digitalwrite motorpin high delay digitalwrite motorpin low delay code gives errors motor movement happens make work thanks,arduino motor,motor arduino
210,select best configuration known workspace load task,given workspace constraints load task done select best configuration robot select cartesian scara robot instance select manipulator determine many axes need seen based experience rules thumb available standard devices like formal answer quantify choice technique genetic algorithm describes task load workspace budget speed etc rates selects optimal robot configuration multiple configurations ensure chose optimal solution thing found online thesis titled automated synthesis optimization robot configurations evolutionary approach pdf cmu-ri-tr-99-43 synthesis optimization tool called darwin2k presented thesis written chris leger cmu surprised updated created tool similar provide context question developing robot assist elderly domestic tasks instance robot identifies picks food items stored known location hand opens package place pick place locations fixed robot stationary,design algorithm industrial-robot theory manipulator,manipulator theory algorithm robot industrial design
211,calibrate scanner mounted rotary axis,laser scanner mounted rotary axis wish determine transformation matrix center axis center scanner using input scanner angle rotation scanner assumed calibrated measure position object plane laser regards scanner origin rotary axis calibrated measure angle movement scanner aligned mounted close center rotation exact offset unknown drift time assume impractical measure position orientation scanner looking way determine exact values degrees offset scanner relation axis determined information scanner rotation angle axis interested offsets depicted matter regard generating consistent point cloud input data scanning known calibration object possible determine offsets mathematical formulas sort calibration information required minimum example possible determine parameters scanning flat surface knowing nothing surface flat transformation matrix rotation world trivial determine transformation camera known example left camera placed rotational axis camera scans planar object reference points b c. based laser distance measurements angle axis planar object reconstructed right camera unknown offset axis scans object point cloud constructed knowing offset planar surface maps curved surface calculate offset based surface curvature know real-world distances angles b c calculate camera offsets minimum number reference points need offsets,calibration,calibration
212,makeblock threaded slot work,looking makeblock robotics kit found information web comes end-users main advertised features clear slot threads shown straight screw thread mate angled little contact screw thread rail thread vs. regular screw hole threads screw want rest angled somewhat- head flush rim rail screw deform aluminum rail over-torqued close picture slot screws,mechanism kit,mechanism kit
213,gps tracking device,looking gps tracking device screen apps need look current position bus send server tcp/ip protocol process constant real-time tracking bus wireless access point device useful need piece hardware send coordinates server experience ... something arduino connected gps send data,gps,gps
214,power torque required related way,designing new platform outdoor robotics need calculate power and/or torque needed move platform calculated need w total power move motor know calculate torque need required power ignoring torque way calculate known parameters platform weight whole platform kg number wheels number powered wheels diameter wheels cm number motors wanted speed rpm m/s wanted acceleration m/s^2,mobile-robot design motor,mobile design robot motor
215,storing kinect data usb drive,anybody know kinect data stored usb drive kinect windows use linux ros plan mount kinect robot store captured frames usb un mount usb transfer linux process ros possible suggestions,kinect ros,kinect ros
216,send video arduino camera module video android screen,trying connect camera module arduino mega connect mega android phone throught send live view camera phone saw video online showed images -- image captured camera module arduino sent android output image viewed couple seconds time send image bt doable live video image yes please guide please suggest workarounds,arduino cameras,cameras arduino
217,design target speed,make wheeled robot platform wheels go minimum speed cm/s idea design first time something made lot assumptions decided choose tgy-s4505b servos motor system intend attach servos fxa308b wheels intend power servos turnigy lsd ni-mh flat receiver packs sure lipo better choice need able run minutes ignore microcontroller stuff speaking less power robot wheels servos basic specifications servo type analog gear train plastic bearings dual motor type carbon brushed weight lead torque speed based battery pack running servos gives speed degrees seconds plan modifying servos continuous rotation connected wheel wheel diameter ~5 cm circumference ~15 cm based specs seems robot move cm/0.6 seconds cm/s intend run speed minute run average speed cm/s assumptions reasonable calculations correct appreciate insight advice recommendations criticisms,mobile-robot wheel rcservo,mobile wheel robot rcservo
218,ti arm stacked ram,ti arm socs e.g omap da vinci version stacked ram e.g ddr2 mddr miniature robots micro drones nice need spend board area external ram chip thanks,arm,arm
219,connecting servo motors double torque,robot using continuous rotation servos spin threaded rod trying make project cheap possible servos find servo cheap option half torque need servo torque project requires expensive servo hook servo end rod move synchronized spare extra pins microprocessor using issue know hooking together increase torque want torque want situation care torque goal extra weight happen want said earlier target goal torque possible help appreciated thanks advance,motor rcservo,motor rcservo
220,convert link parameters angles kinematics transformation matrices programming logic,robotics research undergraduate understand conceptual math part comes implementing code calculate forward kinematics robot stuck getting way book websites found like calculate x-y-z angles given link parameters denavit-hartenberg parameters following \begin array ccc \bf \bf \alpha_i-1 \bf a_i-1 \bf d_i \bf \theta_i \\ \\ \theta_1\\ -90^ \circ \theta_2\\ a_2 d_3 \theta_3\\ -90^ \circ a_3 d_4 \theta_4\\ \circ \theta_5\\ -90^ \circ \theta_6\\ \end array understand turn table values transformation matrices needed get ^0t_n cartesian position rotation last link hoping figure x-y-z angle reading book help appreciated,kinematics forward-kinematics,forward kinematics
221,detect edge table,new robot making got arduino play want make robot wander table last longer think make falling table best way make detect edge table make stop turn something reliable cheap better need add extra stuff table use surface idea path lines table make line follower robot idea,sensors,sensors
222,opposite,robotic joint connected actuators e.g air muscles flexes joint extends arrangement called electric motor air muscles case pull tendon time antagonistic arrangement called case untagonistic,motor air-muscle,muscle motor air
223,efficient way visit reachable space grid unknown obstacles,trying create map obstacles coarse grid space using exploration detect obstacles attempting move space adjacent space fails destination space concept rangefinding sensor problem example process complete reachable squares visited words spaces unreachable obstacles surrounded expected simplest case use dfs algorithm worried take long time complete — robot spend time backtracking exploring new territory expect problematic attempting reach unreachable squares robot exhaust option sophisticated method proper thing seems boustrophedon cell decomposition seem good description boustrophedon cell decomposition algorithm complete description simple terms resources general vertical cell decomposition offer much insight high-level algorithms low-level data structures involved visit map grid exists like algorithm performs better respect total number grid squares i.e better n^4 n*n grid,algorithm coverage planning,planning coverage algorithm
224,dropping pwm ardrone parrot,issues ardrone parrot hope someone running thing hovering drone losing altitude recovering commanded velocity inputs hold using drivers ardrone_autonomy dev_unstable branch github able watch pwm outputs sent motor dropping hover command small value returning hover value drop occurs issue communication controller software control implementation anyone seen similar problem suggestions test/troubleshoot happening,ros quadcopter pwm,quadcopter pwm ros
225,controlling servos arduino servo library,using teensy hardware teensy teensy documentation seems bit timers available able control servos attached logic analyzer confirmed servos attached function anything special sketch order convince servo library allocate second timer servos attached number works define servo servos num_servos // teensy pins int pin_assignments num_servos void setup int num_servos i++ servos .attach pin_assignments shows activity twelve pins attached define num_servos servo servos num_servos // teensy pins int pin_assignments num_servos void setup int num_servos i++ servos .attach pin_assignments,arduino rcservo,rcservo arduino
226,simulated kinect rotation x gazebo bug,asked question answers.ros.org gazebo.ros.org got answer posting question hope someone help robot kinect mounted side arm shown screenshot running simulation fuerte found weird behaviour observe image point cloud match robot model see partial image hand/arm bottom left screenshot robot model rotate kinect x axis kinect horizontal see second screenshot point cloud robot model aligned kinect xacro dae turtlebot attaching rotation joint name= base_camera_joint type= fixed origin xyz= rpy= m_pi/2 m_pi/4 m_pi/12 -- -pi/2 origin rpy offending parameter -- parent link= shadowarm_trunk child link= camera_link /joint code seen github help appreciated,kinect ros simulator,kinect ros simulator
227,extended kalman filter using odometry motion model,prediction step ekf localization linearization performed mentioned probabilistic robotics thrun fox page jacobian matrix using velocity motion model defined \begin bmatrix x \\ \\ \theta \end bmatrix \begin bmatrix x \\ \\ \theta \end bmatrix \begin bmatrix \frac \hat v _t \hat \omega _t -\text sin \theta \text sin \theta \hat \omega _t \delta \\ \frac \hat v _t \hat \omega _t \text cos \theta \text cos \theta \hat \omega _t \delta \\ \hat \omega _t \delta \end bmatrix calculated g_ \begin bmatrix \frac υ_ ω_ -cos μ_ t-1 θ cos μ_ t-1 θ +ω_ δ \\ \frac υ_ ω_ -sin μ_ t-1 θ sin μ_ t-1 θ +ω_ δ \\ \end bmatrix apply using odometry motion model described book page robot motion approximated rotation \delta rot1 translation \delta second rotation \delta rot2 corresponding equations \begin bmatrix x \\ \\ \theta \end bmatrix \begin bmatrix x \\ \\ \theta \end bmatrix \begin bmatrix \delta \text cos \theta \hat \delta rot1 \\ \hat \delta \text sin \theta \hat \delta rot1 \\ \hat \delta rot1 \delta rot2 \end bmatrix case jacobian g_ \begin bmatrix \delta sin θ \hat \delta rot1 \\ \delta cos θ \hat \delta rot1 \\ \end bmatrix good practise use odometry motion model velocity mobile robot localization,localization kalman-filter,filter kalman localization
228,firmata nrf24,technical problems ... trying use firmata arduino nrf24 serial interface tested nrf24 communication fine tested firmata serial works base device simple serial relay data available serial read send nrf24 network data available network read send serial node device bit complex custom standard firmata added write read read id handeled loop method way firmata.available firmata.processinput // handle network data send firmata process method network.available rf24networkheader header uint8_t data network.read header data sizeof uint8_t serial.print data dec serial.print firmata.processinputoverride data currentmillis millis firmata changed method processinput processinput reads data firmataserial method pass data method network tested work fine write method overloaded different way firmata.cpp added method pointer set custom method used send data using custom method added custom method call firmataserial.write call firmata.h ... size_t *firmataserialwriteoverride uint8_t ... void firmataclass :printversion firmataserial.write report_version firmataserial.write firmata_major_version firmataserial.write firmata_minor_version firmata.firmataserialwriteoverride report_version firmata.firmataserialwriteoverride firmata_major_version firmata.firmataserialwriteoverride firmata_minor_version set overrided write method custom method writes byte network serial size_t ssignal uint8_t data rf24networkheader header basedevice network.write header data sizeof uint8_t void setup ... firmata.firmataserialwriteoverride ssignal ... stages pass right guess get response node request pin states ... f0 ... b c e f f7 // analog mapping f0 f7 // sysex request pin state value f0 f7 f0 f7 ... f0 f7 // wait response ... response ideas happen receive messages code handling pin states exist,arduino serial c++,serial c arduino
229,magnets affect imu values,im process making robot requires cylindric magnets construction center robot plan imu thinking using mpu-6050 magnets affect values yes solution shield something imu,sensors imu,sensors imu
230,bec multiple esc quadcopter,building quadcopter discovered esc built-in bec wondering better use delivered power esc unique bec work think easier configure set esc prevent esc behavior wrong image talking edit trying find original image upload given ian mcmahon appears right thing misunderstood role becs right schema look edit trying find original image upload sure getting need escs integrated becs connect cables flight controller,electronics quadcopter bec esc,quadcopter bec electronics esc
231,anyone know giving error coming i2c device,background trying write service hitechnic prototype board using appendix blue tooth developers kit lego site able understand going service trying build response get communication bus error pending communication transaction progress figured hitechnic prototype board using i2c address modified brick code address standard goes configures get response lswrite seems ok get get error lsgetstatus know thing works bit bang day arduino test see link sure else try setting connect brick handler pxbrick.registration registration new pxbrick.registration new legonxtconnection legonxtport.sensor1 legodevicetype.digitalsensor contract.devicemodel contract.identifier serviceinfo.service _state.name debugger.break // reserve port loginfo connecttobrickhandler yield return arbiter.choice _legobrickport.reservedeviceport registration delegate pxbrick.attachresponse reserveresponse debugger.break reserveresponse.devicemodel == registration.devicemodel registration.connection reserveresponse.connection delegate fault f debugger.break fault f logerror failed reserve port logerror fault registration.connection.port legonxtport.notconnected tried setting anyport hit testportfori2csensorhandler explained seems set mode fine gets error tries read device information data part set input message response see fine send command data receive command data _commstate.serialport.read receivedata packetsize lswrite everything seems fine ... see modified nxtcomm code use last byte starting address manufacturer asking bytes manufacturer sensor type said know works print info using arduino // i2c address //i address want read got response true error code success -- sendcommandhandler nxtcomm -- requestresponsehandler nxtcomm -- commsendimmediatehandler nxtcomm send command data tries get status response ... making nuts ... anyone anything help much appreciate point running ideas see going understand entire transaction seem figure errors grins tried tell hitechnic website gets response nxt brick indicate data pointed get data using arduino different i2c device addresses,nxt i2c,nxt i2c
232,hbridge vs esc controlling motor,able find small esc ebay designing robot see think bucks esc connects simple pulse-wave interface sign think control motor throw h-bridge done robot particular motors therefor control interface easy added advantage r/c vs computer controlled simple change connectors way go,design electronics wheeled-robot,electronics design wheeled robot
233,problem serial communication pc atmega avr,written code send data controller pc serialport using interrupt echos garbage value times isr usart_rx_vect unsigned char index udr udr index void uartinit ucsra=0x00 ucsrb=0x18 ucsrc=0x86 ubrrh=0x00 ubrrl=0x67 ucsrb |= rxcie // enable usart receive complete interrupt usart_rxc _delay_ms int main void uartinit lcd_init sei edit function used set baud rate.. define fosc clock speed define baud define fosc/16/baud-1 void usart_init unsigned int baud /* set baud rate */ ubrrh unsigned char baud ubrrl unsigned char baud /* enable receiver transmitter */ ucsrb rxen txen /* set frame format bit */ ucsrc usbs ucsz0,serial avr,serial avr
234,local localisation particle filter,local localisation sonar particle filter i.e particles robot pose grip map environment execute algorithm environment doors closed/open particles able followup robot random particles know initial position robot adding random particle change pose robot find median particles robot pose idea/methods improve local localisation want know need random variable local localisation improve localisation many changes map adding random particles,mobile-robot localization odometry particle-filter,odometry particle localization mobile robot filter
235,conventional land vehicle dynamic models gps/ins augmentation,looking augment gps/ins solution conventional land vehicle car-like model front-wheel steered rear wheels passive axle access odometry wheel angle sensors aware bicycle model e.g chapter corke sure apply heading/velocity constraint filter questions dynamic models applicable land vehicle situation potential provide better accuracy standard techniques applying model/constraint type filter bearing mind access odometry wheel seminal papers topic reading,gps dynamics,dynamics gps
236,chaining kalman filters,team building robot navigate outdoor environment got new integrated imu/gps sensor extended kalman filtering on-chip gives pitch roll north east velocities latitude longitude encoders attached wheels provide angular velocities got new imu/gps sensor made ekf estimate state using encoders low-cost sensors want new sensor on-chip filter incorporate encoders mix problem chaining filters mean use output imu/gps sensor on-chip ekf update ekf use data read encoders update ekf seems reasonable wondering supposed done case,kalman-filter imu navigation,filter navigation imu kalman
237,make robot work,holiday project building surveillance robot capable transmitting live images using webcam capable lifting small objects uses cc2500 module communicating robot interface designed visual basic allows set port computer transreceiver connected connected usb rs232 port usb side connected computer tried settings shown get error config unsuccessful tried settings different computers work circuit diagram robot designed using atmel please tell settings try make work,electronics computer-vision wheeled-robot robotic-arm,robot arm computer robotic electronics wheeled vision
238,motors response different high-frequency pwm,making junior soccer robot got brilliant motors maxon setting pwm timer low-frequencies khz robot acts expected produces problems puts heavy current batteries motors high high current causes motor drivers l6203 heat heat-sinks help motors make bad sound screaming normal contrast configure high-frequencies khz khz current drops ideal sounds quit causes problem motors set run highest speed pwm set run runs slower others making robot turn specific side handling functions fail work asking someone told drivers respond frequencies resulting different speeds low frequencies difference small notice higher frequencies difference becomes bigger noticeable workaround problem continue using low frequencies ps using atmega16 main controller mhz external crystal,pwm avr,pwm avr
239,servos implied `holding torque operating torque steppers,following guide recommends using stepper motors approximate holding operating torque says know operating torque half holding torque adapting use servo wondering formula used servo servo kg/cm torque mean estimate operating torque ~1 kg/cm couple things know operating torque holding torque different estimate-it exact science know servos harder find location degrees etc use stepper assume worked external means finding location,rcservo stepper-motor,stepper motor rcservo
240,controlling power solenoid,trying control force solenoid current system bank capacitors connected relay order control force hard trying hit object increasing decreasing time relay problem works hits force way much force turn relay ms try turn ms respond using mechanical relay like control much energy discharge control hard/soft solenoid moves say discharge percent total energy stored hits slower searching found solid state relays according wikipedia switched way faster mechanical relay order microseconds milliseconds question track something better achieve trying achieve,control,control
241,taylor series expansion ekf,probablistic robotics s. first section extended kalman filter talks linearizing process observation models using first order taylor expansion equation states g u_t x_ t-1 \approx g u_t \mu_ t-1 g\prime u_t \mu_ t-1 x_ t-1 \mu_ t-1 think t-1 state estimate last time step question x_ t-1 ekf algorithm following table use factor x_ t-1 \mu_ t-1 g\prime u_t \mu_ t-1 confused x_ t-1 left wondering went algorithm,kalman-filter theory ekf,filter ekf theory kalman
242,charging multiple lifepo4 batteries time,looking use lifepo4 batteries intend pairs series parallel battery packs parallel setup run recharge batteries using setup accomplish looking charge batteries using lifepo4 smart charger simplistic standpoint resulting voltage correct work fine know previous question lifepo4 battery chargers bit complex basic voltage supply check setup described work general lifepo4 smart charger able charge several batteries correct voltage time long try charge high amperage lifepo4 battery minimum amperage cutoff point charge trying charge battery time cause problems issues mention thank much,battery,battery
243,go making drawing robot,saw art drawing robot youtube http //www.youtube.com/watch v=wo15zxhfdzo need learn order build something beginner oriented projects lead building something experienced programmer little hardware experience,robotic-arm,arm robotic
244,connecting multiple different voltage servos controller,using pololu micro serial servo controller connected arduino multiple servos total make robot arm servos require 4-6 volts require 7-10 volts planning powering servos separate pololu arduino pololu connecting flashing green led servo move plugged control pins servos work plugged servo-tester think problem fixed connecting grounds servos ground pololu like advice sure work end frying parts fried pololu connecting grounds batteries ground pololu help damage parts figure show micro serial servo controller,rcservo,rcservo
245,make invisible line following robot,like build robot follows virtual path visible path line white surface etc enthusiastic seeing sci-fi videos show robots carry goods materials crowded place follow physical line sense obstacles depth like build robot follows specific virtual path point b. tried couple things using magnetic hall effect sensor robot wire carrying current beneath table problem vicinity hall effect sensor small difficult judge robot line line using series magnets solve issue table inch thick idea flopped p using ultraviolet paint line using uv leds robot sensors give zig-zag motion robot due potential threats using uv light source idea flopped p thought camera top using image processing see robot line diverging better solution looking creative simple solutions,mobile-robot localization wheeled-robot industrial-robot line-following,industrial localization mobile robot following line wheeled
246,looking miniature joystick reverse,anyone know small mechanical actuators exist controlled sort miniature joystick reverse picking mechanical movement outputting electrical signals want generate mechanical movement controlled electrical input signals i’ve searched electromechanical actuators finding need think pencil attached surface pivot point half dome i’m thinking small order inch load bearing goal control normal pointed small flat surface attached end joystick rod accuracy important speed small room say surface normal point arbitrary objects room say person walking room cheaply buy/build mechanisms control movement small flat surfaces like dozens places walls room electromechanical sound project i’m planning,control actuator,control actuator
247,servo motor considerations quadruped,building quadruped sure features looking servo motor e.g digital vs analog signal vs dual bearings ones considering,rcservo walking-robot,walking robot rcservo
248,cant see kinect data ros,working project involves using kinect xbox ros steps mentioned ros tutorials openni installed prime sense drivers go openni samples see output ros roscore terminal roslaunch openni_launch openni.launch loads regular calibration warnings service registered errors terminal open rviz gives error /.rviz/display_config exist accept error go see black window shows output tasks mentioned rviz tutorials tried running image_view image_view image =/camera/rgb/image_color shows blank window output resolve get ros show kinect data need run rgbdslam use kinect ubuntu ros-fuerte launch openni.launch starts usual errors ¨tried advertise service advertised node run rostopic says subscribed /camera/depth_registered/points cursor keeps blinking subscribing rectified topics says subscribed nothing happens,kinect ros,kinect ros
249,piv control performed,considering experimenting piv control pid control contrary pid piv control little explanation internet literature single source information explaining method technical paper parker motion understand control method diagram laplace domain control output boils sum kpp* integral position error -kiv* integral measured velocity -kpv* measured velocity correct thank,control servos pid,control pid servos
250,actual physical actuated quantity controlling position servo,trying learn servo control seen generic position control method servos pid control input position error sure actuated quantity guessing voltage applied motor current applied motor guessing actuated quantity gets turned torque motor exerts angular velocity motor runs able get hands control physical servo confirm actuated quantity know little electronics controls motor controlled quantities different different series servos torque control assume servo holding weight distance acting gravity means constant torque load case position error servo rest p components means exerted torque zero cause weight sink countered error position causing p components increase situation cause lifted weight oscillate balance constant position different goal position case videos servos seen lifting weights case friction smoothing everything please help understand,servos pid,pid servos
251,web mapping used autonomous vehicles/robots,web mapping tool allows developers use plot gps data autonomous vehicles/robots google maps forbids see google earth terms use link jumps page bing maps looks similar see g want internet-based tool shows satellite images and/or map overlay plot using api making generic gps plotter ros used slow robots vehicles/cars thanks,gps visualization,visualization gps
252,building balancing robot differential drive,built wheeled balancing robot using continuous rotation servos accelerometer/gyroscope upgraded servos geared dc motors 8-bit encoders goal robot drive balancing kind stuck program drive balancing think way control input motors act sort pushing robot unbalanced direction want travel seems kind clumsy better way think need combine dynamic model balancer differential drive bit control theory know update anorton answer good looking state matrix pole placement matrix based new state vector b matrix control left/right wheel torque u vector need read systematic way determine matrix pole placement seems example complicated examples determining guess check difficult update bit reading think understand need dynamics robot determine matrix pole placement using matlab octave,mobile-robot control dynamics,mobile control dynamics robot
253,resetting position e-puck webots using supervisor node problem getting handle robot,writing method java reset position e-puck webots following tutorial supervisor approach controllers project supervisorcontroller extends supervisor responsible genetic algorithm resetting e-puck position epuckcontroller extends robot drives robot robots communicating emitter receiver everything works fine position reset supervisorcontroller node epuck getfromdef epuck field fldtranslation epuck.getfield translation result get exception supervisorcontroller exception thread main java.lang.nullpointerexception supervisorcontroller supervisorcontroller.initialise supervisorcontroller.java:413 supervisorcontroller supervisorcontroller.main supervisorcontroller.java:497 epuck variable null tried calling different methods resulted nullpointerexception name e-puck matches world file def epuck differentialwheels translation -0.000327529 rotation -0.0301538 children ... ... .. name epuck controller epuckcontroller axlelength wheelradius maxspeed speedunit appreciate advice get handle robot look issues simulation/code,mobile-robot simulator,mobile robot simulator
254,overview skills needed sensor fusion,want make list knowledge necessary sensor fusion wide array possible applications clear studying please verify add topics in-scope specify extent digital signal processing course https //www.coursera.org/course/dsp probability course http //ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-041-probabilistic-systems-analysis-and-applied-probability-spring-2006/lecture-notes/ machine learning course coursera stanford university programming robotic car course udacity knowledge matlab simulink tutorials mathworks webpage offline help basic knowledge integrals matrices operations differential equations,sensors sensor-fusion,sensors sensor fusion
255,possible interface android mobile gsm gps module arduino based robotic applications,want built robot need bunch modules track gsm/gps wifi camera try buy module cost dollar aprox pakistan hand android enable phone purchased wondring possible interface android phones huawaii google 8-bit microcontrollers arduino port available android phones usb arduino supports usb possible attach,arduino usb,usb arduino
256,space rovers survive low temperatures,example rover working temperature range -70 +120 celsius survive restore temperature drops -150 degrees several months,electronics ugv reliability,electronics reliability ugv
257,terms mobile-robot orientation relative direction non-robot objects,robotics programming orientation given terms x z coordinates central location x z coordinates convenient rapid human understanding many locations select e.g. human prone human error common english orientation descriptors wordy imprecise rapid selection front-facing camera robot right front shoulder wordy front imprecise camera leading edge pointing naval aeronautical fields vehicle locations talked fore aft stern port starboard direction movement relative vehicle given reference clockface e.g. rear aft starboard left port language supports rapid human communication precise terms front equivalent terms mobile robotics,mobile-robot control design localization navigation,control localization mobile robot design navigation
258,perfecting tripod gait building r-hex robot,need help figuring following things developing hexapod r-hex type model tripod gait angles obtained walking real life aligned robot collapses falls straight terrain configuration rpm dc motors leg h-bridge motor drivers dc motor atmega change gait type tripod stable dc motors providing fine control need servos need dc motor encoder benefits done improve performance robot added stepper motor work servo,motor wheeled-robot gait,gait wheeled motor robot
259,self learning maze solving robot using microcontroller,want know best algorithm technique implement self learning maze solving robot bit limited resource micro-controller looking optimized and/or technique maze type of-course first time walk way keep tracking obstacles found think best technique neural networks possible short resources example online similar kind problem wall detection based units counted wheel turns accurate integers sensing walls ultrasonic range finding used wheel remeber current position let say feet staight feet right etc,algorithm machine-learning mapping micromouse,machine micromouse learning algorithm mapping
260,prototyping device small dc motors good fit,want prototype therapeutic device lot tiny mobile-phone type vibration motors want able activate configuration want going analogue control support logic perlin noise functions going need sensor data kind feedback buttons control need fine control lots little motors depending results get say motors initial prototype decide done needs motors enormous budget question arduino good fit project feasible get many motors working controller know arduino boards 50-something serial outputs tell translate motors need way extend board serial outputs wanted try arduino good fit better try something serial port pc tried home-cook robotics application aware options,arduino motor,motor arduino
261,invert d-h parameters,working kinematic chain made set ten links d-h convention usual parameters a_i d_i \alpha_i \theta_i task requires inversion part chain read end-effector origin using links parameters possible please related inversion kinematic chain basic want find dh parameters inverted kinematic chain let put simple dh parameters link planar chain joint joint compute direct kinematics want compute direct kinematics joint joint given dh parameters a_i d_i \alpha_i \theta_i retrieve transform matrix formula g \left \begin matrix cos \theta -sin \theta *cos \alpha sin \theta *sin \alpha cos \theta *a \\ sin \theta cos \theta *cos \alpha -cos \theta *sin \alpha sin \theta *a \\ sin \alpha cos \alpha \\ \end matrix \right transform matrix i-th link i+1 -th link invert obtain transform matrix i+1 -th link i-th link problem working believe reason related fact dh convention work help,control inverse-kinematics kinematics,control inverse kinematics
262,mindsensor motor multiplexer jump run_unlimited,trying run motor using mindsensors motor multiplexer slow speed turn tends jump degrees moving slow speed anyone seen behavior using nxt firmware loaded lms_arm_mindsensors_129.rfw sample code using bricx command center ide follows mmx_run_degrees sensorport addr mmx_motor_2 mmx_direction_reverse mmx_speed_slow mmx_completion_wait_for mmx_next_action_brake wait mmx_run_unlimited sensorport addr mmx_motor_2 // jump happens sensor in_2 sensorthreshold,nxt mindstorms not-exactly-c,mindstorms c
263,way use single dc motor output different loads,way use single dc motor output different loads using gears relays etc please see illustration clarify illustration get dc motor power output gear extended idler gear output gear contact picture show load load separate gears connected different loads wheels etc contact bottom gears switching relays load bearing gears move towards output2 mesh drive load,motor,motor
264,possible make kite flying robot,question asked electronics stackexchange want know possible make robot fly kites idea practical thinking making kite making flying helicopter want know idea implementable example similar work reference,control quadcopter radio-control,control quadcopter radio
265,assemble brushless motors propellers,building quadcopter received motors propellers right way assemble confident done sure propeller stay place clockwise rotating motor mean motor rotates clockwise screw stay place prop inertia pushing counter-clockwise done course tighten screw ...,brushless-motor,brushless motor
266,measure distance cord string moved,pet project trying fly kite using computer need measure cord extends device need read results computer need connect pc using something standard usb budget small best get old home appliances build technology need make measurement,wheel usb encoding,wheel usb encoding
267,stabilizing robot arm specified height,4-bar linkage arm similar design telerobot used vex robotics competition want able press buttons ps3-style controller arm raise certain angles potentiometer measure 4-bar angle potentiometer measures angle joints shoulder mechanism similar type control use stabilize arm angles,mobile-robot control arm,mobile control robot arm
268,assigning frames deriving link parameters,textbook using answers practice questions sure following dh parameters correct given frames assigned original question follows arm shown example joint axis twist degrees magnitude axes derive link parameters kinematic equations ^bt_w b means base frame w means wrist frame link parameters \begin array ccc const \\ angle distance \\ \alpha_ i-1 a_ i-1 d_i \bf \theta_i \\ \\ \theta_1 \\ -90 l_1 \theta_2 \\ l_2 \theta_3 \\ \end array frame assignments,inverse-kinematics kinematics forward-kinematics,forward inverse kinematics
269,increasing rotation range servo motor,increase rotation range standard servo servos rotation range degrees like access entire degree range servo attaching servo shaft robotic wheel like able make full rotations possible like lose part servo allows specify angular position wheel stop use gears order transform system range lead loss precision addition transform allow wheels rotate direction understand work stepper motor external encoder dc motor external encoder work,motor rcservo,motor rcservo
270,perform reference system transformation,quaternions indicate initial orientation wheel robot relative reference systems robot orientation given quaternion q reference systems reference system quaternion q1 refer robot looking positive x quaternion components q1 second reference system refer robot looking negative x. matrices indicate position robot time correspondent reference system want find correspondent points first matrix second reference system matrix built different sensor results similar think find transformation reference system second point matrix find transformation translation part think clear rotation edit wildcrustacean solution proposed solve problem think reason system represents robot different way initial robot moving forward rotation increase x axis goal referential system b robot moving forward rotation increase z axis see figure details first system ______ |\ \_____\ z |b r \| \|____| -- x second system b ______ |\ \_____\ x |b r \|____| -- z r right side b side top think apply extra rotation change initial quaternion belongs first system accordance second system applying transformation post rotation degrees x followed y. rotate b tried solve quaternion adjust reference system first_quat make_quaternion unitary_x pi generates quaternion rotates pi x second_quat make_quaternion unitary_y pi/2.0 generates quaternion rotates pi/2 composed_fs_q first_quat*second_quat quaternion rotate reference system quaternion_ini_a quaternion_ini_a*composed_fs_q a2b_quaternion quaternion_ini_b* quaternion_ini_a.inverse a2b_quaternion quaternion use rotation perform right rotation idea,mobile-robot localization odometry,mobile odometry robot localization
271,numpy alternatives linear algebra kinematics python,decent python numerical package libraries numpy python numpy relies gfortan compiled platform avoid hidden/insidious numerical errors numpy need matrix algebra package kinematics planing machine learning python sensitive gfortran version compiler options,kinematics python,python kinematics
272,stage filtering applied sensors data,filter kalman/lowpass getting raw values sensor converting raw values usable data matter example filter getting raw values imu filter converting raw values usable data flight dynamics parameters,kalman-filter imu,filter imu kalman
273,robots minimum distance,trying implement mechanism make robots avoid close say distance less familiar systems implement strategy avoid robots anyone recommend readings problem set keywords search know start,algorithm movement,algorithm movement
274,torque kg/cm,looking motor parameters stepper motor listed torque motor different current/voltage torque listed kg/cm kg/cm acceptable unit torque calculate torque nm kg/cm clarity note kgcm represents kilogram force nm website happens,stepper-motor torque,torque stepper motor
275,electro motor going slower,old dust buster got electro motor included battery pack charger ripped everything dust buster broken motor works playing letting lying weeks revs lot slower supposed battery pack drained hooked battery pack charger let charge night motor turns slow want use motor home robotics project making kite fly computer went local electronics store measured charger give says battery pack give hooked motor charger move inch wonder motor spin hooking charger low battery pack charge bothers tips welcome,motor battery,battery motor
276,name mechanical linkage,trying find joint robot building called swivel joint universal joint modified spider find prefer make searching joint returns standard automotive type help appreciated,joint,joint
277,choose educational robotics kits beginner programmers,high school student research project ai robotics choose robotics kit example better learn basics using hexapod robotic arm know good level,arduino artificial-intelligence beginner,intelligence beginner artificial arduino
278,interface tlc5947 small motors,follow-up question prototyping device small dc motors good fit decided based sending control signals multiple tlc5947 chips sending pwm signal motors best way go need know turn pwm signals something required power tlc5947 able drive motors guessing amplifier need make best way boost many signals,motor power pwm,pwm power motor
279,best way handle food grains,trying handle food grains rice wheat automated way cook simple dishes transfer grain larger container weighing scale know use solenoid valves liquids solid handling valves seem big gate valves etc larger applications better way,automatic,automatic
280,dynamic programming algorithm aka bellman equation robotics,dynamic programming algorithm refers bellman equation open-loop control decides movement initial point closed-loop control decides control movement robotic application looks closed-loop control point checks respect reward function thinking participants threads mature real-time programming robotics differentiate scope thought interested know dynamic programming used robotics research dp usage robotics,research dynamic-programming,programming dynamic research
281,fpgas used robotics,good points lot io points need think things low level flip-flops pioneer areas things mature -- example see question development-tools fpgas -- understanding fpga used create excellent dexterity robotic hands people market fpga prototyping looking designs understand need io points things sensors choose fpga robot fpga chosen project robotics,design research logic-control,control logic design research
282,equation limit rate change end-effector x coordinates,vector math involved prepare developing robotic arm moves dimensions rotary-rotary design looks like picture post building robotic arm joint trying limit speed end-effector using simulink believe best way limit speed limit rate change x coordinates tell move want end-effector able move line believe accomplish defining functions calculate maximum rate movement x direction based distance arm trying travel equasion came xrate abs currentx nextx max abs currentx nextx abs currenty nexty yrate abs currenty nexty max abs currentx nextx abs currenty nexty xrate distance x max distance x distance actual problem limits speed x end-effector travel instance in./sec directions time meaning travelling in./sec overall moving direction move in./sec speed second component boils fact max speed arm move minimum main question given need calculate max xrate max yrate limit overall speed end-effector secondarily way implement rate control limit overall rate limiting x using simulink,design,design
283,use raspberrypi receive gamecube remote rf signals,old gamecube work want gut fill arduino boards and/or raspberry pi necessary want project kind ai aspect toying idea using wireless gamecube remote wavebird issue commands push button guess good testing purposes curious go making raspberrypi understand gamecube remote input kind idea feasible,control arduino raspberry-pi,control pi raspberry arduino
284,know li-po battery discharged,building quadcopter seen li-po battery discharged damage know stop quadcopter robot order prevent damages voltage drop part control battery charge escs bec flight controller,battery,battery
285,rate peristaltic pump flow accurate changes fluid viscosity,building arduino controlled pump system able move fluids need accurate extreme precision required variety liquids moved pump determined peristaltic pump best fit think understand questions.. need purge system ... peristaltic pump push air let assume tubing pump bunch water remove tube water reservoir open air purge system remaining water want measure flow count milliseconds using flowmeter ... peristaltic pump pump constant rate regardless viscosity fluid maple syrup come rate water shopping question ignore suppose ... anyone know find fast/high flow peristaltic pump looking able pump minimum .5oz/sec determinant ... sort relay want toggling arduino,arduino,arduino
286,gazebo set gazebo_model_path environment variable,starting gazebo moment following tutorial internet order get gazebo find model author advocates exporting gazebo_model_path environment variable export gazebo_model_path= ... /models gazebo_model_path work current terminal wanted change environment variable gazebo user guide claims gazebo_model_path environment variables set /usr/share/gazebo-1.5/setup.sh virgin gazebo install list export gazebo_master_uri=http //localhost:11345 export gazebo_model_database_uri=http //gazebosim.org/models export gazebo_resource_path=/usr/share/gazebo-1.5 /usr/share/gazebo_models export gazebo_plugin_path=/usr/lib/gazebo-1.5/plugins export ld_library_path=/usr/lib/gazebo-1.5/plugins ld_library_path export ogre_resource_path=/usr/lib/i386-linux-gnu/ogre-1.7.4 line needed relying ros urdfdom library export ld_library_path=/opt/ros/fuerte/lib ld_library_path start gazebo gazebo_model_path set home/.gazebo/models set guess add gazebo_model_path setup.sh script set know better practice set,gazebo,gazebo
287,pid tuning make balancing robot better,see video balancing robot balancing robot trouble getting balance hard surfaces got playing pid gains lot balancing fine carpet set pid gains picking kp increasing ki robot oscillated tried smash self ground increasing kd stable gains using video kp=20 ki=4.5 kd=45 sit spot balancing problem see stop falling give good kick problem stops falling overshoots direction video see give small tap runs way becoming stable suggestions try next,pid,pid
288,minimum speed controller refresh rate,quadrotor change motor speed depends position space frequency result stability mean change motor speed times second times second stabilize uav quadrotor better question targeting people made uav quadrotor information escs wan know whats minimum refresh rate escs quadrotor make stable example esc refresh rate enough stabilizing quadrotor asking question high speed escs expensive lower speed ones work,quadcopter esc,quadcopter esc
289,calculate processing speed microcontroller,microcontroller process minimum data second determine processors able calculate processing speed second microcontroller scared college project need help,microcontroller,microcontroller
290,information filter kalman filter approach,read many sources kalman filter approach filtering canonical parametrization moments parametrization used difference questions using forget kf remember prediction complicated link imagine uncertainty matrix turning ellipse see area uncertainty mean boundaries simple addition information possible assumption sensor read different object hence association problem posted,kalman-filter algorithm sensor-fusion,filter fusion sensor algorithm kalman
291,object level sensor fusion multiobject tracking,want fuse objects coming several sensors different overlapping fields view object lists determine objects observed different sensors fact object write algorithm predict future state object literature read steps track association update tracks estimates associate acceptance gate statistical approach pdaf jpdaf track smoothing lots generating new improved estimate e.g ekf ukf pf track initiation create new tracks unassociated plots track maintenance delete track associated last turns predict tracks associated new location based previous heading speed questioning point acceptance gate single sensor imagine comparison xy position object sensor measurement velocity heading case ready object lists sensor cycle algorithms merge informations object collected different sensors great source e.g http //www.mathworks.de/matlabcentral/fileexchange/37807-measurement-fusion-state-vector-fusion question decide objects fused left fields view overlap,kalman-filter algorithm sensor-fusion,filter fusion sensor algorithm kalman
292,dynamic braille interface,newbie robotics project dynamic braille interface array pins use least motor possible thinking using arduino easy interface computer,design,design
293,wire used hand movement robot called find online,looking specific name wire used robotic arm movement control find online want control using micro controller please suggest good development kit,microcontroller robotic-arm movement,microcontroller arm movement robotic
294,plastic shaft supports,like prevent shaft pulled bearings press plastic ring side rings called bearings hubs find,mechanism,mechanism
295,read multiple channels rx-tx arduino,channel rf rx/tx want connect motors able connect channel motor unable connect channel motor arduino code using int motor1left // defines pin connected motor int motor1right= // defines pin connected motor int motor2left // defines pin connected motor int motor2right // defines pin connected motor int enable int enable2 int channel1 // defines channels connected int channel2 // pins arduino int channel1 // used int channel2 // store values void setup pinmode motor1left output // initialises motor pins pinmode motor1right output pinmode motor2left output pinmode motor2right output // outputs pinmode channel1 input // initialises channels pinmode channel2 input // inputs serial.begin // sets baud rate bps void loop channel1 pulsein channel1 high // checks value channel1 serial.println channel1 //prints channels value serial monitor delay channel2 pulsein channel2 high // checks value channel1 serial.println channel2 //prints channels value value serial monitor delay channel1 channel1 /*these values got transmitter customize according transmitter values */ digitalwrite motor1left low // sets digitalwrite low // motors low enable channel1 // checks channel1 lesser digitalwrite motor1left high // turns left digitalwrite motor1right low // motor enable channel1 // checks channel1 greater digitalwrite motor1left low // turns right digitalwrite high // motor enable channel2 channel1 digitalwrite motor2left low // sets digitalwrite low // motors low enable2 channel2 // checks channel2 lesser digitalwrite motor2left low // turns left digitalwrite motor2right high // motor analogwrite enable2 channel2 // checks channel2 greater digitalwrite motor2left high // turns motor2right low // motor analogwrite enable2,arduino,arduino
296,stabilize quadcopter,today quadcopter first flight running megapirate crius aiop v2 turnigy talon v2 frame touched throttle stick remote nothing felt quadcopter take pushed little bit oscillated times flipped landing propellers broke props frame feels bit loose tighten screws hope ... tune software stabilize take edit know true oscillation random air flows making unstable made tests yesterday ok crashed times time oscillating windy quadcopter managed stabilize tune pids find way crashing edit pid tuning managed stabilize quadcopter oscillating little bit guess change values get perfect stabilization,quadcopter stability,quadcopter stability
297,kind sensor need knowing something placed position,small device picking small rocks moving place kind crude way trying push whole pile bigger gear hoping pushed spaces gears taken falls side spinning gear want know machine got rock spin gear turns single rock side rock present spot gear stop spinning rock taken care rest machine kind device use sensor succeeded getting rock side gear part bigger system sum sensor signal rock signalled separated rest continue work single rock building using ardiuno move gear sensor need something controlled arduino,motor sensors,sensors motor
298,space elevator needed cable propulsion,order build operate space elevator moving crafts people space big challenges solved finding cable enough tensile strength moving stuff cable reasonnable speed ones technical challenges solve things exist robotics need invented,mobile-robot research,mobile robot research
299,adjust objects conveyor belt proper orientation,part larger robot follows happens small rocks kind sensor need knowing something placed position taking rocks placement case need altered stand enter tube rectangular rock wont fit comes sideways dimensions small rocks mm x mm tube use plastic drinking straw material use rest robot lego powered step motors draw conveyor belts move rocks control arduino sorry lousy illustration know good paint program mac used draw picture post please tell rocks enter time much time need adjusted fit enter tube fall question ensure rocks turned right way get straw im sure using lego building robot topic solution involving lego preferable controlled arduino general tips split complex task subtasks robots good theory common sub tasks job requires designing multiple robots,arduino motor microcontroller motion,motion microcontroller motor arduino
300,drone targeting,imagine drone target point plane assuming target stationary parameters p position q target position v velocity moment inertia w angular velocity angular position max thrust u max torque drone job get target possible obeying max torque max thrust ways apply torque plane thrust restricted go direction relative orientation craft aimed rotating drone neglect resistance pretend floating outer space let say drone checks equation time interval something .01 seconds plugs parameters adjusts torque thrust equations thrust torque tried know time takes reach target x-direction time y-direction going integral time dimension account changing thrust based total thrust total thrust direction given changing angular position idea tie torque thrust practical way function called give thrust torque applied interval technique,design algorithm kinematics navigation,kinematics design navigation algorithm
301,quadrotor control using arduimu,using arduimu v3 quadrotor inertial measurement unit separate board control motors arduimu mentioned output rate module super slow control quadrotor asking mentioned answer quadrotor needs least control frequency stay spot escs configured work refresh rate working pid controller saw quadrotors used least 200-400hz control frequency asked similar question ahmad developers arduimu answered arduimu calculates dcm matrices makes slow disable dcm output get hz gyro acc happen disable dcm firmware important simulation pid controller works dcm,arduino quadcopter imu pid,quadcopter pid imu arduino
302,connecting analog input pins arduino,planning stages project using arduino uno control distance sensors run little road block uno input pins wondering way work,arduino microcontroller input,input microcontroller arduino
303,limits pwm timers interrupts,robot wheels/motors quadrature encoder odometry using wheel/motor/encoder combo pololu get transition changes rotation motors give max found seems miss encoder state changes pololu wheel encoder library run issues limitations arduino uno using interrupts track quadrature encoders using pwm drive motors h-bridge chip,arduino pwm encoding interrupts,encoding interrupts pwm arduino
304,use arduino pid library drive robot straight line,like create arduino based wheels quadrature encoders wheel h-bridge driver chip motor controller caster want use pid library ensure speed proportional distance travel conceptual level assuming motors respond pwm levels implement pid control travels line speed proportional distance left travel,arduino pid driver encoding,driver encoding pid arduino
305,using xbox controller fly quadrocopter,come remote intend run certain modifications copter installing camera mechanical manipulator random modifications remote comes copter flexible help functions lacks buttons wondering somehow program quadrocopter respond xbox controller planning using laptop connection talk copter xbox controller connected computer used control quadrocopter question program controller go making possible understand question vague many options need help figuring,quadcopter,quadcopter
306,difference task-level joint-level control systems,literature review mobile robots general mobile hexapods particular came control system defined task level open loop joint level closed loop system present prototype robot external sensors body state estimated simulations experiments used joint space closed loop “proprioceptive” task space open loop control strategies relevant paper simple mobile hexapod meaning terms joint-level task-level context rhex hexapod,mobile-robot control walking-robot hexapod,mobile control walking robot hexapod
307,get windows kinect working beaglebone,tried following number guides internet fall libfreenect exist apt-get anyone got working method,kinect,kinect
308,measure dispense finite amount powder liquid,watching much made wondering build devices spray/inject/dispense finite amount liquid amount error wanted try hobby project working dispenses dry goods amount specify use kind special nozzle/valve open high speeds dispense known quantity reservoir fluid substance individual unit passing line amount specified user container,mechanism manufacturing,manufacturing mechanism
309,easiest way install ros osx mountain lion,latest osx documentation found website latest year complete n00b things ros wanted start playing easiest way edit version installation instructions recent april says osx supported ros installation fail several reasons page contain instructions higher level ros packages base system includes middleware command line tools contain instructions means work osx users work run ubuntu vm install fine osx detailed instructions website,ros,ros
310,detect stepper motor stalled,detect stepper motor stalled google search led people say stepper motor stalls current spikes detectable hall sensor suppose current sensors mentioned sense motor current measured current wires stepper motor percent stepper driver holding position moving application stepper driver thinks telling stepper move motor pegged hard limit measuring current +12v power supply going stepper motor driver seemed give constant current turned current limit amount chopper stepper motor driver missing key detail measure current approach google search led people measure back-emf bemf coil stepper time stepper driver driving coil seems distinguish motor moving vs motor stopped seem distinguish case motor moving vs motor stopped way apply bemf approach system drive stepper spin using stepper driver board ti drv8825 chip hoped fault pin tell stepper motor stalled hard stop seem anything -- supposed tell wired wrong chip drive technique detects stepper stalled hard stop technique detecting hard stall add system using off-the-shelf stepper motor driver stackexchange site appropriate questions motors motor drivers,stepper-motor stepper-driver force-sensor,driver force sensor stepper motor
311,connect infrared remote control pc arduino raspberry pi,bought kid robotics kit several motors infrared remote control steer robot using ir remote control want take next level control robots pc raspberry pi simplest approach thinking possible ways find protocol existing remote control uses emulate ir signals using arduino arduino sending ir signals find piece hardware presses buttons remote control control arduino arduino sending signals button pushers remote control sending ir signals robot,mobile-robot arduino raspberry-pi,mobile pi raspberry robot arduino
312,load balanced multiple ac electric drive motors,wheeled vehicle tricycle configuration attached fixed frame wheel powered ac electric motor ac motors fed motor controllers take speed demand single main wheel steerable lower gear ratio rear wheels theoretical higher top speed vehicle drives straight line motor controllers given identical speed requests feedback controller indicates motors pushing pulling particular common scenario rear wheel pushing front wheel trying slow third wheel current done make motors work avoid situations fight way change request motor controller encourage drives work switch speed request setup current control setup appropriate way control motors let know included important details update question,control motor,control motor
313,convert rgb colors cmyk airbrush robot,developing robot paints using airbrush painting intend use several colors cmyk printer know conversion rgb colors computer dosage colors cmyk,robotic-arm,arm robotic
314,create robot ez-b using regular arduino,interested building robot ez-b sold ez-robot.com comes sdk visual studio direct scripting runtime usb wi-fi irc https connection get regular arduino board able control remotely way read arduino needs hold instructions memory brain computer feeding signals forth microcontroller arduino alone step website niceley puts,arduino microcontroller research machine-learning artificial-intelligence,arduino intelligence microcontroller artificial research machine learning
315,benefit using imu units uav set different sensitivities,noticed imu units tuned sensitive small changes large changes adjusted different sensitivities familiar use kalman filter normalize readings wondering uav benefit second imu set high low sensitivities get accurate timely information,kalman-filter quadcopter imu uav,filter quadcopter imu kalman uav
316,issues upgrading arduino code kinect controlled arm servos,arduino code operating servos using servos trouble getting talk program make angles calculated processing side sent shoulder elbow wrist wrist2 repeated arduino program gets data stores array written pin appropriate array segment shoulder elbow wrist wirst2 get servos run problem try add get response anyone please help get servos work knowledge code limited help appreciated processing data sent arduino byte new byte byte shoulderangle byte elbowangle byte wristangle byte wrist2angle port.write arduino code include servo.h //declares servos servo shoulder servo elbow servo wrist servo wrist2 //setup servo positions int int servoangles //define pins servo void setup shoulder.attach elbow.attach wrist.attach wrist2.attach serial.begin void loop serial.available int servoangle serial.read servoangles nextservo servoangle nextservo++ nextservo shoulder.write servoangles elbow.write servoangles wrist.write servoangles wrist2.write servoangles sorry lengthy post stuck,arduino kinect robotic-arm,kinect robotic arm arduino
317,mechanics translational drift,concerning robots rotate high speed spinning drive motors opposite directions able move direction translate know originated competitive fighting robots known melty brain tornado drive according wikipedia based slowing motors side revolve centre mass whole body spinning fast current heading robot established maintained,navigation movement,navigation movement
318,send arduino sensor data gprs shield,trying send arduino sensor data using gprs shield sim900 shield geeetech particular set data updated website device roaming use http //www.cosm.org best knowledge updates minutes need update 5-10 seconds order connect tried code form udp connection get sent receiving ip port know errors occur arduino side server shown work iphone app sends udp message ///connect void connectudp myserial.println at+cstt=\ apn\ delay showserialdata myserial.println at+ciicr delay showserialdata myserial.println at+cifsr delay showserialdata myserial.println at+cipstart=\ udp\ server ip\ server port\ delay showserialdata myserial.println ///send udp packet server void sendudp int x x x++ myserial.println at+cipsend delay showserialdata myserial.println hello world\ delay showserialdata myserial.println char delay showserialdata myserial.println //showserialdata server side follows written python import socketserver portno class handler socketserver.datagramrequesthandler def handle newmsg self.rfile.readline .rstrip print self.wfile.write self.server.oldmsg self.server.oldmsg newmsg socketserver.udpserver portno handler print awaiting udp messages port portno s.oldmsg starting message see possible solution change tcp connection know ...,arduino sensors raspberry-pi programming-languages python,raspberry arduino python programming languages sensors pi
319,signs servo broken,got kit im sure appears continuous servos broken happened plugged microcontroller made humming sound sent commands second continuous servo didnt work played different ports aurdino based board avail hum removed humming servo placed second servo second continuous servo started move direction asked plugged second moved tried spinning hand second much resistance less resistance easier spin hand something fix anyone experienced problems thanks guys great,arduino microcontroller servos wheeled-robot,microcontroller servos wheeled robot arduino
320,controlling robots serial,working little project ran bit road block controlling servos using serial commands servos appear move put character serial little type say characters random gibberish servos connected move several degrees code include servo.h servo ulf // upper left front servo servo llf // lower left front servo byte index int commandnum=1 int steps // position llf servo int partnum // unused string command // command building void setup llf.attach ulf.attach serial.begin void loop serial.available // bytes read char serial.read in== // escape character commandnum++ partnum serial.println new command command +commandnum break command+=in == partnum++ //if space new section command command == llf serial.read //skip space serial.println lower left foot selected int angle serial.parseint // find angle want serial.println angle +string angle int pos pos angle pos++ // loop positions reach goal llf.write pos // write servo position delay int pos angle pos pos -- // loop positions reach goal llf.write pos // write servo position delay help appreciated edit note nothing printed serial monitor micro towerpro rc servos,arduino rcservo serial c++,serial rcservo c arduino
321,irb servos running joints moving,jogging abb irb1410 noticed servo motors humming joints moving motor cuts guard switch flex pendant released kind mechanism require drive motors keep running joints moving went manual luck suppose holding torque provided braking mechanism think rule,industrial-robot servomotor,servomotor industrial robot
322,non-vision based target tracking,building 4-wheeled knee-high robot music speakers top follow target person target moves like help setup tracking target obvious solutions infrared sensors kind vision tracking application want use imagine robot placed crowded area asked move towards particular person area sake simplicity assume person meters obscured object someone walked target robot robot lose path happen vision-based sensing thanks,sensors computer-vision navigation,sensors computer navigation vision
323,robotics location following tracking,building robot follow target target moves like help setup tracking target obvious solutions infrared sensors application work imagine robot placed crowded area asked move towards particular person area sake simplicity assume person meters kind radar radio solution anything,mobile-robot sensors electronics,mobile sensors robot electronics
324,problem uploading roboduino atmega328,bought new roboduino atmega board roboduino modded version arduino uno made robokits.co.in problem windows plaform tried upload simple blink program listed examples arduino ide got error avrdude stk500_getsync sync resp=0x00 chose correct com port verifying device manager installed prolific drivers board selected board arduino arduino ide complete verbose upload follow \softwares\installed files\arduino-1.0.4\hardware/tools/avr/bin/avrdude -cd \softwares\installed files\arduino-1.0.4\hardware/tools/avr/etc/avrdude.conf -v -v -v -v -patmega328p -carduino -p\\.\com10 -b115200 -d -uflash w c \users\ankits~1\appdata\local\temp\build5865304215250534760.tmp\blink.cpp.hex avrdude version compiled sep copyright c 2000-2005 brian dean http //www.bdmicro.com/ copyright c 2007-2009 joerg wunsch system wide configuration file \softwares\installed files\arduino-1.0.4\hardware/tools/avr/etc/avrdude.conf using port \\.\com10 using programmer arduino overriding baud rate avrdude send avrdude send avrdude send avrdude recv avrdude stk500_getsync sync resp=0x00 avrdude done thank plug board power led pin led blinks ide shows uploading pin led blinks 3-4 times error appears screen blinks 5-6 times tried example programs follows using bit windows ultimate baud rate set ubuntu downloaded ide software center added dialouts group run connecting board pc ran commands lsusb returned following output bus device id prolific technology inc. pl2303 serial port bus device id linux foundation root hub bus device id linux foundation root hub bus device id linux foundation root hub bus device id linux foundation root hub bus device id linux foundation root hub dmesg tried upload program blink gave following error avrdude stk500_recv programmer responding using bit ubuntu selected arduino uno board thank reading please provide suggestions problem,arduino,arduino
325,additional power dc motor second power source,provide power dc motor series receiver circuit hacked cheap rc car burning board board runs aas replacing stock motor larger taken printer remounting chassis homebrew robotics project ... messing learn imagine go receiver want go higher half stuff epoxied tell able add additional aa batteries receiver run system add batteries motor ability run higher current draw due heavier load motor handle fancy new chassis ... pulling current receiver circuit thought connect negative motor positive common ground ... sure want careful damage circuit batteries thought build single power supply use current divider read tried kiddie electronic playgrounds books cost google extra bucks energy costs kinda loss,motor power,power motor
326,interpret specs motor motor driver,ran confusion reading motors consider motor specs maximum motor voltage load current max stall current considering using texas instruments l293d specs output current channel peak output current channel use l293d run motor forth safe happen motor requires mean need different driver ic specs say want drive motors need compensate current current power supply motor driver,mobile-robot motor,mobile robot motor
327,battery pack discharged,used turnigy lipo battery pack turnigy balancer charger 2s-3s month yesterday left battery plugged escs quadrocopter today found discharged tried charge charger showed faulty replugging charger showed charged charge p.s got know measure ... battery pack plugs connected charger escs ...,battery,battery
328,multicopter odd,like ask better design multicopter odd number propellers,quadcopter,quadcopter
329,arduino controlled rc car,bought rc car year days integrated arduino nano vehicle thing arduino receive rc signal pass esc/servo big amount nothing wiring looks remote rc receiver arduino servo/esc/lights added lights experiments distance sensors try integrate car control xbee processing works serial possible setup ideas sort autonomic driving car built offroad suspension bad km/h crash fatal fpv person view driving add servo move small camera swarm intelligence built vehicles feature arduino nano zigbee led front lights steering correction integrate gyro sensor check car driving straight telemetry arduino build sort arduino-zigbee-handheld shows information cars motor temperature current speed uptime battery voltage sensor values etc ideas anyone driving integrated arduino rc toy awesome amount nothing makes feel stupid,arduino sensors radio-control automatic,control automatic sensors radio arduino
330,permission fly uavs,okay sound stupid question sort permission require fly quadcopter uav matter find much help,quadcopter,quadcopter
331,aluminum vs carbon fiber,building quadrocopter scratch lot decision making need input material choice short listed aluminum carbon fiber arms support little short cash experiment considering enough money buy assuming access general tools table saw horizontal band saw cnc router water jet better material work edit deciding specs frame allow design liberty right goal assemble durable as-light-as possible frame withstand lot experimentation electrical side,design quadcopter,quadcopter design
332,upgrading motors seaperch rov torque rpms,looking upgrade motors seaperch underwater rovs carry heavier payloads equipment question look motors higher rpm lower torque lower rpm higher torque gain substantial power increase latter threshold rpms stay maintain speed running jameco pn motors ~1 props setup run max power esc consists fuse toggle switch,motor underwater,underwater motor
333,working autonomous lawn mower alm unbounded area perimeter wire,autonomous lawn mower alm mow certain lawn area area bounded perimeter wire perimeter wire removed mow mentioned area slipping neighboring area constraints problems alm open loop system differential gps tried yield proper results iterative pattern area coverage used provided error iteration added result unpredictable error end expect full fledged solution need starting point understand motion planning unbounded robotics solve problem searched internet know knowledge sources motion planning get good results anyone guide know sources books articles internet help solve problem edit addition information picture shows irregular lawn area enclosures perimeter wire red mark shows center point lawn grey area initial scaled area resembles shape larger area .i draw grey area resembles larger green area grey lines contours tracks followed lawn mower idea description planimeter app onetime shape dimension lawn area green area known link https //play.google.com/store/apps/details id=com.vistechprojects.planimeter hl=en polygon found using method following link http //en.wikipedia.org/wiki/centroid centroid_of_polygon area grey shape figure grey shape least possible area grazed alm grey shape similar green area shape formed green area scaled determine scale factor numerical value ‘ grey area green area grey area known number contours tracks grazed determined width contour equal distance blades end i.e grazed alm single stroke green area grey area area track area track area track3 area track n lawn mower switched reach center lawn red mark showed figure alm graze least possible area grey area alm switch contour circumscribing grey area continue circumscribing track till tracks completed decision made validating calculated preset value no.of tracks alm way entire lawn mowed need perimeter wire mow neighbor’s lawn challenges a. enable alm reach center point lawn a. make alm mow grey area b. make alm switch track track c. bypass obstacle track return track mentioned idea colleague mentioned possible cumulative addition error iteration resulting unpredictable error end intend minimize error fix boundary correct possible fact deviation predictable corrected,motion-planning,motion planning
334,building autonomous pesticide spraying system using swarm robotics based volatile organic compounds detection,visible worms pests diseased parts plants emit unique odor volatile organic compounds different concentrations understand sensors detect compounds development developed idea build swarm robots spray pesticides detecting vocs targets present plants fields target visible worms pests larvae eliminated target invisible pathogens certain areas plant target areas pesticides sprayed prevent disease targets administered correct concentration idea optimize use pesticides treat plant properly questions swarm robotics sci-fi implement specific scenarios implemented swarm robotic systems coming help establish ease implemented system idea conception help formation solution problem much time required realize idea hope question sound sci-fi practical intention solve definite problem work following steps make idea concrete,sensors research,sensors research
335,ziegler-nichols rules find pid parameters non linear system,trying use pid stabilize system described following difference equation y_ k+1 y_k \sqrt 1-y_k ~~~ b y_ k-1 ~+ c u_k ziegler-nichols rules find pid parameters situation precise system apache http server particular trying model cpu load change function keepalive parameter keepalive grows cpu load decrease cpu_ k+1 \cdot cpu_k \sqrt 1-cpu_k ~~~ b \cdot cpu_ k-1 ~+ c \cdot keepalive_k cpu load scalar \in keepalive time b c parameters known experimental data multiple regression,pid,pid
336,prop orientation multirotor,looking information right propellers quadcopter realized different orientations i.e clockwise counterclockwise research found multi-rotors different combinations orientations question matter propeller turning clockwise anti-clockwise,quadcopter multi-rotor,quadcopter rotor multi
337,instantaneous center rotation differential drive robot,want find instantaneous center rotation differential drive robot assuming know robot travel particular linear angular velocity v w use equations given path following circular arc point specified range bearing come x_c x_0 |\frac v w \cdot sin \theta_0 y_c y_0 |\frac v w \cdot cos \theta_0 using webots simulator dumped gps points robot moving circle constant v w single x_c y_c get center point point plot matlab look red points image perceived centers seem trace curve detail missing confused happening trying figure center check obstacle circle collision occur,mobile-robot motion,mobile motion robot
338,tell ardupilot finished initialising gyros referencing telemetry,using ardupilot software fixed wing arduplane know boot need keep system sit gyros initialise ground station field know safe launch telemetry message tells fly ground station situations sit wait arming launching reliable rule thumb information blinking arming switch buzzing worked uav px4 autopilot hardware px4fmu px4ioboard including buzzer illuminated arming switch leds board obscured make light channels required note asking question test theory robotics stack exchange night appropriate forum sorts questions suggested couple times response area51 drones proposal,uav,uav
339,software robot parts interaction modeling,robotic engineer using openscad model robotic components gears pulleys parts etc application model physics interaction components i.e robot move rotate given gear software use modelling interactions linux google sketchup good use linux,software,software
340,programming pan-tilt unit c,trying write c code pan-tilt unit model ptu-d46 using visual studio windows find tutorial reference user manual mentions c programmer interface model ptu-cpi available say find use looked google find anything command reference manual user manual shows different commands control tilt make c program connects tilt controller sends queries anyone please idea look open source programs trying make complicated program need connect tilt controller computer connected usb cable host rs232 tilt controller makes nod say yes,c,c
341,creating robot ez-b regular arduino,anyone experience ez-b sold ez-robot.com comes sdk visual studio direct scripting runtime usb wifi irc https question get regular arduino board able ive read arduino needs hold instructions memory brain computer feed signals forth microcontroller arduino alone step website niceley puts thanks help advance,arduino microcontroller,microcontroller arduino
342,lsm303 magnetometer reading change loop,"using lsm303 sensor compute heading want turn robot heading simple code int mag mag compass.heading lsm303 :vector -1,0 //read angle robot serial.println mag mag angle //while desired angle turn continue update robot angle trex.write trex.write trex.write mag compass.heading lsm303 :vector -1,0 //read angle robot function called speed angle heading trex part tells motor controller turn point loop test desired heading reached testing using couple instances serial.println mag determined loop mag changes means robot turns idea happen someone thanks",arduino,arduino
343,cheapest easiest way detecting person,know anyone success detecting warm-bodied mammal ie human using standard shelf inexpensive sensors use inexpensive sensor combination sensors detect person room localize person like robot enter room detect human is/are present move detected human accuracy need cost factor computational requirements sensor run impossible willing utilize something horespower raspberry pi beaglebone black thoughts ideal pir sensor detect movement large field vision ie degrees closest thing human detector aware requires movement localizing/triangulating person difficult impossible large field vision detect objects good precision much narrower field view unable differentiate static non-living object human ir detectors ie sharp range sensors detect objects great precision narrow field view unable differentiate objects webcam opencv use face detection detect human room best option expensive require much arduino run raspberry slow kinect using feature detection capabilities kinect easy identify humans area kinect expensive consider cheap solution someone aware inexpensive heat-detector tuned body heat and/or success combination 1-4 like share results,sensors sensor-fusion,sensors sensor fusion
344,qt ros tutorial issue,working robotic application r.o.s groovy galapagos like make tutorial create template app catkin_create_qt_pkg unable call script catkin_create_qt_pkg catkin workspace found root _/opt/ros/groovy/qt_ros/qt_create/script_ try execute sudoer got error importerror module named qt_create unable determine make work,c++ ros,c ros
345,wearable accelerometor,worked wiimote think want move want wider range available gestures think using accelerometer many limitations want looking something compatible arduino rpi anyone recommendations,control sensors accelerometer,control sensors accelerometer
346,stream real-time video environmental data overlaid,want embed environmental data collected sensors live video stream camera anyone done know go something library available arduino rpi,sensors cameras,sensors cameras
347,pushing buttons ethernet,want program something push button controllable ethernet new robotics know start best way control actuator network connection,arduino actuator,actuator arduino
348,pid conundrums legged robots,working legged hexapod moves using tripod gait sets code control tripod set time based control code set set tripod motor set move rated required amount time shifting tripod motor set pid control based counting number transitions using optical speed encoder calculating error based difference actual speed required speed adjusting error fixed kd ki values set transitions based control code set count number transitions required complete rotation leg tripod motor set starting leg tripod motor set pid control time based calculation error difference time taken individual motors motor set set shows promising results pid control set not.why motors set move rotation set moves speed differences motors cause destabilize update pid loop robot seems drag little bit solve,mobile-robot pid legged walking-robot hexapod,walking mobile pid robot legged hexapod
349,building robots high reliability durability battery life,involved research plausible models reinforcement learning thought nice try see models perform real world i.e sensory-motor learning mobile robot done robotics labs sutton implementation horde architecture critterbot implementations involve robots custom-build robotics experts order deal trials tribulations learning long time-scale robot designed withstand rigors reinforcement learning experiments drive walls hours damage burning motors dock charging station run twelve hours recharging expert comes designing robots access high quality machine shop stuck buy off-the-self assemble hand constraints common amateur robotics suppliers cater expect start scratch,mobile-robot battery reinforcement-learning,mobile battery learning robot reinforcement
350,best way go building robot hand type keyboard move click mouse swipe touchscreens,go building robot use computer type keyboard move click mouse talking manipulating hardware inputs robot able see screen connected anything autonomous hope replace human qa testers,wheeled-robot artificial-intelligence robotic-arm,intelligence robot artificial wheeled robotic arm
351,improve map autonomous robot using kinect,little background aim process building autonomous robot navigate unknown area avoid obstacles receive speech input various tasks recognize faces objects etc using kinect sensor wheel odometry data sensors chose c primary language official drivers sdk available completed vision nlp module working navigation part robot uses arduino module communication intel i7 x64 bit processor laptop cpu overview robot electronics problem implemented simple slam algorithm gets robot position encoders adds sees using kinect slice point cloud map maps room look rough representation actual room see different bad maps expected using dead reckoning aware particle filters refine ready implement ways improve result update forgot mention current approach earlier forgot program using hashtable store dynamic map grab point cloud kinect wait incoming serial odometry data synchronize using time-stamp based method estimate robot pose x theta using equations wikipedia encoder data obtain slice point cloud slice array x z parameters plot points based robot pose x z params repeat,arduino slam kinect odometry,kinect odometry slam arduino
352,controlling quadrotor pc,need control quadrotor pc using joystick got mini-beetle quad v929 beetle 4-axis nrf24l01+ wireless transceiver module chip transceiver possible write arduino program make speak research found v929 model uses flysky protocol works nrf24l01 transmitter chip mentioned better ways controlling quad pc arduino board,arduino quadcopter radio-control,quadcopter control radio arduino
353,pan tilt bracket stepper motor,using pan tilt bracket works servos spark fun product generic servos servos accurate looking options limited knowledge recommend important consideration motor tilt dimensions random x coordinate think sort attachment motor shaft pan tilt bracket motor bracket recommend use go random x coordinate,servos stepper-motor motion,motion stepper servos motor
354,laser scanner distance,looking laser scanners see huge range detection distances furthest see expensive ones claim question reason huge difference range/price think laser difficult detect something distances greater physical limitation makes expensive go laser scanner,localization,localization
355,material efficient quadcopter frame,made flown quadcopter fascinated looking frame lot designs whachting video wondered lot frames x shape efficient shape according video something corner quick search internet found stated mention exact angle said new idea accepted community,design quadcopter,quadcopter design
356,trapezoidal vs sinusoidal commutation,know commercial driver working trapezoidal sinusoidal commutation measure 3-phase voltage applied pmsm means oscilloscope see difference,brushless-motor,brushless motor
357,learning embedded systems,last robotics project worked involved autonomous outdoor navigation using microcontroller lower-level control computer image processing decision making worked higher-level software guy team electrical embedded systems like capable everything including stuff embedded sure look information done project scratch need know microcontroller use motors required motor controllers get interface controllers encoders use motor feedback write drivers batteries use safely power everything trying learn higher-level software take courses good resources kind low-level stuff,microcontroller power embedded-systems,microcontroller embedded power systems
358,get data serial port,project related telemetry want make ardupilot programmed arduplane send serial port sensors informations height gps position etc.. tried ardustation change firmware want idea read ardupilot serial port using arduino uno saving sd card real-time ardupilot needs send data user input something tried manipulate arduplane source code either someone something need advice,arduino ardupilot,ardupilot arduino
359,maze solving algorithm mazes loops,trying implement line following robot solve mazes similar pololu robots watch youtube problem maze trying solve looped simple left/right hand rule solve maze done research think flood-fill breadth-first-search algorithm able solve looped mazes solving maze reaching large black area sensors read black robot following line sensors read white central ones black algorithms solve looped mazes understand flood-fill algorithm works unsure implemented situation robot sensors bottom centre expected read black black line follows sensors left expected read white following straight line black junction turn reached robot problem following line turning etc need find algorithm solve looped mazes find path entrance exit,mobile-robot motion-planning line-following routing,mobile robot motion planning routing following line
360,units noise measurement related units sensor data measurement,trying understand noise represented accelerometers gyroscopes magnetometers match requirements project standard specs sensors want output axis inertial sensor values meters/sec/sec gauss radians/sec axis noise represented range true value x +/- x m/s/s gauss radians/sec accelerometers magnetometers gyroscopes switching gauss teslas meters feet radians degrees fine looking datasheets surprised find ... noise measured lsb rms μg/√hz https //www.sparkfun.com/datasheets/sensors/accelerometer/adxl345.pdf http //dlnmh9ip6v2uc.cloudfront.net/datasheets/sensors/accelerometers/mma8452q.pdf gyroscope noise measured º/s-rms º/s/√hz https //www.sparkfun.com/datasheets/sensors/gyro/ps-itg-3200-00-01.4.pdf magnetometer noise measured µt rms gauss/√hz http //dlnmh9ip6v2uc.cloudfront.net/datasheets/sensors/magneto/mag3110.pdf http //www.vectornav.com/products/vn200-rug id=54 units mean translate want,imu accelerometer gyroscope noise magnetometer,magnetometer noise imu gyroscope accelerometer
361,go interfacing raspberry pi arduino,want project control motors arduino seems ideal going quite bit processing end connecting arduino computer option mobile anyone experience controlling arduino raspberry pi,arduino raspberry-pi,pi raspberry arduino
362,motor ethernet shields,wondering possible plug motor shield top ethernet shield direction pins motor shield connected pins spi bus thinking work coding disabled chip selects ethernet shield used motors,arduino,arduino
363,help adaptive fill algorithm water color painting robot,tl dr anyone point good adaptive path fill algorithm hey name built awesome painting robot friends evil mad scientist labs brought white house fun stuff anyways web programmer day fun try write software get robot cool stuff crazy reason decided using standard web technologies svg javascript and.. works see project github.com/techninja/robopaint problem fill colors given shapes requires kind path filling algorithm using given size shape cover part shape mention take account overlapping paths occlusions created fake fills following known paths spirals forth hatch lines paths detecting occlusion using browser internal functions detecting object lies given x/y coordinate fill functions fall short anything following paths inefficient filling certain paths filling borders letters u shaped areas question need adaptive path filling algorithm know used similar cnc setups milling similar algorithms used roomba printers figure coverage efficient way possible issue comes think done javascript using native svg paths anyone know look afraid attempt port something js use native node.js module work go community become open source thanks help,algorithm motion-planning motion cnc,motion planning cnc algorithm
364,good quadcopter build,cad editing building frame aluminum polycarbonate edit frame polycarbonate arms screws nuts washers form aluminum covered polycarbonate total length motor approximate mass kg thought battery zippy flightmax changed battery motors turnigy aerodrive sk3 2822-1090kv pdb hobby king quadcopter power distribution board esc hobbyking ss series 18-20a esc core arduino nano imu invensense mpu-6050 propellers sf props standa heading rd rotation/2 pc rh rotation changed ones gon program atleast try want use uav self controlled questions good setup costs much way keep frame change parts cheaper good quadcopter propeller fit motor place buy cheaper good frame missing parts thanks alot dan edit checked using site gave errors good sign camera image picture camera intended,arduino motor quadcopter,quadcopter motor arduino
365,power w means better motor,motor power means better,motor quadcopter power,quadcopter power motor
366,quadcopter application underwater,curiosity concept quadcopter applied rov work way underwater air kind modifications take implement idea underwater,quadcopter,quadcopter
367,pros/cons common robotics kits high school level,interested starting robotics club high school year want know pros/cons common kits vex kit uncle regional suppliers indiana sure vex best choice pros/cons kits note looked lego mindstorms used learning robotics want raspberry pi,raspberry-pi mindstorms beginner children,mindstorms pi raspberry children beginner
368,optimal-time trajectory simple constraints,trying find optimal-time trajectory object point mass point p0 initial velocity v0 point p1 velocity considering simple environment obstacles move constraint maximum acceleration direction maximum speed s_max easy work struggle solution apply solution dimension limit acceleration speed single dimension actual acceleration larger multiple dimensions textbook closed-form solutions problem solve discrete-event simulation,control motion-planning,control motion planning
369,automatic sorting barcode identification refrigerator,endeavoring prototype challenging sorting mechanism fridge appreciate constructive tips get specs plausible design problem aim game identify sort food items limited space fridge user push unsorted shopping chamber top enclosure machine inside try identify contents help bar-codes big problem sort move items according identities different chambers second big problem solution existing devices serve functions automatic bar-coding sorting designs inform mechanics device planning construct thinking manufacturing plants packing factories conveyor belts etc use systems solve problems filtering mechanisms candy dispensers mechanized lifting forks textbook engineering mechanisms,arduino motor sensors cameras,sensors cameras motor arduino
370,single power source electronics actuators,seems popular build robotic systems separate supplies electronics motors/servos involved circuit powers source helps particular situation want use single li-po pack power embedded system 2.5-6v operating voltage input max current draw standard-sized servos hs-645 4.8-6v operating voltage hexapod unlikely servos stalling normal gait patterns,electronics servos power legged,electronics servos legged power
371,build liquid filling machine using piston,team developed filling machine liquids uses piston measure deliver liters bottles built mechanical parts replace electronic ones build machine pull liquid reservoir fills bottle using piston electronic parts stepper motor linear actuators sensors understand vague aligned response appreciated update machine max speed litter bottle water seconds bottles minute higher viscosity liquids take longer spill liquid needs filling acceleration control assume operation modes bubbles bubbles able change volume lcd menu thought single main valve switches reservoir controlled use valves,sensors stepper-motor mechanism,sensors stepper mechanism motor
372,board difference a10 a11 ground pins pwm ground pins,looking electrical explanation statement warning connect power red black rc10 a10 rc11 a11 connectors servos signal lines power servos pwm outputs connectors solutions avoid scenario happen pan/tilt servo much current cause apm reset examined board drawing schematic grounding little unclear schematic go gnd board drawing ground pins appear unconnected traces checked continuity continuity pwm grounds a10/a11 ground pins way power setup j1 enabled using esc power board anyone figure sets ground pins ground pins appear unconnected traces pwm ground connected gnd analog output ground connected gnd,power ardupilot,ardupilot power
373,lithium thionyl chloride batteries generate,building robot power density critical looking using lithium thionyl chloride socl2 batteries drawing need batteries found aa-sized designed weigh picture pack blocks batteries series block batteries mean way ~10ah need like robot carrying question way achieve i.e hours using socl2 carrying much less weight,power,power
374,python3 modules motor movement,python3 modules used program robotic movement declaring device component providing instructions looking modules test components,python,python
375,reducing motor speed jamming,built little bots raspberry-pi motors arduino motors arduino hacked remote car volt motors problem motors spin fast car bumps something seconds small house tried pwm control speed little full throttle jam take weight put buy chassis slow motor give torque gearbox anything,motor pwm,pwm motor
376,building non rotating persistence vision device,looking way create non-rotating persistence vision device electronics set stumped mechanical design tried designs work everything shakes go need swipes second ideas build,motor mechanism,mechanism motor
377,light pattern flashing using rviz/openni kinects,kinects usb card whose cameras watching rviz openni structured light pattern flashing short flash seconds structured light depth calculations work pattern projected camera looking causes fix edit issue single kinect discovered issue detailed problem persists kinects plugged kinect flashing functioning,ros kinect openni,kinect ros openni
378,visual obstructions impact ability localize using lidar,street crowded extent terrain visible point view lidar e.g google self driving car manage localize continue operate recall sebastian thrun saying google car navigate snow filled roads onboard lidar map terrain beneath snow e.g edit based comments clarifying context visible means obstacle lidar terrain,ugv lidar,ugv lidar
379,px4 communication,"anyone know px4 software using eclipse program want open new uart door write following commands ... static int uart2=open /dev/ttys1 o_rdwr o_nonblock write uart2 hi ,3 working anyone idea",microcontroller communication,communication microcontroller
380,line follower optimization,working building line follower robot want optimize performance suggested pid algorithm read lot pid confused bit regarding following calculated error_value using k_p proportional ... regarding change motor speed confused use comparison difference i.e currentposition setpoint errorvalue use difference //code changing appropriate motor speed using error_value error_value //code changing appropriate motor speed using error_value specified range values constants k_p k_i k_d using differential wheeled robot line follower happy someone suggests advanced optimization improving line follower robot,arduino pid line-following,following line pid arduino
381,implement bounded angle vision particle filter,built particles filter simulator wanted add following functionalities limited range vision robot see meters limited angle vision robot see certain angle w.r.t current orientation e.g current orientation degree see range degree managed limited range vision functionality unable add limited angle vision method sense landmarks distance range public double sense boolean addnoise double new double world.getlandmark .getlandmarks .size int z.length i++ point lm world.getlandmark .getlandmarks .get double dx x lm.getx double dy lm.gety double dist math.sqrt math.pow dx math.pow dy addnoise dist += util.nextgaussian sense_noise isboundedvision // todo limited angle vision // robot see degree angle w.r.t orientation dist laserrange z dist z dist return z method calculate probability particle public double measurement_prob double measurements double prob int c double mymeasurements sense false int j j measurements.length j++ measurements j prob *= util.gaussian mymeasurements j sense_noise measurements j c++ isboundedvision c // increase probability particle see landmarks prob math.pow prob c prob return prob coordinates relative robot distance calculation using euclidean distance method robot gets localized,localization particle-filter visualization,filter visualization particle localization
382,convert vertical motion horizontal,interested using miniature motor squiggle micro motor create tiny horizontal movements limited space place project assuming motor placed follows adapt simultaneous movement angle x-axis movement matched y-axis movement possible,motor motion movement driver linear-bearing,bearing linear driver motion motor movement
383,arduino c/c++ progamming tutorials,problem reading circuit schemes connecting wires resistors etc basing example instructables.com tried learn java difficult find going c-code-stuff tutorials focused programming part thanks,arduino,arduino
384,simulate changing environment non-rigid objects,many robot applications practical appealing ones include robot reaction impact evironment e.g due stochastic nature environment e.g robot handle non-rigid objects clothes due variability environment e.g harvesting robots prepared pick fruits different sizes shapes question robotics simulator simulate robot environment simulate response robots action cloth folding fruit picking guess simulator non-trivial ongoing project,simulator industrial-robot,industrial robot simulator
385,use automated tricopters quadcopters,hy found useful post idea seen videos automated quadcopters http //www.ted.com/talks/raffaello_d_andrea_the_astounding_athletic_power_of_quadcopters.html http //www.ted.com/talks/vijay_kumar_robots_that_fly_and_cooperate.html surfed pages companies presenting research information internet found use quadcopters understand accelerating rotating rolling works quadcopters simple claim quadcopters minimum number working parts needs agree think tricopters better duocopters rotate tricopters inclining powering remaining left right propeller rode forums calculated draw drafts tri quad found much efficient everything quad props taken account best properties smallest largest props moving parts vectored tri size building x construction take less material lesser maximum power input better power efficiency makes longer flight time tricopters improved agility quadcopters disadvantage see complicated horizontal rotating tricopter vectored yaw problem man controlled machines solved simple algorithms automated machines real disadvantage small work done thinking bachelor thesis looking opinions thanks edit torque problem tricopters props direction direction opposite symmetrical way sure main problem ...,quadcopter multi-rotor,quadcopter rotor multi
386,track moving object,answered means please point process building quadcopter plan run allowing track object take video feed moving options considered gps antena moving object person car bike surfer gps antena quadcopter radio transmit coordinates moving object quad copter challenges foresee line sight camera camera know point angle pre-program quad record say ... right moving better program set angles record whilst keeping object gps accuracy happens gps lock weak options saw ted talk quads following ball shaped sensor believe uses kinect cameras lots option challenge open hearing ideas start research development features,arduino quadcopter gps,quadcopter gps arduino
387,create pure yaw motion quadcoptor work tricoptor,answer question quadcopters propellers name said need degrees control yaw pitch roll props minimum number actuators required tricoptors require servo tilt rotors complicated comment asked get pure yaw motion quadcoptor possible work tricoptor understand get yaw motion system rotors plane first tilting moving thought main difference quadcopters tricoptors kinematic calculations complex answer explained get pure yaw following way north south motors rotating speed higher lower speed east west motors speed explains works quadcopter explain work fact asymmetry means imbalance torque effects provide movement keeping thrusts balanced keep pitch roll constant,design quadcopter uav,quadcopter design uav
388,roslaunch include file,trying launch file remote computer success connect remote computer think problem including file remote computer words looking machine tag include code launch group machine marvin-1 address= tek-marvin-1 user= blabla password= env-loader= /home/blabla/.roslaunchscript.sh include file= find openni_launch_marvin /launch/kinect_left.launch /group /launch,ros,ros
389,h-bridges stall current,dc motor stall current h-bridge current rating happen h-bridge l293d whose max output current,motor electronics h-bridge,h electronics motor bridge
390,accelerometer bias removal,good explanation remove accelerometer bias flat table axis show values calculated b factors page record b_x^ b_y^ b_z^ s_ xx s_ yy s_ zz flash memory use values subsequent calculations acceleration get corrected outputs know incorporate final calculation accelerations guess substracted sensor reading sensitivities,accelerometer calibration errors,errors accelerometer calibration
391,raise/drop spider,halloween build spider drops ceiling detects motion rewinds scare next kids lightweight foamish spider hobby lobby use need help adding smarts scare kids able detect tall/far kid drop custom height time settle standard dropping height idea motion sensor shoot string webs front people technical total n00b comes robotics ideas components considerations need appreciated,motor rcservo,motor rcservo
392,accelerometer calibration get cross-axis sensitivities,asked related question accelerometer bias removal robotics got better results corrected accelerometer output get better results found calibration equations paragraph vectornav bit enhanced solution linked question variables needed sensitivity sensor x-axis y-axis inputs xy sensitivity sensor x-axis z-axis inputs m_ xz sensitivity sensor y-axis x-axis inputs yx sensitivity sensor y-axis z-axis inputs m_ yz sensitivity sensor z-axis x-axis inputs zx sensitivity sensor z-axis y-axis inputs m_ zy stated ieee-std-1293-1998 ... provides detailed test procedure determining calibration parameters searching 1293-1998 standard page google docs find clue calculate values b_ v_x values vectornav equations explained someone point,sensors accelerometer calibration errors,sensors errors accelerometer calibration
393,choosing motor battery robot,project requires robot move room flat surface concrete floor robot carry estimated total weight 6-7kg including motors laptop motor controller board mics items like move speed roomba moves robot motors castor tried calculation determine type motor use confused someone advise type motor type battery lipo/sla use,motor wheeled-robot battery,battery wheeled motor robot
394,existence probability object fusion,want compute existence probability object sensor fusion high level sensor list objects filtered e.g kalman filter formulae lr g old \frac p ex_ old p ex_ old \alpha \frac p ex_ old p ex_ old p ex_ new lr g new lr g old \alpha p ex_ new \frac lr g new lr g new p ex probability existence lr likelihood ratio idea p ex probability existence local object fused global p ex_ probability influences global old mean values previous cycle condition computation avoid situations dividing obtaining nan inf p ex_ new \alpha huge increasing output increasing cycle object live forever prevent,sensors kalman-filter sensor-fusion,filter sensors sensor fusion kalman
395,name transfer function gh,name transfer function gh simple feedback control system y=\frac g u call g g/ confused fact open-loop transfer function loop transfer function used mean gh different people correct accepted several terms closed-loop transfer function open-loop transfer function overall transfer function loop transfer function loop gain loop ratio thanks,control,control
396,measuring gears servo motors,new mechanical engineering familiar gears motors days bought second-hand gws servo motor project include gears someone help understand correct measurement motor buy correct gear fit servo motor measurement gear hole,rcservo,rcservo
397,making robotic arm draw circle,software engineering student know hardware started project ai course project playing tic-tac-toe game computer human tic-tac-toe board suppose play put cross mark certain place tic-tac-toe board position computer take picture analyse picture help opencv open source c++ library image processing details finding position cross mark find optimal position help algorithm put circle output speak position want make robotic hand draw circle output anybody please help find hardware materials needed make robotic hand helpful anybody suggest tutorials googled found many many suggestions confused choose,robotic-arm,arm robotic
398,design differential steering mechanism,want give robot differential mechanism system turning steering considering case turning right-angled corner robot achieve following gradual circular arc intersection maintaining steady speed accomplish end increase speed outer wheel slowing inner supposing want turn definite radius calculate ratio speeds someone give insight ive done doubts speed right wheel v_r speed left wheel v_l ratio speeds turning equal ratio circumferences corresponding quadrants v_r v_l =\frac r+a r sinister feeling im missing something out..,kinematics,kinematics
399,implement wavefront algorithm,thinking creating robot navigate using map controlled pc 8-bit controller performs low level tasks pc image processing plan implement single room robot placed robot environment tracked camera height ceiling room robot needs mapped http //www.societyofrobots.com/programming_wavefront.shtml track robot height using camera following wavefont algorithim locate robot obstacles procedure idea camera give image robot surrounded obstacles random places using opencv technique draw grind image locating grid contain robot colored symbol robot locating grids containing obstacle grids obstacle thought remaining free space robot navigate robot going get goal place reached given pc like point place reach image mouse click unknowns mapping room locating robot robot know map image believe camera enough locate robot thought adding triangulation mapping placing irs room receiver robot doubt ir receiver know direction receiving ir signal left right think knows receives ir direction triangulation going happen know angle direction coming image processing implement wavefront algorithm capture live vedio draw grids find robot obstacles hc-05 module arduino dongle chassis dc motors driver dc supply,algorithm mapping,mapping algorithm
400,servos stop limits,moving controlling robot arm basic time based motors controlled using raspberry pi python advanced robotic arm servos hs-425bb time based motors keep track arms position guess work make sure turn servos stop give position boundaries grinding gears,rcservo,rcservo
401,make motion sensor circuit communicate lan,newbie electronics/ robotics love hobby want build circuit small size better motion sensor communicate data sense motion send signal computer wifi something possible schematics diagram someway start project grate help thank,sensors wifi communication circuit,communication sensors wifi circuit
402,motor driver selection,building wheel robot carry load used link get torque required motor 11kg-cm choose motor 36kg-cm torque noticed stall current use adafruit motor shield rated peak current capability current rating driver look thanks,motor driver current,current driver motor
403,arduimu noisy output quadrotor,using arduimu v3 quadrotor inertial measurement unit separate board control motors arduimu problem arduimu sensors output put quadrotor steady ground motors getting degree roll pitch noisy output something image -6 degree error delta_t sure mechanical problem checked mechanical joints everything mention motors everything going checked vibrate device yaw axis axis shows noisy output using dcm filter arduimu tested kalman filter difference tested fri low-pass filter results good seconds delay output checked separate arduimu power circuit difference problem arduimu get rid noisy output update think problem pid controller noises ... true assumption tune pid parameters using ziegler–nichols method noisy data tested ziegler–nichols low rate noises tuned pid noise appears unable tune pids anyway tuning pid situation problem noises pid get rid,arduino quadcopter noise ardupilot,quadcopter ardupilot noise arduino
404,beaglebone black power draw,minimum amount power beaglebone needs start peripherals attached host usb getting started guide claims run computer usb power makes mention many amps needed saw mention older kernels limiting current draw .5 amps working usb find start beaglebone black .3 amps many,microcontroller,microcontroller
405,motorize elbow socket joints powered exo-skeleton,motorize joints iron man suit need something shallow think dual servos sitting side elbow knee joint side hips get motorized action adding thickness joint bicycle-style chain drives work think length chain need vary depending position least lot joints motorize joints,design mechanism,design mechanism
406,quadcopters use brushless motors,thinking starting quadcopter project building scratch main barriers-to-entry motors seems quadcopters use brushless motors experience dc motors using pwm signals regulate speed experience brushless motors understand brushless motors expensive typical dc motor use land robot require electronic speed controllers escs seem make perspective expensive complicated use question brushless motors make useful quadcopter torque less weight something efficiency harder possible achieve lift using dc motors,quadcopter brushless-motor,quadcopter brushless motor
407,controlling conveyor belt time based motor,crude time based motors taken robot arm upgraded proper servos want able power conveyor belt wondering go following ball drops hole conveyer belt hitting switch way switch triggers motor start ball gets top belt falls hits lever switch turns motor handle logic hooking raspberry pi using python start stop motor depending gpio pin received input top bottom lever use single lever set constant time interval stop motor prefer use handle change scale/construction wondering done using logic gates similar,motor raspberry-pi,pi raspberry motor
408,get data kinect,try using openni_launch works try viewing image using kinect rgb depth camera recording simple bagfile data kinect unable see picture rosbag record data seconds running image_view rosbag record got error terminate called throwing instance :openniexception' virtual void :opennidevice :startimagestream /tmp/buildd/ros-groovy-openni-camera-1.8.8-0precise-20130418-2203/src/openni_device.cpp starting image stream failed reason xiron os got event camera_nodelet_manager-2 process died pid exit code -6 cmd /opt/ros/groovy/lib/nodelet/nodelet manager __name =camera_nodelet_manager __log =/home/rosbotics/.ros/log/16b63744-e043-11e2-ac16-080027486aa8/camera_nodelet_manager-2.log log file /home/rosbotics/.ros/log/16b63744-e043-11e2-ac16-080027486aa8/camera_nodelet_manager-2*.log searching trying various fixes figured problem openni started using freenect encountered problems record data using bagfiles see images kinect using rviz image_view someone asked something unrelated freenect-glview gave black screen lsusb shows parts kinect connected able control kinect motor ubuntu know least connection established additional info run ros ubuntu using virtualbox v.4.2.14 windows usb ports using ubuntu ros-groovy date exact errors mac osx lion try using rviz kinect virtualbox crashes appreciate anyone help matter,ros kinect,kinect ros
409,control velocity ratio turning angle θ,im designing differential steering mechanism robot supposing robot going straight line want change direction certain angle θ diagram velocity ratio wheels turns starts moving line θ degrees initial line movement ambiguity question please take look earlier question similar design differential steering mechanism,kinematics,kinematics
410,operating torque specifications steppers,looking online seem find steppers torque ratings operating torque holding torque looked hobby sites ratings including adafruit sparkfun found said operating torque seem reputable holding torque mistake contact ask missing something calculate run certain factors long step etc reason say found tutorial saying much torque specify kind kinda assume holding need cnc machine building equation site torque weight inches/revolution /2 pi page way talking torque continual turning motion holding position seems operating torque makes confusing sell steppers list holding missing,stepper-motor cnc,stepper cnc motor
411,speed robotic arm,robotic arm ring desk bell maplins site usb robotic arm seem slow hack boost downwards upwards speed need hit bell tip/platform lol project work time get order want arm ring bell -edit gearbox much slow change speed gearbox least times grabber gearbox different gear marker p7 white seems move grabbers faster speed,robotic-arm,arm robotic
412,rotor torque,stepper datasheet category rotor torque labeled n-cm mean torque supply turning,torque stepper-motor,stepper torque motor
413,manipulate real-time sonar data arducopter arduino,quad radio telemetry kit like send real-time sonar data laptop running windows order manipulate additional arduino sketch sonar sensor connected analog channel arduino data processed altitude calculations like send altitude data sort ground station computer use telemetry kit radios computer sure go task way modify source code gcs.h gcs_mavlink.pde conjunction mission planner mav ground station need write python module accomplish,quadcopter python sonar,quadcopter python sonar
414,calculate position differential drive robot,calculate update position differential drive robot incremental sensors incremental sensor attatched differential wheels sensors determine distance \delta left resp \delta right wheel rolled known time \delta let assume center wheels marks position robot case calculate position x \frac x_ left +x_ right \\ \frac y_ left +y_ right deriving equations assumption wheels rolled straight line correct small distances get \frac \delta x \delta \frac \left \frac \delta left \delta \frac \delta right \delta \right cos \theta \\ \frac \delta \delta \frac \left \frac \delta left \delta \frac \delta right \delta \right sin \theta \theta angle orientation robot change angle found equation \frac \delta \theta \delta \frac w \left \frac \delta left \delta \frac \delta right \delta \right w distance wheels \delta x \delta depend \theta wonder first calculate new \theta adding \delta \theta use old \theta reason use let assume center wheels mark position robot want use point marks geometric center robot bounding box x change x \frac x_ left +x_ right l\ cos \theta \\ \frac y_ left +y_ right l\ sin \theta deriving first gives \frac \delta x \delta \frac \left \frac \delta left \delta \frac \delta right \delta \right cos \theta l\ sin \theta \frac \delta \theta \delta dependance \delta \theta reason use new \theta better method simulatenous update position orientation using complex numbers approach quaternions homogeneous coordinates,mobile-robot kinematics motion two-wheeled forward-kinematics,mobile motion kinematics robot wheeled
415,protect milk homemade vending machine,working homemade vending machine project serves milk cookies using arduino basic servos stuff problem clue protect milk last long know milk ok drink.. know air bad milk cookies came solenoids activates time air milk colder place sure design sound stupid need help please think design work solenoid top make difference protect milk improve make milk last long possible i'v heard big guys making machines keep milk fresh weeks months sure milk stand couple hours.. idea information link clue appreciated thank,arduino,arduino
416,classify adjacent surfaces belong object,box cuboid lying floor table surfaces surface floor take pair surface surfaces adjacent get kind pairings surfaces box surface normals surfaces diverge surface box surface floor surface normals converge intersect angle degrees degrees want add tolerance want distinguish cases representing function function distinguish situations cases normalized dot product surface normals angle b/w degrees right solution ...,kinect computer-vision machine-learning,kinect machine computer learning vision
417,moldable rubber feet,i’m trying inject kind rubber aluminum strut form “feet” robot i’ve milled mold i’m trouble finding inexpensive available rubber compound cure exposure air cure consistency silicone o-ring i’ve tried silicone gasket-maker automotive stuff week cured mold exposure air anything similar consistency silicone doesn’t require air cure way get i’m using set waiting millennium aren’t real mechanical requirements i’m trying clean look robot prevent legs scratching table,cnc,cnc
418,funny behaviour dc motor control,trying control speed motor motor driver pic16f690 pwm program khz frequency ms period starting duty cycle motor run moving say i.e program pic duty cycle re-program motor run course lower speed consider funny anyone explain motor powered,motor,motor
419,smooth servo movement crawling robot,made small crawler robot little legs degrees rc servos total programming movement legs noticed moved stiffly makes sense rc servo internal controller quick response position commands wanted crawler move way seems little smooth life-like solution create cubic function time describes path servos set position small time increments resulting smooth motion solve a_i coefficients cubic equation using time interval starting ending position servo starting ending rates servo move derivative position solve a_0 a_1 a_2 a_3 position a_1t a_2t^2 a_3t^3 rate position given position position t_f rate rate t_f set rate servo pair movements movements opposite directions positive negative movements positive negative direction worked solution limited ways difficult decide rates movements go direction used average slopes particular position movements clear optimal second cubic curves take servo position range positions beginning end movement undesirable example point time interval curve cause servo go second position first position curve generation consider maximum rate servo turn curve servo move speed unrealistic minor concern maximum turning rate depends response servo internal controller change depending size position interval neglecting last concern issues solved increasing degree polynomial adding constraints solve coefficients starting wonder ... better way make servo movement smooth seem life-like,servos kinematics,kinematics servos
420,vehicle defferential gear move,concept phase driving robot wheels front powered rear dragged rear responsible steering noting question robot required make sharp turns high speed options compensate different speeds sides hand differential gear front axle used powered motor hand use motors powering front wheel way simulate differentiation software go first approach using hardware differential one concern robot vehicle differential gear move explicit steering applied imagination wheels connected robot move random curves compensate lot steering know real cars differential gears standard work talking small robot measuring inches,motor wheeled-robot motion wheel,motion wheel wheeled motor robot
421,wind force impact torque mechanical arm,got arm attached shaft arms dimensions inches arm weights lbs wind acting side arm translate wind force torque shaft give information rotating arm using stepper motor like know size motor depending environmental conditions formula look order arrive required oz-in torque given requirements need able accelerate arm rpm seconds wind speed high mph using formula p .00256 x find wind pressure square foot using formula f x p x cd calculating force get x x know wind force arm lbs translate torque arm source http //k7nv.com/notebook/topics/windload.html,force torque,torque force
422,gps modules work plastic enclosures,going embarking autonomous robot project going using gps navigate waypoints aware margin error comes localization gpd live area many open fields going use adafruit ultimate gps board raspberrypi wondering protect mount gps protect elements gps units need face unobstructed ex wood plastic order work protect gps unit outdoors,gps protection coverage,protection coverage gps
423,motors require individually-assigned batteries,dagu wild wheeled platform multiple motor system need battery motor buy side platform addition larger motors ones deal power generated coasting motor want jump deep end robotics hold programming skills realize platform magnitude difficult endeavor recommended motor voltage – volts use volt batteries left right side volt batteries,motor battery,battery motor
424,help pid units quadcopter control system,process writing simple quadcopter controller experimental use trouble getting head convert degrees pid controller demands appropriate 1k-2k range pwm output example take roll configured pseudo-code setpoint scaletorange receiver.rollvalue -30 //scale command -30 degrees maximum roll permitted demandedroll rollpid.calculate setpoint imu.currentroll pid_params /// part trouble motorleft_command receiver.throttle rollpwm motorright_command receiver.throttle rollpwm take roll demanded pid controller convert value useful motors say rollpwm come instinct use simple linear relationship i.e rollpwm scaletorange demandedroll minvalue=receiver.throttle/2 maxvalue=2000-receiver.throttle //do let go throttle low end esc max high end seems simplistic work calculations everything goes pid control help great,pid motion multi-rotor,motion rotor multi pid
425,mpu-6050 arduino nano logic converter,bought mpu-6050 link according manufacture site sensor logic level ebay page says power supply :3-5v use channel bi-directional logic level converter sda scl int channels connect arduino nano saw places says use logic level converter say ok guess depends sensor board please take look link current setup sda llc a4 scl llc a5 int llc d2 vcc llc arduino gnd llc gnd arduino parts test going use jeff rowberg library communicate sensor i2c,arduino sensors quadcopter logic-control,quadcopter control sensors logic arduino
426,build wifi ip camera webcam,usb webcam wifi module convert serial data wifi vice versa question convert data coming webcam serial usb serial ic ft232r hand wifi module update wifi module datasheet,cameras wifi usb,cameras usb wifi
427,approach using pid get differential robot driving straight,consider differential drive robot motorized wheels encoder attached feedback supposed function dc motor takes float sets pwm signals provide proportional amount power motor motors created equal sending motor pwm signal makes robot veer left right trying think drive robot straight using encoders attached motor input pid loop take difference left right encoders error range normalize -1 map motor powers get error left motor turned right motor left motor set right motor set causing hard left issues better approach,pid differential-drive,differential pid drive
428,difference rc motors cars helicopters,working robot focus speed moment looking suitable motor world help understood difference various options provide worked rc model components think place find components needed robot motor figured much power motor needs accelerate robot desired taking energy conversion efficiency tractional resistance account watts depending final weight limit search need using rc car motor rc helicopter motor understand difference options focussing brushless motors matters differences rc car rc helicopter motors need taken choosing,motor brushless-motor,brushless motor
429,determine parameter complementary filter,know complementary filter functions lpf hpf think understanding principal unclear new digital signal processing fundamental explanations help lot say complementary filter follows y+ 1-a \cdot x parameter calculated \text time constant \text time constant +\text sample period \text sample period reciprocal \text sampling frequency \text time constant seems choice questions theory calculation choose \text time constant note posted question stack overflow answers different emphasis,gyroscope magnetometer,magnetometer gyroscope
430,off-the-shelf micro fluid dispenser,way dispense micro liter amounts water lets say 1-10ul thing found piezoelectric dispensers suggestions build off-the-shelf component,electronics,electronics
431,effective distribution grayscale sensors robot,working robotics project using grayscale sensors follow black line turning degrees going round circle passing gaps lines etc wondering effective way detect colours move lines grayscale sensors thank much,mobile-robot sensors automatic line-following,mobile robot following line automatic sensors
432,slam algorithms handle changing environment,groundwork project question current state slam techniques slam-equipped device detects object object position stored look point cloud device generating see points object models generated include geometry object placed previously-empty space detected points added subsequent models feature geometry describing new object device react object removed seen slam systems tend leave points place resulting ghost geometry algorithms lone points caused transient contacts objects remained build solid model remain device memory systems capable detecting previously-occupied space empty,slam,slam
433,compute direct kinematics delta robot,"trying put simple simulation delta robot use forward kinematics direct kinematics compute end effector position space passing angles started trossen robotics forum delta robot tutorial understand math lost last part forward kinematics trying compute point sphere intersect looked spherical coordinates general work angles used find rotate towards e x z see solving equation get lost someone please used example code quick visualization using processing last part seems wrong lower leg changes length //rhino measurements cm final float e //end effector side final float f //base side final float rf //upper leg length radius sphere final float //lower leg length redius lower offset join e x z final float sqrt3 sqrt final float sin120 sqrt3/2.0 final float cos120 -0.5 final float tan60 sqrt3 final float sin30 final float tan30 final float a120 two_pi/3 final float a60 two_pi/6 //bounds final float minx -200 final float maxx final float miny -200 final float maxy final float minz -200 final float maxz -10 final float maxt final float mint -21 float xp float float =-45 float t1 //theta float t2 float t3 float prevx float prevy float prevz float prevt1 float prevt2 float prevt3 boolean validposition //cheap arcball pvector offset camerarotation new pvector cameratargetrotation new pvector void setup size p3d void draw pushmatrix translate width .5 height .5,300 //rotatey map mousex,0 width -pi pi mousepressed mousex cameratargetrotation.x += -float mousey-pmousey cameratargetrotation.y += float mousex-pmousex rotatex radians camerarotation.x -= camerarotation.x cameratargetrotation.x .35 rotatey radians camerarotation.y -= camerarotation.y cameratargetrotation.y .35 stroke et f color drawpoint new pvector ,2 color float new float t1 t2 t3 int i++ float half_pi+ radians *i float r1 f tan radians float r2 e tan radians pvector f new pvector cos r1 sin r1,0 pvector e new pvector cos r2 sin r2,0 e.add xp yp zp //j f rxmat pmatrix3d new pmatrix3d m.translate f.x f.y f.z m.rotatez m.rotatey radians m.translate rf,0,0 pvector j new pvector m.mult new pvector j line f.x f.y f.z j.x j.y j.z line e.x e.y e.z j.x j.y j.z drawpoint f,2 color drawpoint j,2 color drawpoint e,2 color //println dist f.x f.y f.z j.x j.y j.z \t +rf println dist e.x e.y e.z j.x j.y j.z \t +re //length change pushmatrix translate xp yp zp drawpoint new pvector ,2 color et e color popmatrix popmatrix void drawpoint pvector p float color c pushmatrix translate p.x p.y p.z fill c box popmatrix void et float r color c //draw equilateral triangle r radius median c colour pushmatrix rotatez -half_pi fill c beginshape int i++ vertex cos a120*i r sin a120*i r,0 endshape close popmatrix void keypressed float key == t1 -= amt key == t1 += amt key == t2 -= amt key == t2 += amt key == t3 -= amt key == t3 += amt t1 constrain t1 mint maxt t2 constrain t2 mint maxt t3 constrain t3 mint maxt dk void ik xp minx xp minx xp maxx xp maxx yp minx yp minx yp maxx yp maxx zp minz zp minz zp maxz zp maxz validposition true //set angle float theta1 rotateyz xp yp zp theta1 float theta2 rotateyz xp*cos120 yp*sin120 yp*cos120-xp*sin120 zp // rotate coords +120 deg theta2 float theta3 rotateyz xp*cos120 yp*sin120 yp*cos120+xp*sin120 zp // rotate coords -120 deg theta3 //we succeeded point exists theta1 maxt theta2 maxt theta3 maxt theta1 mint theta2 mint theta3 mint //bounds check t1 theta1 t2 theta2 t3 theta3 else validposition false else validposition false else validposition false else validposition false //uh oh failed revert last known good positions validposition xp prevx yp prevy zp prevz void dk validposition true float f-e *tan30/2 float dtr pi/ float float theta1 dtr*t1 float theta2 dtr*t2 float theta3 dtr*t3 float y1 rf*cos theta1 float z1 -rf*sin theta1 float y2 rf*cos theta2 *sin30 float x2 y2*tan60 float z2 -rf*sin theta2 float y3 rf*cos theta3 *sin30 float x3 -y3*tan60 float z3 -rf*sin theta3 float dnm y2-y1 *x3- y3-y1 *x2 float w1 y1*y1 z1*z1 float w2 x2*x2 y2*y2 z2*z2 float w3 x3*x3 y3*y3 z3*z3 // x a1*z b1 /dnm float z2-z1 y3-y1 z3-z1 y2-y1 float w2-w1 y3-y1 w3-w1 y2-y1 /2.0 // a2*z b2 /dnm float z2-z1 *x3+ z3-z1 *x2 float w2-w1 *x3 w3-w1 *x2 /2.0 // a*z^2 b*z c float a1*a1 a2*a2 dnm*dnm float b a1*b1 a2* b2-y1*dnm z1*dnm*dnm float c b2-y1*dnm b2-y1*dnm b1*b1 dnm*dnm* z1*z1 re*re // discriminant float b*b float validposition false zp float b+sqrt /a xp a1*zp b1 /dnm yp a2*zp b2 /dnm xp minx xp maxx yp minx yp maxx zp minz zp maxz //bounds check else validposition false validposition xp prevx yp prevy zp prevz t1 prevt1 t2 prevt2 t3 prevt3 void storeprev prevx xp prevy yp prevz zp prevt1 t1 prevt2 t2 prevt3 t3 float rotateyz float x0 float y0 float z0 float y1 -0.5 f // f/2 tg y0 -= e // shift center edge // z b*y float x0*x0 y0*y0 z0*z0 +rf*rf re*re float b y1-y0 /z0 // discriminant float a+b*y1 a+b*y1 +rf* b*b*rf+rf return // non-existing point float yj y1 a*b sqrt b*b // choosing point float zj b*yj return -zj/ y1 yj /pi yj y1",kinematics forward-kinematics,forward kinematics
434,h-bridge using atmega8 microcontroller,want use atmega8 uc h-bridge anybody give source code using c microcontroller acts h-bridge,microcontroller c h-bridge avr,h c microcontroller avr bridge
435,command sim900a gsm/gprs module find originating address sms,using sim900a purpose want know number sender message comes unable find specific command related receiving message give number latest message comes used at+cnmi corresponds notification regarding latest received message unable find sender number seen at+cmgl= stat mode give string oa i.e originating address stored string parse data string need help suggestion somebody help possible solution,arduino microcontroller,microcontroller arduino
436,modelling tools available design robot,planning build robot free low cost robot modelling tools exist,design,design
437,design calculations mathematical modeling tricopters,studying building tricopter find design calculations mathematical modeling tricopter internet mathematical relationships equations motion forces tricopter calculate requirements structural design energy requirements motors,design,design
438,assigning serial number guid microcontroller,league question seems using multiple arduino uno boards network want assign guid serial number board send data central able find device assign name device way assign guid serial number device message send central server programming burn hex arduino way burn program give output string guid+serial number device program eeprom burn main code arduino pick guid+serial id combo write message arduino pushing central server way asking program eeprom different program arduino files running possible way,arduino microcontroller communication,communication microcontroller arduino
439,unique signature ardupilot hardware general,several boards need identify based unique hardware signature change programming arduinos atmel avr chips general thread accessible serial number seems ardupilot many integrated sensors ics something unique use see schematic checking datasheets hmc5883l-tr ms5611 meantime someone figured please answer,arduino ardupilot,ardupilot arduino
440,laser photosensor pair similar,looking laser photosensor pair product similar function detecting beam interrupted run using arduino main requirement parts nice housings mounting screw holes something lines going project sturdiness durability important know search parts looking please point good product sources give better keywords searching link useful products,arduino sensors,sensors arduino
441,polling timer interrupt,hope build simple line follower robot got problem discussing pic programming planed write endless loop check sensor panel reading relevant stuff reading friends told use timer interrupt generate interrupts definite time periods interrupt check sensor panel reading relevant stuff reading figure best endless loop main method timer interrupt method best way,sensors microcontroller interrupts,sensors microcontroller interrupts
442,place gps autonomous vehicle,used think higher gps position better read following gpsd faq common error place gps high possible increase multipath effects due signal bounce ground water cause gps mistake position time signal correct location boat gps gunwale rail pushpit rail close water mast possible reduce signal bounce mast you're fixed location put gps antenna buildings possible ground car don't put gps antenna roof put similar location driving built area going get signal bounce buildings reduced accuracy physics works note velocity goes easier convergence filters gps spot discard delayed signal multipath effects less important fast-moving vehicles anyone experience placing gps antenna towbar car suggested give reasonable effect concern placing antenna reduce error expose device possible mechanical damage better positions roof towbar thanks,gps ugv,ugv gps
443,model unpredictable noise kalman filter,background implementing simple kalman filter estimates heading direction robot robot equipped compass gyroscope understanding thinking representing state vector x \dot x x current heading direction \dot x rotation rate reported gyroscope questions understanding correct control term u filter true take state vector x \dot x becomes control term u methods yield different results know main noise source comes compass compass distorted magnetic field suppose gaussian noise less significant magnetic distortion unpredictable model kalman filter kalman filter assumption noises white necessary say noise distribution laplacian distribution use kalman filter switch filter extended kalman filter,localization kalman-filter gyroscope compass,filter compass gyroscope kalman localization
444,control input kalman filter unknown,implementing simple kalman filter estimates heading direction robot robot equipped compass gyroscope say time t-dt compass reports reading \theta_ t-dt gyroscope reports reading \omega_ t-dt assume time t-dt rotation rate regarded constant current heading direction \theta_ =\theta_ t-dt +\omega_ t-dt \cdot dt seen \theta time-updated \omega robot control rotation rate next moment unpredictable time update case,kalman-filter gyroscope compass,filter gyroscope kalman compass
445,slam laser range finder produce pseudo-segments dynamic objects,paper author says slam process pseudo segments appear momentary pause dynamic objects laser data make map unsatisfied caused dynamic object moved laser data update eliminate segment dynamic objects,sensors slam,sensors slam
446,control position pneumatic piston,control position pneumatic piston way know using magnetic reed switch magnetic sensor matching piston use type control algorithm pid instance keep piston sensor problem gives limited control position adds state open closed sensor position full control example want time using sensor position like options available mean percentages pre-defined example pistons use good example want http //www.youtube.com/watch v=a8lz15uiuxu,sensors control pid movement,control sensors pid movement
447,running uwsim commands ros,good documentation uwsim ros source files hard follow functions example use command rosrun uwsim gotoabsoluteposition know node package knwo variables set topics,ros,ros
448,tracking accelerometer gyro versus multiple accelerometers,building quadcopter control systems use accelerometer gyro read papers accelerometer used reference ground gyro drifts time quadcopter crazy maneuvering force direction accelerometer point ground data problem centripetal force accelerometer centor mass thinking using multiple accelerometers determine position motion quadcopter need accelerometers done math right kind solve problem centripetal force like know anyone tried use multiple accelerometers better orientation estimation,quadcopter imu accelerometer gyroscope,quadcopter imu gyroscope accelerometer
449,actuator design plausible,got idea waay highschool kind electromagnetic analogue biological muscle thin electromagnets connected parallel current applied gaps electromagnets shrink providing contraction whole chain pretty sure work offer great contraction range guess potential provide good speed compact multiple chains combined form stong linear actuators thing heard type actuator used catch better alternative design flaw much heat generated making unpractical,actuator,actuator
450,send text torobot usb device,trying get torobot usb servo controller work linux beagle board xm servo controller registers usb device device takes simple text commands associated sure send commands send data assuming device cat file.txt /dev/bus/usb/002/005 need associate generic usb device,control microcontroller rcservo usb embedded-systems,control usb embedded rcservo microcontroller systems
451,motor controller micro usb interface,robotics enthusiast planning make small simple wheel car whose motors supposed controlled android device housed inside car means micro usb port device car move directed signals android device assumption circuit board accepts signals microusb/usb android device controls power electric dc motor power motor supplied battery pack car anyone suggest cheap motor driver circuit supports micro usb usb get parts online lot research confused technical terms familiar,mobile-robot motor wheeled-robot,mobile robot motor wheeled
452,control brushless motor,consider using brushless outrunner motor designed helicopters driving roboter control brushless motor micro controller course separate power source roboter able move forwards backwards need control motor way determine direction rotation think related question need ensure high acceleration talking motor listed german shop,motor control microcontroller power brushless-motor,control brushless microcontroller power motor
453,localizing swarm robots,x room high ceiling yes twenty centimeters contains small wheeled robots x central computer orchestrate movements robots using wireless network send position commands robots perform closed loop position control save wireless bandwidth robots 32-bit arm microcontrollers wheel position sensors ability accurate wheel control problem robots way measure position room question robots given ability measure position orientation accuracy better ±5mm looking accurate robust solution affected occlusions require high power pc robot sensors necessary localisation added robots microcontrollers changed powerful ones localisation solution demands,localization wireless swarm,wireless swarm localization
454,calibrate analog thumb stick,outline trying work arduino analog thumb stick get values simple differential drive robot working keyes_sjoys arduino joystick module possession giving strange numbers following axises data x-axis range shaky 470-520 center value y-axis range solid solid center value problem used analog sensors seems obvious x-axis ranges feel similar y-axis addition x-axis hits way way coming edge operating range sensor broken new way recalibrate potentiometer note asked electrical engineering stack exchange,microcontroller,microcontroller
455,gears modeling google sketchup sketchyphisics,trying make differential google sketchup using tutorial http //support.ponoko.com/entries/21249896-gears-and-joints-with-sketchup-sketchy-physics gears modeling problem gears collide objects gears wrong fix make bevel gear placed degrees relative conical cylindrical gears joints p.s something sketchup sketchyphisics linux,design mechanism 3d-printing,printing design mechanism
456,tiny high torque actuator/sensor design,need assemble small x x maximum actuator much torque get size driving small reel pulley reel ~1.25cm^3 center diameter needs respond load eg stop load increases certain threshold power actuator provided common bus line space limit limited size battery thought worm drive torque watch change current/voltage load sure sound seems mechanical advantage provided worm make hard detect change load plan b add sensor gauge force exerted prefer avoid adding many points failure system sort sensor use approach,sensors control actuator,control actuator sensors
457,localising robot swarm,question localizing swarm robots summary want create swarm robots measure position room high ceiling accuracy ±5mm good answers optical methods interested hear non-optical localisation ideas impose following constraints localisation method use optical means visible invisible nothing added floor ceiling appreciable gap top robots ceiling walls equipment added perimeter room look hearing creative ideas,wireless swarm,wireless swarm
458,software designing mechanical systems/robotic parts,software used prototype/design robot parts mechanical parts body gears etc crazy idea like try quadripedal walking robot animal-like design mechanism test degree mechanism kind simulator start wasting money parts/materials tool use interested mechanical design chassis servo/motor placement cogs/gears electronic design interesting robot control software able slap something arduino program behavior want experienced programmer details see work i.e finished system viewable able cut materials plywood/metal drill holes place gears nice kind part catalog place gear/cog need design scratch nice test parts move need full-blown simulation see gears turn get stuck interested electronic circuitry mechanical parts able place servos nice produce blueprints cheap/inexpensive possible able construct robot mechanism placing/connecting parts gears cogs motors springs kind clock test degree works know use blender3d designed purpose heard solidworks used designing mechanical parts expensive one-time-project recommendations,software,software
459,roller screw drive axial movement friction,equation hints solve following problem imagine roller screw drive apply torque translative move load mass m. assume screw efficiency additional axial force affects mass opposite moving direction force transformed torque course considering efficiency possible whole roller screw moving fixed found papers/books/articles movable slides/loads fixed shafts case motor shaft part osciallation system mechanical engineer sorry answer trivial made little sketch process force fp pushing mass force transformed load torque tp acts drive torque td energy lost friction question partial force tp affecting bearing exciting chassis,movement torque differential-drive,differential torque drive movement
460,rpm rpm dc motors cost,today going buy motor online saw rpm rpm dc motors cost possible change rpm requiring additional parts cost,motor,motor
461,quadcopter parameters calculations simulink model,want make mathematical model quadcopter simulink studied quadcopter new build flying robot studied use brushless dc motors pid speed control motors rotate clock wise anti clock wise want make simple mathematical model input model xyz locations space copter fly path decided increment coordinates step step example want next location x=10 y=10 z=10 increment locations input flight control block question decide speed motors according x z next location convert speed yaw pitch roll convert yaw pitch roll x z coordinates need convertion formulas implemented simulink please provide help thanks,quadcopter simulator,quadcopter simulator
462,effective motor type robotic arm,trying build arm centimeters room rotary motor capable lifting joint allow arm rotate single degree freedom circle perpendicular ground.the rest arm centimeters weigh minimum kilograms lifts anything kind motor type give best chance lifting arm quickly† ddagger † raising degrees .5 seconds maximum ddagger least centimeter end arm means least positions motor,motor robotic-arm,arm motor robotic
463,choosing platform start,start robotics know little hw engineering moreover used use languages python c java much experience c. want much able program robot big interest computer vision ai platforms/kits buy little time spent program high-order languages prefer something wheeled something flying nice hard case robot camera additional sensors nice something help avoid obstacles laser distance sensor ultra-sonic sensor like build robot navigate room help operator look slam time future need something get familiar robotics expensive least sure ready go deeper robotics something awesome somebody suggest kits/platforms/tutorials/any info,beginner,beginner
464,yaw pitch roll effect flight quadcopter,simulation quadcopter simulink want know pitch roll effect flight quadcopter different single rotor helicopter change rpm change x z coordinates quadcopter differential equation convert rpm yaw pitch roll please help,quadcopter,quadcopter
465,frame reference used visual servoing,new whole visual servoing area reading tutorial visual servo control part basic approaches understand something fundamental information available robot location tracked features current frame known known desired frame known known best thing compute current desired location orientation robot plan optimal path knowing everything advance sense control law i.e translation rotation path optimal visual servo,localization research visual-servoing,visual research servoing localization
466,stabilizing optical flow,quad copter balance air using data collected mpu6050 sonar sensor hover specific height moves horizontal plane random direction put object ascend keep distance sonar senor object want make ability hover possible add downward-facing camera calculate speed optical flow order keep hovering point horizontal plane use forward-facing camera stabilize vertical speed,sensors quadcopter cameras visual-servoing,quadcopter sensors cameras visual servoing
467,digital servo shaking,need advice someone experienced something similar try using digital servo tried connect board tutorial https //blogs.oracle.com/hinkmond/entry/connect_robot_servo_to_rpi3 servo motor shakes ten cycles turns idea article read controlling digital servo analog need program unboxing thanks idea,raspberry-pi servos,pi raspberry servos
468,need suggestions object recognition,tasked creating system recognize fish pulled lake system able identify type species fish turn arduino projects based read image processing sounding arduino processing power anyone suggestions development boards cameras interface board look option http //www.finboard.org/videos/introducing-finboard utm_campaign=embedded 2013-q3 utm_medium=email utm_source=eloqua seems nice type thing anyone used anything thanks,arduino microcontroller raspberry-pi cameras,pi microcontroller cameras raspberry arduino
469,transducer underwater applications passive sonar,kicking idea building small passive sonar autonomous submarine looked net parts finding good transducer converting sound underwater electrical impulse looking parts got piezoelectric materials used barium titanate lead zirconate titanate read web materials toxic question piezoelectric materials build sensor scratch possess toxic qualities something thrown pool w/ kids give defects,sensors,sensors
470,3-axis accelerometers left-handed coordinate system,careful inspection page figure adxl345 datasheet shows gravitational loading chip uses left-handed coordinate system experiments chip confirm use chip indicate gravity vector using chip negate values get handed coordinate system seem right assume logical mathematical explanation left-handed coordinate system figure,sensors imu accelerometer calibration,sensors imu accelerometer calibration
471,question car-like robot localization based dead-reckoning,question car-like robot localization using dead-reckoning given robot position current time step \begin bmatrix x \theta\end bmatrix theta heading steering angle distance traveled time steps estimate position robot next time step,mobile-robot localization,mobile robot localization
472,suggestion inexpensive robotic arm,want build simple application need degrees robotic arm arm feedback control arm able handle least lbs arm able work hours day budget usd suggestion,robotic-arm,arm robotic
473,razor imu arduino interfacing,looking razor imu sparkfun realized example code sparkfun website meant hooking computer ahrs head tracker used serial usb chip looked google saw nothing stories work good way hook razor imu arduino uno arduino hardware support serial port example code exist,arduino imu,imu arduino
474,learn algorithms find examples code controlling rover,programmer profession new robotics studied know electronics familiar mechanical aspects robotics working learning project dagu rover platform trying control dc motors pwm want use optical encoders feedback looking algorithms example code c control know control gpio pwm interrupts processor interested learning algorithm controls motors based working manual robot controlled up/down/left/right keys like add sensors camera etc work autonomous aspects pointers helpful reference working raspberry pi platform control rover,mobile-robot algorithm pwm c,mobile c pwm robot algorithm
475,learn language robotics,ask assembly language close micro-controller hardware micro-controller reccomend bot search object show object note know anything micro-controllers,microcontroller software programming-languages,languages microcontroller programming software
476,blender good robotic simulator quadcopters swarm simulations,interested simulating quadcopter control swarm co-ordinations wondering blender morse going good according limitations morse states morse meant accurate simulator state-of-the-art physics engine bullet expect simulate robot arm dynamics fine grasping projects better opengrasp grasping on-going efforts try tackle issue consider morse good temporal accuracy time synchronization capabilities application hybrid simulation robots simulated others operated wondering anyone experience using blender types applications,simulator,simulator
477,simple data-glove go mega due,mcu/robotic world working atmega+cvavr please bear making prototype data glove keyglove much simpler consist imu sensors mpu reading fused built dmp reads hand position orientations minimum flex sensors reads figer flexion specific sensors plugged arduino reading filtered low pass kalmann arduino transferred serial pc pc translates data virtual gripper move object vr planned use uno pansenti’s mpu9150 library code realised flash memory size left tiny i.e mpu9150 lib code size ~29k uno project early stage lot things expected changed added little flash memory left much looking mega replacement flash realised newer due faster processor cost main concern robustness compatibility designing hw interface arduino making circuits addding shield code development available library streaming filtering sensor readings bit mcus helps overkill know question sound localized believe lot projects utilize multiple sensor reading filtering benefits discussion revise question needed main question bit mcus perform better multiple sensor reading signal filtering compared bit mcus case.. go mega due,arduino imu,imu arduino
478,mechanism changing gears bicycle,looking make shifting bicycle senior design project additional features tbd come electrical/software mechanical need figure decent way shift gears thinking leaving gear system place using sort motor servo stepper motor worm gears pull release wire cable needed concerns amount torque needed pull wire finding something enough holding torque option use trigger shifters use solenoid concern worm gear slow like pick brains moment thanks,motor automatic,automatic motor
479,making brushless servo using hall sensors,assemble prototype brushless servo system using rc brushless motor geared sensored electronic speed controller rc motors microcontroller pid control add hall sensors motor feed signals esc microcontroller mcu run pid controller output rc servo compatible pwm signal esc question likely work find esc trying clever rc car switches reverse double pulse reverse signal note reason trying get working using off-the-shelf esc designing development time much expensive parts cost moment,servos brushless-motor esc,esc brushless servos motor
480,monte carlo localization need predefined map,reading monte carlo localization sounds approach based using predefined map need make sure read needs predefined map want make sure understanding correct need predefined map need add stuff question goes nothing localization approaches need predefined read slam sounds general approach specific implementation thanks advance,localization slam mapping,slam mapping localization
481,finished plywood comparable prototyping substitute polyoxymethylene,working robot team building robot acetal polyoxymethylene pom delrin plastic prototype robot build pom pom expensive several critical areas plywood used place pom sliding surfaces gearboxes weight stress take account friction coefficients smoothness rigidity materials deciding plywood valid prototype substitute material thick differentiates plywood acetal pom respect relevant points,design,design
482,arduino isp bootloader burning,earlier versions arduino ide option burn bootloader using arduino programmer current burn bootloader option burn using arduino isp integrated existing disappear,arduino,arduino
483,use computer throw small switch,like product enables use computer throw small dc switch seems simple thing life seem find device search online device floating order kind term searching thanks,control,control
484,optical encoders used platforms rover,got chassis motors quadrature encoders trying utilize optical encoders know encoders generate pulse signals used measure speed direction motor want know separate optical encoders add value controller rover platform controller uses pwm control speed motor motors running speed encoder output controller monitor encoders,mobile-robot motor control,mobile control robot motor
485,installing morse simulator ubuntu,trouble installing morse trying install ubuntu virtualbox ubuntu need virtualbox trying make something work ubuntu get following errors cmake stage cmake -dcmake_install_prefix=/home/oferb/opt/morse_build .. -- install python files /home/oferb/opt/morse_build/lib/python3/dist-packages cmake error following variables used project set notfound please set make sure set tested cmake files advanced used include directory directory /home/oferb/mnt/svr_home/opt/morse used include directory directory /home/oferb/mnt/svr_home/opt/morse/src used include directory directory /home/oferb/mnt/svr_home/opt/morse/src/morse used include directory directory /home/oferb/mnt/svr_home/opt/morse/src/morse/builder used include directory directory /home/oferb/mnt/svr_home/opt/morse/src/morse/modifiers used include directory directory /home/oferb/mnt/svr_home/opt/morse/src/morse/sensors used include directory directory /home/oferb/mnt/svr_home/opt/morse/src/morse/multinode used include directory directory /home/oferb/mnt/svr_home/opt/morse/src/morse/middleware used include directory directory /home/oferb/mnt/svr_home/opt/morse/bindings used include directory directory /home/oferb/mnt/svr_home/opt/morse/testing used include directory directory /home/oferb/mnt/svr_home/opt/morse/testing/base used include directory directory /home/oferb/mnt/svr_home/opt/morse/testing/failures used include directory directory /home/oferb/mnt/svr_home/opt/morse/testing/robots/human used include directory directory /home/oferb/mnt/svr_home/opt/morse/testing/robots/segway used include directory directory /home/oferb/mnt/svr_home/opt/morse/testing/robots/pr2 used include directory directory /home/oferb/mnt/svr_home/opt/morse/testing/robots/pionner3dx fresh vmbox ubuntu check succeeds try morse create mysim get adminuser-virtualbox morse create mysim usage morse -h -b base -- name name -c -- reverse-color -g geom -v check edit run scene ... morse error argument mode invalid choice choose suggestions update managed install morse ubuntu make sure blender compiled version python i.e python morse compiled used blender http //download.blender.org/release/blender2.62,simulator,simulator
486,manage stepper motor cables,need actuate cnc-like nema ~1n.m torque stepper motors like cable solution connect motor motor driver bought anything searched various robotic stores ebay found triple motor cables plug play stepper motors cables multiple motors manual soldering everything time consuming error prone messy standard way deal cables stepper motors,stepper-motor wiring,wiring stepper motor
487,ideas robot,fll lego league waiting competitions want work robot anyone ideas,sensors,sensors
488,performing proper coordinate system transformation,use guidance regarding coordinate system transform problem situation system begins unknown location initialize location x orientation roll pitch yaw establish frame reference point call local coordinate frame fixed world move system startup body frame aligned local frame body +x points +y right +z body frame fixed system travels system moves estimation routine provides x position roll pitch yaw system yaw rotation z axis local frame pitch roll respect body frame i.e. robot pitches get positive value rolls right get positive value take known roll pitch values transform respect local fixed frame,mobile-robot kinematics,mobile kinematics robot
489,dc motor direct loading,many tutorials online calculators selection dc motor drive wheel understood torque affect driving wheel happen change orientation motor load main criteria dc motor work want rotate plate mounted motor shaft motor placed shown picture engineering student please provide answer simple possible,motor torque,torque motor
490,thrift store good place get servo motor,trying learn basic motor servo motor found thrift stores goodwill old toys robotic quality toys kinds things scavenge want get motor want arduino make work nothing complex,servomotor,servomotor
491,field oriented control brushless motors,controlling normal brushed motor servo measure motor position adjust pwm signal control voltage way achieve precise velocity/position control good pwm_duty calcpid motor_position target_position field oriented control foc brushless motor parameters control voltage angle voltage magnitude things measure current angle magnitude rotor position want achieve precise velocity/position including good control speed reverse question calculate correct voltage field angle phase lead magnitude need pid algorithms phase_lead calcpid_1 ... voltage_mag calcpid_2 ... assume take reasonable measurements motor state including rotor position winding current,servos pid brushless-motor,pid brushless servos motor
492,open sliding window,live apartment sliding windows apartment warm live mechanical room opened windows ran air conditioning winter want create device open windows apartment depending temperature software electronics figured need figure move windows sample window takes lbs force pull open open inches stories high want make cheap replicate windows thought linear actuator ones seen designed moving cost several dollars pneumatic actuators cheaper run network air lines solenoids compressor randomly kick double winch system complicated set prone failure thinking cheap metal gear servo dealextreme servos difficult use series turnbuckles arms translate inches linear movement help appreciated,design actuator,actuator design
493,appropriate slam algorithm quadrotors rgb-d camera,researching slam came ekf slam uses odometry measure robot initial position map landmarks helps robot position accurate based slam dummies problem loop closure journal compared fastslam ekf big-o function k^2 k number landmarks fastslam m\log k said promising slam algorithm journal vslam navigation natural environments fastslam used experiment done university pennsylvania occupancy grid slam want ask approriate slam algorithm vslam given unmanned aerial vehicle quadrotor rgb-d camera imu extended support co-operation,localization slam quadcopter mapping,quadcopter slam mapping localization
494,want stepper motor switch speed traveling acceleration wise,project working need speed stepper motor change set speed certain distance figure way using arduino stepper motor current code include accelstepper.h stepper1 accelstepper :full4wire void setup stepper1.setmaxspeed stepper1.setacceleration stepper1.moveto void loop // change direction limits stepper1.distancetogo == stepper1.moveto -stepper1.currentposition stepper1.run want moveto current speed want increase speed moved turns moves position implemented,arduino control stepper-motor,control stepper motor arduino
495,ekf-slam need odometry reliable sensor slam feature-based,book slam dummies need odometry robot use data retrieved laser scanner accurate odometry laser odometry contribution odometry laser scanner slam feature-based,localization slam mapping,slam mapping localization
496,possible use hc-sr04 ultrasonic range sensor indicate thickness material,hc-sr04 connected arduino board end echo connected analog pin transmitter trigger connected digital pin wondering use sensor sense change saturation object block path receiver transmitter positioned line middle supposed paper using see difference paper paper travel sure possible way see working kind similar ir led arduino program connected led paper passes light gets little bit weaker takes heavier hit possible,arduino sensors,sensors arduino
497,choosing path planning obstacle avoidance algorithm space,working space robot needs follow trajectory avoiding obstacles read methods path planning vector field histogram dynamic window approach worth use kind algorithms space go something potential fields rapidly-exploring random trees,mobile-robot motion-planning,mobile motion planning robot
498,wiring unipolar stepper bipolar stepper driver decrease holding torque,read wire unipolar stepper bipolar driver ignoring extra wires concern connecting unipolar stepper bipolar driver cause lose torque holding operating increase read bipolars bang energy-wise transform unipolar stepper bipolar good driver work think run true,torque stepper-driver stepper-motor,driver stepper torque motor
499,telemetry used,new world uas year holiday rc flying looking ardupilot wondering purpose telemetry serves get flight data ground station used program system flight capabilities missing,uav ardupilot,ardupilot uav
500,autonomous car steering using ir sensors,want steer rc car straight line.the car sharp ir sensors corner car help steer corridor.the corridor irregular looks something similar picture car needs stay middle shown lighter line take help ir sensors correct path car servo front wheel steer controls speed tried running using algorithm summed values side car took difference.the difference fed pid control output went steer car.the greater value pid sides greater value steering angle till reaches middle works part walls similar distance center oscillates lot center fails bumps corridor need make changes algorithm need help steering right direction ir sensors finicky way filter make readings stable help regarding changes implemented appreciated car uses ir sensors guide.i use ultrasonic sensors,mobile-robot sensors,mobile sensors robot
501,accelerometers error bma020 bma180,"working accelerometers bma020 bma180 try explain problem using bma020 example less accurate therefore problem visible hold acc neutral position get correct average result -1g turn acc upside time average result +0,91g problem occurs bma180 problem less visible -1g normal position +0.98g know accelerometer behaves",accelerometer,accelerometer
502,retrieve parameters mavlink using pymavlink,able use pymavlink.mavutil read telemetry .tlog created missionplanner create mavlogfile mlog mavutil.mavlink_connection want read flight parameters settings .tlog mavlogfile.param_fetch_all appears designed work live telemetry link log sends parameter request command result linked log actual aircraft know parameters .tlog ... get,python ardupilot,python ardupilot
503,cm accuracy radio rangefinder,need track point space point less passive batteries charging line sight pinpoint centimeter need sample frequency hz done solution exist,sensors,sensors
504,career robotics hate mechanics,first year electronics engineering student love aspects robotics electronics algorithms control theory etc stand mechanical aspect robotics fulfilling career robotics hate mechanics love parts robotics ready learn mechanics prefer learn absolute basics thanks,software electronics mechanism,electronics mechanism software
505,slam landmarks,possible build map landmarks robot let say aisle surrounded walls robot moves environment feasible build slam problem landmarks available,mobile-robot slam,mobile slam robot
506,time-of-flight cameras swissranger affected outdoor fog,looking build outdoor robot need know time-of-flight cameras swissranger™ sr4500 work fog anybody experiences,mobile-robot cameras,mobile cameras robot
507,pre-built pid motor controller,lead university robotics team needs pid controllers drive motors additional motors used secondary system prefer buy pre-built pid controllers provide reasonable interface setting pid constants motor velocity direction controllers central difficult interesting problems trying solve astonishment internet seem saturated controllers talk reinventing wheel hundreds tutorials pre-built solutions willow garage build pid controller pr2 anyone recommendations/experience preferably pointers controllers googled best option found cape beaglebone black board using problem python library finished resets pid constants call support changing direction motor seems support setting motor power velocity gives impression using pid controller additional details stall current drive motors brushless dc motors quadrature encoders secondary motors smaller building encoders code base python running beaglebone black using latest debian image robert nelson guy awesome batteries provide rails robot small feet weighs pounds info meant give perspective regard scale comfortable top range spend get motors pid-controlled help appreciated,motor pid brushless-motor,brushless pid motor
508,way determine degrees freedom lost robot singularity position looking jacobian,robot revolute joints jacobian given \mathbf j \begin bmatrix z_0 \times \vec o_6 -\vec o_0 \ldots z_5 \times \vec o_6 -\vec o_5 \\ \hat z_0 \ldots \hat z_5 \end bmatrix unit z axis joint i+1 using dh params o_i origin coordinate frame connected joint i+1 o_6 origin end effector jacobian matrix relationship cartesian velocity vector joint velocity vector \dot \mathbf x \begin bmatrix \dot x \\ \dot \\ \dot z \\ \dot r_x \\ \dot r_y \\ \dot r_z \end bmatrix \mathbf j \begin bmatrix \dot \theta_1 \\ \dot \theta_2 \\ \dot \theta_3 \\ \dot \theta_4 \\ \dot \theta_5 \\ \dot \theta_6 \\ \end bmatrix \mathbf j \dot \mathbf \theta singularity position staubli tx90xl robot \mathbf j \begin bmatrix -50 -425 -750 -100 -562.92 -1 -1 \end bmatrix see row corresponding \dot r_x zeros lost degree freedom position cases straightforward \mathbf j \begin bmatrix -50 -324.52 -649.52 -86.603 -937.92 -375 -50 -0.866 -0.866 \end bmatrix see joint joint aligned columns clear cartesian degree freedom lost rotation end effector x axis red less straightforward singularities workspace limits \mathbf j \begin bmatrix -50 -1225.8 -662.92 -100 \end bmatrix case robot able rotate \dot -r_y \dot +r_y rows full zeros equal columns clear dependent columns/rows way determine degrees freedom lost looking jacobian,robotic-arm inverse-kinematics industrial-robot,industrial robot inverse kinematics robotic arm
509,calculate right left speed tank-like rover,trying control robot using android app touch-based joystick control app ui want calculate speed left right motors rover joystick moved joystick get values pan tilt convert polar coordinate system r theta r ranges theta want derive equation convert r theta left_speed right_speed speed values range figured value r theta left_speed r right_speed -r turning spot theta left_speed r right_speed r moving speed r theta left_speed -r right_speed r turning left spot theta left_speed -r right_speed -r moving backwards speed r values want moving turning example theta left_speed alpha*r right_speed moving turning r theta set speeds left_speed right_speed alpha*r beta*r need formulate equation generalize cases finding alpha beta based theta existing work refer,control kinematics movement,control kinematics movement
510,arduino uno r3 roboduino atmega168 arduino mega r3 board better small robots,new robotics question looks naive want know better board arduino uno r3 roboduino atmega168 arduino mega r3 purpose mention simple robot wheels move ir sensors camera powerful deal computer vision computations arduino mega r3 looks powerful want know solved boards thanks,arduino,arduino
511,telemetry ardupilot,using telemetry kit robotics interface ardupilot mega controlling quadcopter mission planner michael oborne works telemetry kit transmitting flight data imu compass gps etc quadcopter gcs displaying gui like see data hyperterminal windows system radio receiver gcs connects pc usb drive tried calling remote radio station using possible baud rates starting including set data bits stop bits parity flow control get terminal gibberish data tried burning software radio receiver tried using commands radio connects ok keeps returning error at1 att etc please give idea get flight data hyperterminal thanks,quadcopter ardupilot,quadcopter ardupilot
512,evaluated computer technology influence robotics embedded systems forseeable future,first question site little subjective ongoing process many cool cyclonic changes technology electronics software industry concurrency parallelism implications gpgpu multi-core programming large model specific case embedded software influence styles conventions community single board multicore hardware released parallela example programming language research results excellent functional programming started reaching masses late night previous weekend briefly skimmed example functional reactive programming solve real time problems ai people suggesting programming robots declarative domain specific languages nice know implications robotics community tremendous growth frameworks ros urbi region look upon.. robotics embedded high performance ai codebase depends c/c++ languages rust bubbling take massive amount time adopt new languages adaptation begins ai correct seems lot time passed many major production results ai community cognitive architectures old act-r seem hibernation mode seems lot work intelligent systems solved problems computer vision data mining problems cater supercomputing industrial crowd possible shift towards low powered systems thanks,software artificial-intelligence programming-languages beginner embedded-systems,embedded intelligence programming artificial languages systems software
513,roboticize old netbook,old beat-up netbook collecting dust taken stuff worry putting please bear stupid questions imagine possible wire baby servos breadboards good stuff correct b start simple raspberry pi-like projects think automating irrigation system feeding dog work barring energy expenditure netbook apt raspberry pi handling type thing c basic python experience mind picking go sufficient cheers,raspberry-pi python,python pi raspberry
514,ros amcl need odometry data,reading amcl document ros wiki subscribed topics odometry topic works laser subscribed topics ros wiki scan sensor_msgs/laserscan tf tf/tfmessage initialpose geometry_msgs/posewithcovariancestamped map nav_msgs/occupancygrid next question use amcl gazebo simulator turtlebot tutorial available,slam ros navigation,ros slam navigation
515,possible run multiple loops time arduino,got code motor running forth buttons connected scanner press buttons causes motor stop rides like run codes interrupt code include accelstepper.h // define steppers pins use stepper1 :full2wire const int buttonpin const int button2pin const int pulseopto1 const int startscan int buttonstate long long interval void setup pinmode buttonpin input pinmode button2pin input pinmode pulseopto1 output pinmode startscan output stepper1.setmaxspeed stepper1.setacceleration stepper1.moveto void loop buttonstate digitalread buttonpin buttonstate == low digitalwrite startscan high buttonstate == high digitalwrite startscan low buttonstate digitalread button2pin buttonstate == low // turn led digitalwrite pulseopto1 high delay digitalwrite pulseopto1 low delay // turn led digitalwrite pulseopto1 low // change direction limits stepper1.distancetogo == stepper1.moveto -stepper1.currentposition stepper1.run,arduino stepper-motor c,c stepper motor arduino
516,calculate covariance matrix x z data,ros recorded bag file custom robot real world provide covariance matrix want use /odom feed ekf covariance matrix calculate note covariance matrix needed ekf estimate position sample /odom pose position x z orientation x z -0.789272088731 w covariance twist twist linear x z angular x z covariance,localization ros odometry,odometry ros localization
517,rocker bogie suspension stability,designs shown rocker bogie systems whole weight platform seems supported rod differential bar gear bit unstable system arms rover end high torque rod understanding rocker bogie systems correct solutions problem sacrificing functionality rover clarify want know rovers curiosity designed balance heavy platform differential bar mechanism trying make small rocker bogie want avoid anticipated problem,mobile-robot design wheeled-robot,mobile design robot wheeled
518,making high baud rates work,dealing board matter seem make work kbit/s give detail board bottom going keep question generic regarding hardware gathered need pull-up resistor tx correct chip-specific wherever see seems tx/rx lines connected second regarding bit-timing using different calculators example kvaser microchip see following configuration khz input clock sync prop phase1 phase2 brp prescaler kbit/s kbit/s kbit/s kbit/s seen source furthermore numbers fit formula datasheet microcontroller configuration kbit/s works using canreal monitor messages tried different configurations example time quanta changing microcontroller clock mhz using different values speeds higher kbit/s result errors warnings canreal taken note board driver software works mbit/s hardware made harder put probe oscillator tx line becomes continuous 0-1 alteration following __ -- -- -- __ -- -- -- __ -- -- -- __ -- -- -- __ -- -- -- |_| |_| |_| |_| something outputting software fact remove probe messages start arriving mbit/s seem able oscillator debugging available first regarding hardware shape signal suggests pull-up resistor necessary seen need datasheet found microcontroller configures pin used control making push-pull looks open-drain mention microcontroller configuration make pin push-pull hidden parameter set pull-up resistor necessary oscillator probe cause behavior details board mcu p18f45k80 connected default rb2 rb3 transceiver iso1050 compiler mikroc,microcontroller can,microcontroller
519,quadrotor experimental identification,want model quadrotor using experimental method built want turn motor specific speed plot x z angles identify transfert functions plots x/w1 y/w1 ... know possible graphs know subject tried something feel free anything think helpfull,control quadcopter brushless-motor uav,control quadcopter brushless motor uav
520,choosing correct power supply stepper motors,building machine need stepper motor motors driven using arm device made following selections regarding stepper motor stepper motor driver power supply power supply volt power supply amp single output stepper motors stepper motor unipolar/bipolar steps/rev a/phase stepper motor driver drv8825 stepper motor driver carrier high current tried best research compatibility came good selection considering fact power supply driving motors running motors step high resolution.as speed concerned going slow running hours trying make v-plotter.as tell loads start stop motion motors,stepper-motor power stepper-driver,driver stepper power motor
521,encoder based speed control rover,trying get precise control speed rover based pwm controlled motors optical quadrature encoders using 4-channel motor controller rover chassis using arduino nano control able read encoder int output change pwm based pulse width control speed result getting heavy oscillations control output makes robot move steps changing need minimize ringing smooth moving robot arduino code snippet void setup serial.begin init_motors init_encoders req_speed req_speed req_speed req_speed void loop update_encoders update_motors void update_motors int err unsigned long req_width micros mtime mtime micros i=0 i++ digitalwrite pins_dir req_speed mtime change_time req_speed cur_pwm += req_speed cur_err req_speed *10 cur_speed cur_err -req_speed *10 cur_speed cur_err cur_pwm cur_pwm ++ cur_err cur_pwm cur_pwm -- analogwrite pins_pwm cur_pwm void update_encoders int unsigned w enc_new pinc b00001111 unsigned long micros i=0 i++ enc_old w unsigned long etime change_time pulse_width w pulse_width_h1 pulse_width_h2 /3 pulse_width_h2 pulse_width_h1 pulse_width_h1 pulse_width change_time =etime pulse_count ++ cur_speed pulse_width req_speed -100 sign indicates direction please consider undefined variables globals measured motor running full speed pulse width encoders int outputs xor b connected a0 thru a3 motor pwm connected d3 d5 d6 d9 please let suggest improvements code advice missing,arduino motor pwm,pwm motor arduino
522,odd l293d behavior pin seems act enable,chip labeled small logo behave believe l239d chip breadboard pins connected ground rail positive rail gets battery pack motor connected pins pin connected positive rail connect pin enable positive rail motor spins expected weird thing connect pin pin positive motor spins motor connected connected positive motor spins connect pin pin positive connect pin enable pin side make sense missing something thanks,motor h-bridge,h motor bridge
523,module hc-05 giving error,working arduino uno hc-05 bluetooth module.i followed instruction given link wiring mode working hc-05 module simple serial communication working command mode change parameters hc-05 module work simple serial communication mode everything works fine tried change parameters module work working command mode pin hc-05 module needs high taken care found mu module connected berg strip pin connected pin able change parameters module write command com port arduino ide get response enter commands ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿõÿýì¢^ error ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿõÿýì¢^ error ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿõÿýì¢^ error ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿõÿýì¢^ error ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿõÿýì¢^ error ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿõÿýì¢^ think garbage due code code include softwareserial.h softwareserial btserial // rx tx void setup pinmode output high serial.begin serial.println enter commands btserial.begin void loop uint8_t x char commandfromserial char serial.available serial.available x=0 x x++ commandfromserial x =serial.read btserial.println commandfromserial btserial.available btserial.available x=0 x x++ responsefrombluetooth x =btserial.read serial.println able figure wrong used command com port at\r\n many commands time get response mess module,arduino c communication serial,communication c serial arduino
524,guidance compensating internal forces closed loop chain,working legged robot generating joint torques robot seems stable extend robot goes instable center pressure moves border feet looking method move center pressure feet edges calculated joint torques sentis thesis http //ai.stanford.edu/~lsentis/files/thesis-sentis-2007.pdf mentioned somehow manages cancel internal forces keep feet flat supporting surfaces anyone got dealing internal forces understood literature modify nullspace calculated torques achieve cop remains geometrical center considered foot looking methods virtual linkage model seem work someone discuss virtual linkage model described http //ai.stanford.edu/~lsentis/files/tro-2010.pdf understood,stability legged,stability legged
525,unable read pushbutton press arduino,trying use push button order know print number time push button pressed using counter.but everytime press button counter get incremented time counter start continue preferred link wiring push button arduino code const int buttonpin // number pushbutton pin const int ledpin // number led pin // variables change int buttonstate // variable reading pushbutton status int count void setup // initialize led pin output pinmode ledpin output // initialize pushbutton pin input pinmode buttonpin input pinmode buttonpin input serial.begin buttonstate digitalread buttonpin digitalwrite ledpin low void loop // read state pushbutton value buttonstate digitalread buttonpin // check pushbutton pressed // buttonstate high buttonstate == high // turn led digitalwrite ledpin high count count serial.print count // turn led digitalwrite ledpin low dont know count coming,arduino c serial,c serial arduino
526,raspberry pi losing power surge,rc car battery provides power esc esc provides v receiver raspberry pi uses v steps v provides power raspberry pi problem time go full power* lack voltage raspberry pi seems hard reset full power mean direct ranging 0-100 expert electrical circuits suggestions use capacitor provide missing v interim prevent raspberry pi dying event full power,raspberry-pi electronics esc,pi electronics raspberry esc
527,g5v-2 relay pins working,swear working got desk tried longer working fried pins sides dpdt relay everything works nc pins applied hear relay click apply coil measure voltage pins get anyone seen relays seem get voltage pins relay clarify expecting power source power coil common pins nc pins work see pins cases shared coil load attached nc/no pins try driving entire circuit power supply change results contradict earlier statement applied relay circuit based charles platt make electronics p. pic schematic following using relay power supply usb port using piezo buzzers resistors leds,electronics,electronics
528,particle filter implementation ros,looking particle filter implementation ros use mobile robot localization seems available package adaptive monte carlo sure possible use particle filter feasible note robot wheeled robot provides odometry data data source kinect provides visual odometry data using fovis,mobile-robot localization ros particle-filter,particle localization mobile robot filter ros
529,recommendations system force contact head desk,bang head desk performing task like eliminate unnecessary middle step performing task like design system hold head strike desk system holds strikes head acceptable requirements least strikes second maximum ~50cm travel anybody make recommendations system base device denso products small affordable required load capacity users large head involuntary resistance expected -- least near start cycle thinking something industrial,robotic-arm,arm robotic
530,soft led protection material,looking material build soft clear protective covering rgb leds material needs close transparent allow light shine soft compliant sturdy withstand someone standing ultimate goal floor leds someone jump barefoot change led colors tried gel candle wax silicone worked looking material ideas relevant stackexchanges find,arduino,arduino
531,arduino uno getting type hanged runing samll code switc debounce serial print,using arduino uno read push button time pressed.earlier reading digital io pin read count faced condition switch debounce regarding asked question get know use interrupt reading digital io pin using interrupt facing problem switch debouncing used link code given link const int buttonpin // number pushbutton pin const int ledpin // number led pin // variables change int ledstate high // current state output pin int buttonstate // current reading input pin int lastbuttonstate low // previous reading input pin // following variables long time measured miliseconds // become bigger number stored int last time output pin toggled long debouncedelay // debounce time increase output flickers void setup pinmode buttonpin input pinmode ledpin output // set initial led state digitalwrite ledpin ledstate void loop // read state switch local variable int reading digitalread buttonpin // check see pressed button // i.e input went low waited // last press ignore noise // switch changed due pressing reading lastbuttonstate // reset debouncing timer lastdebouncetime millis millis lastdebouncetime debouncedelay // reading longer // debounce delay take actual current state // button state changed reading buttonstate buttonstate reading // toggle led new button state high buttonstate == high ledstate ledstate // set led digitalwrite ledpin ledstate // save reading next time loop // lastbuttonstate lastbuttonstate reading change debouncedelay means read thing ina time gap mili second code says.now happening code running board time board get hang led stop toggling press push button reset board.i want add thing using serial port led toggles switch pressed confused beone possibility happening reduced time gap consecutive events miliseconds making avr get hanged require manual reset,arduino c serial communication,communication c serial arduino
532,fake localization using bag file ros,bag file contains couple topics needed localization odometry data kinect data /tf want watching robot movement path rviz initializing robot position know initial help topics /scan /tf /clock /map /odom,localization ros,ros localization
533,kinect movement base,making mobile base robot wheels want use kinect movement sensor avoid obstacles recognition people etc ... read models developer kinect works job thins thing use movement sensor see diferent posibilities,mobile-robot wheeled-robot kinect,mobile kinect robot wheeled
534,powering servos robotc+tetrix,certain robotic application ftc challenge year team performing operation servo-driven arm forced unknown position using nxt+tetrix damage powered servo working forced position servo holding arm weight fixed base trying move heavy base relative fixed arm thinking de-powering servos servo controller order get servos relax mechanically-forced position thinking robotc code determine physical position given servo set desired position loop limiting much servo try fight movement dismay servovalue fooservo gives setpoint physical location due servo unable provide information considered setting servochangerate fooservo minimal value changes rate target location changing relative previous target concluding way depower servos possible nxt/tetrix robotc notes realized suggest rig encoder associated tetrix motor need encoder rotating area work mechanical constraints looked setting pwm enable shown sure send i2c commands needed someone clue commands sent terms c code helpful,power rcservo nxt robotc,nxt robotc power rcservo
535,compiling code ey-80,purchased ey-80 electrodragon ey-80 9-axis motion sensor gyro acceler magneto baro hard time compiling example code arduino happening copy pasting code help new programming understand code,arduino sensors gyroscope,sensors gyroscope arduino
536,wifi pass aluminium,make rc car uses wifi connection body car made aluminium wifi receiver placed aluminium casing make sure work forced change material make extension receiver make sure casing help,wifi,wifi
537,use arduino esc control,using arduino uno control esc progress using servo library control esc works great except.. count max speed meaning speeds stopped motor full power run like many speed options ideas hard time using pwm signal current code include servo.h servo myservo // create servo object control servo // maximum servo objects created int pos // variable store servo position void setup myservo.attach // attaches servo servo object void loop int maxspeed=100 int minspeed=0 int delaytime=5 int count count=0 count count+=1 pos minspeed pos maxspeed pos += // goes degrees degrees // steps degree myservo.write pos // tell servo go position variable delay delaytime // waits servo reach position pos maxspeed pos =minspeed pos-=1 // goes degrees degrees myservo.write pos // tell servo go position variable delay delaytime // waits servo reach position count break myservo.write delay myservo.write delay,arduino control quadcopter esc servomotor,control quadcopter esc servomotor arduino
538,using armatures morse robotic simulator,trying add robot morse using ubuntu struggling add armature actuator armature pose sensor existing robot someone please explain done sample code using socket interface thanks,mobile-robot sensors robotic-arm simulator python,simulator mobile robot python robotic sensors arm
539,gps sensors provide data faster,searched gps devices provide sec updates found found t=30s.module sent monitoring data packet seconds server sends acknowledgement seconds module sends monitoring data packet products take less time gps devices take much time send data,sensors gps,sensors gps
540,need accurate flight model uav,understand kalman filter uses mathematical model robot predict robot state t+1 combines prediction information sensors get better sense state robot aeroplane accurate/realistic model need get simple position velocity need accurate flight model computational fluid dynamics,kalman-filter uav,filter kalman uav
541,degree ultrasonic beacon sensor,want detect ultrasonic beacon radius robot beacon separate ultrasonic emitter robot spinning receiver existing ultrasonic sensors meet use case stuck hacking ultrasonic best choice hoping beacon kept pocket figured optical sensors edit beacon robot mobile fixed base stations option,sensors,sensors
542,happened butler car,read article car electric brains popular mechanics august questions practical methods work acquired car manufacturer company methods developed corner navigation work think needed know distances road segments think used sonar radar detect corner cars entering corner misinterpret cars wall absence corner think sonar/radar systems sides cars mentioned mentioned set relays compensator mentioned said function gyroscope find information device sure relevant,design navigation,navigation design
543,pomdps robotics,pomdps used observe states figure pomdps useful robotics good example use pomdps read paper used find obvious pomdps used good projects ideas based pomdps,algorithm artificial-intelligence,intelligence artificial algorithm
544,rc transmitter quadcopter arduino,wl v262 quadcopter want control using arduino joysticks transmitter opened transmitter saw joystick potentiometers pcb voltage pot goes used arduino pwm low pass filter connected output filtered output potentiometer analog pin connected pcb desolder take pots v_ going analog pin transmitter display gave confused frustrated know control transmitter attaching stepper motors joysticks controlling transmitter last resort someone help spent hours hours trial error getting pcb transmitter,arduino sensors radio-control wireless,control wireless sensors radio arduino
545,bloodstream nanobots approved countries,google search bloodstream nanobots yields thousands results first page many results blog posts date years luck finding information actual approval bots countries approved people seem talked crazy years seeing anything,microcontroller,microcontroller
546,sending receiving parameters ardupilot,interested getting arducopter ardupilot read documentation understand low level hardware firmware controls motors arducoptor like know higher level programmatic interface ardupilot mission planner provides user interface control ardupilot programmatic interface control words possible user written process receive send sensory data ardupilot,quadcopter ardupilot,quadcopter ardupilot
547,defining frames robotics arm,examples robotic arm example base rotation dof clip know z axis joint z axis base frame know z axises base rotation respects base frame thing defining frame base rotation clip vertical arm pitch clip horizontal arm pitch clip easy know continue defining frame wrist roll o.12 clip wrist pitch clip angle z axis wrist roll wrist pitch thank much,localization kinematics robotic-arm,robotic kinematics arm localization
548,deburring robot plastic box,university course asked design rough specification system deburr plastic box appears workspace due irregularities boxes edges use simple position control use force control decided using ir sensor detect box appeared workspace use epson axis robot move work piece use ati axis force sensor maintain constant force edge box deburrer/robot moves simple means detecting end side box force value indicate reaching edge box mean breakage box specified distinguish work sound sensible thanks help,control,control
549,learn electronics intro advance digital,put series videos anything needs easy english ... less mundane resources found go upto resistors code projects tell tada got online resource people learn electronics want master analog move digital cause better spend cents ... spend components get whole thing tiny chip please bare months searching legit source material meant teach pictures colors,electronics,electronics
550,transform image using roll-pitch-yaw angles image rectification,update exact problem solved stackoverflow please read post explanation working solution thanks working application need rectify image taken mobile camera platform platform measures roll pitch yaw angles want make look image taken sort transform information words want perfect square lying flat ground photographed camera orientation transformed square symmetrical afterwards trying opencv c++ matlab seem missing something fundamental done matlab tried following transform perspective img imread r r_z yaw_angle *r_y pitch_angle *r_x roll_angle tform projective2d r outputimage imwarp img tform figure imshow outputimage r_z/y/x standard rotational matrices implemented degrees yaw-rotation works fine r r_z *r_y *r_x gives result try rotate image amount x- y- axes get results r r_z *r_y *r_x rotate degrees divided huge number starts look ok. result research value r r_z *r_y *r_x someone please help understand rotating x- y-axes makes transformation go wild way solving dividing random number magic tricks something solved using euler parameters sort help appreciated,computer-vision cameras,computer cameras vision
551,line following robot ev3 colour sensor,trying build advanced coloured lines following robot ability differentiate many different coloured lines follow looking right sensor help robot achieve objective researching came ev3 colour sensor detect colours sensor suitable project sensors use thank,mobile-robot sensors line-following,mobile following sensors line robot
552,dependencies need usb programing python pyusb,trying get usb.find command work python script writing angstrom beagleboard code /usr/bin/env python import import usb.util import usb.backend.libusb01 libusb pyusb_debug_level find device bus device id idvendor idproduct dev usb.core.find idvendor=0xfffe idproduct=0x0001 imanufacturer torobot.com dev idvendor=0x1208 idproduct=0x0815 backend=libusb.get_backend know missing know specify backend backend found backend usb.backend.libusb01 get following error root beagleboard ~/servo ./pyservo.py traceback recent call last file ./pyservo.py line module dev idvendor=0x1208 idproduct=0x0815 backend=libusb.get_backend file /usr/lib/python2.6/site-packages/usb/core.py line find return _interop._next device_iter k v /usr/lib/python2.6/site-packages/usb/_interop.py line _next return next iter file /usr/lib/python2.6/site-packages/usb/core.py line device_iter dev backend.enumerate_devices file /usr/lib/python2.6/site-packages/usb/backend/libusb01.py line enumerate_devices _check _lib.usb_find_busses file /usr/lib/python2.6/ctypes/__init__.py line __getattr__ func self.__getitem__ name file /usr/lib/python2.6/ctypes/__init__.py line __getitem__ func self._funcptr name_or_ordinal self attributeerror python undefined symbol usb_find_busses missing work thank,rcservo python usb,python usb rcservo
553,turning differential drive robot specific angle,given robot wheels radius r axle length want set wheel speed turns phi fast possible timestep milliseconds thought wheel speed set v desired_heading-actual_heading circumference_wheel_trajectory wheel_radius converge right angle slow becomes slower approach angle want alternative/better way,kinematics,kinematics
554,geometric inverse kinematic,wondering case algebraic way solve problem geometric cause working robotics arm know length l1 l2 location want end effector tried calculating angles using algebraic gave cos alpha tried solving geometric find solution use wrong way thank much,localization kinematics robotic-arm inverse-kinematics,inverse robotic kinematics arm localization
555,move atrv robot specific distance using ros,node package send commands /cmd_vel move atrv-jr meters turn degree right/left want tell robot move specified speed example use command rostopic pub /cmd_vel geometry_msgs/twist robot starts moving send command send break command,mobile-robot ros navigation,mobile ros navigation robot
556,sdk openni,taking information project need see libraries ans sdks searching web found lot functions try found sdk dont find working kinect xtion sdk works set libraries works thanks,kinect openni,kinect openni
557,accelerometer calibration,trying calibrate on-board accelerometer apm controller using following code found remember arduino windows environment fetch accelerometer gyro data include spi.h include math.h define tod x x/131 define tog x x*9.80665/16384 define xaxis define yaxis define zaxis define aoffset int time=0 int time_old=0 const int chipselpin1 float angle=0 float anglex=0 float angley=0 float anglez=0 void setup serial.begin pinmode output high spi.begin spi.setclockdivider spi_clock_div16 spi.setbitorder msbfirst spi.setdatamode spi_mode0 pinmode chipselpin1 output configurempu6000 // configure chip void loop serial.print acc x serial.print accex chipselpin1 serial.print serial.print acc serial.print accey chipselpin1 serial.print serial.print acc z serial.print accez chipselpin1 serial.print gyro x serial.print gyrox chipselpin1 serial.print gyro serial.print gyroy chipselpin1 serial.print gyro z serial.print gyroz chipselpin1 serial.println void spiwrite byte reg byte data int chipselpin uint8_t dump digitalwrite chipselpin low dump=spi.transfer reg dump=spi.transfer data chipselpin high uint8_t spiread byte reg int chipselpin uint8_t dump uint8_t return_value uint8_t addr=reg|0x80 digitalwrite chipselpin low dump=spi.transfer addr return_value=spi.transfer digitalwrite chipselpin high return return_value int accex int chipselpin uint8_t accex_h=spiread chipselpin uint8_t accex_l=spiread chipselpin int16_t accex=accex_h return accex int accey int chipselpin uint8_t accey_h=spiread chipselpin uint8_t accey_l=spiread chipselpin int16_t accey=accey_h return accey int accez int chipselpin uint8_t accez_h=spiread chipselpin uint8_t accez_l=spiread chipselpin int16_t accez=accez_h return accez int gyrox int chipselpin uint8_t gyrox_h=spiread chipselpin uint8_t gyrox_l=spiread chipselpin int16_t gyrox=gyrox_h return gyrox int gyroy int chipselpin uint8_t gyroy_h=spiread chipselpin uint8_t gyroy_l=spiread chipselpin int16_t gyroy=gyroy_h return gyroy int gyroz int chipselpin uint8_t gyroz_h=spiread chipselpin uint8_t gyroz_l=spiread chipselpin int16_t gyroz=gyroz_h return gyroz // -- function obtain angles based accelerometer readings -- -// float int chipselpin int axisselect float ax=tog accex chipselpin float ay=tog accey chipselpin float az=tog accez chipselpin float adegx= atan ax/ sqrt ay*ay az*az /pi *180 float adegy= atan ay/ sqrt ax*ax az*az /pi *180 float adegz= atan sqrt ax*ax ay*ay /az /pi *180 switch axisselect case return adegx break case return adegy break case return adegz break // -- function obtain angles based gyroscope readings -- -// float gyrodeg int chipselpin int axisselect time_old=time time=millis float dt=time-time_old dt dt=0 float gx=tod gyrox chipselpin gx gx gx=0 float gy=tod gyroy chipselpin float gz=tod gyroz chipselpin anglex+=gx* dt/1000 angley+=gy* dt/1000 anglez+=gz* dt/1000 switch axisselect case return anglex break case return angley break case return anglez break void configurempu6000 // device_reset pwr_mgmt_1 reset device chipselpin1 delay // temp_dis pwr_mgmt_1 wake device select gyroz clock spiwrite chipselpin1 delay // i2c_if_dis user_ctrl disable i2c interface spiwrite chipselpin1 delay // smprt_div smprt_div sample rate spiwrite chipselpin1 delay // dlpf_cfg config digital low pass filter spiwrite chipselpin1 delay // fs_sel gyro_config gyro scale spiwrite chipselpin1 delay // afs_sel accel_config accel scale spiwrite chipselpin1 delay objective use calibrate accelerometers gyro use depend mission planner reading values acc x acc -640 acc z gyro x -322 gyro gyro z acc x acc -622 acc z gyro x -320 gyro gyro z acc x acc -626 acc z gyro x -328 gyro gyro z acc x acc -652 acc z gyro x -314 gyro gyro z acc x acc -608 acc z gyro x -321 gyro gyro z acc x acc -642 acc z gyro x -312 gyro gyro z acc x acc -608 acc z gyro x -321 gyro gyro z acc x acc -608 acc z gyro x -325 gyro gyro z acc x acc -576 acc z gyro x -319 gyro gyro z acc x acc -546 acc z gyro x -321 gyro gyro z acc x acc -624 acc z gyro x -316 gyro gyro z acc x acc -594 acc z gyro x -320 gyro gyro z acc x acc -622 acc z gyro x -317 gyro gyro z acc x acc -564 acc z gyro x -320 gyro gyro z acc x acc -596 acc z gyro x -329 gyro gyro z acc x acc -666 acc z gyro x -316 gyro gyro z acc x acc -596 acc z gyro x -307 gyro gyro z acc x acc -642 acc z gyro x -327 gyro gyro z acc x acc -606 acc z gyro x -308 gyro gyro z acc x acc -650 acc z gyro x -313 gyro gyro z acc x acc -628 acc z gyro x -309 gyro gyro z acc x acc -608 acc z gyro x -310 gyro gyro z acc x acc -634 acc z gyro x -307 gyro gyro z acc x acc -604 acc z gyro x -326 gyro gyro z acc x acc -634 acc z gyro x -320 gyro gyro z understand spiread ... ... returns analog voltage value data pins sensor happens proportional acceleration values right question go calibrating tried till date tried place horizontal ... place nose ... left side right side technique used mission planner placed horizontal position sensor experiencing +1g z axis x axis left/right side provides ±1g axis nose down/up provides ±1g x axis orientation passed raw sensor data computed mean median sd sensor data iterations store mean median sd value eeprom axis +1g use sensor load stats eeprom match mean/median standard deviation current reading iterations working assumption values +1g anything interpolated/extrapolated data using linear plot correct approach calibration suggest better way noticed maxima/minima different expected outcome something wrong code gyro calibrate angular acceleration,arduino accelerometer ardupilot,ardupilot accelerometer arduino
558,interface cmos camera module arduino,new camera interface usage embedded project like use cmos vision sensor this.this project used power small robot on-board video processing power using processors arm limitation worked 8-bit micro-controllers atmega arduino platform think better processing use arduino due data sheet cmos camera build board next found useful resources searching need capture small video store sd card seen links proved useful provide required form factor looking interface module customized board need understand commands accept proper functioning starting take video posting output pin get video output pin pin take output controller i.e uart i2c spi,arduino microcontroller computer-vision cameras c,c cameras arduino microcontroller computer vision
559,continuous discrete,new robotics control thinking deal problems real life passed course control idea control discrete/digital systems lot robots general dynamic systems controlled microcontrollers computers software i.e simulink sensors send microcontroller computer controller sends signal w.r.t input signal sensors wondering decide system discrete continuous decide use discrete continuous blocks simulink control dynamic system use computers digital think easier work digital signals continuous signal passed signals course questions easy find place question,control microcontroller,control microcontroller
560,extended kalman filter laser scan known map,working project school need implement extended kalman filter point robot laser scanner robot rotate degree turn radius drive forward motions piecewise linear drive rotate drive simulator using support acceleration motion instantaneous known map png image need localize ray trace image order simulate laser scans partner confused motion sensor models need use modelling state vector x \theta using update equations follows void kalman :predict const nav_msgs :odometry msg this- x += linear dt cos x //x this- x += linear dt sin x //y this- x += angular dt //theta this- f -linear dt sin x //t+1 this- f linear dt cos x //t+1 p f p f.t q this- linear msg.twist.twist.linear.x this- angular msg.twist.twist.angular.z return thought everything working noticed forgot initialize p meaning correction happening propagation accurate introduced noise system motion model using following matrix f f \begin bmatrix -v*\delta t*sin \theta \\ v*\delta t*cos \theta \\ \end bmatrix jacobian update formulas correct sensor model approximating jacobian h taking finite differences robots x \theta positions ray tracing map talked ta said work unsure prof ask using laser measurements correction step h issue initialize p. tried place robot map -90 -70 map code project found https //github.com/en4bz/kalman/blob/master/src/kalman.cpp advice appreciated edit point gotten filter stabilize basic movement noise actual movement robot starts move filter diverges exits map,mobile-robot ros kalman-filter ekf,kalman mobile ekf robot filter ros
561,micro controller use,planning building robot wheels legs possible move room analyze certain things using couple sensors steps functions grabbing things want add recommend controller concern arduino slots raspberry pi seems needs screen user complete amateur comes robotics familiar computer languages java python wrote fun app android love robot compatible android,arduino raspberry-pi beginner,pi raspberry beginner arduino
562,calibrate industrial robot,testing industrial robot abb irb using simple micron dial gauges get x z values particular point varying speed load distance home position questions parameters influencing repeatability accuracy using dial gauges relation base frame possible measure accuracy cost effective method measure repeatability accuracy method,industrial-robot calibration,industrial robot calibration
563,making tiny robot using remote brain,build robot small possible delicate parts possible bots bashing wondering possible use small chip receive bluetooth/ir/wifi commands move motors turn send feedback based sensors accelerometer detect impact achieve something picy bigger due size pi sure long pi last taking continuous impacts therefore try offset brain pi side arena use small chip receive move commands send data accelerometer recommendations chip wifi choice impacts size try bt edit research seems arduino wifi redback shield job something motors http //www.gravitech.us/2mwfecoadfor.html,raspberry-pi rcservo accelerometer,pi raspberry accelerometer rcservo
564,computer aided rc airplane combat,http //www.youtube.com/watch v=4vh_r1nlmx0 swarm shows rc aircraft combat wings trying hit air scoring hit rare increase pilot chances using computer targeting system offline system gets data sensors airplane sensor work application,mobile-robot sensors,mobile sensors robot
565,spp profile compatibility phone,building project uses cell phone control microcontroller bluetooth decided use hc-05 bluetooth module hc-05 manual http //www.exp-tech.de/service/datasheet/hc-serial-bluetooth-products.pdf phone using nokia c3-00 series http //developer.nokia.com/devices/device_specifications/c3-00/ hc-05 module uses spp bluetooth phone supports dun ftp gap goep hfp hsp pan sap sdap profiles knowledge phone api utilizes rfcomm question use bluetooth module phone thanks advance apologies question trivial new bluetooth -shaun,microcontroller,microcontroller
566,quadcopter instability simple takeoff autonomous mode,trying get quad rotor fly board controller ardupilot mega programmed arduino trying fly autonomous mode radio controller involved done thorough static weight balancing like http //www.youtube.com/watch v=3nevteb2nx4 propellers balanced trying get quadcopter lift using code include servo.h int maxspeed int minspeed servo motor1 servo motor2 servo motor3 servo motor4 int val int throttlecurveinitialgradient void setup val minspeed motor1.attach motor2.attach motor3.attach motor4.attach void loop setallmotors val delay val maxspeed true val+=throttlecurveinitialgradient void setallmotors int val motor1.write val motor2.write val motor3.write val motor4.write val issue takes tilts direction topples looks motor/propeller generating enough thrust arm take-off tried offsetting weight balance direction fails lift work snapped propellers something wrong way escs fired using servo library everything fails assume something wrong motors need implement pid controller self-balancing roll pitch get quadrotor take edit thanks replies got pid place pd controller integral gain set writing angles servo motor1.write int val kp perror1 ki ierror1 kd derror1 //front left motor2.write int val kp perror2 ki ierror2 kd derror2 //rear right motor3.write int val kp perror3 ki ierror3 kd derror3 //front int val kp perror4 ki ierror4 kd derror4 //rear left ki ignore value kp set getting oscillation steady amplitude supposed mean value problem amplitude oscillation way high +/- degrees looks crazy constrained test rig edit calculate term simple linear thresholding precomputed data average readings mean sd coming gyro imu steady based gyro reading classify motion setup left right motion increase perror term motors right tilt add perror terms motors left tilt add perror term motors etc check comment lines code snippet given magnitude error assign perror term abs current gyro reading abs mean steady-state gyro reading value positive therefore side dipping downwards positive increment rpm. crank derivative gain oscillation dampens drone comes stable attitude hold horizontal plane oscillation dies give stable quadrotor tilted degrees horizontal using gyros calculating error gyros self calibrated hence expect fair amount noise inaccuracy associated error values think primary reason high amplitude oscillation probable reason low update frequency errors updating errors times second probable reason taking longer stabilise error steady state error wild oscillations dampen necessary fine tune integral gain get rid please help edit cranked frequency operation hz get controlled oscillation +/- degrees tune derivative gain following plan recompute errors integral gain using combination gyro accelerometer data tuned p gain resulting +/- degrees oscillation approx get lower matter much try challenges concerned seconds flight quadcopter leaning side drift controlled tuning integral gain b drift controlled using accelerometer gyro fused data c given drone shows +/- degrees oscillation consider optimal set point proportional derivative gains need search case wits end,arduino quadcopter pid ardupilot,quadcopter ardupilot pid arduino
567,visualizing kinect data rviz,beginner ros kinect ubuntu want visualize kinect data rviz environment run object recognition tried tutorials luck got empty rviz world beginner appreciate step-by-step instructions hydro groovy note managed get visual kinect device working fine,ros kinect,kinect ros
568,lawn mower robot type cutter,major types lawn mower robots rotary mowers presume1 reel mower efficient said leave better lawn health cut industry go option assuming efficiency electrical rotary mowers least universal-motors induction motors manual reel mower capable cutting speed,motor mechanism,mechanism motor
569,use speech recognition,wondering team working robot communication-oriented wanted add speech recognition technology use,software,software
570,understanding arduino bootloader,came understand reading flashing new bootloader/understanding bootloader etc etc bootloader supposed first thing runs power arduino duemilanove micro controllers general setup runs listens usb cable upload code erases old run new sections memory bootloader s1 app s2 code s1 write s2 s1 discouraged remember things understand upload new code app running upload works happened thought bootloader gave hand app flash new bootloader bootloader thing runs section s1 write s2 bootloader thing listens new code uploads ... help correct thoughts answer questions many thanks,arduino microcontroller,microcontroller arduino
571,autopilot purchase apm pixhawk,newbie uav stuff advice helpful want start mapping using fixed wing uav main choice apm researches found maintained future future releases pixhawk wonder choose apm stability side see benefits pixhawk long time support newbie start something experimental apm cheap chinese version thanks advance,uav,uav
572,build 10cm-200cm ir range sensor,everybody aware sharp distance sensors gp2y0 series e.g gp2y0a02yk0f use diode emit infrared light measure angle reflected light psd i.e triangulation seem producers technology aware similar incomparable devices sensors ambient light distance proximity si114x comparable products way ask question different ways build range low-cost ir range sensor example ways,sensors manufacturing,sensors manufacturing
573,re-calibration articulated industrial robot,planning recalibrate abb irb robot conduct series accuracy repeatability tests using faroarm questions physical identification marker robot used identify location base co-ordinate frame ii locating base frame possible accuracy measured fixed arbitrary point space,industrial-robot calibration,industrial robot calibration
574,robots microcontrolers beam robots limited,beam robotics seem good approach teach learners electronics robotics robots regular programmed cognitive robots robots analog circuits take level robotic assistants worker robots kinds self sufficient autonomous robots want know creating mission critical robots areas robotics impossible real time software system areas field done programming yes areas feasible software system intelligent space rover work cpu future,control software electronics artificial-intelligence embedded-systems,control embedded intelligence artificial systems electronics software
575,low speed control bldc motors,problem controlling bldc motor starting running low rpm custom board measure rotation motor using optical sensor send servo pwm commands esc problem start motor increase control signal starts stuttering jumps way improve situation using sensored motor/esc combo,motor control brushless-motor,control brushless motor
576,different types electric motors,beginning hardware aspect robotics order lot new information useful site need basic understanding terminology thing comes different electric motors servo dc motor brushless motor step motor gear motor ... etc comprehensive list least list common ones descriptions differences,motor,motor
577,access denied pic programming windows xp,programming pic16f77 propic communicates serial port port pc used serial usb adapter using icprog windows proggrammed windows using driver specifies http //www.ic-prog.com/index1.htm worked os difference adapter program gives errors loading driver error occured access denied loading driver privileged instruction,microcontroller,microcontroller
578,purpose electronic braking motors,micro magician v2 micro controller a3906 dual fet “h” bridge motor driver built manual states electronic braking possible driving inputs high first question purpose brakes set left/right motor speed robot stops advantage using brakes taking word brake second question driver motor stall flags held high pullup resistors go low motor draws current limit connect spare digital inputs program know robot gets stuck robot hits wall wheels keep spinning slipping take stall flags used rough surface wheels friction,motor h-bridge,h motor bridge
579,udoo board kinect sensor,wondering possible get kinect work board quad found support ros udoo saw question asked xtion udoo shows interest great possible kinect+udoo hoping implement miniature version turtlebot wish someone give insights matter thanks,ros kinect arm embedded-systems,kinect ros arm embedded systems
580,quadcopter configuration,building quadcopter controlled black several sensors cam new quadcopter stuff nice someone look setup buy parts frame x650f battery turnigy nano-tech lipo pack motor ntm prop drive 28-30s brushless motor esc skywalker brushless sums giving room payload think something important better ideas parts,quadcopter,quadcopter
581,crossing events brushless dc motors,like ask question crossing event trapezoidal commutation brush-less dc motor waveform shows crossing event occurs electrical degrees sinusoidal commutation trapezoidal commutation waveform found trapezoidal commutation see crossing occurs electrical degrees previous commutation electrical degrees commutation motor pole pair electrical degrees mechanical degrees waveform see crossing phase occurs magnet faces phase c words electrical degrees last commutation question crossing happen moment electrical degrees electrical degrees related law induction law law appear motor someone explain pics,brushless-motor,brushless motor
582,crossing events trapezoidal commutation,like ask question crossing event trapezoidal commutation brush-less dc motor waveform shows crossing event occurs electrical degrees sinusoidal commutation trapezoidal commutation waveform found trapezoidal commutation see crossing occurs electrical degrees previous commutation electrical degrees commutation motor pole pair electrical degrees mechanical degrees waveform see crossing phase occurs magnet faces phase c words electrical degrees last commutation question crossing happen moment electrical degrees electrical degrees related law induction law law appear motor someone explain pics,brushless-motor,brushless motor
583,computercraft minecraft mod navigation collision avoidance path planning/finding space,programming lua controlling computers robots in-game minecraft mod computercraft computercraft robots called turtles able move grid based world minecraft equipped sensors making able detect blocks obstacles adjacent turtles execute lua programs written player hobby project like program goto x z function turtles turtles equipment remove obstacles like make avoid obstacles prevent destruction in-game environment prior experience robotics b.sc computer science lead web developer research found basic strategies grid based based experience area strategies old school note turtles able move dimensions hover height share obstacles free coordinates common database discovered help obstacles stationary placed best options matter easy fixes look additional resources thank much advance edit thank feedback started reading book artificial intelligence modern approach edition get speed basic theory suggested ian pointers educational resources appreciated started developing basic navigation moving unexplored areas similar cube suggested priority moves possible costs time fuel cells additional move seconds fuel cell move direction plan using euclidean heuristics function greedy best-first search computing path expected optimal reducing number moves reach goal enough data available shared database previous exploration time obstacle reached plan use following basic algorithm exploiting fact turtles able move calculate direct horizontal path goal turn direction next step obstacle detected front turtle go time obstacle detected front turtle moving go move go obstacle detected turtle move go go backtrack coordinates turtle moving upwards turn left go using algorithm records kept explored coordinates uploaded shared database cases consider move goal reachable coordinate horizontal move direction possible long backtrack detect unreachable goals obstacles removed requested enough exploration data area available jump point search performed calculate optimal path assumes map take dimension account good data structure store exploration data,mobile-robot navigation,mobile navigation robot
584,know desired orientation quadcopter,trying simulate quadcopter model simulink want implement pid controller x z phi theta psi angles pid gets error input minimized x z desired values entered user actual values calculated data desired set value actual value phi theta psi actual values obtained gyroscope accelerometer sensor fusion know calculate desired values user interested giving position values x z desired angle values desired values prevents form calculating angular error needed pid controller,design pid quadcopter,quadcopter pid design
585,kalman filter state noise vector,reading probabilistic robotics thrun kalman filter section state x_ =a_ x_ t-1 b_ u_ \epsilon_ \epsilon_ state noise vector z_ c_ x_ \delta_ \delta_ measurement noise want simulate system matlab everything straightforward state noise vector \epsilon_ majority authors care much technical details question state noise vector sources need know want simulation sensible measurement noise evident given specifications sheet sensor uncertainty \pm e,kalman-filter noise,filter noise kalman
586,finding inverse kinematics algorithm specific manipulator,need find way solve invrese kinematics comau smart-3 robot give hints start looking idea robotics find algorithm specific robot,inverse-kinematics,inverse kinematics
587,difference rao-blackwellized particle filters regular ones,read seems rao-blackwellized particle filter normal particle filter used marginalizing variable p r_t s_t y^t sure conclusion like know precise differences types filters thanks advance,slam particle-filter,filter slam particle
588,flipping old manual switch physical,old audio amplifier switches turn looking simplest motor/robotic arm relevant component control switch raspberry pi options,motor raspberry-pi robotic-arm,pi raspberry arm motor robotic
589,measure number rotations axis concurrent random motion axis,gyroscopic sensor comparable type used smartphones embedded black object rotating x axis measure number rotations x axis object rotating time random ways number partial full rotations speeds directions z axis z axis rotation irrelevant special mathematics involved filtering affects z rotation measurement x axis rotation measurement acceleration magnetism need used solve problem impact using 2-axis vs. 3-axis gyroscopic sensor measurement scenario,sensors gyroscope,sensors gyroscope
590,choose wifi signal strength detecting sensors,want create robot localize signals wifi routers sensors buy detect strength wifi signal following necessary http //www.dfrobot.com/index.php route=product/category path=45_80 suitable variants using arduino platform,arduino sensors localization wifi,wifi sensors localization arduino
591,quadcopter position measurement accelerometer gps,thought quadcopter used find position integrating data got read lot watched video time sensor fusion android devices seem get use little correct realized filter considerable noise generated error integration get useful information position realized used gyroscope magnetometer fused information orientation linear translation outdoor flight thought gps data get relative position accurate enables position measurement good precision commercial quadcopters measure positions x z gps data fused accelerometer data,quadcopter accelerometer navigation sensor-fusion,sensor fusion navigation accelerometer
592,unwanted arduino reconnect servo arduino python raspberry pi,difficulty sustaining connection raspberry pi model b running raspbian arduino uno sending signals raspberry rotating servo powerhd ar- robot servo python sure efficent way sending servo instructions python arduino rotate servo attempting communicate signals raspberry pi arduino usb using believe considered digital serial connection current connection wireless xbox controller wireless xbox controller receiver raspberry pi powered usb hub arduino servo servo connection signal orange pin power red +5 v ground black gnd raspberry pi installed following needed addressing problem xboxdrv pyserial python-arduino-command-api pygame lego-pi arduino sketch uploaded arduino uno corresponding sketch provided python-arduino-command-api *again positive best method means driving servo python arduino servo raspberry pi see arduino connected usb pi raspberrypi ~/python-arduino-command-api dir /dev/ttya* /dev/ttyacm0 /dev/ttyama0 pi raspberrypi ~/python-arduino-command-api lsusb bus device id standard microsystems corp. bus device id linux foundation root hub bus device id ec00 standard microsystems corp. bus device id microsoft corp. xbox wireless adapter bus device id terminus technology inc. fe 7-port hub bus device id realtek semiconductor corp. rtl8188cus wlan adapter bus device id c52b logitech inc. unifying receiver bus device id arduino sa uno r3 cdc acm raspberry pi able rotate servo test clockwise second counter-clockwise second stop servo following python script /usr/bin/env python arduino import arduino import time board arduino port='/dev/ttyacm0 board.servos.attach declare servo pin board.servos.write move servo full speed clockwise time.sleep sleep second print board.servos.read speed check read board.servos.write time.sleep print board.servos.read read board.servos.write print board.servos.read board.servos.detach output raspberry pi terminal reads performs full-speed direction calibrated stop speed alternated full-speed slower speeds example going increments raspberry pi able send input xbox controller drive servo small custom python script created xboxdrv works projects /usr/bin/python legopi.lib import xbox_read arduino import arduino catch ctrl+c import signal import sys deadzone ignore inputs total possible input deadzone def signal_handler signal frame print stopping wrapper sys.exit capture ctrl+c shut signal.signal signal.sigint signal_handler print starting wrapper print press ctrl+c time quit board arduino port='/dev/ttyacm0 board.servos.attach board.servos.write event xbox_read.event_stream deadzone=deadzone print xbox event event rb button held rotate servo counter-clockwise full-speed rb button released stop servo event.key=='rb event.value board.servos.write print board.servos.read board.servos.write print board.servos.read continue script runs able control servo using rb button controller fails minutes seconds rapid intermittent input influence expediting crash input read script terminal comes halt servo freezes last command given spinning stopped forced ctrl c script check see arduino connected raspberry pi shows reconnected raspberry pi ttyacm1 /dev/ttyacm0 /dev/ttyacm1 pi raspberrypi ~/robotarm dir /dev/ttya* /dev/ttyacm1 /dev/ttyama0 arduino reconnect way processing information distance wireless xbox receiver factor pieces adjacent testing purposes prove impossible use servo wheel robot tending issue,arduino raspberry-pi servos python,python pi raspberry servos arduino
593,workable low-resolution object/target recognition pattern library,spent quite time researching google search results turned academic research papers interesting practical working target/pattern recognition project** robot small camera attached attempt locate targets using small wireless camera moves room targets small possible something size business card smaller less large inches targets form something printable pattern recognition software needs able recognize target time field vision needs able differentiate least different target patterns pixel portion image playing camera envisioned using small printed barcodes excellent zxing library recognize barcodes turns camera resolution terrible grainy well-focused example image well-suited capturing barcodes moving think work barcodes larger looking using particular camera tiny light cheap includes battery wi-fi looking things suggestion pointer optimal pattern use targets software library and/or algorithm help identify patterns images idea right type pattern suggestions help project something resembling found opensift seem potential candidates software libraries seemed examples type recognition talking thinking picking right type pattern big hurdle overcome pointers optimal type pattern great able recognize pattern different angles idea use patterns look something concentric color rings red green blue allowing unique targets use rings feet capture inch target computer screen looks seems suitable analysis feel better type pattern compact easier recognize plain black white pattern sort shapes pointers optimal approach appreciated,software computer-vision artificial-intelligence,intelligence computer artificial vision software
594,understand motors step,gone tutorials build circuits control dc stepper servo motors understand everything good basic foundation loss go interested learning make mechanical devices electronics devices know go hand hand want learn mechanical aspects using motors several ultimate goal projects want work home automation model rc vehicles autonomous robots etc ... sure mechanics need learn jump project learn fly day first learn stand walk hobbyist mechanical starter kits starter projects learn make effective use electric motors need specific product endorsement general idea important concepts learn materials projects help learn apologies question broad refine deemed necessary,motor mechanism,mechanism motor
595,path following robot converting xy axis path input wheels,moment creating android program steer simple wheel motors balance robot move online following path drawn screen robot operated wifi motors react input signals imagine drawing path robot smartphone screen aquired points xy axis time beginning idea convert points voltage input motors signals sent connection single axis point taken consideration skips irrelevant path done robot reasonable error scale idea make robot follow defined axis points overall create path edit voltage computed robot input -255 velocity increase decrease lineary borders like solve perfect conditions need feedback crazy models let assume data true sensors additional devices xy axis path required input ommit wheel slide,wheeled-robot wifi two-wheeled,wifi wheeled robot
596,emulation orrery,orrery clockwork model solar system trying emulate emulate need know goes someone please explain basic principle clockwork direct resource explain machinery simple orrery,motor design,design motor
597,dynamics parallel manipulator,task apply forces control 3-dof parallel manipulator forces applied linear actuators friction neglected end-effector robot supposed generated path example let simple circle made simplified model robot calculated inverse kinematics promoter engineering work know said calculating dynamics complex go way tell easiest way go,force dynamics manipulator,dynamics manipulator force
598,kk2.0 quad stablility,running kk2.0 multistar escs emax gf 2215-20 motors slow fly props foot ground entire quadcopter starts wobbling crazy auto-level ideas add video needed,quadcopter stability,quadcopter stability
599,power model humanoids,process creating power prediction model hubo robot robot degrees computer sensors motor boards motors powered motor boards boards powered main power board exists robots chest model able predict power trajectory robot say instance robot raises hand degrees degrees model able predict power heres idea came idea equate electrical torque mechanical torque joint instance right arm pitch moves degrees follows mgsin \theta kt*i getting proper prediction current value way read software installed robot know losses wondering approaches fault approach add joint currents specific trajectory give estimate total power consumption,brushless-motor power inverse-kinematics motion-planning torque,inverse power torque motion planning kinematics motor brushless
600,quadcopter pid tuning,continuation question asked quadcopter instability simple takeoff autonomous mode ... ask questions implementing basic pid quadrotor controlled module using frame stripped entire control system pid blocks controlling roll controlling pitch yaw everything ... think testing setup rig consists rotating beam tied arms quadrotor free move testing degree freedom roll pitch time check image b marks rotating beam setup mounted careful tuning p parameters managed sustained flight seconds simple mean test drone ai toppling side rock steady flight sight secs flight looks difficult wobbles beginning time reaches seconds starts tilting side secs tilted side unacceptable margin find resting upside pid code calculating proportional error filter gyro accelerometer data integral term set p term comes term using arduino pid library purpose want get pids implemented check video want see works http //www.youtube.com/watch v=lpsnbl8ydba feature=youtu.be yeh setup ancient agree please let know improve stability stage ian many tests setup plot graphs tests using reading serial monitor sample reading roll vs motor2 pwm input motors controlling roll input/output input roll pitch values degrees obtained combination accelerometer gyro output pwm values motors delivered using servo library motor.write function resolution resolved problem crux issue lied way implemented arduino program using write function update servo angles happens accept integer steps argument responds integer input produces result changed writemicroseconds made copter steadier adding rpm motor keeping steady value changed increase rpm motor decreasing opposing motor kinda keeps total horizontal thrust unchanged help trying get vertical altitude hold thing pushing rpm max limit quadcopter kept losing control full throttle room rpm increase sensed tilt observed motor weaker know hardcoded offset motors pwm input thanks support source code interested source code bare-bones pid implementation pid source code please feel free test hardware contributions project welcome,arduino pid quadcopter stability,quadcopter stability pid arduino
601,much accuracy get position tracking 3-axis accelerometer gyro sensor compass,given x field x cheap 3-axis gyro sensor accelerometer compass plan design device capable tracking position sub-centimeter accuracy minute motion device holonomic drive system capable moving direction maximum maximum acceleration simplifying constraints field flat floor made tough foam slight sinking floor flat ramp known angle degrees device excepting collisions rising floor accuracy preferred simplicity mathematics required software side improve system welcomed choose accelerometers method position tracking like idea accuracy get best ways,kinematics accelerometer machine-learning,machine kinematics learning accelerometer
602,start software side robotics,computer science student entering last year college pretty sure robotics want based interests ai embedded systems seen lot topics covers robotics control theory signal processing kinematics dynamics simulators physics engines ai big data machine learning hoping someone point right direction attempting study interests robotics sure topics mentioned relevant like deal software side robotics ai none ai question machine learning seen researchers applying machine learning deep learning/unsupervised learning robotics information data transferred internals robot external computer data processing machine learning requires lot data predict way machine learning used robotics external computer hope someone touch things mentioned thank,mobile-robot software artificial-intelligence programming-languages,mobile intelligence programming robot artificial languages software
603,system determining occupied seats auditorium,need app live monitoring seat auditorium occupied visitors load app see sit auditorium flat ceiling high seats .5m wide hardware cost seat needs looking solutions web cams preasure sensors sonars lasers arduino pi intel edison anything wires people trip sensors ceiling wired networking sensors seat floor need wireless communication sensors ceiling need consider occlusion people sitting seats think empty spot people sensor see empty end data needs collected simple list chairs occupied/open possible solutions rasberry ceiling seats camera pressure sensors chair legs wired pi gpio drones flying auditorium ideas update constraints auditorium size seats installation costs average chairs hour hours picture shows chairs cushioned regular maintenance take longer min 2-hour event eg batteries hardware last sessions auditorium cleaning possible disconnect reconnect chairs hours labor,arduino sensors raspberry-pi computer-vision,raspberry arduino computer sensors pi vision
604,overcorrecting kalman filter,trying get extended kalman filter work system model \begin bmatrix lat \\ \theta \end bmatrix lat long latitude longitude degree \theta current orientation vehicle degree prediction step get reading current speed v yaw rate \omega inclination angle \alpha z \begin bmatrix v \\ \alpha\\ \omega \end bmatrix use standard prediction ekf f \vec f \vec x u \vec z _t \vec x u \begin bmatrix \frac v f \cos \theta \cos \alpha \frac ° \pi r_0 \\ \frac v f \sin \theta \cos \alpha \frac ° \pi r_0 \frac \cos lat \\ \frac \omega f \end bmatrix f prediction frequency r_0 radius earth modelling earth jacobian matrix looks c v \cdot \delta \cdot cos \alpha \cdot \frac \pi r_0 f_j \begin -c \cdot sin \phi \cdot \frac cos lat \\ -c \cdot sin \phi \cdot \frac sin lat cos lat ^2 c \cdot cos \phi \cdot \frac cos lat \\ \end pmatrix higher frequency sensors prediction step predictions followed update update step get reading current gps position calculate orientation current gps position previous update step standard ekf update h x x jacobian matrix h h identity trying implementation testdata gps track constant northern direction yaw rate turns west expect filter correct position close track orientation degrees happens seen image attached red gps position measurements green/blue predicted positions idea experienced kalman filter misunderstanding something nothing tried seemed work… think poked bit set jacobian matrix prediction identity works good problem seems p covariance matrix system model p p interpretation prediction step orientation depends position seem make sense due turn makes sense anyone give hint overcorrection come look google,kalman-filter gps sensor-fusion,filter fusion sensor kalman gps
605,tracking positioning imu sensor,using miniature car want estimate position use gps modules tracking systems saw using imu senson gps module car able find exact correct location image processing parts dont enough markings want use imu backup positioning positioning good interested position car flat ground using imu sensor want calculate movement seen amazing works tracking body movements code simple explanation reading accelerometer gyro magnetometer orientation quarternions device getting linear acceleration moving direction values confusing please help approach thanks advance,sensors accelerometer gyroscope,sensors gyroscope accelerometer
606,rating specifications dc motor used making quadcopter,want make quadcopter final year project willing use dc motors rotors guide ratings proper motor selection job,quadcopter,quadcopter
607,kinematics wheeled differential drive robots,wheeled differential drive robot pioneer motors left wheels right wheels want send velocity commands robot using ros standard commands linear_velocity angular_velocity need convert left right velocities literature wheels v_l linear_v \omega |r| v_r linear_v \omega |r| |r| value distance wheels robot center take account wheels,wheeled-robot inverse-kinematics wheel,wheel inverse kinematics wheeled robot
608,problem simulated sensor matlab,simulating sensor sensor determine p \theta \phi \theta rotation z-axis \phi rotation x-axis sensor given position point x z p sqrt x^2 y^2 z^2 theta acos z/p -- -- guessing problem phi atan2 x need get cartesian coordinates x z p theta phi getmeasurement x z x p*cos theta *sin phi p*sin theta *sin phi z p*cos phi sensor working fine beginning particular point behaves state vector compare measurement guessing \theta problem edit sorry mistake aforementioned calculations based following picture point rotate first z-axis \theta rotate x-axis \phi,sensors sensor-error,sensors sensor error
609,possible achieve autonomous route following using px4fmu module,quadcopter equipped px4fmu board download datasheet possible program quadcopter follow path circular motion human interference built-in sensors task wonder accurate built-in gps read gives coordinates radius error,quadcopter,quadcopter
610,learning embedded electronics,aerospace engineer grad school want get embedded electronics problem understand theory took edx course circuits problem build projects internet hard time connecting theory practical part understanding projects done way done hard time design projects please help appreciate following -general tips learn workflow steps take -books hands books websites recommend looking books website practical explain -kits kits recommend combine theory practical -anything think important thank time,electronics,electronics
611,monte-carlo localization,implementing monte-carlo localization robot given map enviroment starting location orientation mine approach follows uniformly create particles given position step motion update particles odometry current approach newx=oldx+ odometryx etc assign weight particle using sonar data formula sensor probability*=gaussianpdf realreading gaussian mean predictedreading return particle biggest probability location step new particles resampled old ones according weights sampled predicted position wrote simulator robot enviroment localization behaves http //www.youtube.com/watch v=q7q3cqktwzi afraid longer period time robot get lost add particles wider area robot gets lost easier expect better performance advice,localization motion-planning sonar,motion sonar planning localization
612,ultrasonic range finders detect objects angle,tell ultrasonic rangefinder works reflecting inaudible soundwaves objects timing return object flat surface angled respect line rangefinder detect object circumstances give false distance fail detect object,sensors sonar,sonar sensors
613,motor use reciprocating reversive movement,want make copy machine fisher price soothing motions™ glider wondering motor use simple dc motor appropriate gearbox slow rpm stepper motor instance idea,motor stepper-motor mechanism,stepper mechanism motor
614,electronic noses detecting dog urine,limited experience sensors robotic components hope excuse lack detail question want set posts electronic noses detect dog urine want use information make map yard dogs perspective possible todays technology cost information relevant requesting lacking insight something think consider research please say,sensors electronics,sensors electronics
615,line follower robot program,working line follower robot part microelectronics project confused sort code use program pic18f microcontroller using someone give source code code,c line-following,following c line
616,cons pros wireless technologies rescue robot,robotics enthusiasts member team develop mobile rescue robot cooperate firemen e.g earthquake sites problem connection commander post robot robot enter buildings desirable connection go several decimeters walls reach 50-100 meters hand need send lot data camera images point clouds maps eat mbps time use ghz wifi connection speed direct visibility seems sufficient single robot operating use non-overlapping channels theory robots work environment messed home routers need least robots operating tried ghz wifi problems penetrating walls used uavs idea use mobile connection technology lte found lte run mhz great wall penetration performance found theoretical upload speeds clients mbps nobody says ghz changed running mhz moreover provider coverage found lte transmitter €2000 seems interesting possible build cheaper think ghz mhz regulated frequencies cooperation firefighters persuade local regulators give exception setup small lte base station question think setup give better results using wifi know technologies help increase bandwidth wall penetration performance cons pros,wireless,wireless
617,actuator control steam valve,steam radiator home valve similar picture please note valve grooves top attach things want something turn depending temperature certain points room taken care find way attach actuator actuator right word context guess turn valve directions rented apartment like avoid making modifications radiator,actuator valve,actuator valve
618,covariance matrix ekf,struggling concept covariance matrix \sigma \begin bmatrix \sigma_ xx \sigma_ xy \sigma_ x \theta \\ \sigma_ yx \sigma_ yy \sigma_ \theta \\ \sigma_ \theta x \sigma_ \theta \sigma_ \theta \theta \\ \end bmatrix understanding \sigma_ xx \sigma_ yy \sigma_ \theta \theta describe uncertainty example \sigma_ xx describes uncertainty value x. question rest sigmas represent mean zeros interpret \sigma_ xx zero means uncertainty value x. note reading principles robot motion theory algorithms implementations howie choset et al. states definition \sigma_ ii \sigma_ variance x_ ≠ j \sigma_ ij x_ x_ j independent answer question rest sigmas zeros confused relationship variables example x happen mean correlation words assume zeros book fastslam scalable method ... michael sebastian states off-diagonal elements covariance matrix multivariate gaussian encode correlations pairs state variables mention correlation happen mean,kalman-filter noise,filter noise kalman
619,compensating lateral quadcopter movement,trying make quadcopter move certain angle able find proper roll pitch angles work adjust values compensate different yaw,quadcopter gyroscope movement dynamics,quadcopter dynamics gyroscope movement
620,using vision monte-carlo localization,step vision code able get coordinates robot thinks walls want integrate monte-carlo observation step storing map maze set line segments nice way implement sensor update i.e given position x robot probability found given described coordinates walls main idea transform points polar coordinates point vision output compute ray angle find first intersection maze predicted distance real distance compute probability measurement main slow point vision output iterate line segments find closest intersection line segments number gets number,mobile-robot localization computer-vision,mobile computer robot vision localization
621,maximum angle camera pose estimate homography,want capture views scene scene consists set objects kept table views wish calculate homography image matching want know maximum angle views homography calculated right capturing images degrees angle unable construct homography,kinect computer-vision stereo-vision,kinect stereo computer vision
622,kinect xbox sdk selection,application sound source localization visual servoing selected kinect main hardware know basic differences kinect windows kinect xbox access windows version country reseller turkey xbox version stores sure problem specific software selection found latest kinect sdk supports sound source localization beamforming using built-in microphone array use sdk xbox version sdk xbox support sure read openni best audio api apply processing image depth outputs using opencv want use qt threading gui etc question possible use microsoft official kinect sdk ide visual studio,kinect,kinect
623,water depth arduino sonar sensor,fish finder finds depth water im trying find sensor purchase arduino like check ft least high accuracy +/- cm threads info finding water level sensors water depth anyone know sensor find,arduino microcontroller underwater,underwater microcontroller arduino
624,motion model holonomic robot,working holonomic robot equipped degree shifted omnidirectional wheels relative movement estimated dead reckoning using wheel encoders improve estimation installed gyroscope measure change orientation robot degree laser range finder order solve kidnapped robot problem implemented particle filter step particle updated according odometry gyroscope readings readings distorted need motion model include errors described probabilistic robotics thrun page used motion models velocity motion model odometry motion model models seem describe behavior differential drive robots omnidirectional robots base thesis fact relative y-direction proportional error orientation motion models thrun concerned appropriate differential drive robots orientation heading robot identical omnidirectional robots assumption made heading orientation independent assume perfect information robots orientation obtain error relative y-direction like discuss assumption velocity/odometry motion model fails omnididrectional robots correct sure curious motion models omnidirectional robots fit better,mobile-robot localization motion particle-filter,filter particle localization mobile robot motion
625,start programming proto x quad,bought small proto x quad joystick navigates device looking way send signal thing computer anyone point turn propellers quad using laptop decent knowledge python/matlab/c hardware new world,quadcopter programming-languages,quadcopter languages programming
626,lidar solutions,surprised price range lidar applications considering simplicity design try make simple project requires lidar object recognitions etc like use visual recognition opencv trying understand lidar solutions expensive see http //velodynelidar.com/lidar/hdlproducts/hdl32e.aspx small lidar sensor goes believe lidar next step robotic applications sure exclusive seen projects go performance bad hope answer makes expensive cheap systems hobbyist afford,arduino computer-vision lidar,lidar computer vision arduino
627,attach wheel encoder motor,couple dc motors http //www.pololu.com/product/2202 extended motor shaft sticks diameter trouble trying think best way attach encoder disk shaft thought getting custom wheel printed make opening tight fit know small taking encoder disks pc mouse drilling problem added trying drill small hole small thing wondered anyone knows better way made disk attach find anything shaft,motor,motor
628,connections baby b-328 board,new robotics planning first purchase looking baby orangutang b-328 information microcontroller http //www.hobbytronics.co.uk/baby-orangutan-328 pin headers come unmounted soldering problem know pin connections picture board someone briefly different connections link website,microcontroller,microcontroller
629,robotic part dispense candy,complete newbie trying build simple robot dispenses candy skittles etc familiar field hard time googling know correct terms search looking piece build robotic door sorts specified amount time release candy parts use called tried robotic robotic door etc luck,design,design
630,analysis required study robotics,studying informatics interested masters robotics checking unis courses saw robotics contains analysis lot math,software,software
631,low amp fpv quadcopter motors,fpv quadcopter motors expensive ones draw lower amps regular motors squat disk shaped opposed normal motors diameter height,motor quadcopter,quadcopter motor
632,quadcopter props wood vs plastic vs carbon fiber,pro fpv builds expensive quads seem using plastic props reason,quadcopter,quadcopter
633,run program nxt download,way run program nxt download programs downloaded connecting usb cable macbook pro using nxt-g interface way run programs existing computer download increasing robot run time competing robocross science olympiad event noon thank,nxt usb,nxt usb
634,configuration space joint space,robotic manipulator picture configuration space joint space equivalent trying understand difference ...,kinematics motion-planning forward-kinematics,motion planning kinematics
635,propeller specifications mean,trying figure diameter tri-blade propellers found blade trying understand measurements length blade giving prop diameter total diameter,quadcopter design,quadcopter design
636,android phone adk arducopter apm autonomous quadcopter,project robotic lab build automous quadcopter able follow path land use onboard android phone image processing recognition part avoid send video stream control station process send commands need use indoor environment gps coordinate need phone guide quadcopter giving relative directions sec stop something normal pilot rc radio apm arduino mega adk thinking connect phone adk adk apm guide copter think options adk generate ppm/pwm signals rc use mavlink protocol best/easiest solution info -i read checked uav related websites find something close want try build new type controller use ab android phone adk stick something tested known work apm arducopter software want use phone imu trust sensors -i built quad hexa -i set connection phone adk able send commands i.e turn hover etc ... -i checked andro-copter project similar ones -i consider platforms apm something easier use -it nice keep rc receiver loop regain control quad something goes wrong,arduino control quadcopter ardupilot,control quadcopter ardupilot arduino
637,calibrate turningy esc,turnigy esc controlling avr need calibrate set range input servo tester managed calibrate problems less following user guide try procedure code esc starts beeping confused pattern enters programming mode code looks void calibrate_turningy_esc servo_set16 servo_range_ticks uint16_t ++i _delay_ms servo_set16 -servo_range_ticks uint16_t ++i _delay_ms servo_set16 uint16_t ++i _delay_ms +servo_range_ticks pulse length -servo_range_ticks pulse length timeouts measured manual calibration stopwatch checked oscilloscope output servo signal looks way expect -- seconds pulses seconds pulses pulses made mistake see answer idea change calibrate esc,c calibration esc avr,c esc avr calibration
638,minimum torque required cnc stepper motors spindle aluminium milling,planning buy cnc mechanical skeleton motors spindle controller using cnc aluminium milling specifications minimum torque requirement stepper motors spindle perform aluminium milling,stepper-motor cnc,stepper cnc motor
639,possible make diy clone makerbeam,possible make clone http //www.makerbeam.eu/ easy accessible material wood plywood osb mdf hdf others using type cnc machine mill holes rails materials give sufficient results e.g make prototype printer beams course rigid durable making prototypes good idea reference reading http //www.lowtechmagazine.com/2012/12/how-to-make-everything-ourselves-open-modular-hardware.html found http //bitbeam.org/ https //www.google.com/search q=grid+beam client=ubuntu hs=zar channel=fs source=lnms tbm=isch sa=x ved=0cacq_auoawovchmiilhdqf2myqivqzouch1chwv1 biw=1215 bih=927 http //www.gridbeam.com/ https //www.tetrixrobotics.com/,mechanism,mechanism
640,link ends timing belt loop,buy length timing belt know link ends timing belt loop found way thanks http //www.lasersaur.com/ http //www.flickr.com/photos/stfnix/8697962319/in/set-72157624491114826 ideas,mechanism,mechanism
641,rc helicopter connect computer,planing control rc helicopter computer experience programming .net use .net control rc helicopter start project,control radio-control,control radio
642,quadrocopter build tell components play,building quadrocopter trying come parts list suitable first build use learn fly quadrocopter lots crashes experiments running piloting couple questions list parts good choice build missing crucial parts components work battery strong fuel components need power current list parts frame mm propellers pairs motor brushless outrunner motor max current esc 25-30a cell count:3s-4s lipoly electronic speed controllers constant current burst current battery 2-4s lipoly battery lipoly cell constant discharge peak discharge charge plug jst-xh mah x amps charger lipoly power supply power supply input 100-240v output dc15v arduino board gyroscope arduino accelerometer arduino gps sensor arduino rc transmitter arduino rc controller,arduino motor sensors quadcopter,quadcopter sensors motor arduino
643,study want get robotics,understand broad question taking risk ask anyway robotics tell detailed diverse thorough field areas research invest time areas,research,research
644,connecting raspberry pi roomba ftdi cable,raspberry pi ftdi cable roomba roomba sci allow control roomba serial installed pyserial library pi send valid commands roomba roomba respond txd cable attached txd roomba rxd cable wired rxd roomba ground cable wired ground roomba everything respective port power going cable roomba vice-versa figure commands working error message running python code information sheet roomba sci port code import serial ser serial.serial defualt roomba baud rate ser.baudrate start sci puts safe mode ser.write chr enable full mode ser.write chr spot clean ser.write chr print,mobile-robot software wheeled-robot,mobile robot wheeled software
645,alternatives primesense depth cameras,looking low-cost depth cameras less usd range meters found softkinetic ds-311 meets requirements low-cost cameras found short range pmd vision camboard nano softkinetic ds-325 others long range high cost panasonic d-imager pmd vision camcube swissranger sr4500 imaging real.iz-1k,sensors kinect computer-vision,kinect sensors computer vision
646,gps amplifier reliable,multimedia developer searching way get gps signal inside buildings/structures amplification reliable way fix gps signal issue gps amplifier work using gps,wireless gps,wireless gps
647,benefits number propellers,planning creating quad-copter arduino created land robots aerial vehicles new looking internet different models see robots propellers seen hexacopters octocopters many propellers get hand propellers efficient thrust weight ratio propellers/arms work,quadcopter,quadcopter
648,ros android sensor driver,try connect android device computer ros http //wiki.ros.org/android_sensors_driver tutorial explains good download application android device set ros_master_uri.. run application phone shut node seen list' anyone experience similar error,ros,ros
649,val language velocity control industrial robot,bachelor programmed cnc machines working industrial robot arm learn programming languages similar val typical example instance program pickplace move p1 move p2 move p3 closei move p4 move p5 openi move p1 .end cases control robot arm similar example cleary move end-effector point given pose ... way control end-effector ee speed example move p1 time duration t1 move p1 velocity v1 seen defining joint rotational velocity way speaking command ee move p0 p1 control duration traverse necessary cases ee velocity control programming manual robot mediafire.com/ agl76pi7t7v4hjv velocity control talking joint velocity end-effector velocity ee_screw robot_jacobian*joint_vel means control ee velocity resolves control joint velocity inverse kinematic programmed module solve robot experienced robotics programming val please help stuck problem months,control manipulator,control manipulator
650,motion model noise zero,assume noise motion model consequences,kalman-filter noise ekf,filter ekf noise kalman
651,vex keeping arm angle,team made vex robot toss-up competition arm autonomous problem heavy stay going use encoders count angle arm going use code sure better way motorencoder rightmotor motor rightmotor motor leftmotor anyone recommend better solution best way untested way,arm,arm
652,color sensors used line following,build line following robot able detect selected colored line floor start following color sensors detecting specific colored line,mobile-robot sensors,mobile sensors robot
653,autonomous car,working autonomous car vehicles lasers imu deriving odometry like know efficient using existing slam algorithms example gmapping ros based blackwellized particle filter till find map high volume speed vehicle high computational time compared mobile robots important factors consider car vehicles using slam algorithm thank,mobile-robot localization slam,mobile slam robot localization
654,kinematics fixed standard wheels,equations robot angular linear velocity p p2 think wrong ... wl left wheels angular velocity wr right wheels angular velocity p example linear velocity *r*wl *2r*wr right track,kinematics wheel,wheel kinematics
655,inverse dynamics control regarded function,know inverse kinematics p \rightarrow q p desired pose end-effector q joint angles function multiple joint angle vectors q result pose p. inverse dynamics control mean mapping q \dot q \ddot q \rightarrow u u required torques experienced kind problems mapping function i.e triple q \dot q \ddot q unique solution u intuition says possible obtain solution averaging solutions,dynamics,dynamics
656,jacobian method inverse kinematics,big problem solve inverse kinematics manipulator 6-dof using jacobian method know need matrix transformation denavit–hartenberg parameters mathematician descriptions find web bit understandable love give example solve problem denavit-hartenberg parameters \begin matrix \alpha l \lambda \theta\\ var -69 \\ var \\ var -52 \\ -90 var \\ var -60 \\ var -108 \\ \end matrix values theta values get following matrix transformation values want get jacobian method values degrees matrix transformation \begin matrix -0.2557 -0.9057 -500.4789\\ -0.4206 -0.6408 \\ \end matrix greatful someone walk simple language,inverse-kinematics,inverse kinematics
657,robotics beginner,want begin robotics.so micro-controller convenient arduino pic type robots built arduino pic start line-following vehicle,arduino microcontroller beginner,microcontroller beginner arduino
658,looking way scan cylindrical objects,anyone recommend commercial solid reliable diy solution scanning cylindrical objects seen couple simple hacks flatbed scanners looking something make buy commercial project work many thanks,stepper-motor,stepper motor
659,slam vision good resources,like know good source combines slam problem vision mathematical perspective numerous resources handle slam find good source focuses slam vision,kalman-filter slam ekf,filter ekf slam kalman
660,find difference consecutive sensor readings real-time c,working micromouse sensors call s1 s2 s3 use s1 idea s1 controls left motor s3 right motor s2 detect wall front anyways trying write code c dspic30f4011 mcu read sensor values reading consecutive values compare values read happens flow code follows // initialize timer generating interrupts // pseudo-code void __attribute__ interrupt auto_psv _t1interrupt void int count //read sensor1 store value sensor1value sensor1value sensor1 int count++ //now part lost // want diff_s1value sensor1value n+1 sensor1value n // mathematical sense n+1 n // want compare new value previous sensor value diff_s1value // checks difference //duty cycle pwm controls speed motor sensor1value sensor1value n+2 diff_s1value pdc1 float k/sensor1value look line compare sensor values real-time let know wants info,c micromouse,c micromouse
661,measure displacement cheaply using accelerometer,motion known confined sphere radius resolution high enough device incorporated toy designed kids tried implementing estimated displacement drifted meters minute solution involving electrical magnetic fields important sensor costs bucks edit device attached anything mechanical movement kid moves toy,sensors imu,sensors imu
662,calculate power required drive fan,need specify fan motor combination wondered formulas work fan using crossflow fan assuming power required drive derived number blades dimensions blades including angle attack dimension barrel/wheel speed rpm possible need worked experimental measurements etc correct stack question mods please feel free edit/close,motor power,power motor
663,neuromorphic engineering robotics,boggling paper research neuromorphic engineering implications robotics applications less applied field full academic papers difficult skim many ongoing projects applying analog digital circuitry design implement neurosynaptic simulations brain consumer oriented products ibm synapse qualcomm focus digital hardware academic research standford neurogrid etc zurich human brain project focus actual brain study using analog hardware anybody following engineering field he/she spread light explain implications methodologies toolsets community detail ps regarding toolsets talking feasible engineering methodologies commit field,mobile-robot artificial-intelligence research machine-learning,mobile intelligence robot artificial research machine learning
664,help sending serial command roomba,raspberry pi hooked roomba serial port going spec noticed movement controls simple expected send bytes larger according spec go straight send work edit solution following functions import serial import time def start open serial connection global ser ser serial.serial defualt roomba baud rate start sci puts safe mode ser.write chr enable safe mode ser.write chr required command fail time.sleep makes serial command fit big-endian notation def make4 num num num z2a 4-len num q range z2a num num return def move vel rad init move command ser.write chr velocity vhex hex vel vhex make4 vhex radius vrad hex rad vrad make4 vrad send roomba ser.write vhex ser.write vrad,mobile-robot raspberry-pi serial irobot-create roomba,raspberry roomba mobile create robot irobot serial pi
665,ros operating system,ros real-time os reading architecture ros unable realize ros real-time part architecture design decision causing,ros,ros
666,call coupling infinite range rotation,situations range motion limited fact need carry power information joint past certain point cables way cables stretch either prevent movement break situate conductors concentric rings rotor shaft joint rotate keeping contact modules side call mechanism name,motor motion joint,motion joint motor
667,arduino serial mixing incoming commands,project aiming control quadruped robot android phone using raspberry pi middle device web server order make sure server rpi working fine googled got app sends specific character button clicked arduino job receive serial port blink led easy huh problem noticed leds blinking click button assigned disaster controlling robot anybody know reason solution,arduino serial,serial arduino
668,best way sense rubiks cube movements,wondering opinion best way study different motions rubiks cube want able recognize face moved direction able get direction face accelerometers/gyro many need used leapmotion kinect possible achieve using,accelerometer motion,motion accelerometer
669,capacitive touch input robot remote access ipad,buy capacitive touch input robot order remote access ipad trouble describing correct kind robot like keep lag additional high quality interface like robotic arm equipped capacitive pen moves places ipad screen based mouse array capacitive pens emulate touch user guess use squires software reflect mirror function open using shd camera robotic arm pixel sensor array array capacitive pens make sense improve design materials need build assuming ready built arm build array capacitive touch micro pens,robotic-arm,arm robotic
670,image transfer protocol wireless serial transfer,want send image wireless serial communication planning capture images using raspberry pi stm32 mcu using dcmi transfer image using wireless serial communication module xbee radio provide air data rate upto baud rate like know protocol send jpeg compressed image wireless serial data,raspberry-pi serial communication wireless,wireless pi serial raspberry communication
671,propellers dangerous,propellers super dangerous startups hex pocket drone selling drones consumers happens kid puts finger propeller movement space flying,quadcopter,quadcopter
672,connecting wifi bee xbee usb adapter,started follow get started wifi bee tutorial wifi bee v1.0 wiki page using xbee usb adapter v2.0 wifi bee-rn-xv mini usb cable listed tools needed conneted xbee usb adapter v2 computer mini usb cable wifi bee light usb adapter light followed steps till number send command wifi bee reply cmd indicate enter command mode sent command reply anything typed commands show net scan reply tried arduino server example wiki page wifi bee lighted gave strange ip address port entered ip address browser address browser find page question xbee usb adapter need extra power sources fit wifi bee think problem usb cable computer found device,wifi usb,wifi usb
673,use toa time arrival measure 3-axis location wireless device,need read location device radius sphere accuracy 5-10cm device handheld communicates using v4 chip add rf transmitter moving part stationary receivers base components look cheapest way triangulate,sensors imu,sensors imu
674,servo motor specifications take account gear ratio,looking buying servo motor application able lift 4-5 lb rotational speed servo motor listed http //www.robotshop.com/ca/en/hitec-hs755mg-servo.html states stalling torque oz-in torque rating horn servo motor torque rating actual motor gear reduction done motor strong application,motor servos servomotor,servomotor servos motor
675,sensor tracking relative position human,making robot needs track relative position human meters least degrees coverage using hitechnic irseeker v2 sensor made beacon wristband tv remote ir leds maximum distance get meters ordered watts ir leds boost power size wristband problem run cr2032 battery bought ir remote receivers sure reflection wall give false results trying possible beacon feasible using technology need modify current implementation technologies considering track relative position direction human meters least degrees coverage,sensors,sensors
676,pid control sine wave error,writing pid control toy car follows black line circuit tuned pid works high speed circuit winding section error signal looks sine wave toy car steers like go straight possible edit car sees grey points line difference darkest point middle visual range error signal output angle servo front wheels car speed motors constant desired performance oscillate amplitude less amplitude winding road actual performance car steers sine line period max amplitude steers sorry provide graphs right try add next days formula adjusting pid constants desired pid bandwidth,pid,pid
677,fit robot simulator robot,odometry data x angle real two-wheeled robot received control commands speed angular speed want code motion model c++ /ros follow trajectory given control commands kinematics look something \begin align v_ fwd control_ fwd \\ v_ ang control_ ang \\ x x_ old control_ fwd v_ fwd old angle dt \\ y_ old control_ fwd v_ fwd old \sin angle dt \\ angle angle_ old control_ ang v_ ang old dt \end align thought setting \begin align v_ fwd control_ fwd k_1 v_ fwd old k_2 v_ fwd old ^2 k_3 v_ ang old k_4 v_ ang old ^2 \\ v_ ang \text ... analog ... x angle \text unchanged \end align search minimum squared distance computed trajetory real depending values k_i mean good optimization brute-forcing randomly testing lot values way go tried approach results good guess new help appreciated,wheeled-robot kinematics algorithm,kinematics wheeled algorithm robot
678,reading data d- pins usb,optical mouse pan3504dl-tj optical sensor usb interface looked internet find tutorials using a2501 sensors lines pins sclk sdi d+ d- understand data pins take wires plug analog pins dspic30f4011 read data setting uart communication transmitting data get numbers running want read coordinates analog pins mouse aka sensor moves surface use position control robot question read coordinates optical sensor d+ d- lines analog pins,sensors,sensors
679,robotics stackexchange vs ros answer,robotics stackexchange vs. ros answer better purpose,ros robotc,ros robotc
680,denavit–hartenberg parameters robot spherical wrist,valid values denavit-hartenberg parameters called r last links robot spherical wrist reference spherical joint represented consecutive rotary joints intersecting rotation axes retrictions l_ n-2 arbitrary a=0 l_ n-1 a=0 l_ a=0 exam found internet says kuka robot spherical wrist last joint different d\neq0 last link yield spherical wrist,kinematics joint,joint kinematics
681,sourcing motors larger robots,wanting build larger robots r/c cars time issue trying find larger motors range electric wheelchair motor size found set ebay trying find reliable source make question clear looking reliable source medium size electric motors size power rating typical electric wheelchair motor,motor,motor
682,control arduino firmata hc-05,"using johnny-five library control arduino uno running standardfirmata hc-05 module want use control firmata get working used http //www.instructables.com/id/modify-the-hc-05-bluetooth-module-defaults-using-a/ configure board baud rate at+uart=57600,0,0 able send various commands read results serial monitor followed http //www.instructables.com/id/use-your-android-phone-sensors-on-the-arduino-/ allsteps wire voltage divider make arduino tx operate going hc-05 rx tried running hc-05 master slave slave-loop makes bt connection slave default run johnny-five script output ± node jf-simple.js board connecting ... board serialport connected waiting board ready standardfirmata occurred connecting board please check loaded standardfirmata arduino board closing firmata serialport more-than-triple-checked everything uploaded many times firmata works fine usb able get working hc-06 missing something good debugging techniques figure connect firmata",arduino troubleshooting,troubleshooting arduino
683,atlas robot reference,boston dynamics keeps making great robots dont see papers publish find papers people using atlas robot find original paper detailing robot mechanics designs reference robot use youtube videos,design mechanism humanoid,design humanoid mechanism
684,software libraries parsing sensor data,"software libraries assisting general problem parsing stream sensor data use various sensors lidars gpsins units provide messages proprietary binary formats write drivers lot similar concepts used sensor general purpose datagram messages consisting e.g start/end sentinels length specifications checksum variety well-defined message formats payload ends tedious work develop driver time love solution write packet/message specifications format library finds extracts valid messages stream provides simple data structure format fussed language want general purpose datagram parsing library lot customisation sensors odd format parsing initial configuration start data stream something want library processing data real-time used part driver/application everything find basic low level tools interpreting individual elements lots time spent extracting individual elements specific i.e parsers written particular protocol concrete example consider nmea messages basic outer datagram starts followed message name comma separated data ends checksum line terminating character data ascii needs parsed binary computational use outer datagram allows validation removal incomplete/corrupted messages message name content parsed consumption field names specified ease use message turned gpgll,4533.21 n,17739.11 w,113215.22 a*31 programmatic data structure containing latitude longitude utc timestamp validity",sensors software driver,sensors driver software
685,need troubleshooting help regarding arduino uno hc-06 connection problem,bought arduino uno hc-06 hooked connections bluetooth → arduino gnd → gnd arduino tdx → rx →1 rdx → tx → pictures problem seem search connection laptop phone something wrong,arduino,arduino
686,differential drive trajectory following control,robot platform differential drive knows position orientation lets say space robot moves known static obstacles task move robot point heading alpha stands point b heading beta map lets say obtain reasonable trajectory relation turning abilities robot robot sensors inert general approaches controlling robot follow path course kept mind final task reach point b colliding obstacles perfect trajectory following hope question general,control pid navigation differential-drive,control navigation differential pid drive
687,ask lpc1343 arm cortex m3 related questions,beginner robotics embedded systems lot questions related toolchain things going debug connect module tried http //electronics.stackexchange.com/ work ideas get help lpc1343 related questions,microcontroller arm embedded-systems,microcontroller arm embedded systems
688,arduino operational frequency,wanted clarify basic arduino concept put code arduino board double start endtime long int counter void setup serial.begin start micros void loop endtime micros counter++ //point endtime start serial.println counter counter start micros ... see value serial monitor variable moment put heavy calculation value drops expected guess question way push operational frequency lies optimising code/calculation way get faster execution,arduino,arduino
689,function pidcontrol pragma config directive robotc,trying sync motors vex cortex based robot mixed success using encoders position control noticed motor setup directive pragma config motor port2 motora tmotorvex393 pidcontrol encoder encoderport i2c_1 parameter pidcontrol find documentation see encoder documentation page encoder provides velocity output built api question fold pidcontrol directive use encoder control speed motors,robotc,robotc
690,suitable model four-wheeled differential drive rigid-body robots,found 2-wheeled robots suitable model two-wheeled robots 4-wheeled setting,wheeled-robot kinematics,kinematics wheeled robot
691,building servo tester measure peak/stalled amp draw,finding data stalled use load free amp draw servos seems impossible want build/create servo tester want know amps servo drawing idle movement load stalled/full position think cover bases relative amp usage servo please let know missing questions going need power supply exact seems standard measurement voltages need way measure amp draw need way control servo movement missing anyone suggestions please let know thanks help seems uncharted waters rc hobby area someone robotics field path,rcservo,rcservo
692,explain bandwidth measurement noob,working system measuring force specification bandwidth measurement trying explain bandwith mom explain easy way explain term bandwidth measurement someone control engineering background,control,control
693,quadrocopter build parts look fine,brand new quadrocopter building start building quad done little bit research thinking buying following parts kk2.1 hobbyking flight controller turnigy h.a.l quadcopter frame x ntm prop drive 35-30 turnigy turnigy plush esc slow fly prop left slow fly prop quad power dist board turnigy lipo think complete builds instructions recommend thanks,motor sensors quadcopter multi-rotor,quadcopter rotor sensors multi motor
694,much drawn max battery,using brushless motors octocopter motor run use batteries high c number needed running motors load draw battery max used run hot many ampere hours drawn battery empty many car batteries drawn stated capacity need charged,battery,battery
695,meant speed profile,researching robots micro mouses come people taking generating speed profiles calculate profiles acceleration deceleration turning etc profile seem find meant profile sense need,control,control
696,raspberry pi wheel robot,want create wheel remote controlled robot worked lot logic regards balancing started read motor control arduino vs beagleboard black vs raspberry pi multitasking full linux os problem need concerned application expect adjust motors least times second think slight variation update loop interval problem face problems need pwm way plan make robot work using accelerometer reference robot work keep direction remote control adjust readings balancing loop react robot falling accelerate wheels,arduino control raspberry-pi real-time,control real raspberry time arduino
697,response time arduino nano,want make circuit powers transistor sound set threshold reached trigger flash high speed photography long response time,arduino,arduino
698,best way fuse measurements imu lidar encoder information recursive bayesian filter,wheeled drive differential drive robot driving hall way flat robot turns spinning place traveling resulting direction slam algorithm need run online robot takes measurements strap imu/gyro measuring ax ay az wx wy wz ax refers acceleration x direction wx measures angular acceleration x-axis lidar scans hall way 270-degree arc measures ranges angles know way discernable features corners need find best way fuse proposed action measured encoder imu lidar data makes sense fuse yaw imu encoder data get better sense heading incorporate lidar data essence appropriate measurement model incorporate noise motion model adding gaussian noise σ addendum orthogonal question confusing using particle filter slam little confused represent uncertainty angular acceleration particles see options separate navigation filter using ekf anything find vector best-estimate angular acceleration matrix use matrix absolute truth particle filter drift particles uncertainty angular acceleration incorporate uncertainty particle drift option appears sensible sure principled way,kalman-filter slam particle-filter,filter slam particle kalman
699,rigid-prop quadcopter hover upside-down,small quadcopters use rigid rotors fixed pitch principle imagine possible rigid-prop quadcopter hover upside-down requires reversing direction rotation motors different way standard single-rotor model helicopters hover upside-down continuing spin rotor direction moving swash plate give negative blade pitch possible rigid-prop quadcopter hover upside-down build quadcopter switch flying upright flying upside-down mid-flight normal quadcopter designed fly right-side-up related run bldc motor backwards damage,motor quadcopter multi-rotor,quadcopter rotor multi motor
700,dc motor encoder,anyone help dc motor encoder part tried searching datasheet short page spec get encoder pulse/revolution connection bottom guess driving motor say nothing connections wires,motor quadrature-encoder,quadrature motor encoder
701,kinect point cloud pcduino work,newbie mircroprocessors pcduino example wanted know kinect integrated pcduino go buy board know terms connectors etc required concern regarding hardware required run kinect elaborate explain current system system working laptop uses kinect extract unorganized point cloud data using processing ide interacts kinect using openni drivers matlab code processes information detect obstacles specific objects done using c++ want build system robot using pcduino processing module means kinect connect pcduino using usb ports power kinect using battery converted power adapter pcduino run ubuntu think convert laptop code ubuntu requires concern problems associated using depth sensors mini pc boards terms hardware capabilities mini pc boards know mini pc boards fast pc processing slower concerned speed atleast time problem encountered using kinect pc point cloud drivers openni initiate point cloud data stream gpu pc exact code runs pc dedicated gpu know pcduino gpu chip opengl es2.0 kinect work searched online closest thing find elaborate integration raspi asus xtion works picky boards anything work kinect fine pcduino arduino headers built wi-fi etc additional pointers helpful please let know need elaborate anything thanks advance,microcontroller kinect,kinect microcontroller
702,questions quadcopter build,planning order parts build questions parts list crossing fingers compatible sure questions need power distribution board flight controller attach radio receiver,quadcopter microcontroller radio-control,control microcontroller radio
703,piezoelectric sensors crushed,found load sensors piezoelectric measure small weights order grams need ... robot bursts high pressure bursts need measured ... wash pressure appears kg question sensors likely break fatigue realize piezos measure deformation ... big load order try ...,sensors,sensors
704,wine yard robotics,friend acquired small wine yard much work tending harvesting grapes musing enlist robotic help vine stocks connected stiff wire dangling machine feasible looking references/inspirations agricultural robotic vine assistant ideas,mobile-robot robotic-arm,mobile robot arm robotic
705,removing quadcopter drift side,wrote quadcopter firmware based older code code stabilize copter equilibrium model behaving nice control laptop noticed copter hovering side controlled likely wind balanced turbulence idea gps accelerometer data implement function help hold position likely work hold altitude function changes pitch roll change height changed added routine allow hold altitude someone experiences mean avoiding side drifts model software problem opinion know position change wanted remote control hard localize correct position calculate distance caused drift gps precise void hold_altitude int_fast16_t ifl int_fast16_t ibl int_fast16_t ifr int_fast16_t ibr const int_fast32_t rcalt_m // enhance performance // function needed autonomous flight mode // hold altitude // gps auto-navigation _recvr.m_waypoint.m_emode == gpsposition :nothing_f return // return estimated gps barometer float fcuralti_cm _hal_board.get_alti_m // estimate current climb rate float fbaroclimb_cms _hal_board.get_baro .climb_rate_ms float facclclimb_cms _hal_board.get_accel_ms .z // calculate float faltstabout _hal_board.m_rgpids pid_thr_stab .get_pid fcuralti_cm float rcalt_m*100 float fbaracclout _hal_board.m_rgpids pid_thr_accl .get_pid faltstabout fbaroclimb_cms float faccacclout _hal_board.m_rgpids pid_thr_accl .get_pid faltstabout facclclimb_cms int_fast16_t ialtoutput _hal_board.m_rgpids pid_thr_rate .get_pid faltstabout fbaracclout // modify speed motors ifl += ialtoutput ibl += ialtoutput ifr += ialtoutput ibr += ialtoutput copter control // stabilise pids float pit_stab_output constrain_float _hal_board.m_rgpids pid_pit_stab .get_pid float rcpit vatti.x -250 float rol_stab_output constrain_float _hal_board.m_rgpids pid_rol_stab .get_pid float rcrol vatti.y -250 float yaw_stab_output constrain_float _hal_board.m_rgpids pid_yaw_stab .get_pid wrap180_f targ_yaw vatti.z -360 // pilot asking yaw change feed rate pid overwriting yaw stab output abs rcyaw yaw_stab_output rcyaw targ_yaw vatti.z // remember yaw pilot stops // rate pids int_fast16_t pit_output int_fast16_t constrain_float _hal_board.m_rgpids pid_pit_rate .get_pid pit_stab_output vgyro.x -500 int_fast16_t rol_output int_fast16_t constrain_float _hal_board.m_rgpids pid_rol_rate .get_pid rol_stab_output vgyro.y -500 int_fast16_t yaw_output int_fast16_t constrain_float _hal_board.m_rgpids pid_yaw_rate .get_pid yaw_stab_output vgyro.z -500 int_fast16_t ifl rcthr rol_output pit_output int_fast16_t ibl rcthr rol_output pit_output int_fast16_t ifr rcthr rol_output pit_output int_fast16_t ibr rcthr rol_output pit_output // hold altitude hold_altitude ifl ibl ifr ibr rcalt hal.rcout- write motor_fl ifl hal.rcout- write motor_bl ibl hal.rcout- write motor_fr ifr hal.rcout- write motor_br ibr,arduino quadcopter,quadcopter arduino
706,compliance control single link robot matlab,active compliance control robotics joint used write program simulate compliance control matlab single robotic link single robotic joint develop algorithm torque control sense torque give feedback bldc motor supposed controlled torque unclear understanding things lets say single joint link systems system behave applied compliance control algorithm joint test mean apply external torque understand compliance control mode related paper http //www.thehandembodied.eu/pdf/iccas.pdf,control robotic-arm,control arm robotic
707,mcbl controller rs232,trying use mcbl controller faulhaber control motor trying program sort driver linux using serial connection libserial seem working using usb rs232 converter wondering supported libserial read yes anyone experience,serial communication,communication serial
708,passive ego-motion estimation vs active,research ego-motion estimation positioning space found systems based active rgb-d sensors kinect understand sensors provide greater accuracy requires less computational resources systems used example augmented reality robot navigation going solve problem interference signals different systems operating space many people wear ar glasses active sensors interfere big commercial projects use passive visual odometry multiple camera units imu sensors found good papers topic found commercial application technology going make research passive odometry method ar problem active depth sensors described earlier upd main question passive odometry based video flow analysis imu worth make deep research topic active sensors future signal mix big deal passive odometry dead end kind technology useful make research useless technology ...,kinect sensor-fusion odometry,kinect odometry fusion sensor
709,measure torque value servo,know tool measure oz-in torque want trust servo manufacturers state site torque values want test anyone know tool use used fishing scales need something sensitive units small oz-in thanks,servos,servos
710,autonmous surveillance vehicle,planning autonomous terrain surveillance robot using raspi better option computer vision ultrasonic sensing avoid obstacles want transmit video recording base station,raspberry-pi computer-vision ultrasonic-sensors,raspberry computer ultrasonic sensors pi vision
711,decide length robotic arm base torque,designing remote controlled robot base wheels simple wheels base third ball wheel front robotic arm gripper hold objects designed arm want ask calculate length arm base robot torque motor use please suggest better solution designing robot.i robot enthusiast designing robot first time,motor control design robotic-arm,control design arm motor robotic
712,altitude hold quadcopter accelerometer barometer,wonder implement altitude control quadcopter atm barometer/gps accelerometer barometer gps straight implemented precise slow accelerometer readout remove constant m/s² acceleration low pass filter take data calculate climb-rate cm know speed approximation way great know better approach calculation motor speeds use atm pids stab rate coded example shown much testing believe work smooth nice way e. g. speed calculated accelerometer use climb-rate barometer low altitudes small changes need likely accelerometer ardupilot seems use different way third pid acceleration believe calculate height difference use stab-pid barometer climb rate accelerometer calculate acceleration data output know methods someone know exact implement barometer accelerometer altitude hold function mean sure ideas correct post options later pids m_rgpids pid_thr_stab .kp // altitude hold m_rgpids pid_thr_rate .kp // altitude hold m_rgpids pid_thr_rate .ki // altitude hold m_rgpids pid_thr_rate .imax // altitude hold code altitude hold // stabilizing code done float fcuralti_cm _hal_board.get_alti_m // barometer gps data float facclclimb_cms _hal_board.get_accel_mg_ms .z // accelerometer output cm gravitational const corrected // calculate difference current altitude altitude wanted float faltstabout _hal_board.m_rgpids pid_thr_stab .get_pid fcuralti_cm float rcalt_m*100 // rate climb rate accelerometer int_fast16_t ialtoutput _hal_board.m_rgpids pid_thr_rate .get_pid faltstabout facclclimb_cms // modify speed motors ifl += ialtoutput ibl += ialtoutput ifr += ialtoutput ibr += ialtoutput,sensors quadcopter accelerometer ardupilot,quadcopter sensors ardupilot accelerometer
713,need help calculating thrust quadcopter motors,trying calculate lifting capability quadcopter motors tried using ecalc battery using equations keep mind calculations relevant details lipo esc motor brushless propeller help appreciated thanks,quadcopter,quadcopter
714,using radio communicate ardupilot data,trying send data pc arduipilot used normal usb connection send recurring string const ap_hal :hal hal ap_hal_board_driver void setup hal.uarta- begin void loop hal.scheduler- delay hal.console- println recd_string receive string fine open serial monitor baud bits/sec remove usb port plug radio module ardupilot pc gives garbage know radios use mavlink communication protocol wondering possible change protocol use normal spi receive data receive connected usb possible way convert garbled data radio module useful string appreciated someone help,ardupilot radio-control,control ardupilot radio
715,set canopen node id ingenia pluto dc servo drive,anybody know configure node id ingenia pluto dc servo drive got request support team somebody familiar drive boards ingenia motionlab ship documentation motionlab user manual site date looking hardware documentation turns info motionlab documentation instructions previous versions longer seem,control can,control
716,options thin light source e.g led,looking make buy something resembling led thin less cheap mass production suggestions,arduino electronics,electronics arduino
717,architecture testing autonomous flight sensors,designing simple autopilot software top ardupilot goal interface raspi top ardupilot mega apm stuck setting simulation environment using v-rep gazebo quadcopter basic sensors advanced sensors basic sensors talks advanced sensors talks autopilot software trying wrap head feasible setup test software using ardupilot mega hardware-in-the-loop planning stages simulation stage simulate quadcopter physics gazebo/v-rep run ardupilot software autopilot software vm sure do-able stage simulate quadcopter physics computer run autopilot software vm run hardware-in-the-loop fashion stage deploy autopilot raspi interface apm run hardwares hardware-in-the-loop fashion,quadcopter simulator,quadcopter simulator
718,random number generation particle filter,implemented bootstrap particle filter c++ reading papers implemented mouse tracker performed used normal gaussian weighting exam extended algorithm track face using features local motion hsv bin histogram example weighing function becomes probability motion x probability histogram correct incase correct confused resampling function moment resampling function follows particle n compute cdf generate random number gaussian x update particle index x repeat n particles re-sampling function moment note second step using random number gaussian distribution get index weighting function probability motion histogram question generate random number using probability motion histogram random number gaussian ok,mobile-robot localization particle-filter tracks,particle localization mobile robot filter tracks
719,battery system mains voltage attached,working project mains voltage disconnected system run possible safe shutdown desired laptop battery system mains voltage connected charge battery power system mains mains voltage disconnected power system battery prevent battery system supplying current batteries discharged certain voltage prevent damage name type system name feature looking look chargers matters system looking lithium battery options,power battery,battery power
720,map representation gps coordinates degrees,want implement gps navigation quad-copter calculate filter gps coordinates latitude longitude degrees believe easiest approach calculate change heading quad-copter current attitude destination point let fly straight turning sure representation latitude/longitude-gps coordinates round map system calculating heading change big expected error none,navigation gps,navigation gps
721,calculate angular motion robotic arm,robotic consists joints sections varying width connected considering know much bent length section location space local coordinates time determine much joint rotate goto position position a. b defined world cartesian coordinates joint move terms joints move turns,kinematics robotic-arm,kinematics arm robotic
722,speed,trying better understand dynamics flight multirotors assuming motor/propeller combinations capable propeller pitch speed say speedmax= mph horizontal flight quadcopter pitch certain angle let say alphap horizontal alphap say degrees neglected quadcopter capable max theoretical speed sin speedmax seems alphap go way degree quadcopter flying plane point propellers produce upward thrust maintain copter given wing loading available plane drag neglected factors optimum alphap depended angle maximum speed,quadcopter,quadcopter
723,multiple position estimates fusion,system separate subsystems estimating robot positions subsystem composed cameras used detecting markers robot carrying outputs estimates robot position orientation second subsystem system located robot measuring speed points robot integrating get estimate robot position orientation tracking points first system less accurate second system drifts first system gives output second second gives output 100-200 times second assume better approach reset position system estimate accurate accumulated position second sensor system fuse new data first system question estimates first system better way pure average happen estimates third different meaning wrong fusion algorithms recommend use system know kalman filter trouble figuring use systems output data different frequencies hope question clear best approach fuse estimates correct accurate estimate thanks,sensors localization kalman-filter sensor-fusion,kalman localization filter fusion sensors sensor
724,precision expect ultrasound-based localisation system,considering building absolute indoor robot-positioning system based ultrasound time flight transducers ordinary narrow-band khz ones based experience best exactitude precision achieve system aware answer question depend many factors hardware software applicable asking performance solution intrinsic limitations technology,localization ultrasonic-sensors,sensors ultrasonic localization
725,implement distance proximity sensor wider range,line robotics observing environment trying implement proximity sensor sense objects front least -30^ \circ \space \space+30^ \circ direction propagation ways think multiple infrareds con spacious fast-motor con expensive money time-complexity wise using proximity sensor distance capability,sensors,sensors
726,h bridge rover,building wheeled set wheels work set wheels run current side vary 3a-15a blocked rotor want make h-bridge controlling direction speed use pwm require h-bridges copper track thickness use proteus making design go manual soldering replacing tracks wires anybody suggest design easy design protection circuit mcu pins isolation suggest suitable motor controllers ti company apt problem,motor control,control motor
727,pros cons fictitious play,looking articles topics fictitious play learning algorithms presentation found pros cons book something benefit thanks,algorithm,algorithm
728,scara arm lead screw choices,thinking building scara arm lift moderate loads high degree accuracy want quick inexpensive z axis gantry thinking using lead screw dual linear rail trouble certain linear velocity best method choosing lead screws associated given desired linear velocity nema stepper motor driving,robotic-arm mechanism,arm mechanism robotic
729,good pose estimation method high precision per-axis solutions short range,trying get pose solution object cm fixed point want putting much special hardware object extra hardware fixed side fine looking general methods fiducial markers several software packages different types markers able find information regarding precision accuracy short-range pose sensing ultrasonics found commercial systems pose sensing e.g hexamite expensive require put transmitters object,sensors ultrasonic-sensors pose,sensors pose ultrasonic
730,difference motor max velocity vs. profile max velocity,can301/402 provides max motor speed max profile velocity profiled motions maximum speed limited lower values non-profiled motions maximum speed limited max motor speed intended max profile velocity providing max motor speed using,motor control can,control motor
731,analytical solution inverse kinematics dof serial chain,let take dof robotic structure consisting dof global structure position dof local structure orientation endeffector last axis local structure coincident point inverse kinematics solved decomposing position- orientation-problem possible solve inverse kinematics last axis coincident point read several papers claim due high non-linearity trigonometric functions motion complexity 3d-space dof serial chain solved anybody know right,inverse-kinematics,inverse kinematics
732,use scan command arduino wifibee,want find available wifi networks tutorial command scan send coolterm program pc http //www.dfrobot.com/wiki/index.php/wifi_bee_v1.0_ sku tel0067 want write program arduino operation done,arduino wifi,wifi arduino
733,using robotic simulator prediction step probabilistic localization approaches,probabilistic localization approaches kalman monte carlo benefit accurate prediction step accurate prediction step accurate belief robots pose approaches probabilistic motion models applied robot dynamics difficult model approaches rely dynamic models order increase accuracy wondering it’s reasonable utilize robotic simulator v-rep gazebo prediction step advantages see following robots kinematic solved default modeling robotic simulator robots dynamics taken account nonlinear behaviors slippage collision modelled certain extend robots workspace taken account modeling environment robot drives previous models predict wall won’t happen robotic simulator shown advantages hope achieve accurate prediction problems using robotic simulator start ensure real time behavior delay prediction due communication simulator looking papers pick idea couldn’t find approaches similar idea reasons nobody using robotic simulator prediction opinions proposal,mobile-robot localization motion simulator,mobile motion simulator robot localization
734,different sensing approaches used current batch indoor cameras,aware primesense camera powering kinect advanced sensor types available range example sort game-changer structured light techniques decent flash lidar cameras exist,sensors kinect cameras lidar,kinect sensors cameras lidar
735,robot start-up movement problems,created robot using robot chassis kit hobbyking first testing robot connected usb power source wheels lifted ground everything seemed tried power robot batteries encountered problem starting movement robot starts move power power push little bit order start driving newbie know power source battery motors problem motors torque min chassis gear ratio power motors used connected li-ion batteries dc-dc regulator limits voltage output power regulated dual h-bridge motor driver according specifications maximum free running current single motor read stall current 3-8x running current problem robot problems starting-up driving know motors powerful move robot power source problem obstacle solved appropriate power regulation ramp solve problem,motor battery movement,battery motor movement
736,maximum distance using ultrasonic sensor arduino,maximum distance say car measure using ultrasonic sensor compatible arduino sensor ultrasonic measure distance car say upto meters used arduino,arduino ultrasonic-sensors,sensors ultrasonic arduino
737,name part describing,looking part particular function able move axis tell force exerted kind piston moves engine axis movement something pushing top piston need know hard pushing difference piston constantly moving forth needs able receive commands move x centimeters remain stationary new position know make involved sensor something exert force name described machine edit response matthew gordon piston move 0-6 centimeters form factor small smaller palm hand smaller=better forces deal comparable forces exerted bicycle chain math/cs person engineering know technical terms kinds things top head real time sensor reading volume data processed phone working conjunction wireless communication look latency requirements sure,sensors mechanism force-sensor,sensor sensors force mechanism
738,advantages using denavit-hartenberg representation,wants model kinematic chain particular define frames attached body common use denavit-hartenberg parameters advantages representation understand interest normalized representation impact algorithms performance algorithm trivial implement gain expect instance fixing reference frames hands i.e done many robotics formats urdf,kinematics,kinematics
739,computing inverse kinematic jacobian matrices dof manipulator,trying calculate inverse kinematic dof manipulator task target point p_ target x z ^t orientation o_ target b c ^t given want get angle configuration q q_1 q_2 q_3 q_4 q_5 q_6 ^t robot method try implement jacobian method transposed jacobian matrix guide followed pseudocode using pseudoinverse jacobian matrix used transposed try compute jacobian matrix get solution endless loop retrieve jacobian private void var deltatheta var newaxisconfiguration new axisconfiguration this.currentaxisconfiguration.joints deltatheta this.currentaxisconfiguration.joints deltatheta this.currentaxisconfiguration.joints deltatheta this.currentaxisconfiguration.joints deltatheta this.currentaxisconfiguration.joints deltatheta this.currentaxisconfiguration.joints deltatheta var epos this.kinematic.calculatedirectkinematic newaxisconfiguration var column column this.columns column++ this.m column this.currentpos.point.x epos.point.x deltatheta this.m column this.currentpos.point.y epos.point.y deltatheta this.m column this.currentpos.point.z epos.point.z deltatheta this.m column this.currentpos.orientations .a epos.orientations .a deltatheta this.m column this.currentpos.orientations .b epos.orientations .b deltatheta this.m column this.currentpos.orientations .c epos.orientations .c deltatheta private void var pematrix calculatejointpositions var calculatez var column column this.columns column++ double p_p new double var row row zmatrix.rows row++ p_p row pematrix.m row this.columns-1 pematrix.m row column this.m column zmatrix.m column p_p zmatrix.m column p_p this.m column zmatrix.m column p_p zmatrix.m column p_p this.m column zmatrix.m column p_p zmatrix.m column p_p this.m column zmatrix.m column this.m column zmatrix.m column this.m column zmatrix.m column /// summary /// calculate positions joint /// /summary /// returns matrix joint coordinate joint. /returns private matrix calculatejointpositions matrix jointpositions new position pos var joint= joint this.currentaxisconfiguration.joints.count joint++ pos this.kinematic.calculatedirectkinematic this.currentaxisconfiguration joint jointpositions.m joint pos.point.x jointpositions.m joint pos.point.y jointpositions.m joint pos.point.z return jointpositions private matrix calculatez // z0^t-z1^t-z2^t- ... -z6^t var ksend kinematics.translaterobottoworld var new matrix var column column this.currentaxisconfiguration.joints.count column++ var row row zmatrix.rows row++ zmatrix.m row column math.round ksend.m row ksend ksend.multiply kinematics.translatecoordinatesystem robo.theta column this.currentaxisconfiguration.joints column robo.d column robo.alpha column robo.a column return implementation pseudocode jacob jacobimatrix.getjacobi currentposition currentaxisconfiguration jacobitranspose jacob.gettransposematrix // deltae x2-x1 y2-y1 z2-z1 a2-a1 b2-b1 c2-c1 deltae position .getdistancevector currentposition targetposition deltathetas jacobitranspose.multiply deltae scale beta var axis axis deltathetas.rows axis++ currentaxisconfiguration.joints axis += deltathetas.m axis currentposition this.calculatedirectkinematic currentaxisconfiguration math.abs position.distance currentposition targetposition epsilon beta epsilon problems transformation fine behaves good kinematic opinion jacobian matrix somehow wrong sure correct put orientation data numerical calculation analytical computation clue wrong thankful advice explicit example calculating jacobian helpful,inverse-kinematics manipulator,inverse kinematics manipulator
740,possible record incoming data realterm,trying test sensor circuit working using realterm send commands microcontroller returning value read sensor logging file realterm noticed commands sent showing data returned wondering anyone knew way record incoming data using realterm outgoing commands suggestions appreciated unfortunately way using realterm company policy,serial,serial
741,nxt segway problem need advice/help,attempting build segway robot using gyrosensor accelerometer trouble getting robot remain standing reason identify problem know gyroscope api lejos nxt platform http //www.lejos.org/nxt/nxj/api/ using timestamps angular velocity project attempts infer angle robot api suggests order accurate polled times second average problem polling gyrosensor takes polling accelerometer takes dimensions robot height wheel circumference radius wheel given circumference accelerometer mounted top robot ground axis rotation order keep correction amount linear opposed trying correct arbitrary angle translate angle robot distance travel ground robot bit naive open suggestion horizontal distance calculated using right-angle triangle angle robot top hypotenuse clear horizontal distance top robot bottom robot main concern amount drift gyroscope seems experiencing given fact java software package impossible poll times second amount error accumulated gyroscope large implemented pid control system thing clear respect system integral derivative error calculated given set values say last error measurements recorded amount past errors recorded variable pid constants variable speed wheels variable seems problem begs kind automated optimization set speed rpm max nxt servos take past errors calculating integral derivative error possible optimize pid constants variables tuned thanks insight problem,accelerometer gyroscope nxt,nxt gyroscope
742,differential drive pid controller,differential drive robot works fine good pd parameters driving say m/s speeds m/s starts wobbling good strategy controller able cope whole speed range m/s edit april robot line follow robot see related question robot following trajectory problem talked developers differential drive robots facing similar issues e.g told need adjust pid parameters battery charged hence robot drives different speed know guys youtube interested robot link helpful https //www.youtube.com/watch v=vmednphxleo pid parameters p pid controller programmed using c // note inner wheel turns backwards narrow curves // cte -128..128 depending robots position // relative trajectory black line /** execute pid controller update motor speeds */ void pid int32_t steer int32_t cte cte get_segment_center // compute pid equation steer int -p float cte -d float cte diff_cte float period_ms -i float int_cte steer -5 // turn left -1 uxbot_move max_speed steer max_speed steer // turn turn uxbot_move max_speed max_speed steer // go straight turn uxbot_move max_speed max_speed diff_cte cte int_cte += cte,pid differential-drive,differential pid drive
743,turn rover degrees using wheel encoders,wheel dc rover optical wheel encoders executing rover turns controlling direction wheel motion side rover turn left wheels left rotate backwards right wheels rotate allows rover remain position turning directions reversed right turn use sensors execute degree turn possible fusing additional sensor data,sensors motion,motion sensors
744,throttle pid mixing motor speed,writing quad copter software sure best way map throttle pid inputs esc power throttle range 0-1 pid outputs 0-1. esc range mapped motor speeds _motorpower map _rcconstrainedcommands _ratepidcontrolleroutputs _ratepidcontrolleroutputs _ratepidcontrolleroutputs _motorpower map _rcconstrainedcommands _ratepidcontrolleroutputs _ratepidcontrolleroutputs _ratepidcontrolleroutputs _motorpower map _rcconstrainedcommands _ratepidcontrolleroutputs _ratepidcontrolleroutputs _ratepidcontrolleroutputs _motorpower map _rcconstrainedcommands _ratepidcontrolleroutputs _ratepidcontrolleroutputs _ratepidcontrolleroutputs works quad level i.e pid outputs apply full throttle map esc power get quarter power throttle max get max power throttle half get half power pid values etc anyone help thanks joe,motor quadcopter pid pwm esc,quadcopter esc pwm pid motor
745,datasheet taos gy-31,someone please post datasheet colour sensor mentioned tcs3200,sensors,sensors
746,know motor/esc/propeller combination work quadcopter,preparing first quadcopter build need know tell motors/esc's/propellers work like know tell motors capable much thrust like put camera copter find anywhere straight answer question ones think ones want esc https //www.hobbyking.com/hobbyking/store/__25365__turnigy_multistar_30_amp_multi_rotor_brushless_esc_2_4s.html motor https //www.hobbyking.com/hobbyking/store/__28112__turnigy_d3530_14_1100kv_brushless_outrunner_motor_us_warehouse_.html propeller copter needs able carry camera ~go pro tldr match esc's/motors/propellers tell get job done esc electronic speed control,quadcopter brushless-motor esc multi-rotor,quadcopter rotor multi esc motor brushless
747,position object data tracking,class project working weight stack trying measure position moving weight stack value weight based calibrated/preloaded position stack load sensor e.g think stack plate weights sensor knows plate plates etc weight stack base camp chip/sensor/laser feet weight stack need anything strong requirement small/unobtrusive cost effective looked options engineer right track research check,sensors,sensors
748,crimp solder lipo battery,planning second hobby robot planning using lipo battery idea solder 3-pin header connect electronics anyways solder crimp terminals attach pack solder leads keep mind decent background hobby electronics starting robotics soldering skills decent thanks,battery,battery
749,sell create europe,trying find good beginners platform use ros came irobot create surprise sell europe,mobile-robot ros irobot-create,mobile create ros robot irobot
750,pid output reach setpoint enough,developing/tuning software pid quadcopter trying stabilise pitch angle using front motors looking kp motors control resolution input variations need reach threeshold effect process output reach setpoint enough requirements steady-state error aka droop hunting range centered setpoint wide requirements instability oscillation random drift needs large pid attempts correct lower kp output needs diverge setpoint error big pid attempt correct higher kp pid oscillates find reasonable compromise thinking applying cuberoot function similar error feeding pid way small errors significant enough pid attempt correct large errors reduced trigger oscillations suppose someone good solution better alternatives steady-state error aka droop oscillation issue tell please suggest using ki kd edit clarified problem description suggested using cuberoot logarithm bad idea thanks marc,pid,pid
751,minimum number rc channels required control quad copter,blogs/website say need minimum channels pitch roll throttle yaw channel throttle second channel turning right left third channel pitching fourth rolling left right looking rc transmitter see time change maximum sets data right joy stick want send rudder throttle information sent packet understanding channels sufficient control quad copter please provide clarity,quadcopter radio-control,quadcopter control radio
752,radio-control dozens kilometers mountains,wondering technology use transmit data controlling robot receiving video dozens kilometers mountains,radio-control,control radio
753,robot control law control theory vs optimal control,robot say planning particular pros cons choosing classical control theory optimal control lqr example,control motion-planning,control motion planning
754,role neuromorphic computing quantum computing field robotics ai,asked similar kind question time neuromorphic engineering robotics many things come point revelation road-map neuromorphic computing revealed proposes analog way computation solve advanced computer vision problems ibm qualcomm working similar project digital side memristor technology slated come question asking robotics community working adopt technology question opens domain pressing questions answered neuromorphic computers good mission critical precise robots mars use neuromorphic systems avionics systems neuromorphic processing going help solve problems nlp knowledge processing quantum computers similar neuromorphic computers ideology neuromorphic robots gain traction digital hardware required nice someone explain points answers various related research papers cryptic,microcontroller computer-vision machine-learning research,microcontroller research machine computer learning vision
755,click button short vs long button presses arduino,using clickbutton library arduous problems implementing stand code runs servo clockwise sure wrong want servo pressed short period time move according exponential function pressed according period time move regular pace include servo.h include clickbutton.h servo myservo // create servo object control servo // constants // pins const int crservo // sets pin servo const int buttonpincw // sets pin button cw clockwise focus const int buttonpincc // sets pin button cc counterclockwise focus const int ledpinb // sets pin led const int ledping // sets pin led const int ledpinr // sets pin led const int // slow // servo properties const int crspeeddefault // stay position motor turn const int crspeedcw // turns motor full speed clockwise const int crspeedcc // turns motor full speed counter-clockwise // set button states clickbutton buttonpincw low clickbutton buttoncc buttonpincc low void setup myservo.attach crservo // attaches servo pin servo object //pinmode buttonpincw input // sets button input //pinmode buttonpincc input // sets button input pinmode ledpinb output // sets led output pinmode ledping output // sets led output pinmode ledpinr output // sets led output crspeeddefault // default servo crspeeddefault startup int startup //blinker ledpinb //blinker ledping //blinker ledpinr void blinker int count int pin int x x count x++ digitalwrite pin high delay digitalwrite pin low delay void loop buttoncw.update buttoncc.update int buttoncwclicks int buttonccclicks buttoncw.clicks buttoncwclicks buttoncw.clicks buttoncc.clicks buttonccclicks buttoncc.clicks //buttonstatecw digitalread buttonpincw //buttonstatecc digitalread buttonpincc // clockwise rotation buttoncw.depressed == true buttoncwclicks == digitalwrite ledpinr high float speed crspeedcw serial.print clockwise-rotation \n int i++ speed += float crspeeddefault speed serial.print speed serial.print \n myservo.write int speed delay myservo.write crspeedcw buttoncwclicks == -1 digitalwrite ledpinr high myservo.write crspeedcw buttoncc.depressed == true buttonccclicks == digitalwrite ledping high float speed crspeedcc serial.print counter-clockwise-rotation \n int i++ speed += float crspeeddefault speed serial.print speed serial.print \n myservo.write int speed delay myservo.write crspeedcc buttonccclicks == -1 digitalwrite ledpinr high myservo.write crspeedcw myservo.write crspeeddefault digitalwrite ledpinr low ledping low // turn led making voltage low,arduino,arduino
756,differential drive robot uneven surfaces,building differential drive robot want drive straight line uneven surface know position velocity pid deciding sensors buy use optical encoders accelerometers something wanted go accelerometers due error encoders face due slippage sure enlightenment help,sensors control pid differential-drive,control sensors differential pid drive
757,servos power supply quadruped robot,facing problem building quadruped robot figuring efficient power supply needed servos using mg995 tower pro servos powered lithium batteries volts know servos something needed added fitted batteries robot body suggestions please,power battery servomotor walking-robot,battery servomotor walking robot power
758,dead reckoning car-like robot gyro encoder,began build car-like robot stumbled dead reckoning use motor steering traction want able get position robot read encoders used curious use encoder motor shaft get distance gyro accelerometer get orientation robot,mobile-robot motor gyroscope encoding,mobile encoding robot motor gyroscope
759,kind motor control implement use encoder,time see pid control motor involves encoder algorithm knows real position motor wheel robot use encoder optocoupler wheel count many degrees wheel moved use increment counter counter increment wheel moves wheel moves first moment saw inconvenient studied arduino pid autotune library first figure see decrements input objective move two-wheels robot small segments driven simple trajectories separated time complete stop straight cm stop move degrees stop straight detect obstacle ... suggest kind ideas first idea transform pid position control speed control convenient feedback loop keep counter traveled distance inform speed control stop,arduino motor control pid,control pid motor arduino
760,approaches consider create rotating turret,bit background planning make maneuverable airship controlled thrust vectored propellers want rely rudder momentum turns able maneuver direct prop thrust want able point prop half sphere/dome axis degrees traversal forward/back/up/down degrees nearest thing think ball turret similar ball turret gun motor propeller turret rotate degrees gun rotates degrees thought servo axis limited range like axis able rotate allow turret rotate desired using shortest path question need able rotate turret know angles pointing,sensors servos,sensors servos
761,accelerometer gyro magnetometer sensor fusion,build theoretical question wrestling c code manage i2c communication etc said build meant robot called design phase sake question lets assume moment whole robot consists imu sensor moves motors create lot noise sensor measurements theoretical mean interested mathematics algorithms involved solving problem call imu sensor provides raw accelerometer gyro magnetometer measurements lets say tiny robot travels snooker table mm x mm believe small call sensor fusion easier faster consume less resources like measure velocity possible position velocity mean given point time need know current velocity robot moving snooker table velocity range m/s position mean given point time need know current position robot snooker table x heading hope possible robot able identify landmarks use information reduce position errors said hope possible meant express aware fact real sensor data noisy errors accumulate using landmarks able manage reduce error position estimates part question improve linear algebra knowledge confident manage matrix multiplications inversions question ideas references measuring velocity position using imu sensor little side question figured question theoretical robotics.se know forum focused mathematical algorithmic side robotics please let know,localization imu sensor-fusion,sensor fusion imu localization
762,ctl port motor controller,look motor controller port called ctl ctl stand sort protocol rs232,motor,motor
763,quadcopter goes hovering place correct,trying quadcopter friends problem goes hovering place made video explain see see quadcopter flight go touch controller need correct go goes use kk2.1.5 hobbyking kk2.1.5 multi-rotor controller flight control board multi-rotor aircraft tricopters quadcopters hexcopters etc purpose stabilize aircraft flight takes signal gyro/acc roll pitch yaw passes signal atmega644pa ic atmega644pa ic unit processes signals according users selected firmware passes control signals installed electronic speed controllers escs signals instruct escs make fine adjustments motors rotational speed turn stabilizes multi-rotor craft made test see video placed backward sure weight check values debug mode values nothing pressed,quadcopter uav multi-rotor,quadcopter rotor multi uav
764,need specifications operate stepper motor rpi arduino,disassembled stepper motor working contains photo motor label bottom motor need identify stepper motor retrieved scrap project budget constraints force use scrap motor tried drive using l298 h bridge find right bit sequences get running tried search specifications sheet internet label using rpi arduino board run need pin diagram specifications motor guys seen type,arduino raspberry-pi stepper-motor,pi raspberry stepper motor arduino
765,get prevent twisting cables,planning create motor turret described question simplify problem thinking wind turbine generator main head rotate degrees face wind prevent power sensor wires coming head shaft twisting,sensors wiring,sensors wiring
766,create set drones fly patterns,go making number drones fly preset pattern formation example rotating point something https //www.youtube.com/watch v=shgl5rqk3ew,quadcopter,quadcopter
767,vex pneumatic arm,vex pneumatic piston,robotic-arm arm,arm robotic
768,simplest way object tracking range finder sensor,current class assignment program robot course includes moving obstacles – robots moving constant speed region robot get robots moving constant pace alongside predictable path robot stop border region wait others pass proceed robot use laser range scanner sense surroundings given restrictions simplest object tracking algorithm use thinking something lines collect laser readings point clouds suitable time gap apply dbscan b producing cluster lists b generate list pair-wise matches clusters b using hungarian algorithm discard p pairings whose difference falls threshold calculate direction magnitude movements distance centers mass cluster pair reason choosing dbscan hungarian algorithm implemented use difference clusters measured distance centers mass think solution work problem suggestions better simpler ways solve,mobile-robot sensors algorithm rangefinder,mobile sensors rangefinder robot algorithm
769,differential drive robot control,edited differential drive robot needs drive hall stay ultra sonic sensors side thought implementing pure pursuit lookahead distance etc sure correct approach lower level pids motor control working need help choosing path planning algorithm pure pursuit work needs people suggestions,control pid differential-drive,control differential pid drive
770,find right actuator control flow flour,building circuit control flow flour basic idea open actuator valve let specific amount go tube diameter max wonder right actuator use right solution great pointed suitable actuators buy online,actuator,actuator
771,slam data association,like build ekf-slam opengl implemented entire virtual environment robot moves landmarks feature-based map motion observation models implemented sensors gaussian like use mrpt build slam point want use data association robot moves detects pose landmarks previous data means concern current state vector question possible build slam data association please suggest articles enrich issue,slam ekf,ekf slam
772,calibrate differential drive,building robot differential drive reached point drive remote control trying get localization working like measure parameters robot model robot using wheels spaced b meters wheel distance encoder tick s_l s_r variance standard deviation driven distance \sigma_l \sigma_r moving distances random variables following distributions d_l \sim t_ l s_ l \sigma_l^2 d_r \sim t_ r s_ r \sigma_r^2 model expand little bit good way measure parameters found way measure b d_l d_r added answer idea measure standard deviations model used prediction input mcl need covariance localization,localization calibration differential-drive,differential calibration drive localization
773,connect sensors beaglebone/arduino complex robot,building biggest robot done hardware follows hcr-platform dfrobot base x2 dc motor phase hall encoder x7 sharp ir sensors x6 urm37 ultrasonic sensor x4 ir ground sensor microsoft kinect right using romeo board arduino compatible drive motors process pids wheels steering access sensors kinect beaglebone black running linux intended main brain connected romeo using rs232 port processing kinect wifi access started thinking connecting sensors beagle board need waste time sending commands board read sensors yielded first issue beagle board works used sensors thought board voltage divisors connect sensors using ribbon cable connect new board beaglebone find idc male connector create interface cable boards beaglebone option want tons cables place morning thought researched gpio boards usb found works pins need use sensors design board option point confused terms best hardware use drive beast think use intel nuc linux kinect wifi usb link custom made sensor board custom made board work provide power bus sensors interface low level sensors using usb link thought custom board sure help worth effort learning use thoughts idea issues solved complex robots,arduino mobile-robot sensors computer-vision beagle-bone,arduino mobile robot computer bone sensors vision
774,linkage-based haptic devices much common cable tension -based ones,according link humble opinion common sense cable-based haptic devices got lower inertia less complicated believe controlling big deal inverse kinematics play easy compensate occurs cables tensioned cables easy guess equipped strain gauges become strain gauges allowing enhance control capabilities wrong links-based systems e.g phantom falcon latter got cable transmission impedance control seem able buy cable elongation creep constrained workspace esp angles,sensors mechanism,sensors mechanism
775,use electrovalve,want make following installation blowing bottle tops music instrument v valve b bottle ___________________ |mini air compressor| -- -- -- -- -- -- -- -- -- ______|_______ v v v v v v b b b b b b want use rc servo electro valve throttle control air flow bottle way,rcservo mechanism valve,valve mechanism rcservo
776,add external library rock framework,rock framework includes lot software libraries like add existing external library use component development preferred way,software rock,rock software
777,static equilibrium dof manipulator,dof manipulator kuka lbr4+ like calculate joint torques needed keep arm static equilibrium books transposed jacobian used map forces applying end effector joint torques \tau j^t\cdot f take mass links account way calculate needed torques given configuration assuming ideal case setting torques arm static equilibrium cheers edit everybody interested found solution problem introduction robotics third edition john j. craig page 175-176. done aid iterative newton-euler dynamics algorithm actual trick set velocities accelerations base acceleration base acceleration ^0 \dot v_0 g g magnitude gravity vector points opposite direction equivalent saying base robot accelerating upwards g upward acceleration causes effect link gravity,torque manipulator,manipulator torque
778,filling bottles food-grade liquid,project given work schematics idea going need fill bottles time food-grade liquid based parts think design going use air agitated pressure pot tank used spraying paint work using food grade liquid bat cant use main parts use allen bradley micrologix plc pneumatic cylinders couple solenoids start stop buttons question bottle liquid positive displacement pump vfd best way slowing pdp fill bottle time little experience particular plc ladder logic issue figuring specs pump motor input helpful links great point im trying determine huge waste time money go buy filling machine,electronics,electronics
779,outputting precise voltage millivolts arduino mega,need output varying voltage arduino mega range millivolts attempted sending pwm signal board low-pass filter steps voltage works problem arduino analogwrite function accepts value represent duty cycle pwm precise enough value yields millivolts value yields millivolts way duty cycle precise range think precise better way get precise voltage output mega running outputting max voltage volts low pass filter contains kiloohm resistor microfarad capacitor,arduino pwm,pwm arduino
780,good cheap silent motors mannequin robots kind controller use,good cheap silent motors mannequin robots kind controller use creating mannequin robots require motors shoulder elbow wrist waist hip knee ankle motors mannequins bolted horizontal post lower wall means run pose something horizontal beam robots side flips moves twist jumps crouches stand bolted wall spin face wall tried using hobby servos joins weak lifting fibreglass mannequin body parts loud make noise poses held drop smash power shut using handheld remote control testing channels robot programmable lets say objective make mannequin dance michael jackson open using kinnect technology controller dancer dance front robot copy remember open controllers allow force mannequin pose specific time codes necessary willing program poses using kind lighting desk type controller tech crews use rock concerts sync everything go music noticed power drill winch loud whereas fan quiet live apartment neighbours hear footsteps apartments dare turn drill wake everyone whole building guilt turning fan need robot quiet fan voltage matter project happy use wall socket please let know motors controllers mannequin robots taking cost account thanks help,microcontroller robotic-arm motion humanoid,motion microcontroller humanoid arm robotic
781,salvaging bunch laptop battery packs,working first robot project used sealed lead acid battery aquired li-ion battery packs either mah mah laptops discarded battery packs seem dead battery packs pin connector assume bunch 18650-cells electronics robot handle v use batteries charge laptops little put idea taking 18650-cells packs rebuilding battery pack charging system needed packs marked a41-a3 mah ones a42-a3 mah ones,battery,battery
782,solutions finding position heading multi-level house,wondering reccomend possible solutions locating robot multilevel house seems obvious need altitude sensor derive story robot compass sensor derive heading wondering use locate robots xy position house requirement unclear imagine map dot representing robot position image current floor top original idea use gps need submeter accuracy expensive considered monti-carlo localization requires obstruction sonar sensors walls significant task idea place wireless beacons sort vertexes equilateral triangle surrounding house triangulate position using distance beacon idea go hardware-wise ideas seem viable suggestions implement reccomend easier cheaper alternative platform arduino hooked sensors motor drivers connected java laptop serial thanks,arduino sensors localization gps,gps sensors localization arduino
783,using pic webserver,want show information temperature internet using sensor pic using pic way pic anyone hame literature schematics,microcontroller,microcontroller
784,grasshopper effect quadcopter kk2.1.5,builded quadcopter use flight manager kk2.1.5 latest firmware increase throttle flight keep hand stick able maintain touch throttle goes see example video tried different values pid know best large quadcopter medium propellers small weight quadpcoter width propellers factor problem,quadcopter multi-rotor,quadcopter rotor multi
785,simon k firmware imu outputs,building quadcopter using sparkfun razor imu outputs roll pitch yaw axes values hz limits operations controller implemented arduino imu hz mx itslef please tell flashing escs emax simon k firmware good grateful,arduino quadcopter imu,quadcopter imu arduino
786,effect adding pole pid,confused adding adds complete system decreases speed system add system causes system overshoot goes part pid add pole system less overshoot time integrator increases overshoot make sense inverse relation,control pid,control pid
787,suggestions stepper motor controllers,working project dslr camera rotated tripod axes using nema motors motors rotate degrees seconds normal usage speed requirement weight camera using printed parts remainder mount tried running stepper motors adafruit motor shield v2 whole thing overheats battery motor way motor controlled arduino need find motor controller use looked ebay things came dollars seems good true question motor driver use project little experience arduino shields,arduino motor cameras stepper-driver,driver cameras stepper motor arduino
788,use nicolas ziegel approach system becomes unstable,use nicolas ziegel approach root locus plot system becomes stable gain negative .. estimate ultimate gain value,control pid,control pid
789,understanding pid controller,trying understand effects p constants pid controller system understood p make system makes read books understand makes go integrator causes overshoot things makes sense p part causes overshoot adds gain integrator want kind mathematical understanding parameters affect system know work hard time understanding affects system whole example zero added system lead decrease overshoot adding zero system create overshoot,pid,pid
790,controlling digital servos,many websites say analog servo motors work digital servo motors work question difference apply inner control loop servo user digital servo provide pwm signal rephrase servos including digital ones controlled pwm digital ones controlled pwm thanks,rcservo pwm servomotor,servomotor pwm rcservo
791,id controller exist,pid consisting id exist,control pid,control pid
792,quad copter attitude control,built quad copter scratch electronics mechanics software point sensor data looks correct tilt quad copter correct motors increase decrease trying tune pids couple days rate mode stays level rotates correct degrees second give command stability mode lot time spins axis get stable kept rotating upright maintaining flat position come conclusion something wrong signs mixed anyone knowledgeable quad copter control code able take look done works struggling work needs change try next flight control code posted relevant classes hardware.h main.cpp include mbed.h include rtos.h include hardware.h //declarations float constrain const float const float min const float max float map float x float in_min float in_max float out_min float out_max void getattitude void task500hz void const *n void task10hz //variables float _gyrorate // yaw pitch roll float _ypr // yaw pitch roll float _yawtarget int _notflying float int _10hziterator float _ratepidcontrolleroutputs //yaw pitch roll float _stabpidcontrolleroutputs //yaw pitch roll float _motorpower //timers rtostimer *_updatetimer // thread monitor serial ports void flightcontrollerthread void const *args //update timer _updatetimer new rtostimer task500hz ostimerperiodic void int updatetime update_frequency _updatetimer- start updatetime // wait thread :wait //constrains value min max float constrain const float const float min const float max float max max min min return //maps input output float map float x float in_min float in_max float out_min float return x in_min out_max out_min in_max in_min //zeros values void getattitude //take zero values account inbetween pcb level ground _ypr _ypr _zerovalues _ypr _ypr _zerovalues //swap pitch roll imu mounted right angle board //gyro data need swapping done freeimu class float pitch _ypr float roll _ypr _ypr pitch _ypr roll void task500hz void const *n _10hziterator++ _10hziterator == task10hz //get imu data _freeimu.getyawpitchroll _ypr _freeimu.getrate _gyrorate getattitude //rate mode _rate == true _stab == false //update rate pid process value gyro rate _yawratepidcontroller- setprocessvalue _gyrorate _pitchratepidcontroller- setprocessvalue _gyrorate _rollratepidcontroller- setprocessvalue _gyrorate //update rate pid set point desired rate rc _yawratepidcontroller- setsetpoint _rcmappedcommands _pitchratepidcontroller- setsetpoint _rcmappedcommands _rollratepidcontroller- setsetpoint _rcmappedcommands //compute rate pid outputs _ratepidcontrolleroutputs _yawratepidcontroller- compute _ratepidcontrolleroutputs _pitchratepidcontroller- compute _ratepidcontrolleroutputs _rollratepidcontroller- compute //stability mode //update stab pid process value ypr _yawstabpidcontroller- setprocessvalue _ypr _pitchstabpidcontroller- setprocessvalue _ypr _rollstabpidcontroller- setprocessvalue _ypr //update stab pid set point desired rc _yawstabpidcontroller- setsetpoint _yawtarget _pitchstabpidcontroller- setsetpoint _rcmappedcommands _rollstabpidcontroller- setsetpoint _rcmappedcommands //compute stab pid outputs _stabpidcontrolleroutputs _yawstabpidcontroller- compute _stabpidcontrolleroutputs _pitchstabpidcontroller- compute _stabpidcontrolleroutputs _rollstabpidcontroller- compute //if pilot commanding abs _rcmappedcommands _stabpidcontrolleroutputs _rcmappedcommands //feed rate pid overwriting stab pid output _yawtarget _ypr //update rate pid process value gyro rate _yawratepidcontroller- setprocessvalue _gyrorate _pitchratepidcontroller- setprocessvalue _gyrorate _rollratepidcontroller- setprocessvalue _gyrorate //update rate pid set point desired rate stab _yawratepidcontroller- setsetpoint _stabpidcontrolleroutputs _pitchratepidcontroller- setsetpoint _stabpidcontrolleroutputs _rollratepidcontroller- setsetpoint _stabpidcontrolleroutputs //compute rate pid outputs _ratepidcontrolleroutputs _yawratepidcontroller- compute _ratepidcontrolleroutputs _pitchratepidcontroller- compute _ratepidcontrolleroutputs _rollratepidcontroller- compute //testing _ratepidcontrolleroutputs // yaw //_ratepidcontrolleroutputs // pitch _ratepidcontrolleroutputs // roll //calculate motor power flying _rcmappedcommands _armed == true //constrain motor power means max throttle overhead stabilising _motorpower constrain _rcmappedcommands _ratepidcontrolleroutputs _ratepidcontrolleroutputs _ratepidcontrolleroutputs _motorpower constrain _rcmappedcommands _ratepidcontrolleroutputs _ratepidcontrolleroutputs _ratepidcontrolleroutputs _motorpower constrain _rcmappedcommands _ratepidcontrolleroutputs _ratepidcontrolleroutputs _ratepidcontrolleroutputs _motorpower constrain _rcmappedcommands _ratepidcontrolleroutputs _ratepidcontrolleroutputs _ratepidcontrolleroutputs //map 0-1 value actual pwm pulsewidth _motorpower map _motorpower motors_min //reduced limit power testing _motorpower map _motorpower motors_min _motorpower map _motorpower motors_min _motorpower map _motorpower motors_min //not flying _armed == true _yawtarget _ypr //set motors armed state _motorpower motors_armed _motorpower motors_armed _motorpower motors_armed _motorpower motors_armed _notflying ++ _notflying //not flying second //reset iteratior _notflying //reset _yawratepidcontroller- reset _pitchratepidcontroller- reset _rollratepidcontroller- reset _yawstabpidcontroller- reset _pitchstabpidcontroller- reset _rollstabpidcontroller- reset //disable motors _motorpower motors_off _motorpower motors_off _motorpower motors_off _motorpower motors_off //set motor power _motor1.pulsewidth_us _motorpower _motor2.pulsewidth_us _motorpower _motor3.pulsewidth_us _motorpower _motor4.pulsewidth_us _motorpower //print data void task10hz int batt _wirelessserial.printf _motorpower _motorpower _motorpower _motorpower _ypr _ypr _ypr batt _ratepidcontrolleroutputs _ratepidcontrolleroutputs _ratepidcontrolleroutputs _stabpidcontrolleroutputs _stabpidcontrolleroutputs _stabpidcontrolleroutputs _armed _initialised _rate _stab _gyrorate _gyrorate _gyrorate _rcmappedcommands _rcmappedcommands _rcmappedcommands _rcmappedcommands _yawratepidcontrollerp _yawratepidcontrolleri _yawratepidcontrollerd _pitchratepidcontrollerp _pitchratepidcontrolleri _pitchratepidcontrollerd _rollratepidcontrollerp _rollratepidcontrolleri _rollratepidcontrollerd _yawstabpidcontrollerp _yawstabpidcontrolleri _yawstabpidcontrollerd _pitchstabpidcontrollerp _pitchstabpidcontrolleri _pitchstabpidcontrollerd _rollstabpidcontrollerp _rollstabpidcontrolleri _rollstabpidcontrollerd whole program seen mbed page http //mbed.org/users/joe4465/code/quadmk6/ need info something explaining let know anyone point right direction idea try next appreciated thanks joe,quadcopter pid imu,quadcopter imu pid
793,roborio support java,frc team upgrade compactrio roborio compactrio supports java version java roborio,microcontroller,microcontroller
794,pid affect root locus close loop transfer function,trying understand pid controller moves poles zeros transfer function playing bit able see kind connection mean p rises mean damping ratio gets smaller real axis opposite seem true examples something wrong kind want general knowlegde affect second order systems,control,control
795,best strategy area scanning using little sensing bots,working school project simulating robots scanning area struggle find strategy robots use details given certain amount robots sensing range r spawn task scan rectangular area communicate communication range looking best strategy i.e time efficient solution reply clue strategy appreciated,mobile-robot sensors coverage,mobile sensors robot coverage
796,poles zeroes affect step response transfer function,loop transfer function overshoots poles placed damping overshoot,control,control
797,inverse peak mean step function,identified system trying tune pi regulator think need d. came graph matlabing know mean using pidtune get p values think computation correct made model simulink confirm see picture arrow pointing understand system going first supposed water flow regulator transfer function \frac -0.311s s^2 continuous-time pi controller parallel form k_p k_i \frac k_p k_i,pid,pid
798,lqr design low effort,trying implement controller inverted pendulum using lqr matlab command lqr b q r problem motors weak tried increase r simulations show effort high reduce effort,control design,control design
799,robot store map makes,understand create map using sensors storing values array example array places visited places visited open spaces occupied spaces etc map thinking making x members means need array members seems lot attributes member temperature light level sound level etc pieces information capture correct better way create map robot using software,software mapping,mapping software
800,pid tuning method based pole placement,possible determine pid parameter using pole placement mean solving ch eq close loop transfer functions consists p pi pd pid controllers tried getting poles locations want systems act assumed example want system overdamped settling time sec means want poles lie real axis less -4 g =\frac s^2 -6 p i= get loop system g_cl \frac s^4 s^3 s^2 s^4 s^3 s^2 looking step response see creates overshoot justify due step input ...,control pid tuning,control pid tuning
801,actuation reciprocating blades conversion rotary linear,sorry robotics seemed closest motor used rotate cranks plane run time occupies central position corresponding motor rotate discs mounted rectangular frame slid bring required disc central position anyone suggest method achieve coupling uncoupling motor shaft disc centre,motor mechanism,mechanism motor
802,mckibben artificial muscles ratio,reading artificial muscles highest power/weight ratio electric motors ratio less electrical engineer worked pneumatics big idea air pumps question much ratio change consider autonomous system side mckibben actuators air pumps valves energy source side electric motors energy source example let suppose somebody found way model control artificial muscles good electric motors make autonomous walking leg models higher resulting power/weight ratio,control power actuator torque battery,control actuator torque battery power
803,learn arduino/raspberry-pi based robotics,interested learning build dynamic quadcopter hope proficient arduino/raspberry-pi resources and/or practices recommend,arduino raspberry-pi beginner,pi raspberry beginner arduino
804,quadcopter pid output,trying develop control system quadcopter options use pid controller think used method read commom strategy run pid algorithm axis question pid output converted pwm signals asking axes rotors depend mean slow couple rotors opposite quadcopter move vertical axis speed slow quadcopter rotate different axis isolate axis associate single rotor pair pid output associated converted pwm signals rotors mimo system,quadcopter pid,quadcopter pid
805,parts need strong robotic arm,https //www.youtube.com/watch v=mphhyliq294 found robotic arm internet wondering someone tell parts need build similar video says lift small cat need able program need controller please recommend specific motor controller links recommend thanks,robotic-arm,arm robotic
806,proper tuning method cascade controller,control system consisting pid controller plant considered cascade controller come proper tuning method googled seems best method system looks http //snag.gy/rjh2j.jpg,control,control
807,control amount torque necessary rotate something test rig,looking build test rig robot rotates diameter pipe roll yaw pitch testing motor performance subjected various kinds pwm high duty cycle low duty cycle etc like characterize performs various loads simple mechanical mechanism attach fixture insert pipe lets control easy difficult rotate thinking something drill bit chuck fits pipe expands circular clutch clamps pipe add resistance tightens like go resistance full stop motor like able test pipe using torque wrench imagine simple think something,motor torque,torque motor
808,transfer function dc motor unstable due controller,hard time grasping concept dc motor load unstable stable due controller confusions appears trying design controller using z-n method transfer function identified using matlab tells dc-motor stable makes sense feeding constant voltages lead constant veloicty use z-n approach system able become unstable possible getting confused motor able become motor design controller question simplicity come controller make motor motor due pole zero plot unstable,motor control,control motor
809,selecting precise high torque motor motor controller use arduino mega r3,current project calls motors mechanical watts assortment sensors selected arduino mega r3 use basis project trouble determining best motors motor controllers project motors need precise controllable meaning need make small changes speed motor several times second motors follow position vs. time curve broke position vs time graph hundred sections found acceleration degrees second^2 section want put format float arr position acceleration position position acceleration position position etc ... idea plan program motor int i=0 100-2 i+=2 //i add function sets acceleration motor motor1.setacc arr i+1 //i create function gets motor position potentiometer rotary encoder motor1.getpos arr i+2 || motor1.getpos arr i+2 planning run motors pid loop cut dry loop saw spark fun stepper motor controller thought accompanying library save lot work noticed major limitations allow acceleration motor running example call kneemotordriver.run fwd call softstop hardstop keep telling busy interpretation please correct wrong change drive commands i.e vary acceleration functions require target step want give target step want limited steps degrees stepper want stop degrees auto auto driver limited phase current limit summarize need mega control motors minimum output mechanical watts need precise control planning using potentiometer rotary encoder motors run loop several sensors need able vary speed several times second motors executing different motions need able run consistent time i.e motor degrees motor degrees open idea stepper motor live stop step prefer help appreciated thanks joel,motor,motor
810,definition determine something robust controller,bit uncertain interpret definition robust controller closed loop system including controller high gain frequencies disturbance appears decay frequencies higher work area noise determined using bode plot determining robustness closed-loop system,control,control
811,performance/memory considerations pathfinding lookup tables robotc small set paths,writing c code generator geared robotc complex tasks ftc team wondering performance storage concerns much memory available program data pre-defined lookup tables form multidimensional arrays memory available program much code expect fit single robotc compiled program programs execute looking generated lines correspond 2-4 opcodes based trying make decision precomputation vs runtime pathfinding using nxt/tetrix major interest point questions pathfinding plan grid running djisktra a* algorithm heuristic function assigns penalty turns consistent possible sure consistency/monotonicity doable turn penalty paths cached decide pre-cached lookup tables set use boolean array set nodes visited fact working square layout allow use array map needed reconstruct path love feedback answers question anyone thanks,nxt robotc,nxt robotc
812,securing disc/wheel shaft,situation need secure wheel made thick mdf making 1-1/4 precision-ground steel shaft joint needs strong convey large amount torque 575-600 in-lbs motor driving shaft 500-600 rpm milling machine metalworking tools preferred option flats shaft second option attempt increase surface area wheel bore use appropriate adhesive jb weld jb weld suitable solution problem better method fastening involve modifying steel shaft,wheel,wheel
813,reuse hall sensors brushless motor encoder,upgraded motors robotic arm sensored brushless rc car motors hope hall sensors double rotary encoder tapping hall sensors treating bits quadrature signal crude quadrature states works motor phases powered rotate motor stator coils energized longer counts running low power counting correct running high power count monotonic increases decreases matter run certain stator coils overpowering permanent magnets rotors way hall sensors encoder obvious question research problem time update measured wave forms dso quad see expected degree separated signals measurement phase c gets inaccurate time probes measured phases b first c merged esc speed esc speed using hardware quadrature counter eqep module beaglebone speed=0.3 counting backwards matter reverse implemented quadrature counting lpc1114fn28 ucontroller result bad high speeds count change logic void handlegpiointerrupt const uint8_t allowabletransitions static int prevstate -1 int state phasea phaseb prevstate -1 allowabletransitions prevstate == state ++rotations else allowabletransitions prevstate == state -- rotations prevstate state got idea change code update prevstate expected state happens deal glitches int state phasea phaseb prevstate -1 allowabletransitions prevstate == state ++rotations prevstate state else allowabletransitions prevstate == state -- rotations prevstate state // assume transition glitch prevstate state counting correct directions speeds higher glitches causing see waveforms,brushless-motor encoding hall-sensor,brushless sensor hall motor encoding
814,innovation step ekf localization,let say bunch observations z^ sensor map get predicted measurements z landmarks ekf localization correction step compare observation z^ entire predicted measurement \hat z case loops compare observation predicted measurement case loop assume sensor give observations landmarks scan following picture depicts scenario time execute ekf-localization get z^ z^ z^ z^ z^ get \hat z \hat z \hat z \hat z \hat z get innovation step z^ z^ \hat z \\ z^ z^ \hat z \\ z^ z^ \hat z \\ z^ z^ \hat z \\ innovation iteration get innovations correct using ekf-localization book probabilistic robotics page,sensors localization ekf,ekf sensors localization
815,microstepping give less torque,experimenting using stepper motor robotics project use microstepping give better resolution smoother movement noticed finer microsteps lower torque motor reference using allegro micro a4988 motor driver bipolar stepper motor,stepper-motor torque stepper-driver,driver torque stepper motor
816,distance high quality scans mobile robot,going competing robocup rescue thailand next year busy pull campaign brazil year using cuda powered gpus kinect/xtions ros primary navigation system need sensor long range scanning least meters overkill competition want used real world applications need robust light high resolution cheaper better high quality read question something available proven different sensing approaches used current batch indoor cameras similar question asked closed lidar solutions suggestion good need something lot range moment going go roboteye re05 re08 3d-lidar paper descibes sensor used mobile robot anyone alternative techniques suggestions sensor achieve similar results,mobile-robot ros slam kinect lidar,mobile robot lidar kinect slam ros
817,industrial robotic arm,opportunity work factory/company domain space production want use robotic arm part production line want robotic arm payload kgs arm length researched companies kuka.com sure looking making suggestions researching suggestions give good points careful robotics arms innovating companies consider installation done find supplier etc please enlighten,robotic-arm mechanism,arm mechanism robotic
818,matter electronic speed controllers motors,built several quadcopters hexacopters octacopters means flight controller use apm2.6 pixhawk motors heavy duty power wires servo-style cable carrying pwm control signal esc short heavy-duty wires connect motor esc phase several times heard read people saying electronic speed controllers escs mounted flight controller fmu seems abbreviation en vogue close motors think idea cuts interference sure sort emitted long esc motor wires required escs center aircraft consideration escs cooled propellers right rotor wash mine mounted escs close motors realized design simpler escs mounted question pros cons mounting escs close motor versus fmu,brushless-motor multi-rotor esc,rotor brushless esc multi motor
819,tried normal distributions transform files correct pcd format throws errors,http //pointclouds.org/documentation/tutorials/normal_distributions_transform.php normal-distributions-transform used program sample pcd given came confirmed experienced users trying use pcd want bother changing program changed names room_scan1 room_scan2 attempt use get error loaded data points room_scan1.pcd loaded data points room_scan2.pcd filtered cloud contains data points room_scan2.pcd normal_distributions_transform /build/buildd/pcl-1.7-1.7.1/kdtree/include/pcl/kdtree/impl/kdtree_flann.hpp:172 int pcl :kdtreeflann :radiussearch const pointt double std :vector std :vector unsigned int const pointt pcl :pointxyz dist flann :l2_simple assertion `point_representation_- isvalid point invalid nan inf point coordinates given radiussearch failed aborted core dumped program compiled http //robotica.unileon.es/mediawiki/index.php/pcl/openni_tutorial_1 _installing_and_testing testing_.28openni_viewer.29 suggest let know changed pointxyzrgba designations pointxyz threw error thing confuses looked produced pcd files seem samples given mine sample ndt page anyone ideas,kinect computer-vision openni,kinect computer openni vision
820,world files simulating roads tracks,hello wanted simulate busy urban road similar darpa urban challenge autonomous self-driving-car search simulators seen gazebo integration ros easier editing world files creating difficult torcs simulator seen many world files many sensors want much physics simulation want light weight simulator checking path planning urban road creating roads searched gazebo sdf files similar urban city vain,simulator gazebo,gazebo simulator
821,pid controller update,developing quadcopter platform extended next year project found using arduino uno r3 flight management module present tuning pid loops pid function implemented int16_t pid_roll int16_t roll static int16_t roll_old int16_t result kp_roll roll ki_roll roll_old roll kd_roll roll roll_old roll_old += roll result constrain result pid_min_roll pid_max_roll return -result trouble interpreting system response varying constants believe problem related questions pid controller update motor values update time 100-110 milliseconds maximum change pid update make motor thrusts maximum limit +-15 thrust range thrust range values tuning performed minimum lift mid-range irrelevant,quadcopter pid,quadcopter pid
822,alternative way perform pole cancellation,read lot places making controller cancels unwanted pole zero good designing practice designing controller.. make system uncontrollable course wanted alternatives have.. considering system poles zeros lies rhp,control design,control design
823,jacobian abb irb140 robot,someone please help jacobian matrix equations abb irb140 robot easy way derive given dh parameters need implement form control working thanks,control robotic-arm kinematics dh-parameters,control dh parameters kinematics robotic arm
824,make robot follow parallel formation,basic question practising robot programming vrep k3 robots scene robot follows predefined path want second robot move keep orientation distance time turn want follower slow/accelerate little keep parallel implementation use wireless communication robot tell second speed orientation second use parameters calculate speed wheel run work orientation follower wrong distance maintained confused think rudimentary task practise follow somebody help provide ideas references appreciated,kinematics,kinematics
825,smooth inverse kinematics model 2-wheeled differential drive robot,reading kinematic models nonholonomic mobile robots differential wheeled robots texts found give decent solutions forward kinematics problem comes inverse kinematics weasel question arguing possible destination pose infinite solutions cases \quad \quad ^t robot move none advocate method driving robot based sequence straight forward motions alternated in-place turns find solution satisfactory seems inefficient inelegant cause robot full-stop turning point smooth turning feasible assertion points unreachable seems misleading poses nonholonomic mobile robot reach maintaining single set parameters finite time vary parameters time according procedure absence obstacles able reach possible pose question inverse kinematics model 2-wheeled differential drive robot shaft half-length l wheels equal radii r adjustable velocities v_l \ge v_r \ge i.e in-place turns given want minimize number changes velocities,mobile-robot inverse-kinematics,mobile inverse kinematics robot
826,problems variable frequency pid,working quadrotor trying solve problems described attempts bring refresh rate hz analysis functions time ms taken rc receiver input function tackle decided solutions use interrupts pinchangeint library pulsein reduce frequency pilot input second solution simpler read pilot input pid updates n times update time ms n+1 th time update time ms. n create system run average n*8 n+1 ms dual/variable frequency affect pid system system behave working effective frequency searching time find anything discusses situation,pid,pid
827,gears autodesk inventor looking weird,use autodesk inventor professional design gears using design accelerator create gear trains parts certain gears become transparent seems random zoom pan orbit gears look normal experienced problem using default material types ensured gears enabled example pictures help suggestions appreciated,design errors,errors design
828,find ethercat shields,riddle ethercat mind point view ... rise open platforms hardware accessible embedded machines install rt system xenomai raspberry beagleboard black cheap platform prefer ... connect rt bus cool e.g ethercat ... hence question hobbyist face problems rt communication good reason exist open ethercat shield raspberry pi beagleboards solve many problems ... thoughts idea,communication,communication
829,connect servo motor crank shaft,standard using horn came mean piece long arm middle holes diameter printed crankshaft holes mm servo horn attached attach crank horn order lift lower small scructure sure hot connect pieces horn printed crankshaft using paper clip end placed blobs tin using soldering iron worked year today failed wondering something specific problem seems something common seen people use something called dubro ez connector seems overkill space printed piece people seems use clevis pin find diameter question fix put ends stop slipping tried simple things bending,arduino mechanism rcservo,rcservo mechanism arduino
830,use ekf ukf,unscented kalman filter variant extended kalman filter uses different linearization relying transforming set sigma points first-order taylor series expansion ukf require computing jacobians used discontinuous transformation accurate ekf nonlinear transformations disadvantage found faster ukf probablistic robotics seems negligible asymptotic complexity seems everybody seem prefer ekf ukf miss big disadvantage ukf,mobile-robot localization kalman-filter ekf,kalman localization mobile ekf robot filter
831,accepted lift capacity guidelines multirotors,general multicopter configurations accepted recommendations lift etc general correlation number motors similar sized frame lift capacity,quadcopter power,quadcopter power
832,quadcopter degrees freedom,kind stupid question many degrees typical quadcopter say saying saying difference stands translation axis horizontal ones strict tell movements possible apply pure lateral force tilt start lateral movement align body right let hover horizontal axis many degrees consider exist,quadcopter,quadcopter
833,mahalanobis distance line features,implementing atlas slam framework ground robot using ekf slam local maps using line segment features line segment features abstracted respective lines α α represent distance distance-angle representation lines given framework local map matching step lines local maps matched need distance metric lines mahalanobis distance suggested literature mahalanobis distance single measurement distribution distributions find mahalanobis distance line d1 α1 covariance matrix s1 line d2 α2 covariance matrix s2 ekf algorithm book probabilistic robotics sebastian thrun computation feature update step looks covariances new measurement existing measurement multiplied give resultant covariance matrix inverse used mahalanobis distance computation similar mahalanobis_distance d2-d1 α2-α1 inverse s1*s2 d2-d1 α2-α1 correct,ekf mapping,ekf mapping
834,data association ekf,given part following algorithm page probabilistic robotics algorithm ekf localization unknown correspondences observed features z^ r^ \phi^ s^ landmarks k map q m_ x \bar \mu x m_ \bar \mu z k \begin bmatrix \sqrt q \\ atan2 m_ \bar \mu m_ x \bar \mu x \bar \mu \theta \\ m_ \\ \end bmatrix h k \begin bmatrix h_ h_ h_ \\ h_ h_ h_ \\ h_ h_ h_ \\ \end bmatrix k h^ k \bar \sigma h^ k q endfor j \underset k \operatorname arg\ max det \pi s^ k -\frac \exp\ -\frac z^ -\hat z k s^ k -1 z^ -\hat z k k^ \bar \sigma h^ j s^ j -1 \bar \mu \bar \mu k^ z^ -\hat z j \bar \sigma k^ h^ j \bar \sigma endfor question second loop ends line end line checked errata book nothing issue,localization ekf data-association,ekf data association localization
835,typical method integrating neural net plc,integrate neural network online automation system example developed neural network predicts difficult measure variable reactor using multiple sensors use predicted variable tell automation system example increase/decrease stirrer speed someone implement idea commercial system develop function block simulate neural network run software reads writes plc control tags,sensors control,control sensors
836,arduino quadcopter using shield android phone,need help go building quadcopter software scratch available tools transmitter radio therefore way remote control using android phone itead studio shield given use existing open source software i.e aeroquad arducopter following parts uno shield brushless motors q450 frame esc turnigy mpu6050,arduino quadcopter,quadcopter arduino
837,different particle filter min max particle numbers give result,using amcl package ros localize mobile robot changed min_particles max_particles several times calculated output difference odomotry evaluate parameters table demonstrate results see notable change output ignore first row table output variance small particle filter output map,localization particle-filter,filter particle localization
838,request specific mavlink packet ardupilot,developing program communicating ardupilot using mavlink generated code based mavlink definition ardupilot basic communication working figure request ardupilot send specific mavlink message ardupilot send mavlink message attitude second,ardupilot,ardupilot
839,controlling system delayed measurements,assume simple system want control sensor measurements exhibit considerable time delay i.e z_t h x_ t-d \neq h x_t limited knowledge control imagine following setup observer estimates delayed state x_ t-d using control input delayed measurements second observer uses delayed estimate predicts current state x_t using last control inputs delayed measurement current time second observer estimate used control system better standard approch problem literature research topic,sensors control sensor-fusion sensor-error,control sensors sensor fusion error
840,velocity model motion matlab probabilistic robotics,want implement velocity motion model matlab according probabilistic robotics page model following \begin align* v v sample \alpha_ v^ \alpha_ w^ \\ w w sample \alpha_ v^ \alpha_ w^ \\ \gamma sample \alpha_ v^ \alpha_ w^ \\ x x \frac \hat v w sin \theta \frac \hat v w sin \theta \hat w \delta \\ \frac \hat v w cos \theta \frac \hat v w cos \theta \hat w \delta \\ \theta \theta \hat w \delta \hat \gamma \delta \end align* sample b^ \leftrightarrow \mathcal n b^ kind variance \alpha_ v^ \alpha_ w^ kalman gain approaching singularity,mobile-robot kinematics motion motion-planning noise,noise mobile robot motion planning kinematics
841,dof robotic arm,building dof robotic arm college project finished designs problem controls havent thought control arm software gui interfaces etc suggestions simulation software simulating testing robotic arms,control arm,control arm
842,ekf localization known correspondences,facing problems book book discusses localization depth results getting makes sense read lot papers majority copy localization algorithm book question \bar \mu \bar \sigma changed iteration using get predicted measurements lines 11- fixed observed features z^ r^ \phi^ s^ j c^ q m_ x \bar \mu x m_ \bar \mu z \begin bmatrix \sqrt q \\ atan2 m_ \bar \mu m_ x \bar \mu x \bar \mu \theta \\ m_ \\ \end bmatrix h \begin bmatrix h_ h_ h_ \\ h_ h_ h_ \\ h_ h_ h_ \\ \end bmatrix h^ \bar \sigma h^ k^ \bar \sigma h^ s^ -1 \bar \mu \bar \mu k^ z^ -\hat z \bar \sigma k^ h^ \bar \sigma endfor \mu \bar \mu \sigma \bar \sigma please suggest books discuss ekf localization depth,localization ekf,ekf localization
843,esc run 2213-980,starting trying come need build first quadrocopter wanted run something people experience commit buying anything esc fine running motor understand rated max amps motor top battery able run motors issue,quadcopter brushless-motor multi-rotor esc battery,quadcopter rotor multi battery esc motor brushless
844,control function different inputs,able control function brightness control led different triggers tactile switch ir remote trying able control brightness switches ir remote desired,control,control
845,ros best practices,going build small robot system seems ros serves nice framework control program system wondering best practice manage components robot make sense put sensors node put sensors type node better node sensor good practice kind handler node takes input sensors steers corresponding actuators actuator nodes sensor nodes communicate fused sensor nodes actuator nodes handler single sensor actuator handler direct communication guess best kind handler handles communication sensors actuators node element robot fig.2 system coupled extended want know opinion greetings,control ros,control ros
846,observation model jacobian fixed transforms,let say hypothetical sensor provides example velocity estimates affix sensor non-zero rotational offset robot base ekf estimating robot velocity innovation calculation ekf looks y_k z_k h x_k case h rotation matrix rotational offset ramifications pre-process sensor measurement rotating z_k inverse rotation put coordinates frame robot make h identity matrix,kalman-filter ekf,filter ekf kalman
847,buy heavy-duty omni wheels,buy multi-directional omni wheels looking something support excess total possible mission profile include meter excursion outdoors asphalt path little durable ones find online small ones experimenting,wheel,wheel
848,pwm pid control small watts brushed dc motor,good pid output controls modelling pwm duty cycle logic question case pure resistance heater pwm duty cycle percentage relates power time ratio direct control appropriate motor additional effects considerable inductance initial current smaller ramping time b rpm ramping time constant mechanical inertia etc increasing reduce current wise ignore effects expect good outcome application volts watt dc brushed motor gear rpm load pwm frequency driving diy robot,motor pid pwm,pwm pid motor
849,actual application manufactuing robot arm autonomous object classification system,i’m graduate student project going introduce robot arm manufacturing goal build autonomous object classification system software hardware required task idea existing manufacturing scenario apply system improve efficiency save human resources info robot arm hardware part robot arm dof payload weight end effector counted end effector 3-fingered robot hand payload workspace sphere diameter software part programming touch human drag robot record desired pose pcl object recognition recognize object pose scene online trajectory generator dynamic obstacle avoidance improve safety robot corporates human know manufacturing hope someone give hint scenario actual application apply system,robotic-arm manufacturing,manufacturing arm robotic
850,ekf localization approaching singularity sensors noisy,getting warning matlab kalman gain warning matrix singular scaled results inaccurate rcond problem coming high variance measurement model question ekf work high noise sensor,localization ekf,ekf localization
851,installing pcduino,following previous question pcduino+kinect decided go buy pcduino wish run robot kinect+pcduino+shields trouble getting started tried installing openni nite sensorkinect openni installation fails gotten installing nite sensorkinect idea work tried bunch pointers example error get follow link ubuntu ubuntu ~/kinect/openni/platform/linux/createredist sudo ./redistmaker.arm target linux-arm version num compile jobs building openni ... common/commondefs.mak:36 cross-compilation error find arm-j1_cxx arm-j1_staging stop failed execute make platform=arm-j1 -c /home/ubuntu/kinect/openni/platform/linux/createredist/../build clean /home/ubuntu/kinect/openni/platform/linux/createredist/output/buildopenni_clean.txt cleaning failed ubuntu ubuntu ~/kinect/openni/platform/linux/createredist someone suggested tried removing -mfloat-abi=softfp option help seems compiling/linking issue due float types able figure link author mentions remove work get similar error similar problem exists link follow link work give following error /usr/bin/ld error ../../bin/arm-release/libopenni.so uses vfp register arguments ./arm-release/tinyxmlparser.o /usr/bin/ld failed merge target specific data file ./arm-release/tinyxmlparser.o approach use simplecv pcduino someone claims worked used simplecv kinect different prefer using suggestions getting errors appreciated pointers solving problem installing openni pcduino welcome please let know need details anything thanks advance,kinect arm openni,kinect arm openni
852,libfreenect simplecv integration,installed simplecv libfreenect pcduino running lbuntu verified simplecv reads usb libfreenect glview tutorial gives depth rgb pathetic framerate want call cam kinect simplecv get warning dont seem freenect library installed hard use kinect warning get error cam.getdepth says nameerror global name defined let simplecv know installed libfreenect,kinect,kinect
853,use quaternions feed pid quadcopter stabilization loop,making quadcopter set pid loop stabilize given euler angle pitch roll problem arises roll approaches degrees degrees values make sense approaches gimbal lock intend make complex maneuvers looping etc. exceeds degree roll limit use quaternions overcome problem get quaternions mpu-9150 read many articles matter quaternions talk rotations software tweening rotation points makes little sense know imaginary numbers matrices,quadcopter pid stability,quadcopter stability pid
854,denavit-hartenberg convention,different conventions determine dh parameters difference craig sec convention sec convention know methods response craig john j. introduction robotics mechanics control addison-wesley spong mark w. seth hutchinson mathukumalli vidyasagar robot modeling control wiley,forward-kinematics dh-parameters,kinematics parameters dh
855,inverse kinematics parallel manipulator delta robot,let start saying going university majoring computer engineering love software/hardware love robotics want apply knowledge software/hardware robots taken formal class robotics know start approach mathematics robots entail interested calculating inverse kinematics delta robot clarify bit trying determine required joint angles position end-effector delta robot specific location given x z coordinate delta robot basing design shown image based research past days found sort mathematics involved denavit-hartenberg parameters jacobian matrices etc going honest encountered denavit-hartenberg parameters jacobian matrices know solve kinematics equations let find kinematics equations articles read deal serial manipulator robots mathematics finding kinematics equations serial manipulators find good material material easy understand given current situation parallel manipulators wanted ask question hopes someone community direct start learning obtaining inverse kinematics equations parallel manipulators solving equations help appreciated thank,kinematics inverse-kinematics,inverse kinematics
856,brake brushed dc motor belt-driven linear actuator end stop,belt-driven linear actuator consisting gantry-plate riding rails thinking using brushed dc motor gantry move home position mass gantry vary return home avoid spillage contents require soft start/stop slow return home case know practical sense brake mass bring gantry stop ensuring gantry plate comes rest end plate clearer ensure gantry stops home position use pwm ramp decelerate wanting avoid using mcu want use ic switches potentiometers use math want explain course seeks begin mass close end stop outbound case problems thanks,motor,motor
857,best ways integrate velocity,need get position integrating velocity v use order euler integration x_ t+1 x_t \delta v_t. leads errors proportional sampling time \delta know accurate solution please,kinematics,kinematics
858,launch irobot create powers minimal launch,got irobot icreate base followed instructions given ros tutorials setup turtlebot pc workstation ssh username turtlebot workstation assuming good issue create able detect usb cable solved using detailed answer given question solved problem failed open port /dev/ttyusb0 facing next step ssh turtlebot done use roslaunch turtlebot_bringup minimal.launch command idea expect launch something amiss create base chirps powers showing kinect_breaker_enabler-5 process finished output log file location see output dont see prompt checked battery charged problem following terminal output anshul anshulspc roslaunch turtlebot_bringup minimal.launch ... logging /home/anshul/.ros/log/9d936a6a-fbdc-11e3-ba6b-00265e5f3bb9/roslaunch-anshulspc-5038.log checking log directory disk usage take awhile press ctrl-c interrupt done checking log file disk usage usage started roslaunch server http //128.110.74.233:48495/ summary ======== parameters /cmd_vel_mux/yaml_cfg_file /diagnostic_aggregator/analyzers/digital_io/path /diagnostic_aggregator/analyzers/digital_io/startswith /diagnostic_aggregator/analyzers/digital_io/type /diagnostic_aggregator/analyzers/mode/path /diagnostic_aggregator/analyzers/mode/startswith /diagnostic_aggregator/analyzers/mode/type /diagnostic_aggregator/analyzers/nodes/contains /diagnostic_aggregator/analyzers/nodes/path /diagnostic_aggregator/analyzers/nodes/type /diagnostic_aggregator/analyzers/power/path /diagnostic_aggregator/analyzers/power/startswith /diagnostic_aggregator/analyzers/power/type /diagnostic_aggregator/analyzers/sensors/path /diagnostic_aggregator/analyzers/sensors/startswith /diagnostic_aggregator/analyzers/sensors/type /diagnostic_aggregator/base_path /diagnostic_aggregator/pub_rate /robot/name /robot/type /robot_description /robot_pose_ekf/freq /robot_pose_ekf/imu_used /robot_pose_ekf/odom_used /robot_pose_ekf/output_frame /robot_pose_ekf/publish_tf /robot_pose_ekf/sensor_timeout /robot_pose_ekf/vo_used /robot_state_publisher/publish_frequency /rosdistro /rosversion /turtlebot_laptop_battery/acpi_path /turtlebot_node/bonus /turtlebot_node/port /turtlebot_node/update_rate /use_sim_time nodes cmd_vel_mux nodelet/nodelet diagnostic_aggregator diagnostic_aggregator/aggregator_node kinect_breaker_enabler create_node/kinect_breaker_enabler.py mobile_base_nodelet_manager nodelet/nodelet robot_pose_ekf robot_pose_ekf/robot_pose_ekf robot_state_publisher robot_state_publisher/robot_state_publisher turtlebot_laptop_battery linux_hardware/laptop_battery.py turtlebot_node create_node/turtlebot_node.py auto-starting new master process master started pid ros_master_uri=http //128.110.74.233:11311 setting /run_id 9d936a6a-fbdc-11e3-ba6b-00265e5f3bb9 process rosout-1 started pid started core service process robot_state_publisher-2 started pid process diagnostic_aggregator-3 started pid process turtlebot_node-4 started pid process kinect_breaker_enabler-5 started pid process robot_pose_ekf-6 started pid process mobile_base_nodelet_manager-7 started pid process cmd_vel_mux-8 started pid process turtlebot_laptop_battery-9 started pid warn walltime create robot connected sci available warn walltime create robot connected sci available kinect_breaker_enabler-5 process finished log file /home/anshul/.ros/log/9d936a6a-fbdc-11e3-ba6b-00265e5f3bb9/kinect_breaker_enabler-5*.log following log file /home/anshul/.ros/log/9d936a6a-fbdc-11e3-ba6b-00265e5f3bb9/kinect_breaker_enabler-5*.log output rospy.client info 2014-06-24 init_node name /kinect_breaker_enabler pid xmlrpc info 2014-06-24 xml-rpc server binding rospy.init info 2014-06-24 ros slave uri http //128.110.74.233:51362/ xmlrpc info 2014-06-24 started server http //128.110.74.233:51362/ rospy.impl.masterslave info 2014-06-24 _ready http //128.110.74.233:51362/ xmlrpc info 2014-06-24 xml rpc starting xml-rpc server rospy.registration info 2014-06-24 registering master node http //128.110.74.233:11311 rospy.init info 2014-06-24 registered master rospy.rosout info 2014-06-24 initializing /rosout core topic rospy.rosout info 2014-06-24 connected core topic rospy.simtime info 2014-06-24 /use_sim_time set simulated time /clock topic rospy.internal info 2014-06-24 topic adding connection count rospy.core info 2014-06-24 signal_shutdown atexit rospy.internal info 2014-06-24 topic removing connection /rosout rospy.impl.masterslave info 2014-06-24 atexit logs tell something create power log named tried minimal.launch w/ w/o kinect attached turtlebot pc make difference clue missing way bringup works guess,ros irobot-create,create ros irobot
859,bs2 inconsistant pin state connected wire,"bs2 mounted parallax board education rev d. trying use wire determine control pressed wire connected state seems fluctuate staying connected desired button exhibits behavior added quality switching button pressed stay buttons pressed flickers unpressed causes behavior wire connected anything bus code used get state debug crsrxy,0,3 p5 bin1 in5 loop",microcontroller,microcontroller
860,autodesk inventor rounding specific edge,using autodesk inventor need round component device want round green marked edges red marked click round bottom edge added rounding de-select hints solve problem,design,design
861,maximum likelihood estimator ml data association ekf,question extension previous problem data association ekf problem line aforementioned link j \underset k \operatorname arg\ max det \pi s^ k -\frac \exp\ -\frac z^ -\hat z k s^ k -1 z^ -\hat z k compute line getting huge number probability density function getting bigger huge way,localization ekf,ekf localization
862,path comparison,problem cartesian position end effector orientation robot arm recorded say millisecond time steps changed motion robot arm commanded path different velocities get different trajectories want calculate deviation paths distances equivalent points paths problem find equivalent points velocities different comparison time steps trajectories makes sense assume paths underlying trajectories compared similar deviation ideal path smaller typical length dimension path want detect deviations much lass map timestamp recorded points path length make comparison points path length course path lengths differ different paths deviation distort result points compensate reliable algorithm find information note time warp memory optimized ones game memory consumption,localization robotic-arm,robotic arm localization
863,making gripper changer robotic arm,make gripper changer robotic arm see connect power/control wires use hold gripper arm,robotic-arm,arm robotic
864,velocity control vibration,working robot accelerometer accelerometer measures vibration robot robot hits certain vibration like slow order reduce vibration thought controller think work anybody input different types controllers use mechaman,pid accelerometer navigation,navigation pid accelerometer
865,controlling system pid resists backdrive,controlling angular position pendulum using dc motor worm gearbox worm gears impossible backdrive using pid controller pendulum system regular dc motor worm gear integrator help motor find appropriate constant power setting overcome gravity pendulum hold arbitrary position worm gear need constant power motor desired position achieved power motor cut worm gear resist gravity force backdrive pendulum lowest gravity potential seems integrator pid algorithm cause large overshoots desired position achieved want integrator help control pendulum desired position position achieved need integrator turn solution come test special condition pid algorithm checks position reached angular speed small reset integrator better way handle integrator system resists backdrive ** edit worded question interested academic approach backdrive resistance pid loop help explain actual mechanism building device robotic arm rotates car window motor pick drop small weights end arm manufacturing variability motors difference drive torque picking small weights led consider pid loop,pid,pid
866,calculate robot hand positions using roll pitch angles,want calculate humanoid robot hand position given shoulder roll pitch angles elbow roll angle able calculate elbow position using rotation matrix includes shoulder angles dont know calculate hand position using elbow position elbow roll angle propose method calculate hand position,robotic-arm forward-kinematics,forward kinematics arm robotic
867,adding external magnets dc motor,possible strengthen permanent magnet dc motors attaching extra magnets motor casing adding magnetic field possible question becomes happens replace magnets motor better magnets know coils handle current net effect motor,motor,motor
868,go purchase parts xy plotter,trying build square xy plotter seen designs rack pinion threaded screw belt-driven use stepper motor drive system obvious pros cons correct wrong believe rack pinion system sturdy easiest put googled rack pinion get industrial websites place sells cheaper rack pinion sets hobbyists payload xy table eletro-magnet heavy half kilogram motor strong move heavier payload real robotics project new,stepper-motor motion actuator,motion actuator stepper motor
869,manipulator link applied torque,want implement manipulator link using physic library apply torque centre mass torque applied beginning link shifting reference frame centre mass recalculating inertia tensor new frame problem recalculating new torque based change distance think correct solution short scale torque control signal applied beginning link torque physic simulation applied centre mass thanks,simulator torque,torque simulator
870,current-limiting stepper motors reprap,working robot project tired finding parts job time create parts printer trick many parts printers share lot cnc mill terms control parts question building reprap style printer use heavy duty parts motors hoping make aluminum capable axis mill found bipolar stepper motors amps coil according reprap.org website recommend low voltage seems use voltage limit current build reprap use current limiting stepper drivers arduino software find online get large stepper motors lot trouble,arduino stepper-motor stepper-driver cnc reprap,arduino stepper driver cnc motor reprap
871,electronic speed control concepts,programmer worked electronics learning concepts hoping build quadcopter control software written motor control seems important part true typical brushless dc motor esc electronic speed control control speed esc seems approximate idea motor revolving works pid proportional integral derivative controller gets indirect feedback say gyroscope motor going tell esc make revolve faster slower good understanding paragraph correct wonder servo motor inform current rate rotation help esc feel receive input motor speeds send output requesting certain speed need esc sure servo motors work -- happens request say adjust microcontroller adjust motors account fact motors imply microcontroller request small deltas measured speed period deviation desired state negligible latter model requesting small deltas measured speed algorithm seems pid way control acceleration requesting servo go causes reach much faster requesting go feel know little put finger hope gives idea concepts struggling absorb summarize questions servo brushless dc motor allow esc servo motor control inputs revolve servo motor offer output saying servo motor go requested revolve versus less precise questions implicit text crossposted electronics.stackexchange,motor pid brushless-motor esc servomotor,servomotor esc brushless pid motor
872,active sensor data fed autodesk inventor simulation,drive position various components virtual assembly based sensor data collected real time external device inventor support setup goal match relative movements components screen real-world counterpart example absolute rotary encoder records current angle physical joint virtual joint rotated match feasible past searches information turned empty using wrong search terms results point irrelevant mechanical stress simulations,sensors kinematics,sensors kinematics
873,gear design feasible,came idea working mechanical engineer design prototype idea keep sketching ideas process came this.. sure idea go curious feasible know common place stupid ... dunno think,mechanism movement,mechanism movement
874,repairing non-lubricated linear actuator,chinese cnc mill cnc3020t several different devices go name z axis imprecise randomly position disassembled linear actuator discovered several problems first problem forgot lubricate linear ball bearings make conclusion rails set grooves ground wiping rails tissue thing left powdered metal traces oil lubricant second problem nut expected see ballnut reality piece threaded ptfe leadscrew rotates lateral movement i.e tilt opposing force third problem overall mounting picture top left screw sheared factory hid mistake tapping larger thread putting shorter screw hold anything top plate whole assembly fixed points remaining screw tight related questions salvageable verify linear ball bearings ptfe undamaged rotate rails get smooth surface lubricate linear bearings clean lubrication ultrasonic cleaner advice maintenance whole assembly something missed,actuator linear-bearing,actuator linear bearing
875,android vibrating based arduino devices,want make simple device causes cellphone vibrate seconds phone feet go small make device,arduino,arduino
876,finding hydraulic actuator controlled mcu,researching potential actuators use project designing creeper platform rolling vehicles lift operation hospital beds creeper joystick control motion option drive forward backwards left right need actuator support average weight able lift body weight thinking hydraulic actuator sure exist actuators share load need control actuators micro-controller unit planning using raspberry pi abundance researching potential units main question find actuator good fit type project integrated micro-controller unit anyone experience type project important details need take consideration thinking,microcontroller actuator,actuator microcontroller
877,force servo motor reasonable choice actuator,working application need linear angular force operate linkage mechanism know amount force need anticipate less kg n travel distance linkage input cm look available servos seem exist scale-model realm remote control vehicles uncertain suitable application example futaba digital servos mega-high torque s9152 listed kg/cm understand means cm center servo shaft expect kg force wanted cm travel distance need cm radius diminish applied force kg required question understanding calculation accurate looking types actuators servos seem become expensive kg/cm torque purposes project budget actuator application reasonable control intermediate positions travel range good holding power fast operation reason dismissed idea using linear actuator driven gearmotor worm drive new robotics usage motorized actuators used pneumatic cylinders many years application use pneumatics edit comments additional constraints important linkage details linkage planar degree-of-freedom part portable system similar scissor lift mechanism theatrical effect motion amplified force reduced speed ratio mechanical advantage power carried person actuation needs battery-operated tubing wiring person tubing wiring self-contained okay portable system battery-power used control system designed appropriate actuator rechargeable batteries likely employed actuators operate high motor exceed 1-2 amperes draw continuous operation hard limit pneumatic considered pneumatic actuation using co2 cartridges example client prefer use pneumatics ability stop/hold intermediate points motion range desirable complicated pneumatic actuators speed ideal actuator able move input coupling cm 1-2 seconds weight weight constraints well-defined carried person lightweight actuator less vary rest mechanism 6-8 kg size primary size constraint everything fit space measuring x x mm h x w x linkage mechanism extends collapses outside enclosure parallel width noise quieter better noise least priority servos seemed best choice job seem available sort torque need,servomotor,servomotor
878,designing compatible spur gears robot gearbox,trying increase torque output shaft robot gearbox motor pinion attached teeth want create gear teeth mesh pinion got access printer make gear know design second gear mesh parameters need know first gear teeth ensure second gear teeth mesh translate parameters design second gear,motor differential-drive,differential drive motor
879,need software help track passage identify fish clear water,charge studying passage different species fish species lakes patagonian andean range thinking deploying video cameras need software control cameras record images video changes avoid check video software capable recognizing species better,software,software
880,good method retuning pid detecting oscillation,given pid controller anti-windup practical ways retune controller oscillation caused detected access magnitude period oscillation want use ziegler-nichols method method allows specify phase/gain margin returning system someone recommend towards book/article theory,control pid,control pid
881,tilt-compensated motor output keep altitude quadcopter,propellers multicopter produce thrust thrust smaller copter tilted wondering established method calculate much overall thrust modified hold current altitude based current attitude way calculate motor output rol/pit/yaw-output ran pids // calculate speed motors int_fast16_t ifl rcthr rol_output pit_output int_fast16_t ibl rcthr rol_output pit_output int_fast16_t ifr rcthr rol_output pit_output int_fast16_t ibr rcthr rol_output pit_output,quadcopter,quadcopter
882,software simulate mechanics production line,software simulate production line elements joints motors springs actuators movement example want simulate mechanism paper big roll weld later bubble foil make bubble foil envelope mechanism look need simple possible free,mechanism simulator,mechanism simulator
883,imu based acceleration parameters differential drive robot,differential drive robot whose motors quiet driving flat surface motors make lot noise incline likely due correction required maintain speed high inertial load robot accelerate pid keep noticed noise related acceleration higher acceleration smaller amount noise hear smaller time level noise lasts certain acceleration limit otherwise motors get noisy trying find use imu available order change acceleration based steep path incline documentation papers tutorials etc motion planning related topic point,ros imu differential-drive noise,ros imu drive noise differential
884,stereo camera baseline needed calibration,stereo camera calibration described blog post wonder need input camera baseline calibration fact goes basic mathematics triangulation someone explain,computer-vision calibration stereo-vision,stereo computer vision calibration
885,visibility graph toolbox python,searching python toolbox/library visibility graph based motion planning searched internet find anything missing ... package recommend,motion-planning python,motion python planning
886,determing limits rotation robot workspace,determine limit range end effector orientation roll-pitch-yaw specific point xyz derived forward/inverse kinematic making program articulated robot arm user know limit tool rotation global axis roll-pitch-yaw certain point,robotic-arm,arm robotic
887,stereo camera calibration data standardized,standard format stereo calibration data various matrices saved xml stored load calibration data generated say opencv script c opencv script say c++ different software create disparity image,computer-vision calibration stereo-vision,stereo computer vision calibration
888,solenoid launch ping pong ball,looking ideas launch ping pong ball small distance metre game solenoids look useful force/type need mount base balls roll pin pushing ball ramp target ping pong ball light considering something http //www.adafruit.com/product/412 right lines go drawing board,motor,motor
889,pd controller c,building line-following mobile robot done image processing work c control phase looking pd controller program written c start searched lot success robot arduino based core i3 cpu using camera ldr sensor,control algorithm,control algorithm
890,difference screw wrench rigid body motion,screw defined dimensional vector forces torques represent spatial movement rigid body written get following distinction screw wrench force torque vectors arise applying newton laws rigid body assembled screw called wrench seems kind contextualisation way,dynamics theory,dynamics theory
891,type mechanism,held rotated knurled ends hand silver spokes rise fall order assembly rotate companies salesmen show tool found old building unit markings,design joint,joint design
892,sparse matrix ekf slam,done ekf localization algorithm known unknown correspondences stated probabilistic robotics results make perfect sense estimate position robot using gps odometry moved ekf-slam known correspondences book understand matrix f_ x j \begin bmatrix \cdots \cdots \\ \cdots \cdots \\ \cdots \cdots \\ \cdots \cdots \\ \cdots \cdots \\ \underbrace \cdots 3j-3 \underbrace \cdots 3n-3j \\ \end bmatrix bottom matrix following f_ x j \begin bmatrix \cdots \cdots \\ \cdots \cdots \\ \underbrace \cdots 3j-3 \underbrace \cdots 3n-3j \\ \end bmatrix following assuming n f_ x j \begin bmatrix \\ \\ \end bmatrix f_ x j \begin bmatrix \\ \\ \end bmatrix ones represent specific landmark,slam ekf,ekf slam
893,kalman filter issue gps fusion,working estimating robots pose using odometry gps problem kinematic model seen differential drive robot proposes using displacement left right wheels evaluate robots pose situation robot spits current x pose relative starting point movement use state estimate p x p x0 y0 dx dy dx dy change respective coordinates gotten robots odometry posible calculate state covariance q filter gps evaluate covariance r tried collect multiple reading latitude longitude fixed point dont know righ dont get evaluate covariance data feeling dumb thank anticipation,mobile-robot kalman-filter gps odometry,odometry kalman mobile robot filter gps
894,tilt-compensated compass wits end,bit wits end trying build tilt compensated compass autonomous sailboat ardusailor using invensense mpu9150 used built-in fusion support sensor get quaternion pull yaw/pitch/roll angles use formula tilt compensation float heading atan2 mz s_phi c_phi mx c_theta s_theta s_phi mz s_theta c_phi various s_angle sin angle c_angle cos angle work tried using vector-based approach stolen work took tilt compensation uncompensated atan2 yh xh produced strange result rotate sensor z value rotates -10 degrees completing full circle i.e make degree rotation starts gets -10 magnetic 70-80. see behavior hmc5883l magnetometer chip thing looking raw values get magnetic values seem fine hard soft iron offsets place top row corrected offsets using ellipsoid fit method bottom raw numbers look skewed scales graphs order x z x z,compass magnetometer,magnetometer compass
895,ekf localization robot parallel landmark,"facing real weird problem ekf localization filer gives wrong error time robot parallel landmark debugged many times failed solve problem found problem occurs following picture shows scenario robot moves circular motion landmarks indicted picture filer gives wrong estimated state see robot parallel landmarks got wrong estimated robot pose picture shows estimated wrong red circle estimated robot pose actual robot pose track problem found estimated measurement landmark opposite direction actual measurement landmark -- -- landmark est_robot zobs -0.2208 zpre -0.2333 real_robot mubar -- -- landmark est_robot zobs zpre real_robot est_robot -- -- landmark -200,200 est_robot zobs zpre real_robot est_robot -- -- landmark -200,0 est_robot zobs -- actual measurement landmark zpre -3.0658 -- problem real_robot est_robot -0.5621 computed angles actual measurements zobs sqrt map i,1 real_robot ^2 map i,2 real_robot ^2 atan2 map i,2 real_robot map i,1 real_robot real_robot add gaussian noise zobs zobs sigma_r*randn zobs zobs sigma_phi*randn zobs zobs mod zobs zobs pi positive zobs zobs elseif zobs -pi negative zobs zobs end predicted measurements q map i,1 est_robot ^2 map est_robot ^2 zpre sqrt q atan2 map i,2 est_robot map i,1 est_robot est_robot zpre pi positive zpre zpre elseif zpre -pi negative zpre zpre end",localization ekf,ekf localization
896,calculate object distance camera,unsure question belongs se site wing given job connecting camera setup robotic arm pick place objects point point b. real application camera check objects alignment supposed positions curious see way calculate distance object given know objects actual size camera see object bigger closer smaller farther turn information depth/distance camera started using camera idea assume calculate percentage view frame taken object example object uniform shape know dist1 takes view frame dist2 takes view frame possible imagine number different applications /anyway appreciated thanks,localization calibration cameras,calibration cameras localization
897,micro-controler/processor used autonomous stereo vision robot system,new robotics working stereo algorithm want combine slam developing system application decided integrating robot testing good way get used system test behaviour realistic environment testing kind software simulator want system autonomous running on-board rover system talking consist stereo camera rover wheels motor kind sensor measures movement much wheels turned distance sensor appart software stereo software developed slam algorithm impossible say much ram needs running stereo-vision i7 approx question mentioned idea robotics electronics knowledge limited idea need robot comes processor electronics read stuff raspberry pi arduino boards idea make afraid arduino able handle computational load stereo vision slam algorithm read raspberry pis first choice interfacing sensors needed case stereo cameras found leika kit robotics kit raspberry pi good option different system advisable someone build complex system give advise form his/her experience,arduino mobile-robot raspberry-pi slam stereo-vision,stereo raspberry arduino mobile robot slam pi vision
898,arduino linear actuators acs714 current sensors l298n motor driver setup,using l298n motor driver drive had1 linear actuators no-load drive current ~950ma linear actuator http //www.alibaba.com/showroom/mini-linear-actuator-had1.html motor driver l298n dual-h-bridge motor-driver controller board-module arduino robot using current sensor motor get feedback motor sensors available detect motors moving stopped using acs714 current sensors supply voltage supply current current sensor acs714 current sensor circuit diagram made actual setup arduino uno current sensors linear actuators motor drive circuit diagram setup work enough current/power coming arduino power l298n logic acs714 sensors,arduino control actuator current circuit,control actuator current circuit arduino
899,autonomous obstacle detecting quadcopter,possible build quadcopter detect obstacles avoiding order reach destination avoid obstacles destination set,quadcopter,quadcopter
900,stepper turn,wanted cnc make pcb home got kit zentools put attached battery powered screw shaft stepper moved axis way wiring axis moves turn steppers hand piece works mechanical jam decided use grbl controller software tested software shield stepper qv testing grbl arduino board steppers use universal gcode sender communicate grbl got arduino cnc shield arduino uno put attached arduino uno re-tested grbl worked used reprep stepper wiring article connect stepper driver wired stepper stepper driver x axis powered shield dc regulated power supply power adaptor old notebook notebook died kept adaptor move steps command g1 x5 sent stepper makes small move direction makes grinding seen youtube tried switching pair cables using stepper driver drivers turning potentiometer increase current luck attached photos cnc controller controller unit tried everything think suggestions,stepper-motor cnc,stepper cnc motor
901,difference different types mecanum wheels,looking mecanum wheels noticed different designs popular type holds rollers wheels frame holds rollers center significant advantage using,wheel,wheel
902,low-cost centimeter accurate satellite positioning gnss/gps,looking cheapest possible gps setup centimeter precision much hw hacking able produce pcb soldering though way kind easy-to-assemble setup welcome know piksi thing expensive seems cm precision possible less employing usd raw gps sensor ordinary pc rtklib software sure better use gps sensor setup rtk base station rover get corrective dgps data region czech republic seems national grid allowing stream correction data reasonable cost application passenger car limited power source low power needed nice using position readings opencv need get data c/c++ code application data collection raw gps post-processing,gps,gps
903,pid integration constant dt ∆time,integration constant dt ∆time possible thing let say pid loop differentiating frequency integral part work assuming know dt last iteration use variable dt ∆time calculation pid principle function,quadcopter pid real-time,real pid time
904,compact design building off-the-shelf components,want build small cylindrical arm main angular servo longitudinal axis secondary angular servo variable speed trasversal axis rotates main angular secondary needs receive data power slip ring main servo able rotate binded wirings width cylindrical arm cm reviewed market off-the-shelf servos fit bill main servo know obtain slip ring required beats obtain secondary servo space limitations demand small cm smallest able find internet cm suggestions welcome,servomotor,servomotor
905,cascading pid dc motor position velocity controllers,trying build robot differential drive powered dc motors implemented pid controller control velocity motor estimated tf using matlab system identification toolbox open loop system acquiring velocity wheels encoder function pwm signal applied arduino microcontroller went dimensioned pid gains controller trying accomplish control exact angular position dc motor thought cascading pid controller input implemented way give position controller capable generate output reference second velocity controller generates appropriate pwm value signal drive dc motor work good approach try implement different controller outputs pwm signal response position reference signal many thanks attention hope somebody help doubts,arduino control microcontroller pid wheeled-robot,control arduino microcontroller pid robot wheeled
906,drive system help,working exoskeleton exoskeleton going help kids cerebral palsy learn walk years sooner traditional therapy using ame 226-3003 roboclaw motor controller controlled arduino mega ame 226-3003 motors powerful enough addition 226-3003 worm gear motor moved motor turned position feedback system gear attached shaft motor spins gear gears ratio order better understand project please see video https //www.youtube.com/watch v=nl_acwjsrie feature=youtu.be ame 226-3003 catalog page http //www.amequipment.com/wp-content/uploads/2013/02/801-1071-web.pdf new drive system powerful ame 226-3003 motor exact torque spec believe drive system 70-100 powerful ame rpm range ame 226-3003. drive system able spin motor use need way get position potentiometer system using seems work adds much extra hardware stuff break ie gear potentiometer gear shaft mesh potentiometer time put potentiometer spin prefer optical encoder motor need drive system right angle need help designing drive system meet requirements think found motor work flow g43-500 http //www.ampflow.com/standard_motors.htm g43-500 run v take less motor get job done need gear type gear box work,motor control microcontroller motion-planning encoding,control encoding microcontroller motion planning motor
907,rule thumb actuator torque overhead,installing servo actuator measure force needed perform action needed find actuator generate necessary force wondered rule thumb guideline much overhead useful becomes waste oversimplified example say something force needed newtons actuator manage n maximum problems stall sort friction imperfections use actuator produce n available fits design budget testing become apparent sluggish good trial error way measure rule approximation realize variables mechanics construction alter force needed considered ideal accepted value simple applications something need x force install actuator x force,actuator force,actuator force
908,best technique built ejectable drawer,want build closet ejectable drawers top buttons eject opening drawers closet looking ideas accomplish kind springs slider mechanisms materials use examples,motion,motion
909,machine aluminium low budget,robotic projects need aluminium parts looking way build chassis including simple gear box need high precision options machine aluminium investing expensive tools think design parts cad send third party company fabrication problem hobby projects need large quantities piece production expensive buy cheap tools work hand know tools fit task best moreover results inaccurate problem designs moving parts find someone cnc let machine parts result slow prototyping cycles method home expensive tools perfect looking solution,cnc chassis,chassis cnc
910,position control omni wheel drive robot,want create robot navigate desired path path straight line circular path given radius use omni wheel drive platform positioning using research paper perform dead-reckoning using mouse sensors dead-reckoning using mouse sensors understood get x θ positions actual positions robot used calculate error using pid compensate error find error desired position robot moment example robot needs move circular path equation x^2 y^2 want calculate position sec someone done similar stuff please post link able find resource web,mobile-robot pid kinematics wheeled-robot motion,mobile pid robot motion kinematics wheeled
911,matlab moving robot towards detected block,"matlab code used detect red colored object want control bot move towards detected object need simple algorithm idea controlling servo able get snapshot data imread track red objects real time subtract red component grayscale image extract red components image diff_im imsubtract data ,1 rgb2gray data use median filter filter noise diff_im medfilt2 diff_im convert resulting grayscale image binary image diff_im im2bw diff_im,0.18 remove pixels diff_im bwareaopen diff_im,300 label connected components image bw bwlabel diff_im image blob analysis get set properties labeled region stats regionprops bw display image imshow data hold loop bound red objects rectangular box object length stats bb stats object .boundingbox bc stats object .centroid rectangle bb plot bc bc a=text bc +15 bc strcat num2str round bc num2str round bc set end hold",mobile-robot microcontroller wheeled-robot robotc,mobile robotc microcontroller robot wheeled
912,plot line centroids matlab,able locate centroids blocks unable join blocks line segment avoiding shown figure please need help achieve using matlab,computer-vision motion-planning navigation matlab,computer motion planning matlab navigation vision
913,device roll mat,looking direction create device following imagine yoga mat want device roll unroll human intervening rolling process reliable robotics forums appear section mechanical engineering posting question,motor mechanism,mechanism motor
914,diy laser cutter small acrylic robot baseplate,need help choose desk top low cost diy/high school grade laser cutter making base plate diy robots maximum a4 paper size photo idea comment advises cover questions welcome power needed cut acrylic thick many sellers watts range cut thickness depends cut speed extend choose slow speed cut thicker sheet cut thickness depends color/clear acrylic co2 laser units options air blower honeycomb bottom plate functions options useful case cad drawing software supported range products main function cutting flat acrylic plate additional z axis motor rise/lower work piece engrave/photo/line_letter marking objects software needed support operation,laser,laser
915,natural frequency computation pid gains computations,trying parametrize low-level gains robotic arm arm uses classical pid joint trying use method based computation trial-and-error/tweaking approach method use considers joint assumes system driven pid linear hence infer transfer function characteristic polynomial poles gives gains k_p k_i k_d joint computed gains depend natural angular-frequency example k_p w^2 inertia w natural angular-frequency hence question compute w natural angular-frequency system enormous computation involving geometry complex characteristics robot computer simple assumptions made give rough result w guess complex computation reasons pid gains found trial-and-error computation looking details subject help understand possible kind regards antoine,control pid robotic-arm,control pid arm robotic
916,mechanical electrical engineering robotic automation,decided pursue career automation robotic moment torn mechanical electrical engineering know relate choices career moment think hope guys help solve dilemma using insights/experiences assist following questions experiences opinions engineering fields crucial challenging automation/robotics project see increase demand importance future become outdated/obsolete least develop slower rate compare feeling ee slight edge matter sure fields versatile physical demanding frail easier self-study robotics broad complex field prepared step comfort lots studying achieve goals passion come questions sure guys got gist puzzle thank much apologize grammatical error,beginner automatic,automatic beginner
917,denavit-hartenberg parameters scara manipulator,going textbook robot modeling control learning dh convention working examples issue following example given image problem link parameter table tried filling got answers believe parameter d1 representing link offset analogous d4 parameter anyone explain wrong confirm right great hate textbook lol cheers,forward-kinematics dh-parameters,kinematics parameters dh
918,pid system pole origin,seen lot places methods tuning pid controller say apply step input system based response tune pid parameters following rule thumb system pole origin words step response system increasing ramp output example let say spinning wheel fixed center control amount torque applied make spin read position angle want design pid controller set position less step-motor done note step input case constant torque make wheel spin faster faster proceed,pid,pid
919,dynamic tracking precision ur5/10,willing use universal robot arm ur10 path following mode i.e desired trajectory robot effector like effector follow possible specs give repeatability +-0.1mm written guess static precision robot enough time converge position dynamic precision i.e max position error performing desired trajectory anyone know matter kind regards antoine,dynamics errors,dynamics errors
920,torque control monitoring servo,trying control servo motor operation torque control interfacing sensor avr monitor torque value sensor control torque according given set point .is possible make setup yes thanks,torque servomotor avr,servomotor torque avr
921,mechanism oscillate needle object vertical motion,pop needle object toothpick matchstick etc hole surface push automatically.i need make array needles needle position controlled individually.the objects supposed oscillated locked positions-either surface trying search mechanism achieve this.this done simple dc servo motor problem limited objects base area cm x cm.moreover power source dc +5 v thought creating small electromagnets springs sure it.any inputs appreciated,mechanism,mechanism
922,ekf slam mahalanobis distance,done ekf localization known unknown correspondences ekf slam known correspondences stated probabilistic robotics moved ekf slam unknown correspondences algorithm page \psi_ k h^ k \bar \sigma h^ k q \pi_ k z^ \hat z k \psi^ -1 k z^ \hat z k endfor \pi_ n_ t+1 \alpha j \underset k argmin \pi_ k n_ max\ n_ j understand line book page authors state line sets threshold creation new landmark new landmark created mahalanobis distance existing landmarks map exceeds value \alpha ml correspondence selected line \alpha line computed mahalanobis distance research mahalanobis distance understand role ekf slam edit found book university library robotic navigation mapping radar authors state mahalanobis distance measure slam define d^ z^ j k \hat z k provides measure spatial difference measurement z^ j k predicted feature measurement z k given d^ z^ j k \hat z k z^ j k \hat z k s^ -1 k z^ j k \hat z k value calculated possible z^ j k \hat z k combinations d_ j k \hat z k \leq \alpha referred validation gate leave question \alpha,slam ekf mapping,ekf slam mapping
923,genetic alogorithm suitable mobile robot path planning,regarding project work mobile robot planning chosen genetic good mobile robot path planning start get guidelines,mobile-robot navigation algorithm,mobile navigation robot algorithm
924,single-shaft vs double-shaft motors,trying make line follower robot need help regarding type dc motor use single shaft bo motor double shaft bo motor anyone help understand difference link single shaft bo motor http //www.evelta.com/industrial-control/motors-and-accessories/100-rpm-l-type-single-shaft-bo-motor double shaft bo motor http //www.evelta.com/industrial-control/motors-and-accessories/100-rpm-l-type-double-shaft-bo-motor,motor line-following,following line motor
925,ros navstack skid steering robots,migrating differential drive design skid steering design robot want know use navstack skid steering problems terms localization things let wheels side robot left side right side maintain velocity acceleration unicycle model differential drive robot apply skid steering,ros navigation differential-drive driver,driver ros navigation drive differential
926,laser power cutting engraving wood acrylic robot baseplates,need buy diy/high school grade laser laser power needed wood acrylic thick cutting decorative engraving parameters need take care selecting suitable machines,laser,laser
927,quadcopter stabilization z-axis holding altitude,spent work quadcopter firmware model stabilizing attitude noticed changing altitude pressure changes wind turbulence want get rid altitude drops found much literature approach using accelerometer calculates current g-force z-axis g-force g ms feed accelerometer term cm s² pid output sent motors model reacts falling up-regulation motors sure smart feed current acceleration regulator wonder smarter method deal sudden smaller changes altitude current code define hld_altitude_zgbias define hld_altitude_ztbias const float fscalef_g2cmss inert_g_const int_fast16_t iacczoutput // accelerometer // calc current g-force bool bok_g float faccel_g device :get_accel_z_g m_phalboard bok_g // get acceleration g // small fast stabilization using accelerometer static short ilaccsign fabs faccel_g hld_altitude_zgbias ilaccsign == ilaccsign sign_f faccel_g // g-force act minimum time interval pid used uint_fast32_t iaccztime m_phalboard- m_phal- scheduler- millis m_iaccztimer iaccztime hld_altitude_ztbias return // check direction acceleration changed // reset timer short icaccsign sign_f faccel_g icaccsign ilaccsign // reset switch acceleration becomes normal m_iaccztimer m_phalboard- m_phal- scheduler- millis // reset pid integrator m_phalboard- get_pid pid_acc_rate .reset_i // save last sign ilaccsign icaccsign return // feed current acceleration pid regulator float faccz_cmss sign_f faccel_g fabs faccel_g hld_altitude_zgbias fscalef_g2cmss iacczoutput static_cast int_fast16_t constrain_float m_phalboard- get_pid pid_acc_rate .get_pid -faccz_cmss -250 // reset switch acceleration becomes normal m_iaccztimer m_phalboard- m_phal- scheduler- millis // reset pid integrator m_phalboard- get_pid pid_acc_rate .reset_i,quadcopter multi-rotor,quadcopter rotor multi
928,arduino power supply,want power arduino uno know connecting usb pc dc power supply.but want connect battery source see image know silly question battery connector regular dc jack found rc toys power arduino battery connect dc power supply adapter charge discharged please mention specifications dc power supply adapter used charging battery,arduino battery,battery arduino
929,motor control using arduino/raspberry pi,new robotics like know output lines taken arduino raspberry pi,arduino raspberry-pi,pi raspberry arduino
930,models perfect represent robotic environments,sebastian thrun says paper particle filters model detailed fails represent complexity simplest robotic environment means someone please elaborate,localization theory,theory localization
931,comprehensive comparison slam algorithms,looking research paper series papers compare performance various simultaneous localization mapping algorithms rovers variety real world environments particular looking computational speed accuracy compared real world environment memory power efficiency metrics journal publishes experimental performance comparisons,slam reference-request,slam request reference
932,filter vibration,working quadcopter reading accelerometer gyro data mpu6050 using complementary filter calculate roll pitch values quad floor motors turned roll values -4.88675227698 -5.07656137566 -3.53006785613 -2.64380479638 -3.70460025582 messy like high/low values idea edit moment think solution low-pass filter let know successful,quadcopter accelerometer gyroscope,quadcopter gyroscope accelerometer
933,raspberry pi finer servo control,usig rpi servoblaster control servos set -- step-size decrease tried set step-size servoblaster displays invalid step-size specified tried set pulse width micoseconds echo /dev/servolaster works unpredictabe step size set echo /dev/servoblaster motor starts spinnig echo /dev/servoblaster motor **smoothly** speeds echo /dev/servoblaster motor speed changed echo /dev/servoblaster motor speeds ok changed +/- echo /dev/servoblaster motor speed changed echo /dev/servoblaster motor speeds **fastly** echo /dev/servoblaster motor **smoothly** speeds motor turnigy aerodrive 2830-11 esc turnigy multistar idea,raspberry-pi servos,pi raspberry servos
934,finding changes environment using laser,known map environment occupancy grid map trying find anything changed environment using laser navigating using maximum likelihood laser known map question know measurements corresponding changes environment static changes differs known map trying find objects came environment moved environment using laser,slam mapping laser occupancygrid,slam laser mapping occupancygrid
935,technical name robot wheels aligned perform spot turn,robotic simulator enables wheel rover perform spot turn prepare rover spot turn arrange/align wheels fashion front side // \\ || || \\ // rear technical name circular wheel arrangement circular alignment,mobile-robot wheeled-robot wheel,mobile wheel robot wheeled
936,advantage velocity motion models odometry motion models slam,seen several examples slam algorithms ekf slam graph slam seif slam written terms velocity motion model see example slam utilizing odometry motion model wonder inherent advantage using velocity motion model odometry model problem something fact sensor information comes motion taken place whereas velocity control commands executed motion,slam motion,motion slam
937,assumptions nature landmarks slam algorithms,trying understand role landmarks slam algorithms glanced books concerning landmark based slam algorithms come rudimentary understanding believe flawed think slam works understand landmarks set points map whose locations known priori furthermore number landmarks map fixed number landmarks detected time change number landmarks exist map remains static times understanding slam algorithms exploit fact points identifiable known priori robot senses landmark knows landmark detected knows exact location landmark slam algorithm uses noisy distance detected landmarks known location estimate position map think wrong naive understanding usefulness slam limited controlled environments i.e known landmarkds useless unknown environments priori known landmarks presume sort feature detection algorithm add landmarks detected changes assumption number given landmarks static times know wrong understanding feature based slam sure assumptions wrong feature based slam algorithms assume static number landmarks landmarks need known detected change algorithm special kinds slam algorithms deal unknown environments unknown total number landmarks,slam,slam
938,pulse position modulation used rc controls,several channels multiplexed single physical wire channels transmitting value frame wont overlap pulses,rcservo pwm,pwm rcservo
939,choosing motor tricopter,newbie rc field..i planning construct anyone help find power rating select motor tricopter beginning stage construction arm length frame need thrust -- gms motor,motor,motor
940,difference yaw attitude quad rotor,big miss conception attitude represent quad earth post calculate imu gyro +accele magent,imu,imu
941,need clear concepts ahrs attitude yaw pitch roll marg sensors -ins,started reading ins orientation quadrotors faced following terms ahrs attitude yaw pitch roll marg sensors know example calculate yaw pitch roll related attitude attitude way get calculated ahrs attitude heading reference system formed yaw pitch roll marg magnetic angular rate gravity related terms ins inertial navigation systems questions concepts meaning cooperate got calculated sensors suits,navigation,navigation
942,make mac detect avr board using usbasp burn program,new embedded starting avr programming using c. working mac os using avrdude xcode ide works testing code using proteus want burn .hex avr board usbasp able connect lights board searching internet think mac detecting board checked /dev directory usb device found sure next make mac detect board burn .hex found http //www.fischl.de/usbasp/ idea use required question stand make mac detect avr board using usbasp burn program fyi installed crosspack mac,usb embedded-systems avr,avr usb embedded systems
943,servo controlled valve,trying build servo-controlled water valve max pressure psi valve size anyone recommend suitable 1/4-turn valve ceramic ball valve anything else easy turn even pressure require little torque turn standard servo rotate small lever attached,servos valve,valve servos
944,beep blink problem,built first quadcopter run snag plug power get beep red blink flight control board nothing happens turn controller red light turns reciever nothing happens tell plugged everything sure proceed flight control board flight control board manual pdf esc's connection power distribution board flight control board assuming gets power esc video used figure build quad side- note video cut esc cords done seemed silly step seen applications cut updated firmware board put board user manual pdf,control quadcopter,control quadcopter
945,calculate altitude imu,calculate attitude imu example mathematical equations,imu,imu
946,ackerman steering model,trying create simulation robot ackerman steering car assuming 3-wheeled robot wheels steering wheel front knowing wheel velocity steering angle need able update robot current position velocity new values time t+1 obvious way calculate position centre rotation axles wheels meet leads undefined centre rotation means model work normal case robot driving straight line model steering works reasonable range,mobile-robot simulation,mobile robot simulation
947,relative navigation systems,im trying develop system navigates large outside space accuracy vital gps inaccurate number options used anyone tried used anything else wifi triangulation dead reckoning rfid landmarks,navigation,navigation
948,calibrate imu unit,calibrate imu unit read papers topic wondering standard methods,imu,imu
949,dc motor control speed-torque curve,trouble understanding use speed-torque curve dc motor understand gradient speed-torque curve defined design motor exact position curve depending voltage applied voltage changed speed-torque curve changed remains parallel initial curve voltage changed see figure intuitive guess using motor given desired operation point desired speed desired torque corresponding speed-torque curve cd gradient specified data sheet motor passes operation point curve cd obtained corresponding voltage vd see diagram next guess order motor operate desired operation point set voltage applied motor vd apply current id computed using torque torque constant read done dc motor controllers seem drive motor using current sort pwm magic shown following diagram maxon anyone knows voltage used dc motor control current understand set speed modify voltage pwm useful looked hours internet find anything relevant thanks antoine,motor control,control motor
950,get pure end-effector translation jacobian,dof arm controlling joint velocities computed jacobian standard way example \large j \begin bmatrix j_p \\j_o \end bmatrix j^ \dagger j^t jj^t -1 \dot q trans j^ \dagger _p v_ e_ trans \dot q rot j^ \dagger _o v_ e_ rot \dot q \dot q trans \dot q rot specifying translational velocities end-end effector rotates realized able compute much end-effector rotate instantaneous \dot q put jacobian subtract joint velocities using passed v_ e_ rot v_ e_ rot r q r q+\dot q trans r q computes end-effector rotation joint angles ok way base simpler way aware compute ik point small distance end-effector rotation pull joint velocities delta joint angles exact wanted go jacobian route think fail side question compute r q r q+\dot q trans get global end-effector angular velocity attempts converting delta rotation matrix euler angles yield wrong results quick tests implemented procedure achieve pure end-effector rotation maintaining global position easier q q+\dot q rot vector subtraction kind work,kinematics robotic-arm jacobian,jacobian kinematics arm robotic
951,robot loud alarm,working project want sound somebody messing robot e.g. robot shaken cameras/lidars blocked using loud speakers x inch watts ohm speakers loud small speakers alarm systems small loud closed car alarm recommend something plug robots computer interface microcontroller fine,microcontroller ros navigation,ros microcontroller navigation
952,quadcopter balance,bulding quadcopter using compenents microcontroller tiva c lanchpad arm cortex m4 mhz running code mpu sensorhub ti esc hobbywing skywalker use sample project comp_dcm tivaware use angles pid running test pid control motors motors oscillate video found guy quadcopter unbalance,quadcopter,quadcopter
953,type camera used detecting road lanes good processing matlab,parameters selected choose camera lane detection parameters kept mind picture quality frame rate cost e.t.c camera suit best application,cameras,cameras
954,euler angles imu,using adafruit module need convert accel magneto gyro euler angles motion capture application hints start managed get x z imu facing upward orientation changes axes dont behave using euler angles hints reference euler compass app example trying get get pitch yaw roll imu module irrespective kept,imu,imu
955,whats logic implement particle filter robot range sensor,trying implement particle filter robot java robot range sensor world obstacles top bottom calculating distance robot obstacle center performing activity particle calculate difference robot particles particles difference robot measured distance small give higher probability resampling problem approach told friend assuming know locations obstacles make process useless approach sense know obstacles particle implemented particle filter work case know obstacles location example process great help thanks,localization particle-filter,filter particle localization
956,create robot respondes input following flowchart,basic skills components needed creating robot gets yes inputs push buttons goes defined flowchart plays relevant audio file time gets input flowchart ____question yes question question yes question question question question ...,microcontroller,microcontroller
957,correcting gps track visual odometry sensor fusion,trying build low cost precise outdoor positioning explored ns-raw rtklib doable need base station get correction data rover external correction data hassle action radius base station limited solution straightforward deal in-house streamed correction data wondering able improve accuracy ordinary uncorrected gps+glonass device found common smartphone stereo visual odometry today consumer gnss chips seem stable accuracy range viso library translation error distance idea use visual odometry smoothing rough gps track question done terms sw. input tracks gps device viso library think kind filter fuse sensor data get greater precision,computer-vision gps sensor-fusion odometry,odometry fusion computer sensor vision gps
958,ensemble kalman filter slam,know extended kalman filter approach simultaneous localization mapping curious slam algorithm exploits ensemble kalman filter citation great possible,kalman-filter slam reference-request,filter slam request reference kalman
959,pid tuning quadcopter problem,tuning pid quadcopter problem different base throttle seems adjust different pid gains order quadcopter balance,pid,pid
960,purpose programming esc,planning buy esc tricopter setup purpose programming esc cost effective necessary buy programming card program esc model,esc,esc
961,arduino dual bridge supply least,looking dual motor controller supply least channel motors used arduino know product specs thanks,arduino motor ros h-bridge,bridge h ros motor arduino
962,yaw angle calculation drone pid distance sensors,building control system parrot drone access thrust controls up/down z left/right forward/backwards x turn left turn right yaw ruby library computer goal system keep drone particular distance wall moving up/down left/right directions added sonar distance sensors left right props main problem figuring distance sensors equal yaw reading ψ feed pid take action turn left right correction getting help conversion distances yaw angle big help thoughts pid appreciated first time working,sensors quadcopter pid,quadcopter sensors pid
963,use line sensor proximity sensor,rsl line sensor designed distinguish black white lines detects white surface gives digital output case black surface needs close uses infra-red-sensors wanted use sensor proximity sensor tell white surface possible think problem need increase range giving gives white surface close sensors want white surface bit distance adjustable screw adjust something pot written working arduino,arduino mobile-robot sensors,mobile sensors robot arduino
964,velocity derivatives using quaternions,compute angular linear velocities quaternions new area studied algebra unable understand compute velocities,kinematics,kinematics
965,control arduino board wireless ps3 controler,building hexapod bot composed arduino mega board usb ssc-32 lynxmotion want add ps3 wireless controller move hexapod made search nothing realy interesting servoshock module seems works servoshockshield kind arduino card servo output use servoshock module connect rx/tx port arduino mega board solution board documentation sources codes thank,arduino wireless,wireless arduino
966,calculations badminton robot mechanisms,designing badminton robot confused mechanisms needed badminton robot various calculations needed millisecond response.i confused calculations needed forces needed efficient angles needed hitting shuttlecock.please suggest ideas suggestions needed construction badminton robot,sensors design mechanism actuator servomotor,servomotor actuator sensors design mechanism
967,using kinect medical application computer possible,use kinect application final work mobile means computer thought using microcontroller handle data kinect possible job mesuring points body axis x z get coordinates know accurate,microcontroller kinect,kinect microcontroller
968,reverse lift mechanism,made rc robot wheelchair planning attach snow wondering mechanism able lift plow reversing channel transmitter control plow movement thinking mechanical lift triggers reversing guys know something use thanks,wheeled-robot mechanism,wheeled mechanism robot
969,pd algorithm quadrotor simulation,big problem trying stabilize quadrotor pd controller model program written c++ model dynamic taken source internet code wrote model eq system see page /* calculate acceleration axis */ body_pos_current_.x_dot_2 thrust_.total masse_ sin body_ang_current_.theta cos body_ang_current_.phi cos body_ang_current_.psi sin body_ang_current_.psi cos body_ang_current_.phi body_pos_current_.y_dot_2 thrust_.total masse_ sin body_ang_current_.theta sin body_ang_current_.psi cos body_ang_current_.phi cos body_ang_current_.psi sin body_ang_current_.phi cos body_ang_current_.psi body_pos_current_.z_dot_2 thrust_.total masse_ cos body_ang_current_.theta cos body_ang_current_.phi body_ang_current_.phi_dot_2 torque_.phi jxx_ body_ang_current_.theta_dot_2 torque_.theta jyy_ body_ang_current_.psi_dot_2 torque_.psi jzz_ body_ang_current. angle body_pos_current_. position structures defined class store position velocities accelerations model given motor velocities axis \large \cases \ddot x \sin \psi \sin \phi \cos \psi \sin \theta \cos \phi \frac u_1 \cr \ddot -\cos \psi \sin \phi \sin \psi \sin \theta \cos \phi \frac u_1 \cr \ddot z -g \cos \theta \cos \phi \frac u_1 \cr \dot p \frac i_ yy i_ zz i_ xx qr \frac j_ tp i_ xx q \omega \frac u_2 i_ xx \cr \dot q \frac i_ zz i_ xx i_ yy pr \frac j_ tp i_ yy p \omega \frac u_3 i_ yy \cr \dot r \frac i_ xx i_ yy i_ zz pq \frac u_4 i_ zz get accelerations going integrate get velocities positions /* get position velocities accelerations */ body_pos_current_.x_dot body_pos_current_.x_dot_2 real_duration body_pos_previous_.x_dot body_pos_current_.y_dot body_pos_current_.y_dot_2 real_duration body_pos_previous_.y_dot body_pos_current_.z_dot body_pos_current_.z_dot_2 real_duration body_pos_previous_.z_dot body_ang_current_.phi_dot body_ang_current_.phi_dot_2 real_duration body_ang_previous_.phi_dot body_ang_current_.theta_dot body_ang_current_.theta_dot_2 real_duration body_ang_previous_.theta_dot body_ang_current_.psi_dot body_ang_current_.psi_dot_2 real_duration body_ang_previous_.psi_dot body_pos_current_.x body_pos_current_.x_dot_2 pow real_duration body_pos_previous_.x_dot real_duration body_pos_previous_.x body_pos_current_.y body_pos_current_.y_dot_2 pow real_duration body_pos_previous_.y_dot real_duration body_pos_previous_.y body_pos_current_.z body_pos_current_.z_dot_2 pow real_duration body_pos_previous_.z_dot real_duration body_pos_previous_.z body_ang_current_.phi body_ang_current_.phi_dot_2 pow real_duration body_ang_previous_.phi_dot real_duration body_ang_previous_.phi body_ang_current_.theta body_ang_current_.theta_dot_2 pow real_duration body_ang_previous_.theta_dot real_duration body_ang_previous_.theta body_ang_current_.psi body_ang_current_.psi_dot_2 pow real_duration body_ang_previous_.psi_dot real_duration body_ang_previous_.psi /* copy new value previous next loop */ body_pos_previous_.x body_pos_current_.x body_pos_previous_.y body_pos_current_.y body_pos_previous_.z body_pos_current_.z body_pos_previous_.x_dot body_pos_current_.x_dot body_pos_previous_.y_dot body_pos_current_.y_dot body_pos_previous_.z_dot body_pos_current_.z_dot body_ang_previous_.phi body_ang_current_.phi body_ang_previous_.theta body_ang_current_.theta body_ang_previous_.psi body_ang_current_.psi body_ang_previous_.phi_dot body_ang_current_.phi_dot body_ang_previous_.theta_dot body_ang_current_.theta_dot body_ang_previous_.psi_dot body_ang_current_.psi_dot model seems work reported many papers unstable needs controls approach create controller pd keep height constant moving quadcopter putting value example meter see reacts small code tried /* pd controller */ double e body_pos_current_.z // try value thrust_.esum thrust_.esum e thrust_.total e real_duration thrust_.esum problem see video copter starts falling ground reaching desired altitude meters comes like spring damped tried many different value pd controller seems affect dynamic model strange thing goes negative point ground change desired height negative positive wrong code please point documents code understandable documented start thanks edit many thanks suggestion hi surprise know code lots potential problems efficient elaborate code explanation implementers rk4 integration read articles got idea rk vantage use simulations graphics pc example rewrote whole code /* calculate acceleration axis */ pos_.dvel.x thrust_.total masse_ -sin body_position_.angle.theta cos body_position_.angle.phi cos body_position_.angle.psi sin body_position_.angle.phi sin body_position_.angle.psi pos_.dvel.y thrust_.total masse_ sin body_position_.angle.phi cos body_position_.angle.psi cos body_position_.angle.phi sin body_position_.angle.theta sin body_position_.angle.psi pos_.dvel.z thrust_.total masse_ -cos body_position_.angle.phi cos body_position_.angle.theta pos_.domega.phi torque_.phi jxx_ pos_.domega.theta torque_.theta jyy_ pos_.domega.psi torque_.psi jzz_ /* get position velocities accelerations */ body_position_ rkintegrate body_position_ real_duration clear easy debug useful functions implemented quadrotorcontroller :state quadrotorcontroller :evaluate const state initial const derivative double dt state output output.position.x initial.position.x d.dpos.x dt output.position.y initial.position.y d.dpos.y dt output.position.z initial.position.z d.dpos.z dt output.velocity.x initial.velocity.x d.dvel.x dt output.velocity.y initial.velocity.y d.dvel.y dt output.velocity.z initial.velocity.z d.dvel.z dt output.angle.phi initial.angle.phi d.dangle.phi dt output.angle.theta initial.angle.theta d.dangle.theta dt initial.angle.psi d.dangle.psi dt output.omega.phi initial.omega.phi d.domega.phi dt output.omega.theta initial.omega.theta d.domega.theta dt initial.omega.psi d.domega.psi dt return output :derivative quadrotorcontroller :samplederivative double dt const state samplestate derivative output samplestate.velocity output.dvel.x pos_.dvel.x output.dvel.y pos_.dvel.y output.dvel.z pos_.dvel.z output.dangle samplestate.omega output.domega.phi pos_.domega.phi output.domega.theta pos_.domega.theta output.domega.psi pos_.domega.psi return output quadrotorcontroller :state quadrotorcontroller :rkintegrate const state state double dt const double c1 const double c2 a21 const double c3 a31 a32 const double c4 a41 a42 a43 const double b1 b2 b3 b4 derivative k1 samplederivative state derivative k2 samplederivative c2 dt evaluate state k1 a21 dt derivative k3 samplederivative c3 dt evaluate state k1 a31 k2 a32 dt derivative k4 samplederivative c4 dt evaluate state k1 a41 k2 a42 k3 a43 dt const derivative derivativesum k1 b1 k2 b2 k3 b3 k4 b4 return evaluate state derivativesum dt lost ... simulated qudrotor behavior implemented pd algorithm discussed paper stabilize z height get crazy due unstable behavior ... dunno wrong code implementation find source internet good self explaned dynamic model quadrotor regards,control quadcopter,control quadcopter
970,non-linear complementary filter so3 corrected equations,reading paper multirotor aerial vehicles modeling estimation control quadrotor mahony kumar corke stumbled following equations non-linear attitude like implement believe something wrong \dot \hat r r \left \omega_ imu b \right _\times \alpha \\ \dot \hat b k_b \alpha \\ \alpha \left \frac k_a g^2 r ^t \vec z \times a_ imu \frac k_m |^am|^2 r ^t ^am \times m_ imu \right _\times k_e \mathbb p r r_e^t r b etimates gyroscope bias \omega_ imu a_ imu m_ imu r_e^t measurements k_x scalar gains set measurements evailable \dot r \alpha need matrices \in \mathbb r due definitions b \dot \hat b need vectors \in \mathbb r ^3 correct version second equation \dot \hat b k_b \alpha,control quadcopter,control quadcopter
971,related quadcopters,trying make quadcopter scratch fair amount experience trying understand necessary systems work seem figure pid means method regulating pitch roll stabilizer think read system detects orientation craft tries correct,arduino quadcopter microcontroller pid beginner,quadcopter microcontroller pid beginner arduino
972,consumer grade cnc machines capable cutting tile,slice dice floor tile pieces arrange geometric patterns cad designs parts consumer grade cnc machine capable job,cnc,cnc
973,laser beam based model probability case single particle,trying calculate likelihood laser scan z give pose x known map using beam based model p\left z_t|x_t \right =\prod_ i=1 n p'\left z_i|x_t \right scan rays i.e n=360 calculate p\left z_t|x_t \right becomes multiplication propabilities ros amcl using ad-hoc works better p\left z_t|x_t \right +=\sum_ i=1 n p'\left z_i|x_t \right *p'\left z_i|x_t \right *p'\left z_i|x_t \right normalise number particle get weight particle query get probability normalised single calculation i.e image case single particle thanks,mobile-robot slam laser probability,mobile slam laser robot probability
974,use linear quadratic regulator minimize output error,like create infinite-horizon continuous-time lqr cost functional defined j \int_ ^\infty \left e^t q e u^t r u \right dt e states error x-x_d trouble concluding appropriate ricatti equation x_d function time leading term \dot x_d problem solvable ideas,control,control
975,read current pololu dual mc33926 motor driver shield arduino,purchased pololu dual mc33926 motor driver shield arduino reason read current motor controller serial.println prints weird data garbage use ros robot operating system see -0.0 minus value motors done plug shield arduino uno r3 model run demo comes sample library -- http //github.com/pololu/dual-mc33926-motor-shield fix issue,arduino ros actuator stepper-driver current,arduino stepper driver current actuator ros
976,kinect development kit aid obstacle-avoiding robot,friends interested working robot know little nothing robotics lot experience programming start hoping find development kits libraries help aid goals robot robot needs move point point b. moving needs detect rocks approx foot diameter ground needs detect rocks big stop turn proceed theory want detect kinect angle accelerometers use data obtain cartesian coordinates ground kinect sensors want way assemble robot memory find better paths right concerned motors robot vision element ie interested software interfaces motors robot something interfaces kinect,computer-vision kinect,kinect computer vision
977,linear slider motor mount location pros/cons,designing linear camera slider used hold camera equipment weighing kgs including lenses monitors everything know camera slider linear slider top camera mounted camera slided create nice footage problem looking available camera sliders seems ways motor mounted sliders motor mounted side motor mounted carriage like know option optimal performance-wise slider used create bottom top slide shots resistant motor vibration motors vibrate lot effects leak produced footage additional questions motor mounted carriage efficient carry weight addition camera load pulling force greater pushing force idea great someone explained atleast case motor mounted end able lift ease belt setup shown first figure dampen motor vibrations will/wo motor vibrating end get amplified whole setup attached single tripod exact center slider design less stressful motor taking inertia consideration cases designs suitable vertical pulling load gravity manufacturers use designs hard predict design better help appreciated please note question migrated stackexchange physics electrical forum mods thought appropriate,control design stepper-motor motion,control stepper design motion motor
978,low cost alternatives lidar,need effective lidar disadvantages compared lidar probable alternatives edit intending use outdoors navigation autonomous vehicle low cost lidar alternative sensor obstacle detection,sensors navigation cameras sonar lidar,sonar sensors cameras navigation lidar
979,state linear actuator,need state linear actuator look picture understand mean care hand move things squares bidirectional linear actuators needed cheapest tiniest actuator sth move squares states care much higher square rises,actuator,actuator
980,particles behaving implementation particle filter,"implementing particle filter java problem particle filter implementation particles go robot i.e resampling process choosing particles robot near.it particles chase robot remain trying find root cause luck anyone please help going wrong adding imp code snippets screenshots consecutive order make clear details using range sensor works direction i.e fixed tells distance obstacle front obstacle line vision tells distance boundary wall code calculating range /* method returns range reading sensor mounted top robot uses x actual position robot/particle creates vx vy virtual x virtual x loop current position till obstruction tell distance till */ private int calculaterange double x double double vx double vy int counter int loop_counter robotiswithinboundary vx vy int pace vx += pace* math.sin math.toradians robot_orientation vy += pace* math.cos math.toradians robot_orientation counter++ line2d line1 new line2d.double x vx vy line1.intersects obst1 //system.out.println distance obst1 +counter loop_counter++ break line1.intersects obst2 //system.out.println distance obst2 +counter loop_counter++ break return counter /* method tells robot/particle boundary */ private boolean robotiswithinboundary double x double boolean verdict true verdict false verdict false return verdict /* method returns range reading sensor mounted top robot uses x actual position robot/particle creates vx vy virtual x virtual x loop current position till obstruction tell distance till */ private int calculaterange double x double double vx double vy int counter int loop_counter robotiswithinboundary vx vy int pace vx += pace* math.sin math.toradians robot_orientation vy += pace* math.cos math.toradians robot_orientation counter++ line2d line1 new line2d.double x vx vy line1.intersects obst1 //system.out.println distance obst1 +counter loop_counter++ break line1.intersects obst2 //system.out.println distance obst2 +counter loop_counter++ break return counter /* method tells robot/particle boundary */ private boolean robotiswithinboundary double x double boolean verdict true verdict false verdict false return verdict calculating weights /* method calculates importance weights particles based robot_range reading range sensor robot */ private double measurementprobability int index double probability=1 double particle_x_position=particlelistx.get index double particle_y_position=particlelisty.get index double particle_vx=particle_x_position double particle_vy=particle_y_position int range_counter=0 int loop_counter=0 int distance calculaterange particle_x_position particle_x_position particle_vx particle_vy range_counter loop_counter probability *= calculategaussiandistance distance sensenoise robot_range //system.out.println probability return probability private double calculategaussiandistance double mu double sigma double x double gdistance=math.exp math.pow mu x ,2 math.pow sigma,2 math.sqrt math.pi math.pow sigma,2 return gdistance resampling /* method provides resampled particle list chooses particle list based weights replacement */ private int giveresampledparticle int index randominteger n-1 double sample =0.0 double maxweight maximumweight sample += randomdouble maxweight sample particlelistprobability.get index sample -= particlelistprobability.get index index index +1 return index",localization particle-filter,filter particle localization
981,robotc color sensor error,trying write simple program robot lego follow blue line pragma config sensor s1 sensorcolorblue // code generated configuration wizard // task main true sensorvalue s1 == sensorcolorblue motor motorb motor motorc -50 motor motorb -50 motor motorc wait1msec using nxt color sensor problem motor moving know none motors broken tested somebody help diagnose problem,sensors robotc,sensors robotc
982,robot wheel control brushless dc motor servo motor,use brushless dc motor use servo motor differences adding encoder dc motor position similar servo motor,motor brushless-motor servomotor,servomotor brushless motor
983,simple non-sonic omni-directional rangefinding beacons exist,robotics team plans compete competition rules sort sonic sensor allowed used guess limits sort em frequency team looking simple beacon system beacon attached robot beacon b attached known point competition space beacon give information b searching turn laser rangefinders required pointing target cs student familiar terminology aid searches nice property beacons gave angle beacon beacon b field view necessary multiple beacons used obtain information kinect working able track things give distances looses accuracy distance arena meters long simple possible need relative position robot alternate solution way solve omni-directional beacon give angle information used triangulate job,localization electronics laser rangefinder,rangefinder electronics laser localization
984,uncertainty initializing new landmark ekf-slam,ekf-slam based-feature map robot senses new landmark augmented state vector result size state vector covariance matrix expanded question uncertainty new landmark correlation pairs covariance matrix assign assign error estimation landmark change time goes large value estimation getting better time robot reobserves landmark error approaches fixed value assume problem id assigning uncertainty suggestions,slam ekf errors mapping,ekf slam errors mapping
985,quadcopter roll pitch fluctuation,quadcopter turn quadcopter letting stable ground see roll pitch fluctuate max difference degree protect sensor soft material observe max difference degree fluctuation quadcopter way complementary filter dcm scaling factor gyro accel thanks advance,quadcopter,quadcopter
986,deducing single wing plane transfer function aka transfer function estimation set points,trying control plane roll using pid controller problem finding transfer function used following method fix plane air tunnel change motor controls roll fixed steps check roll table roll/motor degree deduce nonlinear function using wolfram alpha approximation neural network correct method try method,pid,pid
987,increasing gyro accelerometer sensor range good bad affect accuracy,using imu unit gyro accelerometer found set acc range +/- till g gyro +/- deg/sec deg/sec know low cost full noise settings range best ensure higher accuracy,sensors imu accelerometer gyroscope,sensors imu gyroscope
988,kinematics/d-h parameters perpendicular joint axes,trying compute kinematics kuka using dh convention http //www.youbot-store.com/youbot-developers/software/simulation/kuka-youbot-kinematics-dynamics-and-3d-model arm joint arm joint revolute rotate world z-axis pointing sky joints revolute rotate x-axis let say points dh convention says joint distance common normal mistaken common normal y-axis horizontal meaning joint distance thinking use link joint1 joint2 ran problem joint4 joint5 link offset supposed previous z-axis case point link distance work common normal distance established common normal x-axis horizontal feel screwed sure simple solution see guess question use dh convention links 1-2 4-5 joint rotational axes perpendicular,kinematics forward-kinematics dh-parameters,forward kinematics parameters dh
989,controlling multiple arduinos,designing experiment controlling small wind turbines wind turbine need measure power time series voltage current time series generator control blade pitch angle yaw angle generator load using variable resistance control input pwm signal planning put uno zigbee wireless module turbine making measure power time series transmit central receive control input central node command control input servo motors central node additional arduino uno questions possible arduino send time series signal central node interference arduino wind turbines transmitting time series central server possible implement network recommending source learning helpful interface central node computer software computer need process received power time series determine optimum control input wind turbines control input transmitted wind turbines case good option interface algorithm arduino connected computer algorithm written matlab heard sketch interfacing arduino matlab efficient project,arduino,arduino
990,control ghz ar drone computer,doyusha nano spider r/c mini-copter controlled joystick ghz look low cost method control computer software problem transform wifi signal computer r/c signal compatible mini-copter receptor solution low cost,control quadcopter wireless,control quadcopter wireless
991,mechanical parts attached dyj48 stepper motor,sorry asking mechanical question people experience using motors better forum please guide seen online stepper motor dyj48 used tutorials rotate spin clothes pin attached trying get arduino work year old kid got motor rotating attach anything made wheel raw potato happy find guidance next,arduino motor,motor arduino
992,compressor air pressure control,trying make simple robot functionality someone functionality inflating balloon robot know control compressor using arduino problem requested task bit different air exit controllable arduino inflate balloon certain pressure depress air exit needed know possible depression pressure-in valvle think done using solenoid valve something bit unfocused days need hints thoughts,arduino wheeled-robot mechanism industrial-robot valve,industrial arduino valve robot mechanism wheeled
993,roboticists look used sensors/hardware,built self-driving vehicle-type robot competition looking sell sensors gps ins etc used order money project ebay people tend go looking used sensors hardware,sensors servos,sensors servos
994,finding light load high precision servo motor,project requires able rotate object degrees object small lightweight let say several grams axis spin direction needs able stop +/- +/-240 degrees origin limited experience motors robotics understanding servo motor best bet accuracy incorrect please let know know nothing motors spec sheets list lot specs mean much hoping learn mean time specifications need focusing requirements need high speed say accurate perfect micrometer like able run loop stopping hundreds times noticeable variance precise better specific accuracy let say object rotated flat surface top stopping points inspection surface needs appear level time hundreds cycles requirements met servo used building quadricopter going looking something higher grade,servomotor,servomotor
995,controlling dynamixel servo using arduino mega,planning control multiple dynamixel servos mx28t mx-64t using arduino mega servo uses serial communication need additional serial port interface xbee module seems common application controlling servos based arduino could't find web found constructed libraries https //code.google.com/p/slide-33/downloads/list library mx28t servo servo trying use uses uno interface xbee http //www.pablogindel.com/informacion/the-arduinodynamixel-resource-page/ library use uart1 serial1 interface servo ax-12 motors connect xbee module uart0 problem library outdated compatible mx64-t servo question experience controlling dynamixel mx24t mx64t servo series using xbee module experience please share possible arduino mega interface xbee module using serial1 i.e. rx18 tx19 able use library1 modification,serial,serial
996,slam landmarks using sonar,programming robot make map make move point solve slam problem biggest matter use landmarks find environment robot abilities move make distance measurements -120/+120 degrees using sonar find explained algorithm permits solve slam problem no-landmark limitation idea,slam sonar,sonar slam
997,over-voltage brushed electronic speed controller,battle robot hobby-weight class kg max want drive robot using cordless drill motors rated volts lipos means x volts volts good problem bought escs afterwards noticed rated 2-3s max volts question likely damage esc use lipos lipos buy lipos live reduced performance,motor esc,esc motor
998,adding reverse function brushed motor electronic speed controller,hobby-weight kg battle robot bought escs drive motors escs reverse function brake matter simple way achieve r/c settings setting middle position joystick stopped top-wards bottom-wards reverse achieve using arduino card relay switches use arduino worried high voltage current worrying get messy.. buy new escs features cost bit ones prefer try tricks,motor esc,esc motor
999,lipo battery changed,newbie robotics bought lipo realise overkill things expensive given know pack made individual cells volts way somehow separate cells get single cells,battery,battery
1000,estimate states lti output measured,estimate states discrete linear time-invariant system form \dot \vec x =\textbf \vec x +\textbf b \vec u \vec =\textbf c \vec x +\textbf \vec u measurements output performed irregular intervals suppose input measured initial approach design luenberger using estimates \textbf \textbf b \textbf c \textbf abovementioned matrices update t_s seconds according following rule measurement last update \dot x \textbf x \textbf b u +\textbf l y_ measured \textbf c x \dot x =\hat \textbf x \textbf b u omitted superscript arrows clarity believe better way updating using outdated measurement outdated t_s seconds worst case,control sensor-fusion,control fusion sensor
1001,shortest path using wave planner,compute shortest path point b using wave planner see using wave planner give shortest give path able give random path destination nothing,theory mapping,theory mapping
1002,looking dc motor used urov thruster,know dc motors produce lot torque move slow rate others exact know sort balance torque rpm motor use underwater thruster sure favor torque rpm great someone suggest motor range urov,motor torque,torque motor
1003,position controller quadrotor,question regarding implementation quadrotor position controller matlab model quadrotor takes inputs desired altitude des desired attitude angles \phi_ des \theta_ des \psi_ des reflects motion described differential equations model see last picture insight implemented matlab dynamic model see structure inner loop controler ... hovers starting point perfect graphs need go implement sort position controller let quadrotor get start goal point defined usual coordinates x_d y_d z_d tricky space state variables input output system controller take vector coordinates able output different angles get exception height bypassed controller need calculation loop different story angles ... idea create feedback position given output simulated system desired position figure rises question quadrotor model solves following equation system \large \cases \ddot x \sin \psi \sin \phi \cos \psi \sin \theta \cos \phi \frac u_1 \cr \ddot -\cos \psi \sin \phi \sin \psi \sin \theta \cos \phi \frac u_1 \cr \ddot z -g \cos \theta \cos \phi \frac u_1 \cr \dot p \frac i_ yy i_ zz i_ xx qr \frac j_ tp i_ xx q \omega \frac u_2 i_ xx \cr \dot q \frac i_ zz i_ xx i_ yy pr \frac j_ tp i_ yy p \omega \frac u_3 i_ yy \cr \dot r \frac i_ xx i_ yy i_ zz pq \frac u_4 i_ zz means expect matlab model desired angles height right inverse given desired position calculate right angles direction solution simple write something psi atan2 yd yactual xd xactual x lies horizontal plane simple angles point invert given equations get desired angles idea implement simple pd pid controller easier given fact experiment using simulink get good results problem get desired angles desired position,pid quadcopter,quadcopter pid
1004,estimate yaw angle tri-axis accelerometer gyroscope,like estimate yaw angle accelerometer gyroscope data roll pitch estimate used following trigonometric equations roll ax az rad_to_deg pitch atan2 ay az rad_to_deg simpified version kalman filter consider angular rates roll pitch estimates accurate accelerometer values need filtered presence chassis vibrations order get yaw using following equation yaw atan2 ax ay rad_to_deg work advice,sensors quadcopter kalman-filter imu accelerometer,quadcopter kalman accelerometer filter imu sensors
1005,mpu9150 yaw angle drift,use mpu9150 use dcm complimentary filter compute roll pitch yaw yaw smooth solve problem looked datasheet mpu9150 see anything related sampling frequency magnetometer gyro accel,quadcopter,quadcopter
1006,advantage multiple magnetometers heading computation,building autonomous sail boat ripped guts rc sail boat replaced etc controller board accommodate mpu9150 hmc5883 advantage using magnetometers tilt-compensated heading thinking compute unit vector soft/hard iron offsets removed average vectors get better sure yield better result,sensors sensor-fusion,sensors sensor fusion
1007,tricopter simulation test control algorithms,looking write test control algorithms tricopter flight looking simulator simulate tricopter level receiving simulated pwm returning simulated gyro compass sensor readings graphics visualization need fancy want port real tricopter moment like simulate suggestions free simulators low level described,control quadcopter simulator,control quadcopter simulator
1008,acceleration formula differential steering robot,formulas derive rpm wheel robot linear velocity trying thing acceleration angular acceleration linear acceleration assuming linear velocity wheels robots robot moving straight line ... according physics right angular acceleration seems complicated robot following curved path turning place readings ros packages deal acceleration issue thanks,ros wheeled-robot differential-drive,differential drive ros wheeled robot
1009,short distance ball transport,looking way transport balls diameter mm slope mm considering usage belt system seem good belt system space constraints robot take nylon belt jam nails make little slots use result considerable reduction available space means take account extra space required nails way means way reduce space used nails way anybody good solution,kinematics manipulator,manipulator kinematics
1010,possible track movement tennis court,track run indoor tennis court gps available thinking researching solutions concluded go playing tennis player makes lot movements include spinning body alter data thought point ir system help understood hard ir system track movement able focus player final thought went radio systems find info hard see theoretical solution least mesure movement/speed player question existing system able track random movement object athlete give info speed distance resources system achieved least exact technology used suggestions ideas appreaciated,arduino kinematics movement,movement kinematics arduino
1011,robot docking self-recharging,want build simple obstacle avoider robot time want self-recharging building dock purpose want able locate dock go battery voltage lower fixed value trouble chose right components locating dock think going use ir emitter dock robot head battery low let forget orientation problem moment thoughts helpful sure robot able detect ir led long distance meter possible use solution distance suggest simple ready solution buy ok let say budget limit,sensors localization wheeled-robot battery wireless,localization battery robot wireless sensors wheeled
1012,general question pid controller,basic question trying understand concept thought obvious looking video going feedback variable state x input system force f. correct possibile feedback variables share units expect drive meter input variable meter difference feed pid example video show use simulink wrong,pid,pid
1013,advice mounting servo nerf sentry gun,trying make nerf sentry gun shoot co workers building less scratch come part need come plans assemble looking advice mount mg995 servos allow tilt pan thought base metal rod middle use gear control pan functionality idea mimic skateboard truck gear turn rod middle pivot shooting mechanism idea metal plate sit top servo use attachments attach top plate problems see attachment small piece plastic short period time see wearing shooting mechanism centered need come solution make tilt think idea use rod gear turn pvc pipe barrel servo using sorry wrong forum question unsure look expert advice edit anyone intersted found example someone thing blueprints going simpler cheaper route mounting servo bottom spinning plate lazy susan plate ordered way buy gears expensive gears reduce torque http //projectsentrygun.freeforums.org/build-progress-gladiator-ii-paintball-sentry-t130.html,mechanism servos servomotor,servomotor servos mechanism
1014,self powered quadcoptor,idea curious question mind professional though like answered know turbines used generate electricity possible create quadcoptor start minimal power small battery time sustain keep system self generating electricity keep rotating rotors external supply,quadcopter,quadcopter
1015,amperage brushed motors,building hobby-weight robot using x cordless driller motors wheels thing keep reading high amperages working r/c models quadcopters connect cordless driller motor bench power supply monitor current draw rises amps try stop motor hand course arena event stand plastic wheels slip concerned stall currents left wondering mis-calculated people make lot fuss high currents nothing currents apply brush-less motors,motor,motor
1016,diode capacitor terminals brushed motor,building hobby-weight robot using x cordless drill brushed motors drive wheels read induced currents turn motor reverse protect using diode capacitor terminals use capacitor diode parameters need consider components voltage current answers similar question discussed capacitors diodes diodes relevant damage cordless drill tough motor nothing motor controllers form inbuilt protection motors,motor,motor
1017,spinning disk weapon,building hobby-weight robot weapon choice spinning disk front regards disk thinking buying commercial grinder-type disks change type disk depending enemy chassis construction material instance aluminum cutting disk enemy chassis made aluminum first question disks job practise break fail cut brushed brush-less motor disk escs sort feel brushed motor give torque brush-less motor give speed important speed torque know uncle uses metal lathes machines cut metal spin slower speed drills cutting wheels etc likes say metal working machines safer wood-working ones reason newbie like effective weapon possible breaking not-cutting disks make weapon normal practise use battery everything drive weapon separate batteries,motor battle-bot,battle bot motor
1018,rotate stop large disk tiny increments,lab build stuck problem fishing suggestions creating turn-table type setup need make readings nanotube-tip probe designed similar afm probe edge/circumference cm radius disk substrate current hurdle need get substrate disk move steps mm displacement -- meaning need stop certain 0.1mm-increment positions way achieve assuming accurate feedback system accuracy say ~0.1 mm e.g. quadrature optical encoders available needed closed-loop control specs sold steppers seem allow kind control moment trying study e.g hard disks achieve extreme accuracies granted large disks direct-drive building see image help,motor stepper-motor,stepper motor
1019,control robot pymorse morse simulator question,new morse robotics code control robot giving linear angular velocity scene description morse.builder import robot atrv motion motionvw motion.add_stream robot.append motion semanticl semanticcamera semanticl.translate x=0.2 y=0.3 z=0.9 robot.append semanticl semanticr semanticcamera semanticr.translate x=0.2 y=-0.3 z=0.9 robot.append semanticr motion.add_stream semanticl.add_stream semanticr.add_stream env environment env.set_camera_location -10.0 env.set_camera_rotation control script import pymorse pymorse.morse simu simu.robot.motion.publish v w -1 robot moves remove semantic cameras scene description robot move confused sensor robot move,mobile-robot sensors control,mobile control sensors robot
1020,motor weapon hobbyweight,building hobby-weight robot weapon vertical spinning disk front commercial hardware store get made cordless drill motors drive wheels ok lost comes motor get weapon inclined think brush-less open opinions anyone please recommend good motor in-line brush-less brushed motor give speed strength need weapon,motor battle-bot,battle bot motor
1021,convert pid outputs appropriate motor speeds quad copter,building autonomous robot using pid control algorithm implemented pid using online resources/references testing stabilizing axis quad copter successful stabilize axis description input pid angle value i.e orientation quad copter measured ahrs gyroscope measures angles motors take integer values speeds motor_right_speed base_speed adjusted_value motor_left_speed base_speed adjusted_value adjusted_value += pid_output ajusted_value buffer accumulates subtracts pid output value based pid output +ve -ve tried motor_right_speed base_speed pid_output base_speed pid_output seem working tested using wide range p gain values small large quad copter oscillates self-correct help suggestions appreciated thanks,quadcopter,quadcopter
1022,brush-less motor specs vs efficiency multi-copters,looking figures surrounding specs brushless motors relative efficiency power usage terms multi-copter use basic specs motors motor width eg motor height kv rpm volt supplied eg wattage eg 28-30 motor looking chart containing motor spec pack voltage eg amps drawn various throttle say static thrust various propellers etc etc information exist know subjective prop motor designs vary baseline start,brushless-motor,brushless motor
1023,hokuyo urg-04lx-ug01 mac compatibility issues,got hands laser range scanner seem problem receiving output find guide set internet wondering possible set mac using linux ros,communication laser rangefinder,rangefinder communication laser
1024,biped walking using genetic algorithm,working project lack advanced programming knowledge genetic algorithms developing prototype using webots simulation project use genetic algorithms evolve gait biped robot developed physical model uncertain motor choice part find hard understand set algorithm parameters determine fitness function please suggest fitness function thank help efforts,algorithm machine-learning legged,machine legged learning algorithm
1025,ros node seem anything,"following code ros turtlesim include ros/ros.h include std_msgs/string.h include geometry_msgs/twist.h include stdio.h include stdlib.h include time.h void disruptcb geometry_msgs :twist msg ros :nodehandle pubhandle ros :publisher publisher pubhandle.advertise geometry_msgs :twist turtle1/cmd_vel ros :rate loop_rate double dist1= rand double dist2= rand std :cout dist1 std :endl dist1=dist1 dist2=dist2 msg.linear.x+=dist1 msg.angular.z+=dist2 std msg std :endl ros_info hello publisher.publish msg int main int argc char** srand time null ros :init argc argv things_going_wrong ros :nodehandle ros :subscriber sub nh.subscribe /ros_1/cmd_vel ,1000 disruptcb ros :spin idea code introduce random error practice error recovery code node anything know running appear anything exit hangs anybody know fix",ros,ros
1026,make automatically-parking robot car ir sensor,easy understand imagine robotic vacuum cleaner models goes specific place recharge want make robot goes place specific signal infrared ray emitting following scenario imagined ir emitter specific place room emits infrared ray connect ir receiver robot car front left right receive ir emitter earn distance emitter receiver intensity ir values arduino find receiver closest emitter choose direction go know possible ir kind light ray get distance difference arrival time ultrasonic searched several kinds ir sensors sensing possibility collision question these.. get distance direction ir emitter arduino device ir many ir receivers need use substitute ir emitters receivers guess interrupted sunlight light guess need daylight filter think essential,arduino sensors wheeled-robot,sensors robot wheeled arduino
1027,wheeled robot motion primitives throttling crab motion considered,simulating wheeled robot six-wheels steered mer-opportunity wheeled robot perform throttling || -- -|| -- wheel orientation || || || -- -|| crab-motion // -- -- wheel orientation heading // // // -- -// turning spot // -- -\\ -- wheel orientation || || \\ -- -// question correct say motion primitives throttling crab-motion heading zero,wheeled-robot motion,motion wheeled robot
1028,numerical-example paden-kahan subproblems,writing kinematics library go part final year project working product exponentials method implemented forward kinematics part need help inverse kinematics understand theoretical aspect like numerical example actual numbers used paden-kahan subproblems ones mathematical introduction robotic manipulation murray li sastry freely-available online pdf need help knowing p q trying solve inverse kinematics book says given point p q axis rotation joint know points practice robot moving keep track points reasons need numerical example understand,inverse-kinematics product-of-exponentials,exponentials product inverse kinematics
1029,get transformation matrix,started taking robotics course little problem need rotate o_i-1 coordinate system position x_i-1 parallel x_i transformation matrix given idea figure transformation matrix picture found know last vector previous vector figure first vector \cos q_i \sin q_i second -\sin q_i \cos q_i,robotic-arm industrial-robot,industrial arm robot robotic
1030,survey local navigation,wondering good book paper surveys current techniques local navigation earliest one find hoping find something recent worked certain approaches dynamic window approach velocity obstacles hoping book paper give broader perspective problem local navigation believe solved number autonomous driving companies thank,navigation motion-planning,motion planning navigation
1031,pid control tuning,designing robot undergraduate project task robot follow wall purpose using pid control system reference given ultrasonic sensor problem im hard time tuning pid know find p coefficient plotting desired set point range vs desired motor output speed robot stable adding di part pid find values coefficients trying random values manual tuning thank appreciated,motor control pid,control pid motor
1032,build ros robot slam laser,simple wheeled robot based continuous servos controlled raspberry pi running ros-groovy smart phone mounted top additional sensors situate bot room move various points command ranger finder good ultrasonic ranger finder kinect sensors typical ros setup idea thinking e.g map room using kinect use map using ultrasonic range finder sensors imu lightweight robot possible,localization ros slam raspberry-pi ultrasonic-sensors,ros raspberry localization slam ultrasonic sensors pi
1033,parameter r denavit-hartenberg,watching video explains calculate classic denavit–hartenberg parameters kinematic chain left impression parameter r_i a_i positive true give examples negative,forward-kinematics dh-parameters,kinematics parameters dh
1034,find height rock rover,designing rover navigate rock calculate height rock team design involves using ultrasonic rangefinder lots math interested sensors use solve problem go assume located rock additional info using arduino uno control rover autonomous,arduino wheeled-robot algorithm,robot wheeled algorithm arduino
1035,sending smartphone gps wireless,building camera device able take pictures paragliders mid air let camera know glider thought using gps data pilot smartphone question possible ways transmit gps data groundstation considered good solution thought sending data mobile network direct communication solution preferable pilot mid-air good mobile reception maximum distance pilot ground station,gps communication wireless,wireless communication gps
1036,learning materials beginners robotics quadrocopters,web developer fascinated quadrocopters trying learn build trying jump robotics fields much electric circuit electronics knowledge research build type knowledge require develop flying machine started learning basics electronics lessons electric circuits tony r. kuphaldt books interesting find technique implement learn books going stuffs understanding little little want know right way effective way electronics electric circuit experience increase learning speed achieve goal researching came topics mathematical modelling modelling quadrocopters implementing real gain knowledge model something implement real life much math areas mathematics need learn learn idea want learn achieve please suggest road map steps need take gain knowledge skill develop future able build flying machines,quadcopter,quadcopter
1037,power extra usb devices beaglebone black,building robot uses black several different usb devices want connect microphone usb sound device things heard usb output beaglebone power combined draw usb devices likely exceed fair margin started looking powered usb hubs use tend powered robot power supply converter beaglebone given size expense inefficiency converting power seem good good method fixing,power usb beagle-bone,beagle bone usb power
1038,tracking robot room,trying track simple robot e.g arduino raspberry toys room using fixed location kinect sensor cameras different parts room use edit want know position possible orientation moving object room using cameras depth sensors new area idea use blob haar detect moving object get location kinect depth-map trying find package use end navigation work pre-map room kinect put sensors tracked moving object e.g imu sonar kinect allowed full pcs running ros/opencv/kinect sdk environment communicate tracked object raspberry pi running ros groovy wheels,arduino computer-vision kinect,kinect computer vision arduino
1039,power switch common ground battle robot,constructing hobby-weight battle robot safety rules robot power switch turns power motors weapon robot sub-systems drive motors battery weapon battery lighting small volt battery read connected receiver important electronics sharing common ground everything work know live wire connected switch thinking hitting birds stone connecting ground wires live wires switch way turn power common ground terms safety shorts etc concerned using xt connectors careful use female plugs power leads prongs visible seems work safe dealing mains voltage levels hand want look stupid way connecting switch make sense violating unwritten law normal practice effect circuitry way grounds connected thinking using switch pc power supply rated high currents case cordless motors drawing amps load say amps anyone used switches buy high current ones case ask thanks,control power battle-bot,control battle bot power
1040,gazebo import robot gives error,trying import tutorial robot given link gives following error error param.cc:181 unable set value key horizontal_fov error param.cc:181 unable set value key error parser_urdf.cc:2635 unable call parseurdf robot model error parser.cc:278 parse old deprecated model file failed error parser_urdf.cc:2635 unable call parseurdf robot model error parser.cc:278 parse old deprecated model file failed error parser.cc:278 parse old deprecated model file failed sugest something wrong parsing point towards line code example lines link name='chassis pose .1 /pose collision name='collision geometry box size .4 .2 .1 /size /box /geometry /collision visual name='visual geometry box size .4 .2 .1 /size /box /geometry /visual collision name='caster_collision pose -0.15 -0.05 /pose geometry radius .05 /radius /sphere /geometry surface friction ode mu /mu mu2 /mu2 slip1 /slip1 slip2 /slip2 /ode /friction /surface /collision visual name='caster_visual pose -0.15 -0.05 /pose geometry radius .05 /radius /sphere /geometry /visual /link link name= left_wheel pose /pose collision name= collision geometry cylinder radius .1 /radius length .05 /length /cylinder /geometry /collision visual visual geometry cylinder radius .1 /radius length .05 /length /cylinder /geometry /visual /link link name= right_wheel pose -0.13 /pose collision name= collision geometry cylinder radius .1 /radius length .05 /length /cylinder /geometry /collision visual visual geometry cylinder radius .1 /radius length .05 /length /cylinder /geometry /visual /link joint type= revolute name= left_wheel_hinge pose -0.03 /pose child left_wheel /child parent chassis /parent axis xyz /xyz /axis /joint joint type= revolute name= right_wheel_hinge pose /pose child right_wheel /child parent chassis /parent axis xyz /xyz /axis /joint /model /sdf ubuntu hint wrong information better come solution,simulator gazebo simulation,simulation gazebo simulator
1041,scan matching finds right rotation false translation,developing slam software robot tried scan matching algorithm solve odometry problem read article metric-based iterative closest point scan matching sensor displacement estimation found explained followed formulas given article implement algorithm see implementation python scanmatching.py problem tests right rotation found translation false values translation high guys idea problem code post question stackoverflow mathematics stack exchange icp part correct tested many times least square minimization seem give good results parts problematic function getaxx getbx starting line noticed used many decimal.decimal values cause max float big contain values,slam,slam
1042,proportional controller error approach,"reading pdf dynamic equation arm provided l \ddot \theta \dot \theta mgl sin \theta \tau \theta joint variable \tau joint torque mass l distance centre mass joint viscous friction coefficient l inertia seen rotation like use p proportional controller \tau -k_ p \theta \theta_ matlab code clear clc x0 x ode45 x0 e x ,1 pi/2 error theta1 plot e title \theta xlabel ylabel grid solving differential equation function dx x dx zeros parameters l g x pi/2 dx x q2dot x dx q2dot error question error approaching time goes problem regulation track error approach zero",control dynamics manipulator,control dynamics manipulator
1043,motor controller calibration,bought brushed motor controllers china hobby-weight battle robot http intended use cordless drill motors driving left right wheel robot steered tank mode varying speed direction rotation motors using joysticks turnigy transmitter question seen videos youtube people calibrate brushless motor controllers escs using system pushing joystick standard transmitter listening tones reverse asked suppliers similar procedure brushed controllers say need calibration exact words seems talking transmitter copters esc rc car boat pull trigger goes push trigger reverse need calibrate plug work transmitter gun shaped ones used cars trouble controllers work box supplier seems implying ask tried simple answer lipo charger arrived power anything,motor,motor
1044,changing tank drive differential mode single joystick drive mode,bought brushed motor controllers china use hobby-weight battle robot http intended use cordless drill motors driving left right wheel robot steered tank mode varying speed direction rotation motors using joysticks turnigy transmitter seeking refine model make easier operate anyone know way synchronize motors get single joystick steering system transmitter available channels part solution fine arduino available needs,motor differential-drive,differential drive motor
1045,risk overloading motor controller,bought brushed motor controllers china hobby-weight battle robot http intended use cordless drill motors driving left right wheel using lipos charged voltage someone put rest .8 volt excess unlikely damage controller rated fact motor controllers rated likely damage motors honest clear current drawn lipo battery instance connecting lipo motor result massive discharge motor take needs terms current someone point article casts light subject explain,motor battery,battery motor
1046,rnn pid controller,building drone using raspberry pi using controllers control speed value angle use recurrent neural network rnn neural network stabilize angles training data neural network suited kind application,pid raspberry-pi artificial-intelligence,pi raspberry pid artificial intelligence
1047,ahrs algorithm question,understand ahrs use orientation reference vectors detect orientation error use magnetometer correct yaw drift see ak895 magnetometer data stable kind fluctuates use data ahrs algorithm,quadcopter,quadcopter
1048,input limited hz pid controllers work,based wiki page esc esc accepts nominal hz pwm servo input signal whose pulse width varies ms ms http //en.wikipedia.org/wiki/electronic_speed_control project integrate flight controller uav naza m-lite want implement position control localization control quadrotor applying servo width roll pitch yaw thrust throttle esc accepts hz pid controller work hz,pid,pid
1049,choosing motor characteristics,sized dc motors want use corresponding robot intended applications figures include uncertainty factor account friction reducers losses need choose exact motors want buy manufacturer targeting maxon motors expert want problem earth questions linking mechanical needs electrical characteristics maxon states nominal voltage characteristic sheets voltage motor dumb question followed full maxon e-learning course read tutorials web find information anyone knows motors confirm understand nominal torque corresponds maximum torque motor sustain guess rule find motor nominal torque max torque reduction chose motor reference found stated power nominal voltage expecting nominal current states wrong motor chose nominal speed nominal torque needs max speed max torque mnm means reduction factor speed torque choose gear rated torque mentioned choosing gear know input torque torque motor side output torque torque system side correspond followed theoretical practical courses web find hard find answers earth question ... thanks antoine,motor,motor
1050,implementing position control uav flight controller plant model unknown,using naza-m-lite flight controller gps localization obtained rgb-d camera sensor able teleoperate implement pid controllers roll pitch yaw throttle channels quadrotor know plant model inputting arduino naza-m-lite servo pwm ranging throttle altitude hold maximum throttle minimum throttle pitch roll yaw maintain angle moves quadrotor towards respective axes channel quadrotor drifts due flying indoors wind pushes quadrotor gains momentum drifts trouble tuning know relationship output position output velocity easier case way find plant model naza-m-lite tune,localization pid quadcopter uav,quadcopter uav pid localization
1051,nao motor model identification,trying create model nao robot motors figure shows step response knee motor afaik nao uses pid controller control motor control pid parameters like treat motor including pid black box possible model pid+motor pt_2 system i.e second order lti system pt_2 system defined following differential equation t^2\ddot +y ku tried fitting pt_2 model unable good parameters idea model use kind step response edit tried modifying equation add maximum joint velocity t^2\ddot \frac |2dt\dot m| +y ku maximum velocity fraction equivalent min sure correct way introduce maximum joint velocity optimizer unable good parameters limited velocity formula guessing min introduces area parameter changes cause optimization error changes,motor,motor
1052,nominal voltage motor voltage apply motor,sized dc motors want use corresponding robot intended applications figures include uncertainty factor account friction reducers losses need choose exact motors want buy manufacturer targeting maxon motors expert want problem earth questions linking mechanical needs electrical characteristics question maxon manufacturers states nominal voltage characteristic sheets voltage motor dumb question followed full maxon e-learning course read tutorials web find information anyone knows motors confirm followed theoretical practical courses web find hard find answers earth question ...,motor brushless-motor,brushless motor
1053,choosing dc motor max needed torque vs nominal torque,sized dc motors want use corresponding robot intended applications figures include uncertainty factor account friction reducers losses need choose exact motors want buy manufacturer targeting maxon motors expert want problem earth questions linking mechanical needs electrical characteristics question understand nominal torque corresponds maximum torque motor sustain guess rule find motor nominal torque max needed torque reduction,motor brushless-motor servos servomotor,servomotor brushless servos motor
1054,stated power motor equal nominal voltage current,sized dc motors want use corresponding robot intended applications figures include uncertainty factor account friction reducers losses need choose exact motors want buy manufacturer targeting maxon motors expert want problem earth questions linking mechanical needs electrical characteristics question chose motor reference maxon reference found stated power nominal voltage expecting nominal current states wrong,motor servos servomotor,servomotor servos motor
1055,selecting gear reduction torque vs speed,sized dc motors want use corresponding robot intended applications figures include uncertainty factor account friction reducers losses need choose exact motors want buy manufacturer targeting maxon motors expert want problem earth questions linking mechanical needs electrical characteristics question motor chose maxon brushed found nominal speed nominal torque needs max speed max torque mnm means reduction factor speed torque choose gear,motor brushless-motor servos servomotor,servomotor brushless servos motor
1056,rated torque gear relate maximum torque,sized dc motors want use corresponding robot intended applications figures include uncertainty factor account friction reducers losses need choose exact motors want buy manufacturer targeting maxon motors expert want problem earth questions linking mechanical needs electrical characteristics question rated torque mentioned choosing gear guess related maximum torque gear support ... know input torque torque motor side output torque torque system side correspond,motor brushless-motor servos servomotor,servomotor brushless servos motor
1057,control pid yaw,yaw angle varies -180 degree -170 -135 -90 -10 current heading degree wind makes rotate left -170 degree pid control make rotate degree pid error setpoint input case setpoint input -170 error -170 moving apply pwm rotate left apply pwm come desired position degree,pid,pid
1058,change orientation object w.r.t scene,trying localize object point cloud using ros pcl capture scene model using asus xtion pro sensor use rgbdslamv2 capturing model use icp nonlinear version find transform model cluster cloud cluster lowest score chosen matching cluster pseudocode segment point cloud different clusters using euclidean clustering cluster source target current cluster perform icp nonlinear version score icp.getfitnessscore icp.getfinaltransformation end matchingcluster cluster minimum score finalt matchingcluster able find correct transformation screenshots results got red colored object transformed model overlayed scene yellow object represents original model coordinate system scene concern proper transformation missing something second see object model scene different coordinate system model appears inverted presented scene coordinate system way transform model upright running icp thanks,computer-vision kinect,kinect computer vision
1059,understanding sliding mode controller quadrotors,willing understand implement controller sliding mode quadrotor found interesting document explaining topic scroll page scared document 6-7 pages find following height control law equation .19 u_1 \frac \cos \phi \cos \theta c_1 \dot z_r \dot z \ddot z_r \epsilon_1 sgn s_1 k_1 s_1 g explanation term easy let focus variable z height absolute quadrotor control law pretends goal height z s_ vertical speed \dot z_ r vertical acceleration \ddot z_ r r means reference ... clear variables setpoints reached quadrotor reaches predefined height symbolize abstract mathematical formalism going time want reach target height z z_ r \dot z_ r \ddot z_ r hope question clear put sliding control think helpful type controllers regards,quadcopter,quadcopter
1060,controlling motor batteries arduino board,want build robotic vacuum vacuum motor want switch set time night batteries using deep cycle gel batteries connected series want arduino switch motor real question guess supplied arduino able switch motor big second question mosfet answer apologies pretty new it.. control motor batteries arduino board mosfet type mosfet use,arduino,arduino
1061,simple range sensor described sufficient implement particle filter localization,trying implement monte carlo localization/particle filter localization simple range sensor range sensor sees direction robot heading returns obstacle line sight obstacle sensor returns distance boundary wall i.e maximum range sensor problem able locate robot position feeling cause sensor powerful feasible localization sensor change sensor type please tell guys think,localization particle-filter,filter particle localization
1062,continous rotation cables,motor needs spin n*360 degrees top motor distance sensor scan room i.e lidar options implementing continous rotation cables way,motor chassis,chassis motor
1063,happens brush-less motor stalls,ok apologies think questions direct enough got warned new try keep direct forum obvious reasons test damaging something prefer learn experience others turnigy trackstar brushless motor using spinning disk relevant specs motor kv max voltage max current:24amps watts resistance max rpm use esc following specs constant current burst current battery 2-4s lipoly 5-12s nixx bec motor type sensorless brushless size x weight programming functions battery type lipo /nixx brake voltage protection low high protection mode reduce power cut power timing auto high low startup normal soft pwm frequency helicopter mode start delay motor stalls know current draw increase questions case motor stalls disk gets stuck opponent etc gets damaged motor esc long happens time turn r/c switch irrevocable damage occurs observing action notes using switch r/c turn motor proportional speed increase etc using volt battery motor rated volt maximum thanks,brushless-motor esc,brushless esc motor
1064,roll pitch calculation problem,problem hold sensors mpu9150 +y downward axis horizontal plane expect pitch degree roll degree pitch degree roll degree roll degree pitch degree expect know cause problem thanks,quadcopter,quadcopter
1065,choosing suitable simulator swarm auvs,following simulators best choice simulating swarm auvs working perform mission please clarify reason know better choice appreciate help please consider hardware-in-the-loop hil simulation v-rep auv workbench gazebo uwsim swarmsimx addition notice capability connect middle-wares ros important option using game engine blender think needs lot developing effort time-consuming recommend approach used recommend,mobile-robot ros simulator auv,mobile auv ros robot simulator
1066,middle-ware recommend swarm auvs,working swarm robots collaboration nodes important goal simulation real-word operation middle-wares frameworks special purpose know relevant middle-wares ros general-purpose popular umvs design questions know choice mentioned purpose criteria consider choosing middle-ware suitable purpose thank,mobile-robot ros,mobile ros robot
1067,arduino lightsensor blocking code,gy-31 light sensor trying make skittle sorting machine little wheel skittles drop turn degrees read light sensor dropped bottom problem code seems get stuck reading light sensor flows execute moving servo take readsensor line servo works normal dispose color sensor include servo.h include md_tcs230.h include freqcount.h define s2_out define s3_out md_tcs230 cs s2_out s3_out servo myservo // create servo object control servo // maximum servo objects created void setup myservo.attach // attaches servo servo object serial.begin serial.println simple blocking example serial.println move sensor different color see value serial.println note values read sensor calibration serial.println reality cs.begin cs.setfilter tcs230_rgb_x cs.setfrequency tcs230_freq_hi cs.setsampling void readsensor uint32_t v v cs.readsingle serial.print simple value serial.println cs.readsingle void loop serial.println start myservo.write delay myservo.write delay readsensor delay,arduino sensors rcservo,sensors rcservo arduino
1068,programming g-code interpreter,want programme g-code generator final year electrical engineering project know many open source g-code generators need g-code generator generates g-codes custom circuit designs drawn user pass g-code axis cnc machine working qt based gui draw .dxf format circuit diagrams electrical components resistors capacitors press generate g-code push button generate text file nice set g-codes designed diagram problem generate g-code specific algorithm follow adapt tried googling g-code generator algorithm find helpful stuff,cnc circuit,cnc circuit
1069,developing quadrotor using ros,know ros works least question regarding implementation quadrotor framework movements quadrotor moves environment looking various ros packages find package allows drive robot space package /move_base instance allows make sense use package project thought navigation projecting shadow quadrotor ground ... moveit seems real interesting promising package read robotic arms indicate quadrotor use possibility create virtual floating joints moveit let quadrotor movement environment ... ok understand much useful flying robot trajectories possibility create trajectory space seems standard package ros found allows creation maps sensor datas interesting sure useful ... think useful creating trajectories case create extra package compute trajectories feed quadrotor something existing project hector_quadrotor seems good success ans considered field people refer project speaking answering question regarding quadrotors ros saw many times project ... weeks due total lack documentation try understand works difficult interesting project ardrone comments source code ... russian give good suggestions point right direction please help understand focus searches package can/ use update goal let quadrotor flying using gmapping localize heard read al lot stuff found tutorials hard understand get global vision software sometime run problems package task invent scratch thanks,ros quadcopter,quadcopter ros
1070,quadcopter hovering problem,quadcopter lift ground kinds circles video https //www.youtube.com/watch anyone helps,quadcopter,quadcopter
1071,surface texture sensors integration circuits,project mind robot able recognize surfaces thought including following sensors temperature sensor colour sensor complex electronic components determine colour texture sensor complex components fulfill purpose research finding small texture sensor soldering electronic circuit similar little temperature sensors buy thought small turn small searched research fruitless fruitless find want fruitless find anything similar want. ... things turned scientific papers whole devices whole devices purchase company choose structure sensor name ipad-compatible scanner made search depressing second article found buying pre-built ipad device electronic component nothing hope people spare research time recommend company/site/whatever sells texture sensors btw. know surface sensors bit way complex temperature sensors hope getting want low find something ot mean exist,sensors,sensors
1072,inverse kinematics constant end effector angle,simple rrr manipulator motor controls base rotation allow movement plane extending forward base upwards/downwards standard ways ensure angle end effector remains constant current solution uses explicit trigonometric expressions based distance joints better way solve include restraints open suggestions edit manipulator like image additional base rotation allowed inverse kinematics simplified reference site http //www.hessmer.org/uploads/robotarm/inverse,inverse-kinematics,inverse kinematics
1073,tune pid parameters using fuzzy logic,used ziegler method tune parameters pid controller control robot position implemented fuzzy logic self-tuning parameters inputs fuzzy logic controller position error error rate know problem due understanding effect parameter well problem confused setting fuzzy rules need use high low values kp kd ki achieve best tuning kp low error hence robot desired position question applies parameters,control pid tuning,control pid tuning
1074,lm2576 lm2596 regulator make microcontroller hang,making balancing scooter runs x sla batteries connected series make everything works expected power supply makes pull hair head weeks hope someone help motors run batteries scooter need +12v line half bridge drivers +5v line signal part +12v using lm2576-12 hooked batteries +24 +5v signal using lm2596 adj hooked batteries supposed hooked output lm2576-12 better performance problem motors load power supply system makes microcontroller hang reset sure everytime try turn power switch motor keeps running value fed right happens minute riding dangerous someone read re-read datasheet lm2576 many times tried many settings recommended different values capacitor inductor diode using ss34 guess electromagnetic interference pcb located motors pcb put homemade faraday cage grounded battery motor cases grounded microcontroller hangs motors load i.e board go motor controller self made using x auirf2804s mosfets put x caps motors +24v anyone kind throw light power supply kind application supposed,motor,motor
1075,self-locking actuator friction versus worm gear,planning control bicycle derailleur electronic circuit advantages multiple topic question actuation performed placing close derailleur winding usual steel cable spool placed axis gear using motor turn gear question concerns alternatives spool self-locking mechanism kind motor use literature found //nabilt.github.io/diy_eshift/ similar ones modify derailleur stepper motor forced keep stepper motor powered time keep torque shaft consider inefficient therefore require self-locking system able remove power come ideas worm gear operated dc motor steel cable wound gear system self-locking self-locking according gear ratio gear drive worm motor driving normal gears appropriate reduction factor additional friction element whose friction force greater strength spring mounted derailleur sorry mixed technical terms normal bicycles friction cable element placed n handle high keeps derailleur place system assisted position-sensitive element trimmer detect actual position gear and/or derailleur configured closed feedback loop consider additional options gear http //www.agma.org/assets/uploads/publications/10ftm17_kapelevich.pdf consists parallel-axis gears whose teeth shaped manner achieve self-locking need low-efficiency worm system point view see clear advantage worm gear vs friction worm gear allow build compact thanks axes perpendicular speed vs torque worm gears reduce torque requirements motor spin lot wait seconds gear change concerning choice motor type main question think worm gear allows use dc motor torque requirements low need detect position shaft moreover dc motors increase torque decreasing speed stepper motors maximum torque defined stepping frequency dc compact cheaper important decide offer kit unique personal prototype working supply fear easy-to get dc motors old printers scrap electronics work significant reduction available torque operated looking mechanics section stack exchange find opted robotics electronics,brushless-motor stepper-motor,brushless stepper motor
1076,build garage robotic assembly lines,new robotics like build smaller robotic arm manufacturing facilities want small robotic material handlers pick handle small objects x12 x12 objects small robotic assembly line garage kits purchase deals robotic assembly lines wondering anyone dealt suggestions,robotic-arm,arm robotic
1077,robot manipulate poultry,software engineer poultry farmer manipulate poultry way grab head hold brief period seconds labor-intensive process occurred able use robotics task software engineer know little robotics hoping someone point right direction someone please refer companies and/or robotic systems able help task load poultry cages designed process thinking cages used keep birds running much easier capture heads read raspberry pi port deep belief image recognition sdk thought promising start,robotic-arm,arm robotic
1078,gyro rate gets increase problem,using pid controller stabilize quadcopter working removed jig went hit ceiling analyzed data come conclusion static poisition gyro sensor outputing +-6deg/sec start motors control gyro rate jupms +-30deg/sec increase rate due vibrational noise causing quadcopter liftup beign intension suggestions get rid vibrational noise,sensors,sensors
1079,robotics simulation png map,complete beginner arbitrary map png file black white supposed draw robot position x supposed simulate robot taking laser-scan measurement opening angle degrees separation scan-line degrees laser scanline supposed obstructed black pixels png map lines keep going n distance attempted drawing scanlines object running issues comes getting line obstructed black-lines mind requires different approach helpful advice get started appreciated,python mapping simulation,python mapping simulation
1080,simplest cheapest way create spring latch,friend hacking nespresso coffee pod dispenser heart set particular design thinking countless ways dispensing single pod design single flavour pods vertical tube tend fall latches base tube stop pods falling releasing latch allow pod fall lip pod catching next latch problem component found suitable product shelf ideally solution compact cheap latch ideas date considered linear motion solenoid seems over-kill tend dollars ultrasonic motor find linear actuator dollars bulky piezoelectric actuator tuned nm scale precision hard come rotating disk release notch driven stepper motor bulky rotating latch string attached rack pinion powered electric motor think simple enough solution rotating cam gumball machine works suspect suggested answer involve mechanical electronic motor component simple option printer open mechanical solutions custom latch crude electromagnet example note desired size latch holding pods orange tube black yes motors work quite obvious solution clever finds suitable product understand latch side pods sit vertical latch need higher,mechanism,mechanism
1081,perfect implementation asimov laws,seeing movie robot got question laws implementing law implements implemented quantum computer controls army humanoid robots decides taking complete control politics economics revolution best way ensure human happiness allowed proceed ensure minimal loss life hero decision destroy computer wrong,theory,theory
1082,use qt communicate lego nxt robot,native bluetooth support used communicate lego nxt robot,nxt robotc,nxt robotc
1083,use different escs multirotor,working diy quadcopter build scratch bought esc castel creations.while quad running sort read various sources forums internet able to/ recommended different escs quad bought pack able buy replacements switch worried eventual case spoilt esc future gleam various posts internet seems something rate escs communicate flight controller.if buy esc programmer program communicate rate asked dude local hobby shop said /should using different escs different brands brand different models i.e escs appreciate someone clarify issue using different escs p.s helps using flight controller wfly transmitter f450 frame,quadcopter microcontroller electronics esc multi-rotor,rotor electronics microcontroller esc multi
1084,servos robot use,wanted use small servos project smallest find https //www.hobbyking.com/hobbyking/store/uh_viewitem.asp idproduct=33401 danny choo japanese blogger started business robotic dolls time remember mentioning site uses servos dolls pic containing doll nudity https //farm4.staticflickr.com/3889/14502508165_fde682636b_o.jpg height servo first link big e.g fit arm wondering kind servo motor general servo end using tiny fit anyone idea,motor servomotor,servomotor motor
1085,anyone working example using qt communicate nxt,stumped looking qt classes lost examples use qt none work need program talk analyze image webcam anybody gotten work,nxt troubleshooting,nxt troubleshooting
1086,joint angle correction using lm,camera mounted rotational joint need calibrate extrinsics camera fix camera estimated facing ceiling want get real angle track key-points ceiling moving robot supposing odometry perfect see difference real key-points shift estimated shift odometry thought using levenberg marquardt find optimal solution angle camera robot frame equation look,cameras odometry joint,odometry cameras joint
1087,submarine screw isolation water,submarine prevent water flow screw mechanism mechanism rotates screw little gap come water come gap submarine,motor design,design motor
1088,measuring performance response rate escs,go measuring quantifying performance esc looking measure response rate hz performance i.e fast starts much increases/decreases motor speed tick assuming program esc response rate programming card/module compatible said esc able measure exact performance esc appreciate inputs suggestions p.s question linked/asked conjunction previous question mine robotics stackexchange use different escs multirotor,sensors quadcopter electronics esc multi-rotor,quadcopter rotor multi esc sensors electronics
1089,comparison efficiency dc motor current limiting control methods,using wheels motors rc toy car simple robotics platform car motors drives wheels steers front wheels steering motor stalled design steering blocked fixed plastic chassis draws stalled i.e anytime steering due marvel toy engineering use oversized motor driver ic l293b – continuous motor draws power x i’m using ic control rotating” motor appears type stall current no-load 250-400ma normal loads testing various series resistors found sufficient turn steering wheels keep position using resistor allow use driver ic lower amp rating l293d – energy wasted heat serious issue toy setup planning build bigger robots power energy conservation current control important long run motors stall looking dc motor current limiting i’ve found following approaches series resistor – simple cheap bidirectional wastes energy dissipates heat current source 2-3 transistors sensing resistor – simple i’ve found unidirectional circuits get shorted switching motor direction way method and/or 2-channel h-bridge ic place ics common supply motors draw different currents chopper circuits/pwm – protect ic overload energy-efficient methods unaware something principles switching supplies simpler application separate drivers/h-bridges place voltage divider lower voltage provided inefficient stalling motor moves robot methods compare terms efficiency simplicity design preferred method robotics/other dc motor applications standard practice limit motor current motor efficient allowed much current needs acceptable use dc motor stalled design used cheap crap toy cars,motor power driver current h-bridge,bridge power h driver current motor
1090,kind lidar necessary slam,read various robots using lidar system slam igcv http wondering good sensor accuracy necessary field view necessary lidar scanning degree sweep angular resolution needed realize super clever software slam couple ultrasonic sensors using standard packages software navigation reasonable minimum value parameters important ones forgotten,slam navigation lidar,slam navigation lidar
1091,program inovatic usb interface,possession inovatic usb interface detail ui-8x8 v1.1 like program simple stuff things familiar c programming heard possible program interface c looks find drivers interface checked inovatic website v1.0 version drivers pretty sure need v1.1 program language use,microcontroller,microcontroller
1092,connecting multiple servos robotic arm,computer programmer done electronics need help connecting servos arduino power robotic arm robotic arm trying build come connections shown diagram basic knowledge browsing internet omitted signal wires clarity like know work good/decent design think battery packs like single power source save trouble maintaining many batteries thought using voltage regulator concerned perform servo starts drawing much load suck power leaving little servos suggestions helpful,arduino robotic-arm servos,robotic servos arm arduino
1093,use gear motor arduino,new robotics want make robot using arduino uno r3 need use gear motor link problem motor needs current arduino outputs current want supply motors power source use switch connect circuits please tell type switch use thanks advance p.s sorry used wrong technical terms,arduino motor,motor arduino
1094,keeping wheeled wall following robot straight,two-wheeled dc motors robot needs follow wall beside robot issue dc motors spin different rates identical course robot go straight voltage provided motor use ir distance sensors op-amps keep distance wall constant robot travel wall,motor,motor
1095,triangulation measuring angles beacons find location work large outdoor area,determine outdoor location think measure angles least beacons take account order sweep beacons workable solution get positional accuracy house block sized area rewrite question note distance measurement suggested angle measurements proposing possible minimum local rf beacons robot device sweeps antenna circle identifying angles beacons use information order beacons seen find absolute location tried prove seems beacons unique solutions knowing order solution order known believe need try find distance beacons question implemented reasonable cost nrf24l01 based transcievers sort rotating antenna,localization,localization
1096,dualcopter degree freedom,drone field curious know type rotation translation dualcopter achieve rotation translation mean able roll pitch yaw quadcopters copter makes roll pitch yaw dualcopter design movable wings rotate rotors motion flying,quadcopter multi-rotor,quadcopter rotor multi
1097,backstepping integrator changing virtual control,given following differential equation following form \ddot z =-g cos \phi cos \theta u_ /m found many papers example describing dynamic model quadrotor case interested example vertical axis z get movement z integrating variable \ddot z times control input control u_ represents sum forces rotors backstepping integrator many papers implemented defines tracking error height e_ z z_ desired z_ real velocity \dot e \dot z desired \dot z real build virtual controls virtual controls find needed valueof u_ drive quadrotor desired height see solution wait ... said track position error velocity error asked transform equation corresponding virtual controls track velocity code need develop interface package accepts velocity inputs position information able drive quadrotor desired position using velocity informations tracking error displacement allowed solution general case looks u_ m/ cos \phi cos \theta e_ z \ddot z desired \alpha_ \dot e z \alpha_ e_ z g \alpha_ \dot e z \alpha_ \alpha_ put brutal \alpha_ tracking position z think correct way please point right direction regards,control quadcopter,control quadcopter
1098,open source implementations ekf pose esimation,looking open source implementations ekf pose estimation inertial navigation system using minimum imu accelerometer gyroscope absolute position pose sensor seems recurring important problem robotics surprised find reference implementations everyone hack ekf move interesting things error-prone well-tested implementation serve reference fair evaluation possible improvements,kalman-filter ekf pose,filter ekf pose kalman
1099,seamless motor movement,lego mindstorm kit like rotating carousel perfect movement carousel baskets bit inertia like find method calculate perfect time slow -- taking account motor friction momentum etc data collected motor power power motor break time time took stop time motor power set over-turn dist amount rotation degrees motor continued rotate power set specific method approach optimize motors movement movement rotated degrees,motor motion motion-planning,motion planning motor
1100,nano quadcopters microcontroller battery,looking building nano quadcopter watch resources videos get confused regarding things hope answered basic level expertise built robots quadcopters exact want know program quadcopter say using intel edison chip power quadcpter find small size battery move propellers start chip procedure follow developing small quadcopter saw link instructable uses python raspberry pi raspberry pi control arduino control robot done using raspberry pi getting confused like know make small nano quadcopter get started latest chip support linux high level programming language python hope go programming entire quadcopter using python similar high level language suppose stick c langauge wrong please help understand matter high chance wrong,arduino quadcopter raspberry-pi python,quadcopter pi raspberry python arduino
1101,good simulator outdoor autonomous navigation,appropriate tool simulating car driving simple closed-loop racetrack trying implement control logic autonomous vehicle able first simulate behaviour testing physical platform target environment obstacle small ramps arches use simulator looked robotics simulators listed seem overkill none seemed designed model outdoor environments done little work gazebo find guide texturing ground/sky/background need way apply texture map ground sky create handful obstacles calculate camera feed simple two-wheeled chassis moves course need video input realistic possible access real world racetrack need able test train control logic simulator load logic real mobile platform navigate course,navigation simulator cameras,cameras navigation simulator
1102,power get flywheel motorized gyroscope,look gyroscope seen motorized gyroscope central flywheel suspended various gymbals needs lot freedom movement hard see electric motor flywheel hub supplied power real gyroscopes maintain angular velocity flywheel,gyroscope,gyroscope
1103,turning position level fk motion level fk,position level inverse kinematics blocks built simulink using s-function need obtain motion level fk fk input motor angles output planar x coordinates ik way wonder put derivative block output block work cascaded blocks see input overlaps output idea wrong someone explain,inverse-kinematics forward-kinematics,forward inverse kinematics
1104,control circuit humanoid robot something icub asimo,friend building upper body humanoid robot m.sc thesis project dc motors robot thing want know best way command motors design mind motor micro position velocity control master micro command control slave micros best way go master micro command slave ones question best micro robot go arm pic want master receive command pc help appreciated,control microcontroller communication,control communication microcontroller
1105,remote control laser meter,looking buy laser distance meter connect motor cellular control motor mesure distance appriciate advice thanks,laser,laser
1106,accuracy estimated position localization better estimated position slam,estimate position robot localization slam intuition says get better position estimation localisation slam better sensor model likelihoods localization given complete environment slam like know difference accuracy estimated position localization slam,localization slam particle-filter,filter slam particle localization
1107,trying design mechanical system vertical horizontal movement,trying devise system lift weight distance allow move in/out distance motions able occur possible thinking vertical motion use suspended climber system unsure devise system horizontal motion horizontal plane need nothing protrude device told extend horizontal suspended climber system possible solution thinking need use electric motors like mount side car lightweight low power draw anyone know anything available suggest combine couple systems make work information appreciated,mechanism,mechanism
1108,connect video stream java app console mplayer,building quadcopter using raspberry pi pi camera connected raspberry pi streaming captured video connect stream wi-fi notebook linux using console command nc show mplayer want avoid console commands connect stream java application reason want image processing operations video application anyone able help,quadcopter raspberry-pi cameras linux,quadcopter pi raspberry cameras linux
1109,control circuit humanoid robot worth learn use ros,building upper body humanoid robot m.sc thesis project dc motors multiple sensors something i-cub nao basic knowledge communication protocols worked micros knowledge experience working ros question worthy practical learn ros use robot stick know,microcontroller ros humanoid,ros microcontroller humanoid
1110,kalman filter model values state space original value values use,using l3gd20 trying implement kalman filter stm32f3 discovery board questions filter gave values make average original model use according document use original state space vectors filter correct space state estimated values,kalman-filter gyroscope,filter gyroscope kalman
1111,best localization method,making robot supposed roam house pick trash using opencv plan send information arduino mega arduino nano connected window pc using radio transceivers plan send video feed raspberry pi camera wifi windows pc windows pc uses opencv processes information sensors sends command arduino mega arduino mega raspberry pi usb camera wifi dongle xbox kinect wheel encoders sonar distance sensor arduino nano windows pc want know keep track robot room think trying slam need make map rooms change open ideas cost factor,arduino mobile-robot localization,mobile localization robot arduino
1112,integration msp430,trying integrate bluetooth project msp430 able communicate pc search ebay found following item hc-05 transceiver module interface base board serial lot bluetooth modules appear expensive boards populated ic wondering need use,arduino,arduino
1113,choose state space model axis gyroscope implemnt good kalman filter,using gyroscope order measure rotation robot z axis want implement kalman filter order improve values came space model θ k+1 =θ k +dt*θ k +w k k =θ k +z k θ angle θ angular rate given gyro w hold gyro measured values steady find variance equal want ask correct find z k .according data sheet noise density equal dps/sqrt hz use information find z k correct w k wrong,kalman-filter gyroscope noise,filter noise gyroscope kalman
1114,find centre circle robot see partial arc,asked struggling take concepts circumcenter discussed context context ... small robot see camera partial arc birds-eye view know height width square width height arc sure way approximating circles centre quickest accurate way helping robot find centre head steps problem break arc spaced vectors work angle vectors use information complete circle work radius circle find center circle love input problem think know dot product add lengths vectors get circumference divide pi divide tau think circumcentre comes feel pieces puzzle sure fit using python opencv guessed great understanding math expressed algebraic formula code illustrive pictures reference,computer-vision navigation,computer navigation vision
1115,pixhawk imus,looking pixhawk specs noticed different imus- invensense stm redundancy higher purpose,uav,uav
1116,robot arm inverse kinematics minimum joint loads,suppose robot arm n linkages fixed length equal density whose motion constrained plane want end effector reach particular pose x^* y^* \theta^* know general multiple solutions reach pose particular application interested solution minimizes maximum torque exerted joint influence weights linkages combined way reformulate inverse kinematics problem minimization problem joint loads formulate objective function differentiable i.e use traditional optimization techniques yield unique solution least squares sense planar motion problem,inverse-kinematics,inverse kinematics
1117,implementing torque-controlled method position-controlled robot,working position-controlled manipulator want implement torque-controlled method robot way convert torque command position command try find research papers idea start keywords use searching suggestion,robotic-arm industrial-robot manipulator,manipulator industrial arm robot robotic
1118,motors use require gearboxes car robot,new robotics ime looking motor used power car-like robot.i turn on-spot furthermore want require gearbox attach wheels know start looking heard servos built gearboxes degree rotation body know motor described paragraph least point right direction,motor,motor
1119,simulator adaptive under-actuated robotic gripper,looking build adaptable robotic arm under-actuated fingered hands start shelling money want test prototypes simulator allow try various actuators tactile sensor pressure sensitive resistor pressure sensitive conductive sheet simulate different environments tasks gripping various shapes sizes weights etc able talk external learning/inference programs adaptive part think goes name manipulation planning tasks sensory tactile sensors simulator camera input separate module options simulator including address requirements bit background dont recent experience building electronics hardware projects experienced part labs electronics engineering under-graduation field left long time wannabe hobbyist,robotic-arm motion-planning simulator planning,motion planning simulator arm robotic
1120,plastic transparent ir range sensors,sharp ir range finders pretty popular sensors see mounted exposed environment makes prone damaged getting crufty use outdoor rover cover sort transparent case protect dirt impacts environment type plastics transparent sensors buy simple sheets,sensors rangefinder,sensors rangefinder
1121,communicating syringe pump using pyserial,let first start explaining decent background electronics interfacing stupid question trying connect old harvard syringe pump website pdf manual computer goal controlling things pump rates direction connected instrument computer using d-sub/usb conversion dongle connected dongle pyserial issues try send commands request instrument output example write run\r instrument anything requesting data read returns couple \x00 suspect communicating dongle pump pump turned unplugged get results anyone explain method work python code reference import serial pyserial module open connection ser serial.serial /dev/ttyusb0 baudrate=9600 bytesize=8 stopbits=2 timeout=1 print ser returns serial id=0x1cc7610 open=true port='/dev/ttyusb0 baudrate=9600 bytesize=8 parity='n stopbits=2 timeout=1 xonxoff=false rtscts=false dsrdtr=false see connection open print ser.isopen prints true run pump motor ser.write run\r additional observations instrument plugged code running pump sorts things move way stop move way behaviour less pronounce present code runs channel something seems suggest reference voltages logical high low set 2-5v 0-0.5v,control usb rs232,control rs232 usb
1122,unable hover quadcopter,flying quadcopter using apm flight controller.while able get quad ground steady use trims .however unable get quad hover matter do.i tried using trims throttle unable get hover.on transmitter wfly wft06ii throttle ticks stuck little much lift push tick quad goes decending ascending vice versa way get quad hover hands throttle possible evern trying fly get alternates ascending descending fiddle throttle,quadcopter multi-rotor radio-control,quadcopter rotor multi radio control
1123,following trajectory lqr controller,want wheeled follow short trajectory wrote lqr controller works simulation robot offers problems reported state information seem motion seems underly random deviations succeed establishing good model predict robots motion given control input possible manage problems lqr controller yes,control wheeled-robot kinematics,control kinematics wheeled robot
1124,robot safety standards software,looking possible iso standards robot safety software come presentation mentions many iso standards clear applies software probable ones 10218-1 iso 13849-1 iec iec iso/ts safety related software seems categorized level level presentation appreciate anyone knowledge area point right standard expensive go see applies side note standards c standard draft available free copies drafts standards,software,software
1125,arduino -lcd screen weird noise multiple pictures,"connecting arduino lcd screen using following library display code written simple piece code display picture os eyes angry friendly switching regular intervals display keeps showing weird pixels borders making show eyes fixed long eyes used runs trouble code void setup lcda.initdriverpin lcda.initialise // init screen delay void loop lcda.clear //empty screen delay //wait command finish lcda.drawfullscreen eyes delay //wait seconds eyes screen lcda.clear //clear screen delay //wait command finish lcda.drawfullscreen angry //show angry face delay //wait seconds angry face screen /* -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- dfrobot bitmap size pixels black/white image -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- */ unsigned char eyes ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0xe0 ,0x00 ,0x00 ,0x00 ,0xf8 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1e ,0xf8 ,0x00 ,0x00 ,0x00 ,0xfe ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3e ,0xf8 ,0x00 ,0x00 ,0x02 ,0xfe ,0x80 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0xfc ,0x00 ,0x00 ,0x06 ,0xfe ,0xc0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0xfe ,0x00 ,0x00 ,0x0e ,0xfe ,0xf0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0xfe ,0xfe ,0x00 ,0x00 ,0x0e ,0xfe ,0xf8 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0e ,0xfe ,0x7e ,0x00 ,0x00 ,0x1e ,0xc6 ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1e ,0xf8 ,0x3e ,0x00 ,0x00 ,0x1e ,0x80 ,0xfe ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3e ,0xf0 ,0x1e ,0x80 ,0x00 ,0x3e ,0x80 ,0xfe ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3e ,0xc0 ,0x1e ,0x80 ,0x00 ,0x3e ,0x00 ,0x7e ,0xc0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x7e ,0x80 ,0x1e ,0x80 ,0x00 ,0x3e ,0x00 ,0x3e ,0xc0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0x00 ,0x0e ,0xc0 ,0x00 ,0x3e ,0x00 ,0x0e ,0xe0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0x00 ,0x0e ,0xc0 ,0x00 ,0x7e ,0x00 ,0x0e ,0xe0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfc ,0x00 ,0x06 ,0xc0 ,0x00 ,0x7e ,0x00 ,0x06 ,0xf0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0xfc ,0x00 ,0x06 ,0xe0 ,0x00 ,0xfe ,0x00 ,0x02 ,0xf8 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0xf8 ,0x00 ,0x06 ,0xe0 ,0x00 ,0xfe ,0x00 ,0x02 ,0xf8 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x06 ,0xf0 ,0x00 ,0x06 ,0xe0 ,0x00 ,0xfc ,0x00 ,0x00 ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0e ,0xe0 ,0x00 ,0x02 ,0xe0 ,0x00 ,0xfc ,0x00 ,0x00 ,0xfe ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0e ,0xe0 ,0x00 ,0x02 ,0xe0 ,0x00 ,0xfc ,0x00 ,0x00 ,0xfe ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1e ,0xc0 ,0x00 ,0x02 ,0xe0 ,0x00 ,0xf8 ,0x00 ,0x00 ,0x3e ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1e ,0xc0 ,0x00 ,0x02 ,0xe0 ,0x00 ,0xf8 ,0x00 ,0x00 ,0x3e ,0x80 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1e ,0x80 ,0xfe ,0xc2 ,0xe0 ,0x00 ,0xf8 ,0x7e ,0xf0 ,0x1e ,0x80 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3e ,0x00 ,0xfe ,0xf2 ,0xe0 ,0x00 ,0xf8 ,0xfe ,0xf8 ,0x1e ,0x80 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3e ,0x02 ,0xfe ,0xfa ,0xe0 ,0x00 ,0xf8 ,0xfe ,0xf8 ,0x1e ,0xc0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3e ,0x06 ,0xf2 ,0xfe ,0xf0 ,0x00 ,0xfa ,0xfc ,0xfc ,0x1e ,0xc0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x7e ,0x0e ,0xc0 ,0xfe ,0xf0 ,0x00 ,0xfe ,0xc0 ,0x7e ,0x0e ,0xc0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x7e ,0x0e ,0x80 ,0x7e ,0xf0 ,0x00 ,0xfe ,0xc0 ,0x3e ,0x0e ,0xc0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x7e ,0x1e ,0xfe ,0x3e ,0xf0 ,0x00 ,0xfe ,0x8e ,0xfe ,0x0e ,0xc0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfc ,0x1e ,0xee ,0x9e ,0xf0 ,0x00 ,0xfe ,0xbe ,0xfe ,0x0e ,0xe0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfc ,0x1e ,0x82 ,0xde ,0xf0 ,0x00 ,0xfe ,0xbc ,0x6e ,0x86 ,0xe0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfc ,0x3e ,0x82 ,0xde ,0xf0 ,0x00 ,0xfe ,0xb8 ,0x2e ,0xc6 ,0xe0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfc ,0x3e ,0x80 ,0xde ,0xf0 ,0x00 ,0xfe ,0xb0 ,0x2e ,0xc6 ,0xf0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xf8 ,0x3c ,0x3e ,0x5e ,0xe0 ,0x00 ,0xfe ,0x9e ,0x8e ,0xc2 ,0xf0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xf8 ,0x3c ,0x7e ,0x9e ,0xe0 ,0x00 ,0xfe ,0xbe ,0xd6 ,0xc2 ,0xf0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xf0 ,0x7c ,0x7e ,0xde ,0xe0 ,0x00 ,0xfe ,0xbe ,0xc6 ,0xe2 ,0xf8 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xf0 ,0x7c ,0xfe ,0xde ,0xe0 ,0x00 ,0xfe ,0xfe ,0xf6 ,0xe2 ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xf0 ,0x7a ,0xfe ,0xde ,0xe0 ,0x00 ,0xfe ,0xfe ,0xf6 ,0xe2 ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xf0 ,0x7a ,0xfe ,0xde ,0xe0 ,0x00 ,0xfe ,0xfe ,0xf2 ,0xe0 ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xf0 ,0x7a ,0xfe ,0xde ,0xe0 ,0x00 ,0xfe ,0xfe ,0xf2 ,0xe0 ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xf0 ,0x7a ,0xfe ,0xde ,0xe0 ,0x00 ,0xfe ,0xfe ,0xf2 ,0xe0 ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xf0 ,0x7a ,0xfe ,0xde ,0xe0 ,0x00 ,0xfe ,0xfe ,0xf2 ,0xe0 ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xf0 ,0x7a ,0xfe ,0xde ,0xe0 ,0x00 ,0xfe ,0xfe ,0xf2 ,0xe0 ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0xf0 ,0x7a ,0xfe ,0xfe ,0xe0 ,0x00 ,0xfe ,0xfe ,0xfa ,0xe0 ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0xf0 ,0x7a ,0xfe ,0xfe ,0xe0 ,0x00 ,0xfe ,0xfe ,0xfa ,0xe0 ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0xf0 ,0x7a ,0xfe ,0xfe ,0xe0 ,0x00 ,0xfe ,0xfe ,0xfa ,0xe0 ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0xe0 ,0x7a ,0xfe ,0xfe ,0xe0 ,0x00 ,0xfe ,0xfe ,0xfa ,0xe0 ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0xe0 ,0x7e ,0xfe ,0xfe ,0xe0 ,0x00 ,0xfe ,0xfe ,0xfa ,0xe0 ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0xfc ,0x7e ,0xfe ,0xfe ,0xe0 ,0x00 ,0xfe ,0xfe ,0xfe ,0xc0 ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0xfe ,0x3e ,0xfe ,0xfe ,0xe0 ,0x00 ,0xfe ,0xfe ,0xfe ,0xce ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0xfe ,0xfe ,0xfe ,0xfe ,0xc0 ,0x00 ,0x7e ,0xfe ,0xfe ,0xfe ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0xfe ,0xfe ,0xfe ,0xfe ,0xc0 ,0x00 ,0x7e ,0xfe ,0xfe ,0xfe ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0xfe ,0xfe ,0xfe ,0xc0 ,0x00 ,0x7e ,0xfe ,0xfe ,0xfe ,0xf8 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3e ,0xfe ,0xfe ,0xfe ,0xc0 ,0x00 ,0x3e ,0xfe ,0xfe ,0xfe ,0x80 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x06 ,0xfe ,0xfe ,0xfe ,0x80 ,0x00 ,0x3e ,0xfe ,0xfe ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3e ,0xfe ,0xe0 ,0x00 ,0x00 ,0x00 ,0xfe ,0xfe ,0x80 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 unsigned char angry ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x30 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x7c ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x7e ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0e ,0x80 ,0x00 ,0x00 ,0x7e ,0xc0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3e ,0x80 ,0x00 ,0x00 ,0x1e ,0xe0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0x80 ,0x00 ,0x00 ,0x06 ,0xf8 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x06 ,0xf8 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0x80 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1e ,0xe0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3e ,0xc0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x7e ,0xe0 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0xf0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0xf8 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0xfe ,0xfc ,0x00 ,0x00 ,0x00 ,0x02 ,0xfc ,0xfe ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0e ,0xf6 ,0xfe ,0x00 ,0x00 ,0x00 ,0x06 ,0xf0 ,0x7e ,0x80 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3e ,0xe0 ,0xfe ,0x00 ,0x00 ,0x00 ,0x0e ,0xe0 ,0x1e ,0xe0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x7e ,0x80 ,0x7e ,0x80 ,0x00 ,0x00 ,0x1e ,0xc0 ,0x1e ,0xf8 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0x00 ,0x3e ,0xc0 ,0x00 ,0x00 ,0x3e ,0xe0 ,0x1e ,0xfe ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x06 ,0xfe ,0x00 ,0x7e ,0xe0 ,0x00 ,0x00 ,0x3e ,0xf0 ,0x0c ,0xfe ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x1e ,0xf2 ,0x00 ,0xe6 ,0xe0 ,0x00 ,0x00 ,0x7e ,0x30 ,0x04 ,0x3e ,0xc0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3e ,0xc2 ,0x8e ,0xe2 ,0xf0 ,0x00 ,0x00 ,0x7c ,0x30 ,0x0c ,0x0e ,0xf0 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0x00 ,0x9e ,0x82 ,0xf0 ,0x00 ,0x00 ,0xfc ,0x3e ,0x1c ,0x06 ,0xfc ,0x00 ,0x00 ,0x00 ,0x02 ,0xfe ,0x02 ,0x98 ,0x00 ,0xf8 ,0x00 ,0x00 ,0xf8 ,0x3e ,0x18 ,0x00 ,0xfe ,0x00 ,0x00 ,0x00 ,0x06 ,0xf8 ,0x02 ,0x18 ,0x00 ,0xf8 ,0x00 ,0x00 ,0xf8 ,0x06 ,0x18 ,0x02 ,0xfe ,0x80 ,0x00 ,0x00 ,0x1e ,0xe0 ,0x06 ,0x18 ,0x00 ,0xf8 ,0x00 ,0x00 ,0xf0 ,0x02 ,0x18 ,0xfe ,0x1e ,0xe0 ,0x00 ,0x00 ,0x7e ,0xc0 ,0x06 ,0x78 ,0x00 ,0xfc ,0x00 ,0x00 ,0xf0 ,0x02 ,0x18 ,0xfe ,0x0e ,0xf8 ,0x00 ,0x00 ,0xfe ,0x66 ,0x8c ,0xf0 ,0x00 ,0x7c ,0x00 ,0x00 ,0xf0 ,0x02 ,0xfe ,0x80 ,0x02 ,0xfc ,0x00 ,0x02 ,0xfc ,0x7e ,0xc6 ,0xc0 ,0x00 ,0x7c ,0x00 ,0x00 ,0xf0 ,0x00 ,0xfe ,0x00 ,0x00 ,0xfe ,0x00 ,0x0e ,0xfc ,0x38 ,0xe6 ,0xc0 ,0x00 ,0x7c ,0x00 ,0x00 ,0xf0 ,0xe0 ,0xfe ,0x80 ,0x00 ,0xfe ,0xc0 ,0x3e ,0xfc ,0x00 ,0x76 ,0xe0 ,0x00 ,0x7c ,0x00 ,0x00 ,0xf0 ,0xfa ,0xfe ,0x80 ,0x00 ,0xfe ,0xf0 ,0xfe ,0xfc ,0x00 ,0x3e ,0xf6 ,0x80 ,0x7c ,0x00 ,0x00 ,0xf0 ,0xba ,0xfe ,0xf0 ,0x00 ,0xf6 ,0xf0 ,0xfe ,0x78 ,0x00 ,0x3e ,0xfe ,0xe0 ,0x3c ,0x00 ,0x00 ,0xf0 ,0x8e ,0xfe ,0xf8 ,0x00 ,0xf0 ,0xf0 ,0xf8 ,0x7c ,0x00 ,0x1e ,0xfc ,0xf8 ,0xfc ,0x00 ,0x00 ,0xfc ,0x86 ,0xfe ,0x98 ,0x00 ,0xf0 ,0x60 ,0x60 ,0x7c ,0x70 ,0x1e ,0xf8 ,0x3e ,0xfc ,0x00 ,0x00 ,0xfe ,0x82 ,0xfe ,0x9c ,0x00 ,0xf0 ,0x00 ,0x00 ,0x7c ,0x7c ,0xfe ,0xf8 ,0x06 ,0x7c ,0x00 ,0x00 ,0xfe ,0x80 ,0xfe ,0x8e ,0xe0 ,0xf0 ,0x00 ,0x00 ,0x7c ,0x6e ,0xfe ,0xf0 ,0x00 ,0x7c ,0x00 ,0x00 ,0xf0 ,0x00 ,0xfe ,0x06 ,0xf0 ,0xf0 ,0x00 ,0x00 ,0x7c ,0x76 ,0x9e ,0xf8 ,0x00 ,0x7c ,0x00 ,0x00 ,0xf8 ,0x00 ,0xfe ,0x80 ,0x3a ,0xf0 ,0x00 ,0x00 ,0x7e ,0x30 ,0x0e ,0xfc ,0x00 ,0xfc ,0x00 ,0x00 ,0xf8 ,0x02 ,0x82 ,0x00 ,0x1e ,0xe0 ,0x00 ,0x00 ,0x3e ,0xf0 ,0x06 ,0xec ,0x00 ,0xf8 ,0x00 ,0x00 ,0xfc ,0x06 ,0x02 ,0x00 ,0x0e ,0xe0 ,0x00 ,0x00 ,0x3e ,0xe0 ,0x06 ,0x0c ,0x00 ,0xf8 ,0x00 ,0x00 ,0xfc ,0x06 ,0x02 ,0x80 ,0x06 ,0xe0 ,0x00 ,0x00 ,0x3e ,0xc0 ,0x02 ,0x0c ,0x00 ,0xf8 ,0x00 ,0x00 ,0x7e ,0x06 ,0x00 ,0x80 ,0x0e ,0xc0 ,0x00 ,0x00 ,0x1e ,0x80 ,0x06 ,0x0c ,0x02 ,0xf0 ,0x00 ,0x00 ,0x7e ,0x06 ,0x00 ,0x80 ,0x1e ,0xc0 ,0x00 ,0x00 ,0x1e ,0x80 ,0x0e ,0x0c ,0x02 ,0xf0 ,0x00 ,0x00 ,0x3e ,0x3e ,0x00 ,0xc0 ,0x1e ,0x80 ,0x00 ,0x00 ,0x0e ,0xc0 ,0x1c ,0x0c ,0x06 ,0xe0 ,0x00 ,0x00 ,0x3e ,0xbc ,0x00 ,0xc0 ,0x3e ,0x80 ,0x00 ,0x00 ,0x0e ,0xe0 ,0x38 ,0x0c ,0x0e ,0xe0 ,0x00 ,0x00 ,0x1e ,0xe0 ,0x00 ,0xc0 ,0xfe ,0x00 ,0x00 ,0x00 ,0x06 ,0xf0 ,0x70 ,0x0e ,0x1e ,0xc0 ,0x00 ,0x00 ,0x0e ,0xf0 ,0x00 ,0xc0 ,0xfe ,0x00 ,0x00 ,0x00 ,0x02 ,0xfc ,0x60 ,0x06 ,0xfe ,0x80 ,0x00 ,0x00 ,0x06 ,0xfc ,0x00 ,0xf6 ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0x60 ,0x00 ,0xfe ,0x00 ,0x00 ,0x00 ,0x02 ,0xfe ,0x00 ,0xfe ,0xf8 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0xe0 ,0x06 ,0xfe ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0xfa ,0xfe ,0xf0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x7e ,0xfe ,0xfe ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0xfe ,0xfe ,0xe0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3e ,0xfe ,0xfe ,0xf8 ,0x00 ,0x00 ,0x00 ,0x00 ,0x3e ,0xfe ,0xfe ,0x80 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0e ,0xfe ,0xfe ,0xe0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0e ,0xfe ,0xfe ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0xfe ,0xfe ,0x80 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0xfe ,0xf0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x7e ,0xfc ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 time upload image changes way noise patterns look suggesting kind overflow problem changing last byte bitmaps creates lines bottom screen images note different images much cut images creating active pixels set ones suggesting images least fit display",arduino,arduino
1126,robotic cell simulation software plc,need simulate robotic cell cartesian robot trims pcb arriving conveyor picks vacuum cup places device receiving signal device robot pick place belt want make cartesian robot using servomotors control cell using plc software simulate need integrate sensors machine vision,simulation,simulation
1127,set rubber hand experiment precise latency,rubber hand illusion wikipedia involves touching fake arm subject real arm causes subject feel fake arm belongs human delivers touches timing approximate want vary latency fake touch real touch ~5 ms minimum probe need create illusion use touch human fake hand variable precise times,research,research
1128,looking cheap ish micromouse program c/c++,looking buy i.e small single-board unit wheels ir sensors move done lot searching found resources relating building components bought programmer electrician fear struggle anybody know buy uk picaxe suitable stuff basic budget £60,arduino mobile-robot wheeled-robot micromouse,mobile micromouse robot wheeled arduino
1129,regarding long distance wireless communication,requirement transmit sensor data wireless distance kilometers newbie technologies concepts anyone help providing pointers start,wireless,wireless
1130,magnetometer calibration algorithm,want calibrate compass installed board inherits gps module gps up-side-down compass inverted easiest way correct problem invert rotation matrix got interested general approach calibrate compass look found approaches seem collect magnetometer readings project point someone know general calibration algorithm magnetometer looks,calibration compass magnetometer,magnetometer compass calibration
1131,redundant arm path planning trajectory following,robotic arm set end effector trajectories cartesian space need follow deal redundancy arm planning follow trajectories obstacle avoidance,robotic-arm motion-planning c++ planning,motion c planning arm robotic
1132,find solution pid control,built quadcopter rig working pid controlling roll pitch yaw understand pid works simple plant say robot wheels dark believe controlling stabilizing quad question make sensor readings alter motors throttle approach based model cw motors c ccw motors b front +1 pitch c -1 roll \-/ +1 roll /-\ b -1 pitch imu calculates roll pitch value +-1.0 perfect balance read degree +-1.0 means degrees original normal input pitch go something meaning tilt degrees motors take value thought mean modify motor values c throttle roll pitch yaw throttle roll pitch yaw b throttle roll pitch yaw throttle roll pitch yaw taking floating point numbers imu computing method appears normal way found rollpid.compute steering.roll gyro.roll // pid_t define pid_t float know reserved type pre-processor definition change matter pid_t compute pid_t input uint64_t millis last_time sample_time pid_t error set_point input error_sum += error pid_t d_error error error_last *output kp error ki error_sum kd d_error error_last error last_time know go angular rate calculated imu encountered solution called edit graph readings seconds hold hand roll right kp=1 ki=0 kd=0,quadcopter pid design,quadcopter design pid
1133,finding position servo,building collision avoidance system robot part system using pan tilt kit http //www.robotshop.com/en/lynxmotion-pan-and-tilt-kit-aluminium2.html aim pan sensor attached kit plan route robot take order pan sensor need know angle kit panned able call angle point time sensor keeps panning point time certain conditions met stops panning conditions met need able extract angle sensor panned servo used //www.robotshop.com/en/hitec-hs422-servo-motor.html someone help find way extract information helpful read servo hacked changed closed loop system effective angle shown option viable thanks,mobile-robot sensors servos,mobile sensors servos robot
1134,apm planner linux/ubuntu open file working,open parameter list apm planner moreover find anyone problem run ubuntu/trusty see files extensions including param txt downloaded internet created version apm planner ideas fix ps ls -la terminal user laptop ~/apmplanner2/parameters ls -la total drwxrwxr-x user dec drwxrwxr-x user dec .. -rw-rw-r -- user dec paramter.param param txt files downloads folder ps,ardupilot,ardupilot
1135,pid quadcopters,mentioned pid output values correspond error desirable error current error units let say using proportional part pid better map output pid values corresponding thrust values motor better increase proportional coefficient kp output values correspond proper thrust value motors example desired angle sensor reading degrees difference multiplied kp output added subtracted current thrust depending motor increase kp much quadcopter oscillating listening controller command sending desired degrees joystick map values listening joystick commands oscillating much happening mapping pid output values bigger values increasing kp,arduino pid,pid arduino
1136,connecting arduino uno beaglebone black usb,arduino uno beaglebone black like talk beaglebone arduino power supplies need power transferred usb used communication line like use direct serial line way arduino call serial.read order get bytes needs many get work beagleboneblack suspect call serial.write bbb program c++ achieve,arduino serial usb c++ beagle-bone,c usb arduino beagle serial bone
1137,simple effective angular position sensor used robotic hand,simple use angular position sensor building robotic hand want implement sensor joints fingers need module analogue output thank,sensors hall-sensor,sensors sensor hall
1138,step motor bevel gear calibration,new robotics want understand gears state preserved gears turned positions bevel gear step motor connected gear gear turn degrees say states gears stay problem force gear connected motor direction force change worm position micrometers think locking mechanism applications give example,stepper-motor stability,stability stepper motor
1139,defining trajectory quadrotor,looking trajectory generator algorithm matter going write using c++ generates trajectory parametric curve space defined point point going feed quadrotor drivers honest know start reading following interesting answer problem trajectory pd controller quadrotor take parametric curve input library seems powerful interesting let user define many different algorithms problem documented good examples explanations missing till could'nt find anything related quadrotors use library example quadrotor find expectations figure implement package want copy paste code understand b-spline bezier curve ... whole family parametric curves found interesting libraries internet implement c++ problem define points space generate spline contains interpolate points pid controller quadrotor basic idea dog chasing rabbit point generated start point spline sent quadrotor latter flies point trying reach goal point reached problem case generate curve based geometric properties considering dynamic kinematic quadrotor consider future project rabbit runs tighter curve radius dog result strange behavior quadrotor good tips point right direction kind trajectory planner developed fr application thanks regards,mobile-robot ros quadcopter movement,mobile quadcopter ros robot movement
1140,easiest method plot temperature pc,lot learning launching reballing business feel need realtime plot temperatures involved arduino uno k type thermocouples researching subject saw lot different approachs use arduinos send serial data pc port process phyton guys matlab use ms excel free add vb apps etcetera reading feel overwhelmed different methods wonder losing perspective simple method use kiss way get done thank,arduino sensors microcontroller electronics,sensors microcontroller electronics arduino
1141,control wheel robot using arduino,trying control omni wheel robot motors using joysticks actuation switches want control using arduino mega pair wireless module hc-05 bluetooth modules works serial communication program arduino send analog values provided joystick input switch,arduino serial communication,communication serial arduino
1142,sun tracking +/- accuracy,school project looking sun +/- degree accuracy use parabolic dish reflector say need final output torque kind gearing/motors feedback guys use accomplish sun position found solar positioning algorithm new research stepper motors seem easiest brushless dc motors read yield better results smoother tracking confused use regular brushless dc motors achieve precision positioning aware encoders understand bldc preferred particular application implement them.. ideas help kick start researching,motor brushless-motor stepper-motor servomotor,servomotor brushless stepper motor
1143,send new mavlink message ardupilot,trying add new message mavlink interface following page steps took added message right end file message name= testing_testing_testing id= description testing message /description field type= int16_t name= placeholder nothing placeholder /field /message regenerated mavlink messages headers using ./libraries/gcs_mavlink/generate.sh worked new headers appeared added function gcs class make sure sending right channel void gcs_mavlink :send_testing_testing_testing mavlink_msg_testing_testing_testing_send chan time send message added function scheduler last priority made sure function called sending text seeing mission planner console function added static void a_testing_loop void uint8_t i=0 num_gcs i++ gcs .initialised // gcs .send_text_p severity_high pstr testing string gcs .send_testing_testing_testing message received mission planner end received ignored mission planner anyway appear console window message debug configuration made mission planner receive new messages sending message wrong way filter messages console using debug mode using sitl testing enough reputation tag,ardupilot mavlink,ardupilot mavlink
1144,go learning code flight controller,interested quadcopters/multi-rotors want code flight controller ala apm and/or pixhawk got little experience programming i.e know if/else/else conditionals done little programming php procedural code quadcopter built/assembled running f450 frame using apm flight controller reasonable grasp quad works like take step make adjustments code base eventual aim coding flight controller look code base unable get grasp code ... go learning code flight controller thinking learn c++ first familiar/proficient c++ attempt edit code base need learn c++ oop looking setting month timeframe/deadline possible,arduino quadcopter microcontroller multi-rotor,quadcopter rotor multi microcontroller arduino
1145,want control sewing machine motor need help choices,got industrial sewing machine think sew thread looks string trouble pounding layers sunbrella fabric got hp motor power got smaller machine w/ hp motor work motor clutch motor foot-pedal engages clutch slip clutch sewing stopped better control particular able stop needle able stop needle buried i.e. way able press button move stitch able adjust -- knob -- top speed motor motor sewing hp motor overkill suppose used hp toughest jobs appreciate comments thinking read looks dc motor way go max torque speed nice initial punch material thing ability brake shorting terminals nice ... expensive nice dc treadmill motor drive 12-24v give less right speed adjusting pulleys rest dc motors powered electric lawnmowers instance running ac diode bridge rectifier produce pulsating dc got rectifier handy old autotransformer use get get pulsating dc drive thing ... good idea got arduino skills program several years electronics tinkering rc experience ... experience handling larger dc motors told magic words h-bridge found motor driver seems allow turn motor regulate voltage going motor know presented pulsating dc input work thoughts tell -- seem handy datasheet instruction page -- thing braking position sensing lots places get information -- needle baror handwheel sewing machine concerned part give sense problem typical stitching speed something stiches minute sensing needle top travels bottom quarter talking something order 10-50hz sound challenging control scenario guess questions pulsating dc work controller cited better rc motor-controller seem find designed range handle amps brushless motor think want braking ability rc controller software controller prevent making motor stop particular position comments/suggestions appreciated btw happy mathematics reading data sheets read years half art electronics idea level answer appropriate answer jwpat questions got voltage value saying motor rated think yikes turns something rpm looks mine dividing got v give rpm office motor home tell exact part number alas honestly think no-load vs load condition big deal wangle factor pulleys sewing machine juki current motor/clutch similar sorry lack detail,motor control power,control power motor
1146,making robot knows location,made radio frequency remote control using pic microcontroller want something useful thinking robot gets things bed comes question going pic determine location remote control calling done using gps module house options,microcontroller localization,microcontroller localization
1147,interfacing arduino uno dof razor imu,followed tutorial razor imu worked imu connected pc trying interface dof razor imu arduino uno connect rx tx tx rx work wondering anyone done anybody give hints appreciated,arduino imu,imu arduino
1148,arduino depth sensor,looking arduino compatible depth sensor water need sensor similar xbox kinect much smaller tell front sensor shape object example place cylindrical water bottle front sensor like able figure bottle shape object need know cylinder general shape sensor needs accurate meter exist purchase exist pieces need buy put thanks,arduino sensors kinect,kinect sensors arduino
1149,alternatives cameras dirt sensor autonomous vacuum robot,standard manual vacuum notice pass spot several times single pass catch dirt eyes/brain perceive information know autonomous robot vacuum detect pass patch dirt successful kind sensor/action use determine robot vacuum picked dirt particular patch prefer avoid visual camera possible mounted robot limit range reachable locations sensor accomplish task placed low ground,sensors,sensors
1150,mapping done real life applications solving localization problem time i.e slam,know occupancy grid mapping requires assumption robots pose known generating map know reality position orientation treated uncertain practical applications assuming target mapping environment home way overcome inherent robot pose uncertainty real world application occupancy grid mapping resorting implementing slam low-cost way increase certainty pose occupancy grid mapping useful theory practice update clear responses given grid mapping possible way represent map method heart want know mapping done solving localization problem time i.e slam real life applications,slam mapping occupancygrid,slam mapping occupancygrid
1151,brushless motor controller accepting updates/s,want use brushless line follower problem escs accept 400-500 updates/s due characteristic steering signal way overcome custom flash luck,brushless-motor esc line-following,following brushless esc line motor
1152,slam goal babbling,struggling good links use goal babbling slam applications technique used method optimizing movement slam environment,localization slam motion-planning mapping,motion planning slam mapping localization
1153,power wheel let spin power,power wheel let spin power saw question modify low cost hobby servo run interested knowing sort gearbox disengages moves applied ideas come mind drive gear spring loaded arm nominal amount resistance engaging power use power direction engage gear power spring return non-engaged position centrifugal clutch something works low rpms idea create small bot move track someone interacts power roll damage gearbox,motor power rcservo radio-control,control radio power motor rcservo
1154,simple vector problem weight vector components sine cosine rotation,quadcopter photo rotate theta degrees -y axis want get x z components local frame weight points vertical downward wx w sin theta wz w cos theta suppose w theta deg wx -4 sin -30 wz -4 cos -30 -3.464n negative sign angle put rotation -y axis counterclockwise wz seems correct pointing towards negative local z axis wx seems wrong according diagram supposed -2 indicating point towards negative local x axis wrong simple calculation edit using rotation matrices following rotation matrix pitching rotating axis matrix used transform vectors inertial frame xn yn zn local frame xb yb zb find components weight w matrix w. get result wx w sin theta wz w cos theta,quadcopter frame,quadcopter frame
1155,algorithm following analog controller digital controller,continous control following form u \left k_ p \frac k_ k_ \frac \frac e need convert digital control need something y_ k y_ k-1 q_ e_ k-1 q_ e_ k-2 everything use digital way achieve transformation problem term equation thought pid controller n term understanding thank much happy christmas,control pid,control pid
1156,high gear ratio motor,want make robot arm joint powerful lift kg distance meter requires torque tau r*f r*m*g nm trying find requisite parts put i.e motor gears controller seems require high gear ratio make happen example motor http //www.robotshop.com/ca/en/banebots-rs-550-motor-12v-19300rpm.html stats stall torque oz-in nm load roation speed rpm get required torque need gear ratio max speed drops rpm questions calculations seem correct seems bit suspect motor gears cause dumbbell rotate circle radius twice strong type torque awesome application missing something calculations optimistic e.g efficiency safe operate motor high gear ratio gears small worried crack/break/wear time anyone know example gears consider thank much help cheers,motor robotic-arm gearing,gearing arm motor robotic
1157,fliike smiirl counter mechanism work,first please see video http //www.youtube.com/watch v=n0dkn4ziqvg think stepper motor -or servo- working mechanisim see flip counter works like classical counter mechanism http //www.youtube.com/watch v=rjwfiiaofr4 works,mechanism stepper-motor,stepper motor mechanism
1158,want guy robotics,beginner need help-i want gain knowledge robotics need basic theoretical knowledge best way start,beginner,beginner
1159,sized electric motors,good website buying continuous motors looking build clockwork robot find motor small fit inside power box want mount box .75 space motor needs fit found websites look sketchy none good reviews,motor brushless-motor motion,motion brushless motor
1160,need robots,know programming question robotics thought flexible first question making robots using robot kits come instructions fun use afterwards controllers build problem find anymore robots expensive looking anybody give links good robot kits price limit £30 £40 robot kits built need kits robot arm http //www.amazon.co.uk/gp/aw/d/b002hxtonc/ref=mp_s_a_1_9 qid=1419721030 sr=8-9 pi=ac_sx110_sy165 remote control robot beetle post links go maplins type name robot find rover version robot arm 3-in-1 terrain robot kit http //www.maplin.co.uk/p/3-in-1-atr-all-terrain-robot-n12dp want program robot want examples buy kit read instructions build thank advance ps information given asked,control,control
1161,theory rigid body motion robotics book,reading theories related rigid body motion book mathematical introduction robotic manipulation prof. richard murray focusing chapter sec derive formulation according introduction chapter present modern approach treatment theory screws based linear algebra matrix groups feel understandable comprehensive explanation approach scope chapter limited inertia coordinate frame refers spatial frame moving frame body frame references treat topic reversed order spatial moving/non-inertia frame inertia frame thank,control,control
1162,replace acceleration dynamic model robot,dynamic model robot obvious found torques functions angular acceleration joint linear acceleration link center mass axies question regarding values accelerations general step motors specifications give acceleration thank,torque,torque
1163,joint compatibility branch jcbb data association implementation,like implement joint compatibility branch bound technique link method carry data association read paper confused function f_ h_ x know trying compared approach individual compatibility nearest neighbor icnn aforementioned method function f_ ij_ x function inverse measurement function call paper implicit measurement function laser sensor given observations polar coordinates seek inverse measurement function acquire cartesian coordinates icnn thing clear function f_ ij_ x acquire jacobian h_ ij_ h_ ij_ \frac \partial f_ ij_ \partial \textbf x example case laser sensor \textbf x x \theta inverse measurement function m_ x x rcos \phi \theta \\ m_ rsin \phi \theta m_ x m_ location landmark r \sqrt m_ x -x m_ -y \\ \phi atan2\left \frac m_ -y m_ x -x \right \theta using jacobian matlab get h_ ij_ suggetions,slam ekf mapping data-association,ekf slam data mapping association
1164,attach motor blade,hole big motor shaft thought hot gluing link picture,motor quadcopter multi-rotor,quadcopter rotor multi motor
1165,need relay alternative,application needs xbee module turned microcontroller setup xbee application board connected microcontroller poweron need xbee microcontroller come routines uc gets signal xbee basestation board turn xbee application board operation xbee board powered dont want put low power state power devices thinking using relay find smd equivalent system looking smd type footprint go compact board options xbee needs power application board,power,power
1166,controller influence outer inner loop running different frequencies,develop quadrotor simulation pc using ros feedback controller resumes less following structure think process dynamic movement quadrotor motion equations inner loop attitude controller sets orientation axis outer loop position controller takes care quadrotor separated many papers found controller pitch roll need run higher frequency controller system position controller needs run lower frequency following picture better explanation description scared ... simpler think paper discovered quadrotor unstable spent days days trying correct gains controller getting stable system intuition said running wrong frequency put different frequency values position controller sure multiply main frequency something hz example removed timer program c++ let position controller run frequency attitude controller run ideas worked everything nice question consider system outer/inner controllers aware regards happy new year,control quadcopter,control quadcopter
1167,function _mav_return_ defined,trying understand source code arduplane mavlink message decoded using set _mav_return_ functions e.g _mav_return_float grep _mav_return_float find defined wonder missing anything update source code ardupilot including arduplane https //github.com/diydrones/ardupilot,ardupilot,ardupilot
1168,quadcopter loop,working quad copter awhile finished interface pid tuning leading question several design decisions quad uses raspberrypi pilot entire loop takes less imu data gathered throttle speeds calculated sent arduino micro spi interface analogwrite ... quadcopter fly slow,arduino quadcopter raspberry-pi,quadcopter pi raspberry arduino
1169,aerial refueling problem sketch feedback controller,happy new looking next simulator development tanker flying constant speed knots acceleration change altitude direction tanker approached uav needs refuel transfer data wire uav knows direction speed relative position tanker order approach knows tanker contact successful picture found internet clear thousand words achieve task thought implement simple pid controls position velocity mind different designs approaches solution motion equation system provide position x z velocity vx vy vz uav simplify things consider x course z considered feedback desired position velocity knots tanker feedback line separated state pids working following picture please note simplify things considered acceleration solution tricky yesterday thinking time case state vector going desired setpoints case feedback velocity integrate feed result second pid following picture clearer sure second idea wrong affordable pretty sure first working good result wondering second affordable recommended control design regards,control pid uav,control pid uav
1170,program parallel pid control loops give robot multiple set points follow,process building robot encoders wheel measuring speed position compass sensor measuring heading seperate pid loops moment control robots speed control robots position make follow heading using line following type algorithm stuck merge control loops control robots heading speed say go degrees go metres stop like able control heading speed position say go degrees metres speed idea merge loops end day inputs heading speed position output pwm motors need use kind miso control scheme looked cascaded control accepts set point want set different set points kind state machine stuck,motor sensors control pid,control sensors pid motor
1171,questions gears robot actuator,questions regarding building gearbox motor create robot actuator given desired motor loads determined gear ratio 400-700 range adequate application motor choice reference http //www.robotshop.com/ca/en/banebots-rs-550-motor-12v-19300rpm.html questions mounting gears motor motor shaft diameter size gear bore use attach gear shaft practice inclined say build gearbox ratio https //www.youtube.com/watch v=lf-4qvbwy88 idea durable set application looking moving mass meters coming total torque newton meters tell gears break reference gears looking pretty sure ones video http //www.vexrobotics.com/276-2169.html assuming gears fail type gear material recommended load application max efficiencies expect gears different types assuming answer mentioned thank help please let know anything unclear,motor robotic-arm torque gearing,gearing torque arm motor robotic
1172,make bipedal robots,friend colleague mine studies robotics says bipedal robots present greater challenges stability locomotion much effort develop bipedal robots practical advantages course see advantage arm-like free appendages seems legs arms better design,mobile-robot design legged,mobile design robot legged
1173,encoder use dc motor shaft,like control position velocity dc motor zy motor comes tooth sprocket diameter shaft possible apply encoder motor see picture angular velocity description rpm encoder recommend,motor quadrature-encoder,quadrature motor encoder
1174,uploading edited code arducopter,attempting customise code diy pentacopter frame end modified existing code saved ap_motorpenta.cpp trying upload code flight controller unable due following problems problems unable upload apm unable select pentacopter frame problem saved customised files ap_motors library compiled code ardupilot-arduino-1.0.3-gcc-4.8.2-windows upload using mission planner uploading hex file get following error uploaded succeeded verify failed exp e2 got try uploading modified arduino ide get series warnings followed messages avrdude verification error mismatch byte avrdude verification error content mismatch followed message avrdude done.thank you. mean uploading firmware flight controller successfull difference uploading mission planner modified arduino ide problem mission planner option choose several frames i.e quad/hexaocto etc uploading firmware go selecting frame use thing apologies advance questions inane little programming experience speak appreciate help get thanks advance,arduino quadcopter microcontroller ardupilot,quadcopter ardupilot microcontroller arduino
1175,public dataset monocular visual odometry,planning develop monocular visual odometry system indoor dataset available public ground truth approach note aware kitti vision benchmark suite provides stereo data outdoor vehicles anyone access datasets used following paper svo14 great http //rpg.ifi.uzh.ch/docs/icra14_forster.pdf,computer-vision odometry,odometry computer vision
1176,lifting robot lift small crates,trying design robot lift tote-crates transport localized area want able carry tote-creates time robot needs able pickup creates want robot carry time keep small mobile thinking design central lift carry crates suggest simple ingenious way create robot,design wheeled-robot mechanism,design wheeled mechanism robot
1177,self driving cars work,fascinated notion driverless car know involved many different approaches problem narrow scope question something reasonable se network curious know common sequence subproblems driverless car needs solve timestep make autonomous car possible real life point point transportation possible imagine starting point target destination given map set driving follows algorithm loops certain operations solve certain problems way interested knowing problems high level detailed algorithms solve driving cars solve subproblems way,automatic,automatic
1178,linear switching power supply embedded project,power block designing beaglebone xbeepro device connected board building pcb need advice weather use linear voltage regulation switching mode regulation using linear voltage regulation setup need multiple regulators different devices plan use battery fuse lm1084 parallel output feed lm3940 xbees better xbee lm3940 drawing power seperate lm1084 linear regulators tend get hot full load hows performance switching mode regulators,power battery,battery power
1179,code control arduino keyboard,seen lots examples communicate arduino computer talked computer arduino communications hard understand question code use control arduino uno keyboard helps trying set wasd steering behavior,arduino programming-languages,languages programming arduino
1180,camera beginner,want buy camera depth sensor anyone give advice best experience kinect configuring kinect linux painful kinect generate big latency looking low latency good depth sensor good api linux thinking currera r. update found cheap good camera ximea thay nice support libraries opencv/matlab etc newbie perfect,sensors beginner,sensors beginner
1181,interfacing high-resolution image sensors arm board,working project requiring hd stereo video processing high resolution sensors use mipi-csi interface managed get board exynos5 soc soc mipi-csi2 interfaces problem pins interfaces exposed impossible reach decided use usb3.0 buses problem get significant bandwidth ~5.36 gibibits/s sensor think usb3.0 work bandwidth colordepth*colorchannels*pixelcount*fps solved compressed stream coprocessor thinking cypress cyusb306x chip good candidate job problems bga soldering hand able find bga soldering service switzerland ideas interfaces implement coprocessors mipi-csi2 interface final remark space weight important supposed mounted drone,cameras usb stereo-vision,stereo cameras usb vision
1182,type antennas use xbeepro,planning use xbeepro devices project requires coverage area 1.5-2km go select various options circular virtical horizontal polarized etc antenna give coverage field cant directional point point devices moving field type polarization recommended kind setup base xbee elevation ground clear line sight moving modules going 20-30moving modules streaming data 2-5readings second +12dbi antenna suffice application polarization,battery wireless,battery wireless
1183,calculate moment inertia quadcopter,building quadcopter final year project set equations describing attitude altitude involve i_ xx i_ yy i_ zz none papers read calculated choose simulation anyone help,quadcopter kinematics,quadcopter kinematics
1184,communicating beaglebone black arduino using ttyo4,trying get arduino talk beaglebone black followed tutorial getting ttyo4 open bbb used following command set serial line wiring set according tutorial stty -f /dev/ttyo4 cs8 ignbrk -brkint -imaxbel -opost -onlcr -isig -icanon -iexten -echo -echoe -echok -echoctl -echoke -ixon -crtscts data sent using following method echo s123 /dev/ttyo4 arduino uses followingvoid loop code check serial communication include spi.h void setup //////////////setup/////////////////////// serial.begin void loop serial.available =4 digitalwrite high delay // wait second digitalwrite low // turn led high voltage level delay // wait second digitalwrite high byte b1 b2 b3 b4 b1=serial.read seems message received give error alternative tried variant code suggested wiring tutorial resulting following code import sys bbio import serial2.begin arg sys.argv print arg serial2.write arg delay called pyton test s123 printed s123 arduino remained silent edit tried follow wiring tutorial gave following sketch char indata // allocate space string char inchar=-1 // store character read byte index // index array store character void setup serial.begin pinmode output // digital sensor digital pin digitalwrite high delay digitalwrite low delay void loop serial.write digitalwrite high delay digitalwrite low delay comp ==0 digitalwrite high delay digitalwrite low delay char comp char* serial.available // read // know data index // less size array inchar serial.read // read character indata index inchar // store index++ // increment write indata index // null terminate string strcmp indata == int i=0 i++ indata =0 index=0 return return bbb turn echo script /pybbio/examples sudo python serial_echo.py effect remains error data delivery,arduino control serial communication beagle-bone,control arduino communication beagle serial bone
1185,powering multirotor dedicated batteries motor,thinking extending battery life quad powering motor esc using dedicated battery motor dedicated battery flight controller bringing total batteries entire quad thinking powering motor dedicated battery given power draw/consumption flight-time quad increased motor capacity draw putting problem weight feasible idea using battery power motors plug single battery calibrate escs calibrate escs using dedicated batteries apm motors able get powering using bec escs,quadcopter power battery,quadcopter battery power
1186,ambiguous definition error-state indirect kalman filter,confused term indirect kalman filter error-state kalman filter means plausible definition found maybeck book name indicates total state space direct formulation total states vehicle position velocity state variables filter measurements ins accelerometer outputs external source signals error state space indirect formulation errors indicated position velocity estimated variables measurement presented filter difference ins external source data years roumeliotis et write cumbersome modeling specific vehicle interaction dynamic environment avoided selecting gyro modeling gyro signal appears system measurement equations formulation problem requires indirect error-state kalman filter approach understand bold part lefferts et write earlier autonomous spacecraft use inertial reference units model replacement permits circumvention problems proceed show different variants ekfs using gyro modeling direct kalman filters according maybeck definition state consists attitude quaternion gyro bias error states fact seperate ins whose error estimate error-state kalman filter questions different newer definition indirect error-state kalman filters aware gyro modeling opposed using proper dynamic model hand decision use direct indirect kalman filter hand related impression independent decisions maybeck peter s. stochastic models estimation control vol academic press roumeliotis stergios i. gaurav s. sukhatme george a. bekey circumventing dynamic modeling evaluation error-state kalman filter applied mobile robot localization robotics automation proceedings ieee international conference vol ieee lefferts ern j. f. landis markley malcolm d. shuster kalman filtering spacecraft attitude estimation journal guidance control dynamics 417-429,localization kalman-filter navigation errors,filter errors navigation kalman localization
1187,beaglebone black power supply hexapod,trying build hexapod camera interfacing using beaglebone black college project sure power supply give power bot mind portable mobile power servo motors camera wifi processor help needed nearing deadline project,power servos beagle-bone hexapod,beagle hexapod servos bone power
1188,language code beaglebone,trying build hexapod beaglebone linux environment im thinking using ubuntu best language use coding purpose make robot controls camera wifi integration etc,control programming-languages beagle-bone linux,control beagle programming languages linux bone
1189,passing power motor,go passing power motor let say basic robot motor spins limb end limb motor spins limb first motor going spinning wires twist break wired approach work goes subsequent motors know dc motors use brushes get past solved engineering/robotics problem come solution ideas,motor stepper-motor power,stepper power motor
1190,inverse depth odometry use,reading papers visual many use inverse depth mathematical inverse depth meaning represent something advantages using,slam computer-vision odometry,odometry slam computer vision
1191,understanding bode plot,sure correct forum question automatic control try post started learn control systems troubles understanding bode plots textbook unstructured information find internet seem little bit advanced beginner grasp hope help understand like know information bode plot tell corresponding step responses behave know low phase margin give oscillatory step response crossover frequency decide rise time see step response statical error bode plot phase graph bode plot mean,control automatic,control automatic
1192,lt1157 logic level question,plan use lt1157 application pcb act switch control micro controller side control on/off state module boards connected load load lt1157 get input vs terminal anyone know much voltage required used in1 in2 pins datasheet say much voltage used guessing logic level microcontroller board gives output make logic level converter feeding pins in1 in2 tolerant please confirm anyone used ic,circuit,circuit
1193,battery system robot raspberrypi microcontroller,building robot rotating ball circuitry ball using raspberry pi brains apart raspberry pi h-bridge ic l298n 6-axis accelerometer gyroscope mpu6050 additional digital components work supply set components electromechanical devices torque servo dc motors questions everything work battery get supply battery using l1117-3.3v regulators know reliable share power source control circuitry high load devices motors servos dedicated separate supplies electromechanical components control circuitry servo run supply motor run supply go separate batteries servo motors work single high capacity battery calculations servo current load ~450ma load ~800ma motor current load ~500ma load ~950ma raspberrypi digital circuitry ~600ma includes xbee overall current load motors comes ~3.3a awesome thing gets done maximum batteries get messy placing batteries ball space limited,motor power servos battery,battery servos power motor
1194,sensitivity function mean,studying test automatic control troubles understanding sensitivity functions complementary sensitivity functions assignment old exam sais someone suggests reduce perturbations measurement explain possible correct answer sais sensitivity complementary sensitivity transfer functions add i.e s+t=1 improve output disturbance measurement error suppression time understand answer textbook help appreciate alot someone explain got answer sensitivity function representing perturbations system complementary sensitivity function measurement noise textbook seem sure true,control noise automatic,control noise automatic
1195,accounting error multiple electric motors,goal drive autonomous robot differential locomotion system using identical electric motors arduino uno wheel understanding time motors lose accuracy result motor rotating way account possible error speeds motors robot end precise location thoughts indicator allow count number rotations motor compensate noticeable difference began appear,arduino mobile-robot two-wheeled,mobile robot wheeled arduino
1196,dealing position inaccuracy latency pid loop,new pid first pid project using simple p-loop degree linear potentiometers position feedback using roboclaw motor controller motor controller speeds potentiometers vary much +-4 degrees motion using arduino mega adc control motors question reduce variance potentiometers addition takes certain amount time motors react command seems throw p loop account latency program example example p loop run 33-36 milliseconds tell motor go deg/sec go deg/sec p loop reacts lowering value sent motor speed increase deg/sec p loop lowers value speed drop deg/sec thanks help joel,arduino motor pid software avr,software pid avr motor arduino
1197,grid dowels powered piston-like movement,new site robotics experience programming programming microcontrollers like create grid pixels pixel metal wooden dowel programmed push piston imagining lot pixels small diameter arduino control linear movement pixel anyone point right direction accomplishing,arduino mechanism servos servomotor,servomotor servos mechanism arduino
1198,improve range xbee s6b,anyone used xbee wifi modules done range check laptop get range industrial level accesspoints football field good devices get sma connector version use higher gain looking ranges 250-500m talking 18-22dbi gains,wifi,wifi
1199,combine accelerometer gyroscope find robot location orientation space,data accelerometer measures x acceleration data gyroscope measure pitch roll yaw combine data find robot location orientation space,localization accelerometer algorithm gyroscope,gyroscope accelerometer localization
1200,basic programming arducopter,starting project using arducopter person familiar arduino seeing arducopter first time commands codes everything different compared normal arduino programming getting help commandlist specific purposes arducopter body help leading links help out..,arduino ardupilot,ardupilot arduino
1201,ros send message startup seem work,following code void :spin ros :rate rate int =1 ros :ok askmath first=0 ros :spinonce rate.sleep int main int argc char **argv ros :init argc nc nc.init nc.spin void :init mngrsub handle.subscribe std_msgs :string /tawi/core/launch :launchcallback mngrpub handle.advertise std_msgs :string /tawi/core/launch mathsub handle.subscribe std_msgs :string /display :launchcallback sersub handle.subscribe std_msgs :string /tawi/arduino/serial :serialcallback mathpub handle.advertise std_msgs :string /questions ballpub handle.advertise std_msgs :int16 /tawi/core/ballcount nmbrpub handle.advertise std_msgs :int16 /tawi/core/number void :askmath ros_info addition1d std_msgs :string question question.data mathpub.publish question code interesting removed running causes following output appear rosrun glados info addition1d following code launch rostopic echo /questions show initial message sent changing first askmath first=0 askmath first=0 appear work sends message cycle start anybody know wrong,ros c++,c ros
1202,jacobian used determine required joint angles end effector velocity/position,early stages working simple robot arm learning jacobian inverse kinematics understanding jacobian used determine linear angular velocity end effector given angular velocity joints arm used determine cartesian position end effector given angles and/or positions joints suppose want determine required angular velocities joints order bring desired linear velocity end effector done inverting jacobian plugging desired parameters,kinematics inverse-kinematics forward-kinematics manipulator jacobian,forward inverse kinematics manipulator jacobian
1203,pcb making home,made many pcbs home mistakes tried ironing drawing methods work eagle cad design pcbs please help,design,design
1204,robotics advice needed,high school project building robot draw image whiteboard based instructions give accomplish motor move pen axis similar printer moves z axis code goes fine wondering anyone give insight go building robot i.e motors system moving axises etc help appreciated thanks,motor mechanism,mechanism motor
1205,mobile camera calibration rectification frame rate,searching internet answer question come anything help meka humanoid robot lab shell head pointgrey usb camera embedded use pointgrey_camera_driver obtaining images camera head degrees up/down left/right intending use camera ar_pose package detect track ar tags objects understand camera calibrated effective use forgive know camera camera_calibration package question camera mobile meaning head move camera go calibrating head fixed position calibrated camera position got parameters yaml file load rectification particular head moves calibration file obtained previous position become invalid asked calibrate camera possible field view obtained moving camera different video modes mode using get frame rate i.e driver launched get rostopic hz /camera/image_raw rectify image using image_proc get frame rate rostopic hz /camera/image_rect_color normal way increase frame rate please let know information required thanks help,ros cameras calibration,ros cameras calibration
1206,eliminating electrical noise motor driver,"background using arduino mega connected roboclaw motor driver asked question system narrowed scope problem tried adding bunch different size capacitor gnd roboclaw switched micro farad capacitor seems eliminate noise turn roboclaw capacitance valued tried microfarads seems eliminate tried hooking battery regulator logic battery roboclaw connecting ground arduino tried using separate battery pots connecting aref +5v battery matter try roboclaw potentiometer value vary much +-6 degrees found degrees using map analogread a0 ,0,1023,0,300 addition took bunch data graphed found took instantaneous data points averaged help reduce variance chose take ms worked took ms. help explain averageing analog read code unsigned int num int i++ num+=analogread a0 potreading num/25 question next step eliminating formula use find better capacitance value try putting capacitors gnd ic try help previous question someone mentioned optocouplers size work circuit go code write help eliminate size variance written thanks help joel",arduino motor electronics noise driver,electronics noise driver motor arduino
1207,difference kinematic dynamic differential constraints,like know simple difference kinematic dynamic differential constraints robotic motion planning,motion-planning,motion planning
1208,state space control space,like know difference state space control space relation motion planning like simpler explanation,motion-planning,motion planning
1209,ide using programming atlas robots,atlas gets upgrade new video atlas robot curious coding thing,dynamics,dynamics
1210,control servo using beaglebone black running ubuntu,beagleboneblack like use control servo robot programming ros looking c++ solution easy way controlling servo bbb running ubuntu kernal tutorials tried referred files unsure,ros servos servomotor beagle-bone c++,beagle c servomotor ros servos bone
1211,comparing lqr pid controllers inverted pendulum problem,tell lqr pid controllers applied cart-pole inverted pendulum problem pros/cons using controller particular problem reasons/situations prefer problem,control pid,control pid
1212,tracking landspeed underwater,hoping someone able nudge right direction apologies wanted get information gained solution record path vessel took water bread crumb trail requirements range least options accept working fresh salt water vessel x size power consumption factors traveling parallel sea bed variable distances sea bed range 0-30 meters need super accurate anything less meters fine measurement speed range – mph measure direction object moving i.e forwards sideways backwards …i planning use compass ascertain n e heading options discounted accelerometers initial thinking reading seems suited needs spend loads money solution end heavy optical flow looks new consumer perspective complicated don’t know range like requires additional sonar sensor current favorites sonar http //www.alibaba.com/product-detail/1mhz-waterproof-transducer-underwater-ultrasonic-sensor_1911722468.html simplest use distance object doppler effect analyse speed moving object range nice presumptions fired seabed deduce speed floor ‘moving’ give speed vessel presuming interpret direction movement data presume sensor need aimed angle degrees seabed laser rangefinder works sonar premise use looks queries sonar mounted sensor high quality glass waterproof performance impacted much lot costly give advantage sonar guess point water flow meter http //www.robotshop.com/en/adafruit-water-flow-sensor.html super low cost simple compared options use funnel increase water pressure needs sensitivity low speed need calibrate pulses sensor speed reading significant limitations registering speed vessel drifting current….its speed seabed interested current favorite option sonar option using water flow meter second data source …however sonar presumptions correct missed anything better ideas,sonar laser underwater rangefinder acoustic-rangefinder,sonar underwater acoustic laser rangefinder
1213,sensor produce sinusoid phase locked high rpm shaft,sensor produce sinusoidal signal phase locked high rpm rpm shaft attempting build coaxial helicopter based architecture described paper requires increasing decreasing drive torque revolution like modulation hardware,sensors,sensors
1214,grid mapping probability calculation algorithmic complexity,stumbled equation http //i.stack.imgur.com/hv64e.png probability occupancy grid map cell calculated teacher insists possible approximate algorithmic complexity long equation sure description factors used equation described page item keeping mind calculates occupancy probabilities dimensional array sensor measurements possible approximate algorithmic complexity calculating occupancy equation bigo taking look delving much deeper details,algorithm probability occupancygrid,occupancygrid probability algorithm
1215,two-gear pull-back car toy work,robotics question stack exchange closest find mechanical engineering please refer better place ask exists someone know got pull-back car boy mcdonalds gears starts slow speeds seconds impressive given inherent cheapness toys sold mcdonalds feels built find anything related concept wiki pullback motors include information multiple gears ideas works,mechanism,mechanism
1216,differential robot yaw estimation using kalman filter,hello building differential drive robot equipped quadrature encoders motors aim able predict heading angle robot using kalman filter using mpu imu interested yaw angle roll/pitch understand needing z-axis gyro fused magnetometer data order estimate heading angle problem implement bias covariance required kalman filter work gyroscope process magnetometer data update step datasheet found angular random walk gyroscope degrees/second hz motion bandwidth constant bias degrees/second room temperature mistaken include bias state prediction equation get covariance matrix q,kalman-filter imu,filter imu kalman
1217,choosing wifi antenna outdoor robot,time come robot get permanent computer laptop balanced top selected mini itx board powered battery components go including wifi card thinking antenna need constraints identified robot body closed aluminium box think rules keeping antenna robot intended work outdoors needs waterproof vibrations issue questions parameters watch selecting antenna ok use indoor stick antenna seal mounting point hot glue change anything antenna sticking largish sheet alluminium robot gps possible interact circumstances,mobile-robot wifi,mobile wifi robot
1218,provide power robot/raspberry pi,building robot powering raspberry pi looking battery pack flexible use problem need able charge robot good single battery pack charging used seemed say video wrong go charging keeping raspberry pi running edit robot lego nxt kit prior experience robot batteries,mobile-robot battery,mobile battery robot
1219,multiple esc angles glitch,developing fligth controller board tiva launchpad calibrating pid discovered unexpected behaviour seems experience random angle errors trying investigate figured code trying compensate tham appear cause discovered behaviour appears motors adjusted motor system shows good stabilisation code pmw output different motors torque int16_t angles_correction.pitch angles_correction.roll torque_set torque int16_t angles_correction.pitch angles_correction.roll torque_set torque int16_t angles_correction.pitch angles_correction.roll torque_set torque int16_t angles_correction.pitch angles_correction.roll torque_set recorded angles system motor motors sure algorithm problem recording angles integral part pid non-zero angles stabilised question esc close sentimeters cause behaviour thanks lot,quadcopter pid esc,quadcopter esc pid
1220,ways reversing motor direction,set consists brushed motor ex cordless drill type connected motor controller turn connected lipo battery r/c receiver cables fitted xt connectors cable goes wire pin usual white red black set pair using battle robot motors connected drive wheels left problem motors turning opposing directions reason neglected switch polarity wires motor time attached connectors looking re-soldering question fast way reversing direction rotation soldering instance r/c transmitter turnigy modding programmed switch hence reverse switch pin connector going receiver think ground common worth asking case guess ideas get soldering,motor,motor
1221,design quadcopter pid algorithm,give bit context equations using angular accelerations φ** τφ θ** τθ plant gains φ**/τφ x axis θ**/τθ axis basic pid structure gain=kp desired-measured +ki integral desired-measured +kd differential desired-measured lets say plant gain angular accl x axis φg pid gain pg obtain controller φg pg =open loop gain=l closed loop l/ question upload algorithm time domain form frequency domain form silly question frequency domain analysis control experience theory focused analysis using root locus nyquist,arduino control pid,control pid arduino
1222,role chi2 slam back-end optimization,all-most slam back-end implementation compute chi2 estimates chi2 computation used compute best-fitness score model data related optimization framework slam rgds nitin,slam theory,slam theory
1223,fuses mechanical systems,better stack exchange site let know -- mechanical engineering closed sure appropriate ** mechanical systems fuses electrical system charging circuit example prevent large loads damaging system fuses circuit breakers disconnect inputs outputs load get high mechanical systems similar mechanism something prevent gears linkages breaking load gets high disconnecting input output,mechanism,mechanism
1224,single touch based sensor odometry slam noisy rectilinear environment,co-worker said remembered ish icra ish paper used touch/bump sensor odometry slam find paged thru icra iros agendas paper abstracts 2010-2012 joy found couple interesting papers coworker says ones remembered foxe http //staffwww.dcs.shef.ac.uk/people/c.fox/fox_icra12.pdf tribelhorn dodds http //citeseerx.ist.psu.edu/viewdoc/download doi=10.1.1.507.5398 rep=rep1 type=pdf trying make lego mindstorms bot navigate map house ir sensor experience noisy best considered extended touch sensor regards winton,slam,slam
1225,help cracking robotics interview,studying electronics engineering fond robots childhood small doubt i.e want get placed robotics automation based company study reference books/softwares etc cracking interview simple words electronics engineer specific skills embedded c programming etc go,control microcontroller electronics,control electronics microcontroller
1226,connect hc-sr04 ultrasonic sensor apm,working final project autonomous quadcopter tasks make quadcopter object avoidance auto land using ultrasonic sensors possible ans connect hc-sr04 ultrasonic sensor apm board apm port i2c,quadcopter,quadcopter
1227,run custom hardware laptop,looking build custom hardware nothing fancy motors cameras need controlled laptop going non-trivial amount image processing way attach n motors laptop usb/e-sata seems something easy solve seem find anywhere looking get arduino/raspberry pi connect motors able control comfortable adding power second source supplement usb power ideas,motor usb,usb motor
1228,creating xbox remote replaces spectrum dx3c dx3e wifi,hello new rc enthusiast anyone interested rc controlled xbox remotes project xbox xbox remote hijack dx3e dx3c remote create transmitter compatible spectrum receiver xbox remotes seen applications use wifi sure thats route looking read limited range signal loss wifi network create lag larger desirable racing rc losi scte short course race truck savvy electronic jargon study learn thanks thoughts,brushless-motor,brushless motor
1229,wheeled motor robot control,decided work wheeled robot position mapping problem dc motors encoders pololu following questions need know model motor order tune controller steps/approach used get good mapping let say mm maximum error,pid wheeled-robot odometry,odometry pid wheeled robot
1230,send jpeg image microcontroller usart,send jpeg image microcontroller usart,electronics embedded-systems,electronics systems embedded
1231,dh homogeneous transformation matrix joint,given dh matrix set joints convert data homogeneous transformation matrices joint looked online find good tutorial,kinematics joint dh-parameters,joint kinematics parameters dh
1232,low power computer stereo vision,like build motorized robot stereo vision sends visual input pc wifi processing raspberry pi perfect task possible connect cameras pi powerful usb webcams minimum guess shared usb seems bottleneck cameras wifi dongle options send cameras control motor arduino,computer-vision cameras,computer cameras vision
1233,multiple pids quadcopter,wondering use pid loops control quadcopter pid stability control pid rate control use pid axis control take current desired angle input motor power output,quadcopter pid,quadcopter pid
1234,type servos used industrial robot arms universal robot ur5,noticed industrial robot arms smooth strong movement anyone know type servos use trying build want jerky movement seen lot diy robot arms thanks,robotic-arm servos,servos arm robotic
1235,computer vision single camera vs. distance sensors obstacle detection,going start new project consisting implementing autonomous driving rc car car camera installed side car i.e cameras total connected board able read process video input researching obstacle detection using single camera stereo cameras e.g single camera vision mapping system seems possible seems complex modifying cameras set-up option video processing algorithms dense optical flow help sure able implement system time months know reliable final solution approach feasible alternative option install distance sensors car detect obstacles seems preferred choice use ultrasonic sensors need install take advantage cameras seems final complexity lower first approach feasible pros cons approach implemented second option many sensor need,sensors computer-vision ultrasonic-sensors,sensors computer ultrasonic vision
1236,stallable motor duty cycle higher torque motor stalled burning,project motor turn number rotations spool cable attached spring-closed device open power disconnected spring closure cause spool device closed position power available i.e closure mechanism needs passive order keep open time motor capable stalled periods windings burn know motors motors use spring closed hvac dampers know find particular name using find know stepper motor seems overkill application requirements higher torque open mechanism gearing prevents motor spinning power disconnected ability stalled,motor,motor
1237,pid controller trajectory mutliple setpoints,implemented pid controller quadcopter allows fly point b. precise position quadcopter measured using external tracking system fly like implement controller fly complex trajectories set points e.g b c flying circle using sample points tried use regular pid controller course work pid controller forces stabalize set point like controller allows quadcopter fly trajectory think controller takes account multiple set points trajectory time slow down/speed based trajectory someone point controllers algorithms look realize need different controller adapted version pid controller,quadcopter pid,quadcopter pid
1238,building open loop controller simple dc motor position problem,order identify dynamics dc motor trying command xcos using arduino tool box problem facing give motor input command get given angle position output control input voltage motor pwm thinking converting angle voltage figure somebody help,arduino motor control,control motor arduino
1239,3-axis magnetometer question,apologies stupid question 3-axis magnetometer calculate vector magnitude sqrt magx magx magy magy magz magz ... get value sensor orientation mine place feel missing something obvious,imu magnetometer,magnetometer imu
1240,using hobby servo axle,designing pan-tilt camera mount using standard hobby servos many existing designs use servo shaft revolute joint opposed torque producing element revolute joint servo mechanism subject different torques forces using servo shaft revolute joint recommended practice bearing used,rcservo,rcservo
1241,scope electronics engineering robotics/automation,beginner robotics .i taken admission electronics engineering year robotics engineering branch country.now suffering questions scope electronics electrical engineering robotics/ automation unable distinguish role electronics engineer computer engineer robotics cases programming required programming coding options stick robotics automation field branch electronics engineering concerned,control electronics embedded-systems,control electronics systems embedded
1242,motor hydraulic pump hydraulic system,sure right area post question looking subjects stackexchange seems fit complete beginner hydraulic systems wanted learn area designing hydraulic system involves using hydraulics push/pull objects using pistons looked basic requirements hydraulic system thing escapes come electronic background noticed hydraulic pumps example seem lack motor drive fluid wrong looking motor can/should attached said pump seem find sells simple dc motor correct specs specific motor designed hydraulic pumps looking came looking specs see power requirement used seeing power consumption datasheets sure motor,motor,motor
1243,beaglebone pru questions,using least programmable real-time unit pru send pulses stepper motor driver begin trying lay structure programs using library pru linux loading code pru instruction memory seem much documentation whats wiki source github-pru-packageh c program calculating position sun using executing assembly/writing pulse count pru data memory switch gpio desired frequency number pulses required turn stepper appropriate number steps sure acceptable method new seems like simple way accomplish task questions regarding library functions significant performance difference using prussdrv_map_prumem prussdrv_pru_write_memory give pru access pulse count better halt pru assembly program completed tasks pulse count re-execute new values keep pru program running new pulse count written plan send pulse count seconds suggestions revisiting whole structure logic welcome,c beagle-bone,beagle c bone
1244,smallest rotation brush-less motor perform,example brush-less outrunner poles stator windings connectors motor controlled way performs single step degrees,motor brushless-motor,brushless motor
1245,create artificial integelent robot ability communicate computer language use,know languages php c/c++ java expert languages want create artificial intelligent robot task able communicate computer usb able perform specific task present visual interface finding path speed others access micro controller device attached devices on.. editor note solve world hunger please suggest programming language good programing type robot heard c/c++ assembler robotc labview unable decided language use project sorry bad english,microcontroller artificial-intelligence robotc,intelligence microcontroller robotc artificial
1246,understand sensor works metal wired i/o pin arduino,trying understand electronic musical instrument called e-chanter works imagine recorder wind instrument holes replaced metal contacts sound played air needed several metal contacts shown link http //www.echanter.com/home/howto-build toc-wires-screw-sensors appear wired pin arduino figure life works anyone explain fingers used kind ground earth going physics understand technical info fathom earth magic works much,arduino sensors,sensors arduino
1247,jacobian matrix body imu,trying derive analytical jacobian system equations motion body degrees gyro accelerometer measurements part extended kalman filter system state given \mathbf x \left \begin array c \mathbf q \\ \mathbf b_\omega \\ \mathbf v \\ \mathbf b_a \\ \mathbf p \\ \end array \right q quaternion orientation body expressed global frame b_\omega b_a biases gyro expressed body frame v p velocity position body expressed global frame vectors q w x z ^\top format r equations motion \frac dx dt =\dot x time \dot \mathbf q \frac \mathbf q \otimes \left \begin array c \omega \\ \end array \right \\ \dot \mathbf b_\omega \\ \dot \mathbf v r^\top \mathbf \mathbf \omega \times r \mathbf v g \\ \dot \mathbf b_a \\ \dot \mathbf p \mathbf v second-order terms ignored b_a \omega \omega b_\omega corrected accelerometer gyro biases \omega known expressed body frame r rotation matrix dcm formed q g gravity vector ^\top equations validated aerospace engineering software library need jacobian f \frac d\dot x dx find jacobian texts find error-state jacobian eg paper struggling know handle quaternion norm constraints concerned validity solution given numerical differentiation help explanation appreciated going open-source robot localisation project,control kalman-filter jacobian,control filter kalman jacobian
1248,communicating beaglebone black servo controller,complete joined robot team school order gain experience assigned task driving servo using pololu mini maestro usb servo controller using beaglebone black bbb python adafruit library make bbb communicate servo controller guys point right direction appreciate right know start sure matters servo using https //www.pololu.com/product/1053,motor microcontroller,microcontroller motor
1249,robot navigation feedback using image processing,project analyzed detected obstacles using overhead webcam computed shortest path path data transmitted robot zigbee based moves destination problem robot taking accurate turns cause error rest path follows anyone please suggest methods/techniques feedback robot path corrected robot follows original path computed deviation tracking mechanism avoid deviation original computed path,computer-vision navigation motion-planning,motion planning computer navigation vision
1250,fusion gnss position data prefused ahrs data,bosch freescale invensense st others releasing 9-dof ahrs platforms containing fusion software outputting filtered/sane/fused data attitude quaternion linear acceleration like use quality respective company fusion like merge gnss position velocity data found multiple examples heavy states kalman filters merging raw imu data gnss position/velocity hard time finding lighter version gps+ahrs fusion new 9-dof ahrs imu raw data process should'nt done maybe pointers algorithm type filter use thank,quadcopter kalman-filter imu gps sensor-fusion,quadcopter kalman filter fusion imu sensor gps
1251,kind linear actuator used small forces long distances,"kind linear actuator used small forces pushing ~0,1 kg flat smooth surface steps ~50mm total length seem find actuators large overpowered extra details speed requirements duty cycle times half hour day compact longer concealed price",actuator,actuator
1252,distribute tension load footed claw,good day helping little ones develop robot pick stack cubes high blocks came design enables pick cubes time lined pull claw turn drive cube place cubes stand cube release got claw made rods connected gears motor rods reinforced made insect legs pairs rods gripper feet pads ends legs works opens closes problem try close claw cubes pick cubes closest motor feet nice tight grip second middle feet lighter grip lift block third farthest motor grip blocks think second third set feet farther motor disperse tension load claw pick blocks tried putting elastics feet better grip put ten foot third set second set wont work quick fix like help figure proper way spreading load speak tried putting small band third set legs robot open worked third set second tried putting band second third legs open use lighter band way little motor run give leg sets motor weight issues thank advance,design mechanism vex,design vex mechanism
1253,stereo camera vs kinect,advice ideal perception sensors pick place application using robotic manipulator ros support looked things kinect stereo cameras bumblebee2 provide depth used pcl object recognition gripper positioning sensors preferred application drawbacks stereo cameras comparison kinect sensing capability thanks alan,sensors robotic-arm kinect stereo-vision,stereo kinect robotic sensors arm vision
1254,laptop wifi single channel multiple channel controlling bot,building hobby drone quad-coptor camera footage control quad suggested web use minimum channels.for power turning etc. means need channel separate task done eg. want rotate camera suppose need channel on.. question seen lot drones walkera controlled android iphone app wifi used connect drones single channel multi-channel single channel control different tasks control turning quad camera different axis want gps location quad require transmitter using planned raspberry pi openpilot-cc3d flight control p.s drone show mercy ask/do understand comments,quadcopter navigation radio-control wifi,quadcopter radio control wifi navigation
1255,denavit-hartenberg convention product exponentials formulation dealing manipulator kinematics,denavit-hartenberg notation used describe kinematics robot manipulator researcher prefer product exponential claim better use better final solution kinematics dynamics suggestions mathematical introduction robotic manipulation,robotic-arm industrial-robot dh-parameters product-of-exponentials,product industrial dh parameters robot robotic exponentials arm
1256,frc roborio eclipse find edu.wpi.first.wpilibj,first time importing project eclipse workspace find eclipse find wpilibj import line import edu.wpi.first.wpilibj eclipse says unresolved import edu,microcontroller wheeled-robot,microcontroller wheeled robot
1257,quadcopters turn left right,picture sketch quadcopter displayed rotor direction motion magnitude rotational velocity depicted thickness lines thicker lines higher velocity thinner lines lower velocity told correct way produce turning motion intuition wrong tells pictures reversed argument follows picture left rotors higher velocity spinning clockwise motion rotors greater velocity clockwise rotate clockwise missing,quadcopter dynamics,quadcopter dynamics
1258,use pwm hho controller control brushless dc motor,electronics newbie part talking dc 10-50v amps dc motor speed control pwm hho controller question part used control brushless dc motors,arduino brushless-motor,brushless motor arduino
1259,guidance info quadcopter project,new forum made research past days get guidance constructing programming quadcopter scratch new project quadcopter frame thinking construct aluminum diameter frame weight kind motors get order frame board motors etc able lift board thinking use arduino uno raspberry pi little bit research made conclude raspberry make life little bit easier add wifi quadcopter controlled pc/laptop wifi suggest esc seen similar projects people using escs order control motors throttle avoid programming pids make job order use hardware pids code general thinking simulate whole project simulik matlab somehow possible convert matlab code c++ download chip think whole project trying minmize hardware much possible use motors board chip cables sensors order minimize total weight construction ofc price start waiting answers ideas,quadcopter,quadcopter
1260,suggestions beginer robotics,beginner robotics.i want make serious start scratch interest confused anyone give suggestions beginner robotics simple basic robots circuit designs make home gain practical knowledge robots first read books anyone suggest good reference book names articles links free on-line video lecture series,beginner,beginner
1261,get matrix twist using product exponentials robot kinematics,robot kinematics e^ \theta*twist twist vector get transformation matrix using product exponentials,robotic-arm kinematics forward-kinematics product-of-exponentials,product exponentials kinematics robotic forward arm
1262,help code supposed drive servo controller,posted similar question getting started project specific got weak response se community point python code supposed rotate servo pololu maestro serial servo controller https //www.pololu.com/product/207 based serial interface section user guide https //www.pololu.com/product/207/resources sent sequence numbers starting decimal first command byte device number data byte user guide says default device number tried changing many servos servo controller drive make much difference servo rotate numbers example user guide sure targets servo port servo controller port servo connected servo move sequence numbers put little experience guys point right direction least point useful resources web grateful import serial import struct import time import adafruit_bbio.uart uart drive_motor_port serial.serial port /dev/ttyo1 baudrate=9600 drive_motor_port.close drive_motor_port.open drive_motor_port.write chr user guide says start drive_motor_port.write chr device number drive_motor_port.write chr drive_motor_port.write chr drive_motor_port.write chr drive_motor_port.write chr time.sleep,python,python
1263,choose zigbee modules full wireless mesh,common zigbee ip modules create full wireless mesh mode know coordinator router create full-mesh interesting kind modules better buy comparing price quality tutorial material graet know zigbee modules based arm cortex atmel mcus additional tutorial materials control modules understand looking zigbee modules xbee difference organization network ex zigbee mesh create zones control devices xbee mesh digi comany create full mesh big huge zone control devices zigbee modules aes encryption lock network prevent joining xbee aes encryption ** coming ...,mobile-robot microcontroller radio-control communication wireless,control mobile communication microcontroller robot wireless radio
1264,wheeled robot tether need programable,looking cheap wheeled robot controlled care rf wifi ir control robots interference small arena line sight like emphasize need programmable important cheap,control wheeled-robot,control wheeled robot
1265,best practice ros service serial-communication class many options,asked write code implement serial communications camera order control pedestal movable base set dozen camera options catch make usable ros best practice implement functionality ros understand concept services think better way creating different service/file option thanks daniel,ros cameras serial,serial ros cameras
1266,multiple limbs small robots,note firmware developer experienced sensors much motors trying build small hobby robot cat-sized spider thinking using servo motors position control use encoders know motor assuming legs know spiders leg able move up-down left-right translates motors want bend knee gets number motors small robot overkill thought couple ideas strong mechanical background doable/sane ideas use magnet end limb end chassis small permanent magnet magnets attract keeps limb firm weight robot stronger controllable magnet coil attract let lift air following drawing help allow up-down movement leg servo control left-right movement fear system strong hold weight robot reasonable coil compact enough short question control legs degrees freedom reasonable number motors motor degree freedom possibility,mobile-robot servomotor,mobile servomotor robot
1267,jacobian-based trajectory following,"like control dof robot arm move cartesian trajectory world frame fine translation struggling implement something similar rotation attempts seem go unstable trajectory described translational rotational velocity distance and/or stopping criteria want end-effector move short distance relative current location numerical errors controller errors compliance etc arm wanted previous iteration j^ -1 v_e store pose end-effector start iteration compute end-effector current time take difference current location feed jacobian describe translation implementation pseudo openrave python velocity_transform specified m/s relative motion def move velocity_transform t_start time.time pose_start effector.gettransform true t_now time.time t_elapsed t_now t_start pose_current effector.gettransform translation_target pose_start :3,3 velocity_transform :3,3 t_elapsed v_trans translation_target pose_current :3,3 vels j_plus.dot v_trans math simplified rotation trickier determine desired rotation current time use spherical linear interpolation slerp openrave provides quatslerp function use requires conversion quaternions seems work calculate relative rotation current pose target rotation convert euler angles pass angularvelocityjacobian pseudo code lines loop rot_t1 np.dot pose_start :3 :3 velocity_transform :3 :3 desired rotation end-effector second start quat_start quatfromrotationmatrix pose_start start pose quaternion quat_t1 quatfromrotationmatrix rot_t1 rot_t1 quaternion use slerp compute proper rotation time quat_target quatslerp quat_start quat_t1 t_elapsed world_to_target rot_target rotationmatrixfromquat quat_target world_to_target v_rot np.dot np.linalg.inv pose_current :3 :3 rot_target current_to_target v_euler eulerfromrotationmatrix v_rot get rotation world axes v_euler fed jacobian v_trans pretty sure jacobian code fine given constant rotational velocities ok. note asking debug code posted code figured clear converting math interested go unstable math wrong base please let know sure people go giving slow linear velocity m/s target rotational velocity arm good spot workspace desired motion code runs enough hard-code angular velocity fed jacobian using computed v_euler instability something wrong math works non-zero target angular velocities feed angular velocity rad/sec end-effector rotates rate deg/sec update put end-effector different place workspace axes aligned world axes everything seems works fine end-effector degrees world axes motions seem work others move think seen go unstable degrees world goes unstable",kinematics jacobian,kinematics jacobian
1268,best software/package draw robot manipulator indicate dh parameters different axes,wondering good software/package draw robot manipulator indicate dh parameters different axes suggestions,robotic-arm industrial-robot robotc simulation,industrial robot simulation arm robotic robotc
1269,ball plate possible sensors use,looking sensors give position ball plate order make ball plate problem came mind use image processing serious image processing know good idea please help find sensors order get position ball plate thank attention,control sensors,control sensors
1270,ros iai_kinect2 issues,ubuntu lts running satellite intel i7 nvidia usb ports refer scripts found setup ros running install-ros.sh script setup running install-opencv.sh script setup pcl running install-pcl.sh script installed libfreenect2 instructions master branch made changes installed cloned repository empty catkin workspace sourced respective setup.zsh files /opt/ros/ ... devel/ folders point encountered issues tried running rosrun kinect2_bridge kinect2_bridge get following message error registerpublisher failed contact master localhost:11311 retrying.. assume run something run terminal rosrun kinect2_bridge kinect2_bridge terminal get following segmentation fault error registerpublisher failed contact master localhost:11311 retrying ... info connected master localhost:11311 parameter base_name kinect2 sensor fps_limit -1 calib_path /home/parthmehrotra/catkin_ws/src/iai_kinect2/kinect2_bridge/data/ use_png false jpeg_quality png_level depth_method opengl depth_device -1 reg_method default reg_devive -1 max_depth min_depth queue_size bilateral_filter true edge_aware_filter true publish_tf false base_name_tf kinect2 worker_threads segmentation fault core dumped rosrun kinect2_bridge kinect2_bridge overlooking something trivial thanks taking time help,ros kinect,kinect ros
1271,plot \pm \sigma landmark ekf-slam,implemented 2d-slam using ekf map based-feature landmark sake simplicity read papers regarding matter plot \pm3\sigma error like make sure right thing project estimate landmark position true values true values ones sensor measure ideal case example ideal case landmark position value accessible means therefore consider true values ones coming sensor error landmark position formulated follows \text error x x x picture shows error blue color red color represents error bounds \pm \sigma_ x question way people plot errors academics papers seen papers bounds look mine mine decreases papers curved seems reasonable suggestions,slam ekf simulation mapping,slam mapping simulation
1272,time-varying nonautonomous dynamical systems lyapunov analysis,possible distinguish properties time-varying nonautonomous dynamical systems regarding lyapunov stability analysis make difference system depends due time-varying parameter want explain problem detail let dynamical system denoted \dot x f state x say dynamical system nonautonomous dynamics f depend time i.e \dot x f x instance systems \dot x x^2 \dot x -a x nonautonomous let bounded time-varying parameter i.e ||a || a^+ positive i.e second example denoted time-varying linear system course nonautonomous lyapunov stability analysis autonomous nonautonomous systems distinguished make assertions stability system lyapunov analysis systems difficult questions arise want analize stability second example use lyapunov theory nonautonomous systems follows candidate v x^2 \dot v -a x^2 negative definite origin stable suppose take nonautomous characteristic account case suppose makes difference system depends first example indirect due time-varying parameter approaches infinity parameter,control dynamics,control dynamics
1273,quadcopter hover tilted,way make quadcopter maintain steady hovering lateral movement constant altitude tilted left right accomplish,quadcopter,quadcopter
1274,automatic agricultural robot using,want build automatic agricultural robot final year diploma project basic idea program drive robot fixed path farm ploughing farm planning setting particular distance till go straight take u turn next lane width farm set completes full farm stop go starting point catch reprogram size farm person uses want add number pad set length width farm width lane needs professional help done using go avr pic microcontrollers started studying programming interfacing good programming possible someone please help circuit diagram project everything said need project get empty port microcontroller love add fertilizer sprayer water irrigation system gsm module farmer ask robot start working using mobile phone making prototype want small possible suggestions welcomed,microcontroller wheeled-robot electronics artificial-intelligence,intelligence microcontroller robot artificial electronics wheeled
1275,pid control tank-like robot imu,consider tank robot motor driver channel side robot motors left motors interested driving robot straight line using data gyro magnetometer imu removing noise caused different behaving motors possibility change desired direction angle example event comes want car switch desired direction +120 degrees turn driving using arduino uno minimu-9 v3 drv8838 single brushed dc motor driver pololu please give hints short pseudo-code example thanks,arduino pid imu,imu pid arduino
1276,microcontroller running linux rtai,beginner robotics ask minimum/recommended specs microcontroller run real-time system linux rtai popular microcontroller running linux rtai thank,microcontroller embedded-systems real-time,real microcontroller systems embedded time
1277,get python node ros subscribe multiple topics,ros node written python subscribe multiple topics publish multiple topics examples found single topic event-driven model subscription multiple events allowed loop listen source time,ros,ros
1278,dynamic system equations represent,equations dynamic system need physical system equations \begin align \dot x _1 =bx_1+kx_2+x_3\\ \dot x _2 =x_1\\ \dot x _3 =\alpha u-x_2 -\beta x_3 \end align figure mass-spring-damper system feedback control sure terms x_3 \dot x _3 terms mean,control dynamics,control dynamics
1279,graphslam constraints imposed information matrix,watching sebastian thrun video course ai robotics available udacity.com final chapter graphslam illustrates setup system equations mean path locations x_i landmark locations l_j setup matrix system imposes robot motion landmark measurement constraint example robot motion command move x1 units reaching x2 understand constraint -x_2+x_1= -5 imposes negative equation x_2-x_1=5 constraint superimposes different equation sure video course briefly mentions matrix assembling known information matrix information matrix assembled specific way tried read book probabilistic robotics gather equations come obtaining minimizer negative log posterior probability incorporating motion commands measurements map correspondences results quadratic function unknown variables l_j x_i quadratic motion measurement models linear minimum obtained solving linear system equations constraints imposed positive quantity negative equation obvious form negative log posterior probability i.e quadratic function constraints imposed information matrix assembled way hold true motion measurement models help appreciated,slam,slam
1280,freeimu external magnetometer,using freeimu library want add external magnetometer mount motors figured modify freeimu library use external magnetometer getting data figure need change magnetometer orientation changed free imu mounted external compass mounted rotated x changing value void hmc58x3 :getraw int16_t *x int16_t *y int16_t *z *x cache_x *y cache_y *z cache_z function code calls get magnetometer data tried changing sign z values got magnetometer changing sign value changing sign value added z values subtracting z values subtracting adding z adding subtracting z changing nothing calibration gui gives gives strange results changes rotated/mirrored magnetometer red green graphs unable get rid key hole shape red xy green yz blue zx fact zx works mean issue value looks using board magnetometer try next thanks joe edit tried rotating external magnetometer orientation freeimu magnetometer get result think difference orientation causing problem thought freeimu mounted central rotation external magnetometer mounted tested rotating external magnetometer got result seems strange think possible external magnetometer brought faulty way confirm working thanks edit managed get circles plotting changing gain seem new magnetometer saturated need work change values orientation correct,quadcopter imu calibration magnetometer,quadcopter magnetometer imu calibration
1281,track robot position,software researcher spare time mentors robotics team helping software side things years keep coming question determine robots position heading competitions tried number things varying degrees success/failure encoders drive wheels accelerometers gyroscopes etc bought imu axis axis gyro axis magnetometer preprocessed arduino outputting value serial port thought way take measurements get composite view position heading using mechanum wheels particular robot wheel encoders useful looked lot talk orientation using quaternion sensor fusion using similar boards unclear take quaternion estimation come x distance starting position time window measurements small ~15 seconds need accurate window ready abandon using imu try something idea use usb ball mouse try track robot motion certain mouse going get banged way much leading noise invalid results side note robot x base weighting lbs thoughts suggestions appreciated,imu sensor-fusion,sensor fusion imu
1282,heavy omnidirectional platform suspension,planning build omnidirectional platform support robotic arm platform equipped meccanum wheels like kind suspension avoid wheels loosing contact floor small bumps let say first suspension type thought rocker bogie type afraid changes arm center mass movement much stress rocker bogie mechanism choices recommend rocker bogie fine,mobile-robot wheeled-robot design mechanism,mobile design robot mechanism wheeled
1283,uncertainty big sensor accurate measuring landmark ekf-slam,"sensor provides range r bearing \phi landmark ekf-slam simulation sensor following specifications \sigma_ r \text \sigma_ \phi \text deg location landmark x-axis ekf imposes gaussian location landmark represented quantities mean \mu_ x variance \sigma_ x following graph green mean \mu_ x true location i.e black measurements red \mu_ x \pm \sigma_ x understand uncertainty big using accurate sensor process noise robot pose \sigma_ v small noise using c++ edit people ask measurements code r \sqrt m_ j m_ j x x \mathcal \sigma_ r \\ \phi \text atan2 \left \frac m_ j m_ j x x \right \mathcal n \sigma_ \phi std :vector double robot :observe const std :vector beacon map std :vector double zobs unsigned int map.size ++i double range bearing range sqrt pow map .getx x,2 pow map .gety y,2 // add noise range range += sigma_r*normalized_gaussain_noise_generator bearing atan2 map .gety map .getx x // add bearing bearing += sigma_p*normalized_gaussain_noise_generator bearing this- wrapangle bearing range // store measurements range angle landmark zobs.push_back range zobs.push_back bearing //std range bearing std :endl return zobs normalized_gaussain_noise_generator i.e \mathcal n double robot :normalized_gaussain_noise_generator double noise std :normal_distribution double distribution noise distribution generator return noise measurements i.e black color using inverse measurement function given estimate robot pose true measurement polar coordinates get location landmark actual approach follows \bar \mu j x \bar \mu x r \cos \phi \bar \mu \theta \\ \bar \mu j \bar \mu r \sin \phi \bar \mu \theta stated probabilistic robotics book means measurements graph predicted measurements true ones conditions true measurements obtained follows \text j x x r \cos \phi \theta \\ \text j r \sin \phi \theta result graph means correlations true measurements robot estimate leads question uncertainty behaves",mobile-robot slam ekf noise,mobile ekf slam robot noise
1284,rate controller quadcopter,academic papers characterise rate rotation x axis φ τφ cant tell characterises rate actual angle φ pid controllers academics use control takes φsetpoint-φmeasured error signal error signal φ setpoint-φ measured using gyro values using euler angle second derivative control rate possible stabilise quadcopter using euler angles,control quadcopter pid,control quadcopter pid
1285,drive motor voltage specifications roomba,salvaged parts dead roomba trying use drive motor assembly got connector know voltage pwm specifications motor attached picture drive motor assembly help appreciated thank pratik edit image drive motor module,motor pwm irobot-create h-bridge roomba,bridge roomba h create irobot motor pwm
1286,project robotic surgeries anyone help give details related topic,anyone help project robotical surgeries like someone help advise wonder anyone give data tests run surgical robot ... thank attention anything appreciated,sensors robotic-arm automatic,sensors automatic arm robotic
1287,difference motion planning trajectory generation,major differences motion planning trajectory generation robotics terms used,motion-planning,motion planning
1288,irobot create open interface spec syncing incoming data,create hooked arduino commands work fine retrieving sensor information send request packet get values consistent match missing something press clean button get press spot get something messing endianness data formatted expected according spec sheet create thing ideas using tutorial site dont think anything formatting byte library using https //github.com/domamato/create2 sorry take long get anyways data get formatted way baud rate issue understands commands day hour minute schedule clock dock spot clean day x x x x x x x hour x x x x x x minute x x x x x schedule x x x x x x x x clock x x x x x x x x dock x x x x spot x x x clean x x note schedule clock buttons return nothing,arduino irobot-create,create irobot arduino
1289,find body jacobain link robot manipulator,links twist obtained spatial manipulator jacobian done comes body jacobian becomes difficult adjoint transformation relates jacobain jacobian works picture getting body jacobian link jacobian matrix whole robot know help regarded example full details,robotic-arm kinematics inverse-kinematics manipulator jacobian,manipulator robotic inverse kinematics jacobian arm
1290,dc motor pid control unstable velocity feedback,building omnidirectional robot dc motors embedded incremental encoder constant pwm input able control motor rotate stable state refer figure observed linear speed motors varied range believe possible reason pwm signal generated arduino mega controller good problem implement stable pid controller case speed motor varies input believe extra work adding filter needed advice appreciated thank,motor pid,pid motor
1291,help quadcopter controlling,hi name zahed kamangar iran created controll computer help work true direction controll quad eeg signal controll computer radio controller way sir email **zahed_kaman yahoo.com** thanks lot,pid,pid
1292,drones camera streaming,stream video feed camera drone think high altitudes wi-fi work,quadcopter cameras,quadcopter cameras
1293,detect human proximity,looking ways detect human presense walls proximity feet way possible problem code hope ok posting know different sensors seem detecting motion target humans detect persons sound amplification device magnifies human breathing x detect body heat pick radiation waves something humans,sensors sensor-fusion ultrasonic-sensors,ultrasonic sensors sensor fusion
1294,converting linear acceleration command dc motor command,constructing wheels balancing robot uses pid controller tuned parameters numerical simulations based continuous inverted pendulum system simulated inverted pendulum balances controlling horizontal linear cart acceleration \ddot x done want take next step turn pid control commands electrical commands dc motor give desired linear acceleration \ddot x specific robot motors experimental tests run determine convert pid commands dc motor acceleration commands formula based motor specifications update non-linear dynamic equation using l\ddot \theta =gsin \theta +\ddot x cos \theta +ld \ddot x linear acceleration g acceleration due gravity \ddot \theta angular acceleration external disturbance system simplify things linearized equations \theta\approx0 yielding l\ddot \theta =g\theta+\ddot x +ld assumed control input cart linear acceleration \ddot x chose control command \ddot x =k_1\theta k_2\int_0^t\theta dt k_3\dot \theta k_i pid gains,motor control pid actuator dynamics,control actuator dynamics pid motor
1295,need help choosing computer board,need computer board raspberry pi vending machine want replace original controller list requirements pins connect mdb protocol stuff gpio good performance display browser showing rails application running tried raspberry pi b+ slow run browser speed laptop pc want choose powerful system odroid wandboard etc custom video output need display fullhd need show computer rotate video output want connect microcomputer display hdmi dvi something required desirable please help choose nowadays try choose odroid wandboard pandaboard computers version computer advisable,arduino raspberry-pi,pi raspberry arduino
1296,cheapest way make led sensitive sound,way using arduino rasberry pi etc many cases discussion forums come things whole uploaded chip dollar part drastic change defines line time thing made hobby something sell want led get brightest loud sound silence button switch time,design circuit,design circuit
1297,possible robot navigate predefined coordinates,total newbie robotics please bare school project team design robot capable picking golf balls different sizes predefined locations drop balls respective holes using arduino chip robot thought define path robot invisible virtual path call imagining platform cartesian plane tell robot go want go example go need sort sensors robot figures thanks time,arduino sensors navigation,sensors navigation arduino
1298,raspberry pi quadcopter thrashes high speeds,"attempting build raspberry pi based succeeded interfacing hardware written pid controller stable low throttle problem higher throttle quadcopter starts thrashing jerking able get ground testing done test bench ruled bad sensors testing sensor seem giving correct values problem code bad motor suggestions appreciated code quadserver.java package com.zachary.quadserver import java.net import java.io import java.util import se.hirt.pi.adafruit.pwm.pwmdevice import se.hirt.pi.adafruit.pwm.pwmdevice.pwmchannel public class quadserver private static sensor sensor new sensor private final static int frequency private static double px private static double py private static double ix private static double iy private static double dx private static double dy private static double kp private static double ki private static double kd private static long time system.currenttimemillis private static double last_errorx private static double last_errory private static double outputx private static double outputy private static int val new int private static int throttle static double setpointx static double setpointy static receivedtime system.currenttimemillis public static void main string args throws ioexception nullpointerexception pwmdevice device new pwmdevice device.setpwmfreqency frequency pwmchannel br device.getchannel pwmchannel tr device.getchannel pwmchannel tl device.getchannel pwmchannel bl device.getchannel datagramsocket serversocket new datagramsocket thread read new thread public void run true try byte receivedata new byte datagrampacket receivepacket new datagrampacket receivedata receivedata.length serversocket.receive receivepacket string message new string receivepacket.getdata throttle int integer.parseint message.split \\s+ *12.96 +733 setpointx integer.parseint message.split \\s+ -50 setpointy integer.parseint message.split \\s+ -50 receivedtime system.currenttimemillis catch ioexception e e.printstacktrace read.start true arrays.fill val calculatepulsewidth double throttle/1000 frequency double errorx -sensor.readgyro -setpointx double errory sensor.readgyro -setpointy double dt double system.currenttimemillis -time /1000 double accelx sensor.readaccel double sensor.readaccel double accelz sensor.readaccel double hypotx math.sqrt math.pow accelx +math.pow accelz double hypoty math.sqrt math.pow +math.pow double accelanglex math.todegrees math.asin double accelangley math.todegrees math.asin accelx/hypotx dt px errorx py errory ix += errorx*dt iy += errory*dt ix iy dx errorx last_errorx /dt dy errory last_errory /dt outputx kp*px+ki*ix+kd*dx outputy kp*py+ki*iy+kd*dy time system.currenttimemillis system.out.println setpointx add -outputx+outputy add -outputx-outputy add outputx-outputy add outputx+outputy //system.out.println val +val +val +val system.currenttimemillis -receivedtime br.setpwm val tr.setpwm val tl.setpwm val bl.setpwm val tr.setpwm tl.setpwm bl.setpwm private static void add double value int value calculatepulsewidth value/1000 frequency val +value val +value val += value val +value //system.out.println low val else val +value //system.out.println low val private static int calculatepulsewidth double millis int frequency return int math.round millis frequency/1000 sensor.java package com.zachary.quadserver import com.pi4j.io.gpio.gpiocontroller import com.pi4j.io.gpio.gpiofactory import com.pi4j.io.gpio.gpiopindigitaloutput import com.pi4j.io.gpio.pinstate import com.pi4j.io.gpio.raspipin import com.pi4j.io.i2c import com.pi4j.io.gpio.gpiocontroller import com.pi4j.io.gpio.gpiofactory import com.pi4j.io.gpio.gpiopindigitaloutput import com.pi4j.io.gpio.pinstate import com.pi4j.io.gpio.raspipin import com.pi4j.io.i2c import java.net import java.io public class sensor static i2cdevice sensor static i2cbus bus static byte acceldata gyrodata static new static gyrocalib new static double gyrox static double gyroy static double gyroz static double accelx static double static double accelz static double anglex static double angley static double anglez public sensor //system.out.println hello raspberry pi try bus i2cfactory.getinstance i2cbus.bus_1 sensor bus.getdevice sensor.write byte sensor.write byte system.out.println calibrating ... calibrate thread sensors new thread public void run try readsensors catch ioexception e system.out.println e.getmessage sensors.start catch ioexception e system.out.println e.getmessage private static void readsensors throws ioexception long time system.currenttimemillis long sendtime system.currenttimemillis true new byte gyrodata new byte int r sensor.read acceldata accelx acceldata +acceldata -accelcalib /16384.0 *9.8 acceldata +acceldata -accelcalib /16384.0 *9.8 accelz acceldata +acceldata -accelcalib /16384.0 *9.8 +9.8 accelz accelz-9.8 double hypotx math.sqrt math.pow accelx +math.pow accelz double hypoty math.sqrt math.pow +math.pow double accelanglex math.todegrees math.asin double accelangley math.todegrees math.asin accelx/hypotx //system.out.println int gyrox+ int gyroy //system.out.println accelx accelx+ accely+ accelz accelz r sensor.read gyrodata system.currenttimemillis gyrox gyrodata +gyrodata -gyrocalib /131.0 gyroy gyrodata +gyrodata -gyrocalib /131.0 gyroz gyrodata +gyrodata -gyrocalib /131.0 anglex += gyrox* system.currenttimemillis -time /1000 angley += gyroy* system.currenttimemillis -time /1000 anglez += gyroz anglex angley time system.currenttimemillis //system.out.println int anglex+ int angley //system.out.println int accelanglex+ int accelangley public static void calibrate throws ioexception int i++ acceldata new byte gyrodata new byte int r sensor.read acceldata accelcalib += acceldata +acceldata += +acceldata += +acceldata r sensor.read gyrodata gyrocalib += gyrodata +gyrodata gyrocalib += gyrodata +gyrodata gyrocalib += gyrodata +gyrodata try thread.sleep catch exception e e.printstacktrace gyrocalib /= gyrocalib /= gyrocalib /= accelcalib /= accelcalib /= accelcalib /= system.out.println gyrocalib +gyrocalib +gyrocalib public readangle int axis switch axis case return anglex case return angley case return anglez return public double readgyro int axis switch axis case return gyrox case return gyroy case return gyroz return public double readaccel int axis switch axis case return accelx case return case return accelz return edit re-written code c++ see run faster running speed ms cycle hz new code c++ include wiringpi.h include wiringpii2c.h include sys/socket.h include netinet/in.h include string.h include string include iostream include unistd.h include boost/thread.hpp include time.h include cmath define axisx define axisy define axisz define kp define ki define kd define frequency define mode1 define mode2 define subadr1 define subadr2 define subadr13 define prescale define led0_on_l define led0_on_h define led0_off_l define led0_off_h define all_led_on_l define all_led_on_h define all_led_off_l define all_led_off_h // bits define define sleep define allcall define invrt define outdrv define using namespace std double accelcalx double double double gyrocalx double gyrocaly double gyrocalz double px double py double ix double iy double dx double dy double lasterrorx double lasterrory int throttle int sensor wiringpii2csetup int pwm wiringpii2csetup array int,4 motorval struct timespec int tosigned int unsignedval int signedval unsignedval unsignedval signedval 32768- unsignedval-32768 return signedval double getaccel int axis double x tosigned wiringpii2creadreg8 sensor +wiringpii2creadreg8 sensor /1671.8 double tosigned wiringpii2creadreg8 sensor +wiringpii2creadreg8 sensor /1671.8 double z tosigned wiringpii2creadreg8 sensor +wiringpii2creadreg8 sensor /1671.8 x -= accelcalx -= accelcaly z -= accelcalz 9.8-abs z-9.8 switch axis case axisx return x case return case axisz return z double getgyro int axis double x tosigned wiringpii2creadreg8 sensor +wiringpii2creadreg8 sensor /1671.8 double tosigned wiringpii2creadreg8 sensor +wiringpii2creadreg8 sensor /1671.8 double z tosigned wiringpii2creadreg8 sensor +wiringpii2creadreg8 sensor /1671.8 x -= gyrocalx -= gyrocaly z -= gyrocalz switch axis case axisx return x case return case axisz return z void calibrate int i++ accelcalx += tosigned wiringpii2creadreg8 sensor +wiringpii2creadreg8 sensor /1671.8 accelcaly += tosigned wiringpii2creadreg8 sensor +wiringpii2creadreg8 sensor /1671.8 accelcalz += tosigned wiringpii2creadreg8 sensor +wiringpii2creadreg8 sensor /1671.8 gyrocalx += tosigned wiringpii2creadreg8 sensor +wiringpii2creadreg8 sensor /1671.8 gyrocalx += tosigned wiringpii2creadreg8 sensor +wiringpii2creadreg8 sensor /1671.8 gyrocalx += tosigned wiringpii2creadreg8 sensor +wiringpii2creadreg8 sensor /1671.8 usleep accelcalx /= accelcaly /= accelcalz /= accelcalz -= gyrocalx /= gyrocaly /= gyrocalz /= cout accelcalx accelcaly accelcalz \n int calculatepulsewidth double millis int frequency return int floor millis frequency/1000 void add double value int value calculatepulsewidth value/1000 frequency motorval +value motorval +value motorval += value motorval +value //system.out.println low motorval else motorval +value //system.out.println low motorval void getthrottle int sockfd n struct sockaddr_in servaddr cliaddr socklen_t len char mesg sockfd=socket af_inet sock_dgram,0 bzero servaddr sizeof servaddr af_inet servaddr.sin_addr.s_addr htonl inaddr_any servaddr.sin_port htons sockfd struct sockaddr servaddr sizeof servaddr true len sizeof cliaddr n recvfrom sockfd mesg,1000,0 struct sockaddr cliaddr len mesg string message mesg string values int valindex int lastindex int message.length i++ message == values valindex message.substr lastindex+1 lastindex valindex++ values valindex message.substr lastindex+1 message.length throttle calculatepulsewidth stoi values *12.96 +733 /1000 frequency void setallpwm int int wiringpii2cwritereg8 pwm all_led_on_l wiringpii2cwritereg8 pwm all_led_on_h wiringpii2cwritereg8 pwm all_led_off_l wiringpii2cwritereg8 pwm all_led_off_h void setpwm int int int channel wiringpii2cwritereg8 pwm led0_on_l channel wiringpii2cwritereg8 pwm led0_on_h channel wiringpii2cwritereg8 pwm led0_off_l channel wiringpii2cwritereg8 pwm led0_off_h channel void setpwmfrequency double frequency double prescaleval prescaleval /= prescaleval /= frequency prescaleval -= double prescale floor prescaleval int oldmode wiringpii2creadreg8 pwm mode1 int newmode oldmode wiringpii2cwritereg8 pwm mode1 newmode wiringpii2cwritereg8 pwm prescale floor prescale wiringpii2cwritereg8 pwm mode1 oldmode usleep wiringpii2cwritereg8 pwm mode1 oldmode void initsensor wiringpii2cwritereg8 sensor wiringpii2cwritereg8 sensor void initpwm setallpwm wiringpii2cwritereg8 pwm mode2 outdrv wiringpii2cwritereg8 pwm mode1 allcall usleep int mode1 wiringpii2creadreg8 pwm mode1 mode1 mode1 ~sleep wiringpii2cwritereg8 pwm mode1 mode1 usleep setpwmfrequency frequency double millis timespec time return time.tv_nsec/1.0e6 double intpow double base int exponent int double base i=1 exponent i++ *= base return int main void initsensor initpwm cout calibrating ... \n calibrate boost :thread getthrottle clock_gettime clock_monotonic true motorval.fill throttle clock_gettime clock_monotonic double dt millis -millis /1000 double accelx getaccel double getaccel double accelz getaccel double hypotx sqrt intpow accelx +intpow accelz double hypoty sqrt intpow +intpow double accelanglex asin accely/hypoty double accelangley asin accelx/hypotx double errorx -getgyro double errory getgyro px errorx py errory ix += errorx*dt iy += errory*dt ix iy dx errorx-lasterrorx *dt dy errory-lasterrory *dt lasterrorx errorx lasterrory errory double outputx kp*px+ki*ix+kd*dx double outputy kp*py+ki*iy+kd*dy add outputy //-outputx+ add outputy //-outputx- add outputy //outputx- add outputy //outputx+ setpwm motorval setpwm motorval setpwm motorval setpwm motorval addition motors seem lagging turn quadcopter direction strange reason quadcopter seems less responsive p gain c++ version working java version edit testing determined reading mpu6050 writing pca9685 board using control escs source delay anybody know speed edit managed speed code hz changing i2c baud rate quadcopter thrashing spent hours trying tune pid controller seem help",quadcopter pid raspberry-pi,quadcopter pi raspberry pid
1299,feasible idea operating robotic arm non-sophisticated way,team design robot using arduino chip objective robot grab golf balls set golf pins different heights pre-defined locations figure possible mechanism collect balls drop trailer robot arm experience time designing sophisticated system arm recognizing ball grabbing feasible option compared non-sophisticated robot arm note robot autonomous,arduino control robotic-arm,control robotic arm arduino
1300,minimising lateral drift pid arduino controlled using imu,developing stabilisation system quadcopter using arduino mega imu imu reading angle quad calculating motor commands using pid controller applying motors works constrained test bed reality quad straight level drifting side recent motor commands correcting pitch/yaw way using vision system keep quad place drifting looked obtaining velocity integrating acceleration value noisy give meaningful reading,arduino quadcopter pid imu rcservo,quadcopter imu rcservo pid arduino
1301,pid equation k s+a ^2 /s values correspond pid coefficients kp ki kd,trying understand obtain kp ki kd values finding combination k works expand equation take coefficients,control pid tuning,control pid tuning
1302,electronic compass work underwater,building submersible rov need way navigate using compass help brings question electronic compass work underwater thoughts water act faraday cage interfere magnetic field therefore work gyroscope better solution,sensors compass,sensors compass
1303,getting terms inertia matrix dynamics model robot using matlab script,working dynamics model rrrr articulated robot following euler-lagrange approach developing code m-file matlab looking dynamic model form q \ddot q c q \dot q \dot q g q \tau c \times4 matrices g \tau torque vectors formulating kinetic potential energies problem getting long equations term matrix huge involving sin cos talking several pages equation published code pages output got pages total searched guy faced problem helpful proposal suggestions,robotic-arm kinematics dynamics matlab,matlab dynamics kinematics arm robotic
1304,get mpu gyroscope data using mpu6050_6axis_motionapps20.h library,calibrating chip using arduino mega using j rowberg dev libraries get print raw accelerometer gyroscpe values unstable changing values digital motion processing chip library get print euler angles quaternions real world acceleration actual acceleration option get gyroscope data use dmp library get gyro data possible get raw unprocessed gyro values,arduino imu accelerometer gyroscope,imu gyroscope accelerometer arduino
1305,open source software quadcopters,question general please bear interested buying quadcopter develop functions example android app control objects detection question available quadcopters software allows things flying toy p.s asked buy kit build,quadcopter,quadcopter
1306,magnetometer measure high angular velocity small object,measure frequency little circle rotation image circle flying air circle touch anything rotation use simple trick count number complete rotation amount time supposed chance use gyroscope magnetometer accelerometer detect centripetal acceleration gyroscope magnetometer calculus frequency problem high frequency circle reach hz simple calculus know need gyroscope measure big angular velocity need big range values radius circle cm w angular velocity rad/sec acc_centr w^2 r seen accelerometer gyroscope industrial purposes range question understand magnetometer used kind application considering magnetic field circle magnetometer used measure change inclination datasheet read ofter sensor communicate arduino nothing quick rotation reason magnetometer limits gyroscope accelerometer,electronics,electronics
1307,crazyflie control board considered microcontroller,project school told use micro controller ends controlling external hardware know crazyflie controlling motors counts external hardware micro controller second question want purchase kit saw use expansion board need solder plan buying remote possible control crazyflie iphone correct appreciate someone answer questions thank advance,quadcopter,quadcopter
1308,iron man jarvis robot,passionate robots childhood.i java developer sci-fi movies.i little bit knowledge embedded systems electronics ambition build robot jarvis iron man movie .which voice controlled robot.i like implement house home automation system.it take voice input take appropriate action.. please help kind help appreciated..,mobile-robot quadcopter microcontroller mechanism embedded-systems,quadcopter embedded mobile microcontroller robot mechanism systems
1309,sending commands roomba pc,trying send commands roomba behaving strange manual using http //www.irobot.com/~/media/mainsite/pdfs/about/stem/create/create_2_open_interface_spec.pdf consulted several manuals say default baudrate works trying get response roomba sending following comand examples • turn irobot create’s play led roomba goes crazy start going idea happening first thank,irobot-create roomba,create roomba irobot
1310,equipment used design robot,look robot http //www.meccanotec.com/step781b.jpg see rods lot holes planes holes seems way create flexibility things connected create final robot name type equipment metals holes get aware people using lego blocks create robots sure metal rods plates holes free application design mechanical structure image add gears simulate see rotate bend real robot created quickest way create robot edit thankyou frank lanyusea wants simulation mechanical model others words play robot computer building gears action software suitable purpose,robotic-arm,arm robotic
1311,know type stepper motors use designing robot,talking robots http //www.meccanotec.com/step781b.jpg person know type motor use design robot want understand stepper motors different step sizes different torques things determine type stepper motor suitable used given robot,robotic-arm stepper-motor,stepper arm motor robotic
1312,know system easier control using pid controller,inverted inertia wheel pendulum suppose wheel larger inertia top system stable prove disprove conjecture,control pid stability,control stability pid
1313,unilateral torque constraint foot-ground interface,studying basics legged locomotion came unilateral force torque constraints foot-ground interface understood implication unilateral constraint force ground push foot pull unable understand unilateral torque constraint translate case anyone clarify,mechanism motion force legged walk,motion force legged mechanism walk
1314,filter gyroscopic data,using arduino mega mpu6050 get gyroscopic data angles problem gyro data keeps going -1 moving stays filter assume noise going use gyro data quadcopter pid rate controller cant telling rotating -1 deg/sec catastrophic quadcopter,arduino imu accelerometer gyroscope,imu gyroscope accelerometer arduino
1315,board control brushed dc motors,building humanoid robot dc motor actuated fingers brushed dc motors position controlled help hall effect sensors implanted joints fingers need developed driver board control watt v dc motors motor equipped incremental encoder speed control thank,motor servomotor driver,servomotor driver motor
1316,provides degree-of-freedom imu reduntant data,basic question concerning sensor fusion standard dof imu mean cheap things tinkerer home provides values accelerometers gyroscope magnetic field measurements pressure sensor temperature know accel-data provide long term stability useless short term gyroscope less vice versa tons strategies marry values magnetic field measurement fit framework magnetic field measurement provide sensors combined guess measurement reliable sensors fit br,imu sensor-fusion,sensor fusion imu
1317,determine current roomba state operating mode,using sci messages like determine current operating mode state irobot roomba like detect separate states cleaning docking station returning docking station error e.g trapped obstacle reliable way detect states using sci data roomba sci sensor packets remote control command buttons seem return called commands executed ones,roomba,roomba
1318,basic general question controllers,mechanical system free move given rail -5m motorized cart whole system expressed linear timeinvariant system equations need control position example saying controller move +2.3 design pid controller given set point moves cart position need much want control position velocity cart need example say move +2.3 specific velocity profile course vel end position question design controller need special type controller huge choice help graph link example appreciated regards,control pid,control pid
1319,remote control relative driver,possible remote control relative driver angle sensor sensor example robot starts position -- -- -- -- -- -- -- front -- -- -- -- |________| robot -- -- -- -- -- -- -- joystick configuration -- -- -- -- -- -- -- forwards joystick backwards -- -- -- -- -- -- -- robot turns -- -- -- -- -- -- -- -- -- -- -- |________| robot front -- -- -- -- -- -- -- pushing controller forwards make robot go -- -- -- -- -- -- -- joystick backwards -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- |________| robot front -- -- -- -- -- -- -- robot pov going backwards ideas/solutions,control sensors,control sensors
1320,motor current proportional thrust,making sure circuit airboat working safe checking motor amps max current running esc current burst amps recommended tested prop 3-blade runs motor amps quick calculations online calculator appears give value force way lbs measured ... type prop want gives thrust value motor current proportional thrust lbs amps running amount amps prop theory little less case safe application make sense physics terms power current*voltage proportional thrust need make sure thought process work choosing prop device short runs less seconds near-boundaries safe ...,quadcopter brushless-motor,quadcopter brushless motor
1321,link quadcopter transmitter pulse roll/pitch/yaw angles,want design data logger quadcopter using arduino mega board want record roll pitch yaw angles second seconds viewed flight ended thing understand translate pitch/roll/yaw angles specific length flight controller receives example press control pitch transmitter sends pulse receiver drone speed drones motors change pitch backward tap commands flight controller transmitter able record length pulse sent link pitch angle size pulse convert pulse recorded board convert pitch angle degrees transmitter use 1500us-pulse means pitch means pitch 1000-1499 means pitch backwards course actual values vary general reference question instance sent pulse translate angle degrees formula convert hope clear question sounds stupid please excuse able find good information thanks,arduino quadcopter,quadcopter arduino
1322,tune piv controller,tune piv controller trying get system settling time second p.o zero steady state error,control,control
1323,difference planetary precision gear motors,working building rover like advice selecting motors particular want understand difference precision planetary gear motors robot way 10-15lbs think like responsive quick sabertooth motor controllers supply looking motors sure better choice application sets motors thinking https //www.servocity.com/html/precision_robotzone_gear_motor.html https //www.servocity.com/html/3-12v_precision_planetary_gear.html googling provide info planetary gears application unclear thanks,mobile-robot motor gearing,mobile gearing robot motor
1324,robotics slam datasets scaling factor,several robotics datasets slam webpage see depth image scaled factor float depth images stored bit png files depth images scaled factor i.e. pixel value depth image corresponds meter camera meter distance etc pixel value means missing value/no data understand value chosen conversion meters millimeters,slam,slam
1325,get openinterface.py,trying program create2 irobot using python script called download script,software irobot-create python,python create irobot software
1326,internal pullup sufficient i2c beaglebone black,plan use p8.13 p8.15 beaglebone i2c bitbang mode need use external pull resistors circuit use internal pull available beaglebone black,beagle-bone circuit,beagle circuit bone
1327,controlling esc brushless motors rpi,looking build new first quadcopter conventional flight controller radio onboard rpi applying knowledge autonomous control improve coding skills built quadcopter experience using brushless motors using rpi b+ controlling i2c something looked b+ i2c interfaces hardware pwm pins unsure software pwm found simonk-based escs hobbyking i2c intended mikrokopter looked people used 16-channel pwm/servo drivers control option look better way safe rpi run bec confusing esc powered powered rpi comes bad input,quadcopter raspberry-pi brushless-motor esc multi-rotor,quadcopter rotor multi raspberry esc motor brushless pi
1328,implementation wall obstacle avoidance,task developing simulation adaptive robot control system seem anyone discuss uncertainties want keep simulation simple possible tight deadline project used life minimal behaviour agent supposed exhibit wall obstacle avoidance extended avoiding small objects exploring large ones decided simple feedback control system begin struggling decide represent map agent environment mean want wall coordinate hard code matrix coordinates obstacles small units make ... i.e neighbouring coordinates agents gets go coordinate case know walk wall heard something called occupancy grid map get works implement thing struggling distinct wall obstacle let agent know big obstacle avoid explore eh puzzled project appreciate thoughts directions thank,control localization simulation,control simulation localization
1329,calculate center mass jacobian matrix robot arm,4-dof robot arm system revolute joints arranged open-chain fashion assume link’s mass point mass located p_i link’s center mass p_i trying calculate center mass jacobian matrix arm found related materials online center mass jacobian.but sure calculate anybody give hint thanks,robotic-arm jacobian,jacobian arm robotic
1330,sporadic sensing rates hc-sr04 ultrasonic distance sensor,working robot uses ultrasonic sensors integral part navigation testing sensors noticed strange behaviour sensors seem stop functioning bring entire arduino mega working stop strange part stops seem random occasions sensor read values vals second seconds sudden sensor slow reading 2-3 values second stalls tested several sensors different codes pinging distances problem persisted leads believe issue arduino mega unsure verify advice thanks advance ps pins mega seem working fine i.e analog pins ir reflectance sensors pwm pins driving dc motors,arduino ultrasonic-sensors,sensors ultrasonic arduino
1331,aerodynamics quadcopter,want build quad copter want know calculate thrust lift generated using motor aware capacities motor explain calculate thrust lift generated assuming motor maximum payload quad copter lift given thrust,quadcopter,quadcopter
1332,recommendation good source robotic components,im looking good source robotic components sheel/tracked robot chasis motors sensors communication mechanics thought using raspberry arduino platforms automation good idea im asking dont know much motors/drives uses powering robots thanks uli,mobile-robot motor,mobile robot motor
1333,datalogging arduino mega dropbox,arduino mega board adafruit ultimate gps logger gps module shield connected using headers entire thing mounted code found modified get gps coordinates nmea format parse information want store sd card thing want use arduino gsm shield send data sd card folder dropbox idea possible started working arduino month apologize question sounds noob-ish anyone forum least guide approach problem thanks,arduino gps,gps arduino
1334,graph optimization g2o,trying graph optimization g2o order perform loop closure finding minimal working examples online issue found second form library see author uses things contrast online loop closure people update optimize graph time detect loop graph optimization pairwise incremental registration case pairwise registration global graph-based optimization separate stages result first input second working solution way works different usual use g2o nodes identity matrices i.e consider pointclouds transformed poses pairwise reg step edges use relative transformation based keypoints pointclouds keypoints transformed case penalize deviations relative pose identity matrix information matrix inverse covariance use identity matrix multiplied number found correspondences case result graph update matrix i.e multiply camera poses works many/most cases unusual approach draw graph debugging nodes identities beginning result optimization path means something goes wrong getting intuition easy trying follow classic approach vertices/nodes poses pairwise registration edges relative transformations based keypoints/features raw pointclouds i.e camera frame transformed poses pairwise registration output new poses i.e replaces old poses new ones drawing graph case makes sense example case scanning object turntable camera poses form circle space trying form edges optimize stage mean lm iteration make things running approach experimented lot direction edges relative transformation used measurement edges everything looks expected luck simplicity use information matrix mentioned identity matrix multiplied number correspondences theory information matrix inverse covariance simplicity following way compute covariance easy minimal working examples aware something wrong describe rules thumb e.g first node approaches fixed follow aware update specific questions nodes hold poses robot/camera unclear reference frame defined world coordinate frame defined according camera according object i.e acquired pointcloud affect accumulation pose matrices incremental registration g2o stage try form optimize graph end frames/pointclouds edge src- tgt constraints hold relative transformation pointcloudsrc pointcloudtgt transformation based features local coordinate frame pointcloudsrc tricky point regarding direction consistency relative transformation first node fixed fixed node affect direction edge departs/ends_up from/at fixed node tricky point hinter implementation working millimeter meter units sure affect solvers g2o way expect naive use g2o giving usable results influenced,slam,slam
1335,implement tracking problem pid controller,"trying implement tracking problem example using pid controller dynamic equation \ddot \theta \dot \theta mgl \sin \theta u \theta joint variable u joint torque mass l distance centre mass joint viscous friction coefficient inertia seen rotation axis \textbf regulation problem problem desired angle \theta_ constant \theta \rightarrow \theta_ \dot \theta \rightarrow \rightarrow \infty pid controller input u determined follows u k_ p \theta_ \theta k_ \underbrace \dot \theta \dot \theta \int^ \theta_ \theta \tau d\tau result code main.m clear clc global error error x0 x ode45 x0 e x ,1 pi/2 error theta plot e title problem xlabel sec ylabel \theta_ \theta grid odesolver.m function dx x global error pid controller dx zeros parameters mass kg 0.0023e-6 viscous friction coefficient l arm length inertia seen rotation axis kg.m^2 g acceleration due gravity m/s^2 pid tuning kp kd ki u joint torque u kp* pi/2 x kd* -x ki*error error error pi/2 x dx x dx u d*x m*g*l*sin x end \textbf tracking problem like implement tracking problem desired angle \theta_ constant i.e \theta_ \theta \rightarrow \theta_ \dot \theta \rightarrow \dot \theta \rightarrow \infty input u k_ p \theta_ \theta k_ \dot \theta \dot \theta \int^ \theta_ \theta \tau d\tau problems compute \dot \theta read txt file step size fixed problem use naive approach \dot f x \frac f x+h -f x h error getting bigger step size small second problem desired trajectory stored txt file means read data fixed step size i'v read ode45 step size fixed suggestions edit tracking problem code main.m clear clc global error theta_d dt error theta_d load dt numel theta_d numel theta_d i-1 dt end x0 options= odeset dt x ode45 x0 options e x ,1 theta_d error theta plot x ,2 title problem xlabel sec ylabel \dot \theta grid odesolver.m function dx x persistent theta_dprev isempty theta_dprev end global error theta_d dt dx zeros parameters mass kg 0.0023e-6 viscous friction coefficient l arm length inertia seen rotation axis kg.m^2 g acceleration due gravity m/s^2 pid tuning kp kd ki == end theta_d derivative theta_ddot theta_d theta_dprev dt theta_dprev theta_d u joint torque u kp* theta_d x kd* theta_ddot x ki*error error error theta_ddot x dx x dx u d*x m*g*l*sin x end trajectory code clear clc /2 file fopen length fprintf file \n end fclose file result velocity correct approach solve tracking problem",control pid dynamics,control dynamics pid
1336,dynamixel mx-106-r burnt,using mx 106-r dynamixel servo project making making robotic arm controlled servo moved horn servo hence due excess current input wont work suspect h-bridge motor got burnt somebody tell went wrong test motor repair possible find service centre live india deep trouble right please help,robotic-arm servos h-bridge,bridge h servos arm robotic
1337,calculate real time rpm motor rotary encoder,want measure real time rpm wheels think incremental rotary encoder good confused interface dc brushless geared motors images sure rotary encoder suffice need sensor project arduino uno,motion forward-kinematics quadrature-encoder,motion quadrature kinematics encoder
1338,wireless technology use control robots classroom,want build cheap robot programmable scratch graphical language employed lessons school scratch code interpreted pc robot code receives specific commands i.e drive forward transmits sensors measurements looking wireless technology allow exchange information robot pc least rate allow work least robots room range least tests bluetooth connectivity issues pairing devices hassle classroom tried wifi modules pinging showed average time maximum afraid able control linefollower robot example point cheap module wireless technologies worries wifi exaggerated,mobile-robot radio-control wireless wifi,control mobile wifi robot wireless radio
1339,calculating acceleration velocity,writing quad copter software beginning implement altitude hold mode enable need get accurate reading vertical velocity plan use kalman filter need ensure getting correct velocity individual sensor done sure correct hoping get confirmation sensor lidar distance sensor calculated acceleration velocity using following code float lidarlitepwm :getdisplacement int currentaltitude read float displacement currentaltitude _oldaltitude _oldaltitude currentaltitude return displacement //cm //time last update float time float flight_controller_frequency // float lidardisplacement _lidar- getdisplacement _currentlidarvelocity lidardisplacement time second sensor accelerometer calculated acceleration velocity using following code imu :acceleration imu :getacceleration //get quaternion float _freeimu.getq q //get raw data float values _freeimu.getvalues values //extract data float acc values //x acc values //y acc values //z //gravity compensate _freeimu.gravitycompensateacc acc q //convert acceleration g cm/s/s _acceleration.x acc _acceleration.y acc _acceleration.z acc return _acceleration //cm/s/s //time last update float time float flight_controller_frequency // //get accel imu :acceleration imuacceleration _imu- getacceleration //get velocity currentzvelocity += imuacceleration.z time //cm/s great someone confirm correct thanks joe,sensors accelerometer lidar,sensors accelerometer lidar
1340,verifying motor selection calculations,trying select brushed dc motor project tried following advice sizing electric motors mentioned question details missing unsure followed procedure application need nm number motors wd wheel diameter cm wp estimated weight platform kg minc maximum incline load degrees vmax maximum velocity load km/hr fpush maximum pushing force kg ur coefficient rolling friction calculations step determine total applied force worst case ftotal wp ur*cos minc sin minc fpush kilogram step calculate power requirement vradps maximum velocity load radians/second radian second pmotor required power motor ftotal vradps wd/2 /nm kilogram meter radian second step calculate torque speed requirement tmotor required torque motor pmotor/vradps centimeter gram inch ounce rpmmin required revolutions minute motor vradps rev minute calculations correct final tmotor rpmmin values seem right calculation pmotor match used link conversion radians second therefore result proper units python script reproducing calculations math import http //pint.readthedocs.org/en/0.6/tutorial.html pint import unitregistry ureg unitregistry def velocity_to_rpm v r kph kilometer/hour r r.to kilometer r*2 rpm kph *minute rev return rpm def velocity_to_radps v r return velocity_to_rpm v r .to radian/second units km kilometer ureg.kilometer meter ureg.meter newton ureg.newton cm centimeter ureg.centimeter hr hour ureg.hour mm millimeter ureg.millimeter rev revolution ureg.revolution minute ureg.minute sec second ureg.second kg kilogram ureg.kilogram gm gram ureg.gram deg degree ureg.degree rad radian ureg.radian oz ureg.oz inch ureg.inch conversions km_per_mm *mm hour_per_minute *minute minute_per_second minute_per_hour gm_per_kg cm_per_km constraints target_km_per_hour average walking speed estimated_platform_weight maximum_incline_degrees maximum_incline_radians maximum_incline_degrees pi*rad maximum_pushing_force estimated_platform_weight/4 maximum_velocity_at_worst_case rolling_friction rubber pavement target_km_per_hour number_of_powered_motors variables wheel_diameter_mm wheel_radius_mm wheel_diameter_mm/2 wheel_radius_km wheel_radius_mm km_per_mm rev_per_minute_at_6v_unloaded rev_per_minute_at_6v_loaded rev_per_minute_at_6v_unloaded/2 mm_per_rev wheel_diameter_mm pi target_rpm velocity_to_rpm target_km_per_hour wheel_radius_mm target_radps target_km_per_hour wheel_radius_mm calculate total applied force worst case total_applied_force_worst_case estimated_platform_weight rolling_friction*cos maximum_incline_radians sin maximum_incline_radians maximum_pushing_force print total_applied_force_worst_case calculate power requirement vel_in_radps velocity_to_radps velocity_under_max_load wheel_radius_mm print vel_in_radps required_power total_applied_force_worst_case velocity_to_radps velocity_under_max_load wheel_radius_mm wheel_radius_mm.to meter required_power_per_motor required_power/number_of_powered_motors print required_power_per_motor calculate torque speed requirement required_angular_velocity hour_per_minute minute_per_second rad rad/sec required_rpm required_angular_velocity rev/rad sec/minute required_torque_per_motor required_power_per_motor/required_angular_velocity .to gm*cm print required_torque_per_motor required_torque_per_motor.to oz*inch print required_rpm,mobile-robot motor design torque force,force mobile torque robot design motor
1341,rgb-d slam compute information matrix,im working rgb-d slam kinect v1 camera front-end slam estimates pose ransac initial guess icp pose estimation transform pointcloud pointcloud-scene represents map smooth map im trying implement graph optimizing algorithm g2o graph representation frontend started integrate im trying build .g2o file following fromat vertex_se3 x z qx qy qz qw x z translation qx qy qz qw ist rotation respect initial coordinate system edge_se3 observed_vertex_id observing_vertex_id x z qx qy qz qw inf_11 inf_12 .. inf_16 inf_22 .. inf_66 translation rotation edge pose estimate compute ransac icp visual odometry im getting stuck information matrix read chapter information filter thrun probabolistic robotics several threads forum relationship point cloud maps graph maps information filter kalman filter approach second link got covariance update p_ i-kh p expanded definition k p_ p khp p_ p ph^t hph^t+r -1 hp apply matrix inversion lemma p_ p ph^t hph^t+r -1 hp p_ p^ -1 h^tr^ -1 h -1 implies p_ -1 p^ -1 h^tr^ -1 h term p^ -1 called prior information h^tr^ -1 h sensor information inverse sensor variance gives p^ -1 _+ posterior information please point data need compute information matrix,slam kinect matlab,kinect slam matlab
1342,jacobian transpose calculate orientation error,confused compute error orientation documents read explain error position difference points let assume orientation effector axis represent rotation quaternions questions describing orientation quaternions good approach compute error orientation quaternions use jacobian transpose,inverse-kinematics jacobian,inverse kinematics jacobian
1343,low power motors -- motor power jumper issue,working first robotics project using initio kit powered raspberry pi setup simple testing last couple days sensors work expected motor tests failing input commands move robot hear dc motors running getting enough power anything instructions says issue encountered power selection jumper set provides diagram comparison wiring motors setup sure means power selection jumper set appreciate someone explain point see anything wrong setup,mobile-robot motor raspberry-pi first-robotics,raspberry mobile robotics robot motor pi
1344,slam noob questions regarding ekf-slam,learning slam attempting implement ekf-slam python using great article guide progress made confused certain stages inverse sensor model compute range bearing opposed cartesian coordinates approach used format robot heading use running offset origin angle wrapping turning right yields positive degrees left negative ask assume sensor model expects certain format computing jacobians adding new landmarks page jz absolute rotation robot -540 degrees example bearing landmark detected best approach managing huge covariance matrix thinking good way adding new landmarks current implementation http //pastebin.com/r7wumgy7 help appreciated thanks,slam ekf python,python ekf slam
1345,propeller size motor,like build quad uses bigger propellers question kind motor use low high kv motors support kind propellers burn found say cw ccw motors mean set way spin new thank answer okey given able hold prob description get esc size prob used max get esc cause max continous,quadcopter brushless-motor,quadcopter brushless motor
1346,ekf-slam best manage covariance matrix,learning slam ekf-slam began implementation python trouble managing updating p comes adding new landmarks separate matrices stitch needed implementation seen http //pastebin.com/r7wumgy7 best manage large covariance matrix using matrix algorithm suggests thanks advance,slam ekf python,python ekf slam
1347,ekf-slam computing jacobians landmark updates,working informative guide ekf-slam difficulty understanding jacobians required update page jxr jz taking input taking current rotation robot addition odometry update ie rotation stored state vector taking angle inverse sensor model angle thanks,slam ekf python,python ekf slam
1348,find theta1 theta5 d-h parameter,joint θi di ai-1 αi-1 θ1-90 -d1 θ2 -90 θ3 a2 θ4-90 a3 θ5 confused right way look theta1-theta5 offset limit angles calculation x0 x5 angle rotation atan2 x,robotic-arm dh-parameters,parameters arm dh robotic
1349,reduced form block diagram,reduced form block diagram see solution way,control,control
1350,work kinematic solution robot arm,draw robotic arm solidworks sure find dof kinematic anyone help understand work kinematic solution robot arm,robotic-arm kinematics automatic matlab,automatic matlab kinematics arm robotic
1351,possible maintain total thrust controlling yaw quadcopter,working control quadcopter understand come controlling yaw increase overall thrust understanding control carried pids axis roll pitch yaw output last pid sent pwm signal correct rotor speeds propellers mixing looks something t_ frontleft thrust roll_ pid pitch_ pid yaw_ pid t_ frontright thrust roll_ pid pitch_ pid yaw_ pid t_ rearleft thrust roll_ pid pitch_ pid yaw_ pid t_ rearright thrust roll_ pid pitch_ pid yaw_ pid quadcopter controls seem work way gather basic idea control yaw add yaw_ pid clockwise motors substract amount yaw_ pid counterclockwise motors make quadcopter turns clockwise translates increase speed clockwise motors decrease speed counterclockwise motors amount know motor produces thrust torque according equations c_t\rho d^4 q c_q\rho n^2 d^5 thrust q torque c_t c_q system dependent constants ρ air density n rotor speed rotor diameter means thrust produced motor proportional propeller speed squared n speed propellers correction thrust clockwise propellers correction proportional n+\delta ^2 thrust produced counterclockwise propellers n-\delta ^2 total thrust propellers proportional n+\delta ^2 n-\delta ^2 see increase overall thrust produced propellers take propellers account course real life control yaw quadcopter go missing stands roll pitch control quadcopter turns roll pitch axis total thrust longer vertical axis imagine projection vertical axis increasing work yaw,control quadcopter torque,control quadcopter torque
1352,important events robocup advancement robotics general,events robocup advantageous development robotic advancement entertainment advances robotics allowing entry level participation helps maintain interest darpa grand better vehicle advancement pun intended,design,design
1353,simulate imu gyro accelerometer data,robot path space i.e vector x locations need generate artificial imu data simulate go model equations generate values given time frame positions come imusim know model generate using matlab something similar,imu accelerometer gyroscope simulation,imu gyroscope accelerometer simulation
1354,glasses eye sensors,someone tell wearable devices glasses sensors detect eye movement particular need device google glass sensor camera facing eye capture movement interfaced mobile device micro-cameras market connected usb mobile device,sensors motion,motion sensors
1355,joint positions robot,likte find joints positions using joint angles link lengths etc define position joint using dh parameters,robotic-arm joint dh-parameters,joint parameters arm dh robotic
1356,detect changing obstacles,idea robot acting overwatch detect obstacles area static send data obstacles positions robot navigate obstacles goal initial thought robot elevated position centre area sweep using ultrasonic sensor way keep track obstacles set polar coordinates distance angle realised method account collinear obstacles question best way detect bunch non-static obstacles area side note seen system similar robot detecting obstacles case crowd people robot pathfinding obstacles people unsure system detecting obstacles,sensors computer-vision sonar ultrasonic-sensors,sonar sensors computer ultrasonic vision
1357,help dimension controller following tranfer function,generic problem create controller following system \ddot x constant real value system seen equivalent mass-spring-damper system damper spring removed x x dimension force moving mass case need drive force using x contrary transforming according laplace get \frac \ddot x \frac s^ x g \frac x \frac s^ considering implemented possible example simulink please put output given scope showing resulting answer system questions possible develop system know degree numerator degree denominator system possible possible create pid pd controller stabilize output system regards,control pid matlab,control pid matlab
1358,square hinge sides,want make component square plate behave motorized hinge sides open pivoting sides want pivot degrees thought designing hinges detached pivots wonder simpler way,design motion,motion design
1359,using bitmap maze image navigate maze,working robot able navigate maze avoid obstacles identify objects monochromatic bitmap maze supposed used robot navigation year electrical engineering student need help use bmp image making robot using arduino mega microcontroller get started need elaborate anything say link http //ceme.nust.edu.pk/nerc/files/theme_ind_2015.pdf,arduino control localization,control localization arduino
1360,calculate euler angles gyroscope output,using tri-axis accelerometer tri-axis gyroscope measure linear acceleration body need get orientation body euler form order rotate accelerometer readings body frame earth frame please help stuck,accelerometer gyroscope frame,frame gyroscope
1361,make robot move using arduino timing predefined locations,make robot move using arduino timing predefined locations use sensors want make car move different loactions board..want know possible options using sensors encoders cartesian robot work predefined locations..does require sensor,arduino navigation,navigation arduino
1362,using range-only sensors mapping slam,slam trying implement algorithm fuses odometry data mapping based wifi signal strengths robot various readings different resources came http //www.qucosa.de/fileadmin/data/qucosa/documents/8644/dissertation_niko_suenderhauf.pdf explained sensors used mapping categorized range-bearing sensors stereo cameras rgb-d cameras provide distance angle range bearing easy locate x coordinates landmarks -- develop map case using wifi signal strengths received signal strengths etc case meaning establish robot pose x theta signal coming developing map question similar algorithm use constructing map explored area using number ultrasound sensors using imu/gps using gps develop map state space getting gps signals wifi signals/ radio signals estimating transmitter/ap location map walls room navigating map lot slam literature talks motion model measurement model former gives pose robot odometry imu latter development map understanding yes say walls room using lidar scanner gives location wall using number beams give bearing average distance beams b single laser scanner use camera distance heading robot calculate location wall map https //shaneormonde.wordpress.com/2014/01/25/webcam-laser-rangefinder/ more-403 wireless signal strengths distance distance transmitter getting rss distance wall coming estimating location walls term correspondences mean slam literature,localization slam artificial-intelligence mapping wireless,localization intelligence mapping artificial wireless slam
1363,micro quadcopter pid problem,designed mini quadcopter main body main body pcb enter image description weighs ~20 grams battery using mpu6050 dmp using i2cdevlib using raw radians pitch roll yaw measures read mpu6050 dmp motors attached body using electrical tape black thing motors motors diameter driven n-channel mosfet mode control right hc-05 module code used control loop axes pitch roll values quadcopter symmetrical problem pid tuning next impossible best got ~2 second flight video slow-motion first using code control loop effective arduino pid library output pid loops mapped -90 axes seen code mypid.setoutputlimits -90 //y angle mypid1.setoutputlimits -90 // x angle mypid2.setoutputlimits -90 // yaw angle mypid.setmode automatic mypid1.setmode automatic mypid2.setmode automatic full code think problem code http //pastebin.com/cng6vxr8,arduino quadcopter pid,quadcopter pid arduino
1364,shallow underwater wireless sensor network,make shallow max underwater wireless sensor network data payload know vlf band ~3-30khz best solutions cause time-to-market make hardware software ground someone share own-self experience filed band 100-900mhz enough send device underwater dozen cm water surface ic ultrasonic communication exist ideas,sensors wireless communication,wireless communication sensors
1365,question dynamic window approach,mobile robot plan use dynamic window approach collision avoidance read paper inequality derive tell thanks,navigation motion-planning,motion planning navigation
1366,ekf over-correcting,implementing extended kalman filter following thrun probabilistic robotics implementation believe correct step wrong state appears corrected much screen capture showing issue https //youtu.be/gkspfk27yvg note bottom status reading pose coordinates correct step def correct reobservedlandmarks landmark reobservedlandmarks storedlandmark self.getlandmark landmark.id z point landmark.dist math.radians landmark.angle h q self.sensormodel storedlandmark inv np.array z.x-h.x wrap_radians z.y-h.y jh np.zeros self.landmarkcount*2 jh -1.0/q jh self.x storedlandmark.x math.sqrt q jh self.x storedlandmark.y math.sqrt q jh storedlandmark.y self.x q jh storedlandmark.x self.x q jh landmark.id*2 -jh jh landmark.id*2 -jh jh landmark.id*2 -jh jh landmark.id*2 -jh r np.array landmark.dist*self.sensordisterror self.sensorangleerror z matmult jh self.p jh.t r k matmult self.p jh.t np.linalg.inv z self.x self.x matmult k inv self.p matmult np.identity self.x.shape matmult k jh self.p h range bearing state landmark q landmark.x self.x ^2 landmark.y self.x ^2 sensor covariance errors meter pi/180 bearing assumption correction relative size robot pose error small example moved less kalman gain applied yes factors result thanks,slam ekf python,python ekf slam
1367,mapping algorithm noise,simulated robot moving discretized grid world various simplification time-restriction reasons noise problem robot creates initial map world algorithms slam occupancy grid mapping based uncertainty case uncertainty wondering simple algorithm mapping environment noiseless position,mapping,mapping
1368,calculating thrust generated electric engines,wanted calculate amount generated engines using blade cfx model http //www.bladehelis.com/products/default.aspx prodid=blh3450 quickspecs research found way calculate thrust using pi d^2 rho p^2 /2 p power multiplier calculated using p= prop constant rpm/100 ^power factor unable find values prop constant power factor way get information alternative way calculate thrust generated,power,power
1369,detect polyethylene,high school tell newbie lack knowledge want achieve thing differentiate poly bags polyethylene stuffs thing detect polyethylene built robot therefore method accessible knowledge suggestion external links provided topic welcomed,mobile-robot sensors,mobile sensors robot
1370,pid controller java operating,looking implementation pid controller java found https //code.google.com/p/frcteam443/source/browse/trunk/2010_post_season/geisebot/src/freelancelibj/pidcontroller.java r=17 understand using way package lol.feedback public class dsfdsf public static void main string args throws interruptedexception final pidcontroller pidcontroller new pidcontroller pidcontroller.setinputrange // input limits pidcontroller.setoutputrange // output limits pidcontroller.setsetpoint // target value pid minimize error input value pidcontroller.enable double input double output true input output pidcontroller.getinput input output pidcontroller.performpid system.out.println input input output output error pidcontroller.geterror thread.sleep stabilizes behave pid ... output get input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 input output error input output error -10.0 someone help tell missing thank,control pid,control pid
1371,quadcopter frame design,quadcopter frames seem follow x design example curious know seems efficient way use space frame design work quadcopters instance design work,quadcopter design frame,quadcopter frame design
1372,easiest way submit longer non standard character string mavlink,want submit gains pid regulator mavlink used mavlink several functions used purpose think string json formatted sending serial port straight way submit data see mavlink better transfer json string mavlink submit single value function choice noticed sensors mavlink function defined pid gains found ap_hal :uartdriver uartx == uart_c hal.uartc hal.uarta pout- printf t\ pid_cnf\ p_rkp\ .2f p_rki\ .2f p_rkd\ .4f p_rimax\ .2f r_rkp\ .2f r_rki\ .2f r_rkd\ .4f r_rimax\ .2f y_rkp\ .2f y_rki\ .2f y_rkd\ .4f y_rimax\ .2f p_skp\ .2f r_skp\ .2f y_skp\ .4f \n static_cast double pit_rkp static_cast double pit_rki static_cast double pit_rkd static_cast double pit_rimax static_cast double rol_rkp static_cast double rol_rki static_cast double rol_rkd static_cast double rol_rimax static_cast double yaw_rkp static_cast double yaw_rki static_cast double yaw_rkd static_cast double yaw_rimax static_cast double pit_skp static_cast double rol_skp static_cast double yaw_skp,c++ mavlink,c mavlink
1373,euler’s method solving ode control systems,dominant approach solving ode control systems books ode45 majority books use matlab acquainted ode45 works started reading euler method book numerical methods engineers step size small results satisfactory simulation set step size small value used ode45 regulation tracking problems faced difficulties using ode45 tracking problem step size fixed experiment used euler method step size sec results amazing friendly comparison ode45 snapshot result code clear clc dt initial values system angular displacement da angular velocity pid tuning kp kd ki error system parameters mass kg 0.0023e-6 viscous friction coefficient l arm length inertia seen rotation axis kg.m^2 g acceleration due gravity m/s^2 generate desired trajectory dt /2 angdes ang angle des desired numel get first derviative desired angle using euler method dangdes angdesprev dt angdesprev angdes torque input u kp* angdes kd* dangdes da ki*error accumulated error error error angdes store erro e angdes dda u d*da m*g*l*sin get function dervative da da dda*dt da*dt store data furhter investigation da da dt end plot angdes h legend \theta_ \theta set h question preferred many control books assuming step size small,control,control
1374,decide lipo lifepo robot battery,choosing battery robot use lipo lifepo lifepo pros deliver higher sustained amps many built drop-in replacements lead-acid batteries use charger cons expensive lower energy density lipo watt*hour/kg lipo batteries pros cheaper energy density lifepo watt*hour/kg cons complicated unsafe charge see videos lipos catching fire deliver high amps anything missing see lifepo batteries used lot larger platforms due higher continuous amp rating see flooded tons cheap high-capacity chinese lipos none documentation means junk use lifepo vs lipo,battery,battery
1375,simple stereo vision,working project implementing vision system student first time something challenge using controller netduino+2 .net microframework camera cmucam5 pixy working communicating robot fanuc m430ia using modbus aquiring data camera using i2c next challenge using cameras implement stereo vision shure achieve reading lot understand process works think case specific cameras detect center object give coordinates good think reasonable approach sorry english let know explicit edit question see enough information,microcontroller robotic-arm cameras stereo-vision,stereo microcontroller cameras robotic arm vision
1376,main factors/features explain high price industrial computer vision hardware,student working computer science project require computer vision stereoscopy close depth detection looking great camera job found several interesting options 1- custom built set cheap cameras i.e webcam 2- old classic economic proven kinect 3- specialized stereo sensors found couple months sensor https //duo3d.com/product/duo-mini-lv1 tought interesting small stereoscopic brand new encouraging fresh usa company take additional apis come understand buy kinect cheap cameras least 4-5 times less expensive great better specifications applies http someone please explain need device needed,sensors computer-vision kinect,kinect sensors computer vision
1377,simple way perception,wonder simple computed microcontroller level option suitable object perception depth position pose coordinate estimation flying robots lidar stereovision omnidirectional camera laser scanner machine vision based techniques,mobile-robot sensors cameras stereo-vision lidar,stereo mobile cameras robot lidar sensors vision
1378,irobot create c connection,department purchased irobot create want recreate code csharp create driving tether program use base intro computer science course code using talk irobot http //www.robotappstore.com/knowledge-base/how-to-program-roomba-for-net-developers/23.html sure irobot getting commands serial port making connection using visual studio programming environment recommendation input appreciated thank,irobot-create roomba,create roomba irobot
1379,encoders help,weeks old arduino projects..i using timing control rover ... wanted shift using encoders..am facing problems..am using arduino uno amp motor shield..this code trying use..am using li-po battery http //www.myduino.com/index.php route=product/product product_id=170 search=rover+5 link rover http //www.myduino.com/index.php route=product/product product_id=131 search=motor+shield link motoshield question pins coming encoders side ... connected red black gnd white yellow first encoder pin white yellow second encoder pin ... correct use code motorshield green red light starts stalling motor..why happen anyone suggest link simple encoder code make motors move straight using feedback.. thanks // interupt pin // interupt pin volatile unsigned positionl //vehicle position count left encoder volatile unsigned //vehicle position count right encoder int motorla int dirla int motorra int dirra void setup pinmode motorla output pinmode dirla output pinmode motorra output pinmode dirra output serial.begin void loop movefwd delay moverev delay void encoder1 positionr++ void encoder2 positionl++ void movefwd unsigned int x positionl=0 positionr=0 attachinterrupt encoder1 change attachinterrupt encoder2 change low // left digitalwrite dirra high //right positionl x || positionr x positionl positionr analogwrite motorla analogwrite motorra positionr positionl analogwrite motorra analogwrite motorla // sets motor speed value analogwrite motorra analogwrite motorla // sets motor speed value serial.print positionl // prints current value positionl serial monitor computer serial.print \t // creates tab monitor serial.print positionr serial.println // creates new line print // stop motors analogwrite motorla analogwrite motorra // disables encoders interrupt detachinterrupt detachinterrupt void moverev unsigned int x positionl=0 positionr=0 attachinterrupt encoder1 change attachinterrupt encoder2 change digitalwrite dirla high // left digitalwrite dirra low //right forward positionl x || positionr x positionl positionr analogwrite motorla analogwrite motorra positionr positionl analogwrite motorra analogwrite motorla // sets motor speed value analogwrite motorla // sets motor speed value analogwrite motorra serial.print positionl // prints current value positionl serial monitor computer serial.print \t // creates tab monitor serial.print positionr serial.println // creates new line print // stop motors analogwrite motorla analogwrite motorra // disables encoders interrupt detachinterrupt detachinterrupt,arduino sensors,sensors arduino
1380,get projection matrix odometry/tf data,like compare results visual odometry groundtruth provided kitti dataset frame groundthruth projection matrix example 9.043683e-12 2.326809e-11 1.110223e-16 2.392370e-10 2.220446e-16 2.326810e-11 2.392370e-10 9.999999e-01 -2.220446e-16 instructions provided readme row represents i'th pose left camera coordinate system i.e. z pointing forwards transformation matrix matrices stored row aligned order first entries correspond first row take point i'th coordinate system project =0th coordinate system hence translational part vector column corresponds pose left camera coordinate system i'th frame respect =0th frame know produce kind data frame case tf transformation init_camera fix left camera moving translation vector quaternion rotation odometry data pose twist camera calibration parameters data compare groundtruth need find projection matrix data know someone help thank,mobile-robot odometry stereo-vision,mobile odometry stereo robot vision
1381,tune pids quadrotor,trying implement pids stabilizing quadrotor position tracking inputs x_ y_ z_ \psi_ position tracking small angle assumption assumed assumption allows acquiring \theta_ \phi_ results x-axis position driving crazy alot attempts tuning pids felt something wrong going normal behavior pid controller noticed \psi reaches platform starts oscillating second figure solving odes computing derivatives velocities use euler methods simulation matlab,pid quadcopter,quadcopter pid
1382,depth view hypercatadioptric camera,trying determine depth view hypercatadioptric camera camera lens system hyperbolic mirror based following illustration seems pretty clear image point p looking virtual point p_u given parameters optical system troubles finding right equations paper distribution virtual point seems connected p_u defined goal replicate diagrams paper e.g mirror blue gives virtual image points scene red like calculate depth view area image blur threshold zhang s. zenou optical approach hypercatadioptric system depth field international conference information sciences signal processing applications,computer-vision cameras,computer cameras vision
1383,questions regarding scanning camera choice,days shared concerns price computer vision hardware exact forum see main factors/features explain high price industrial computer vision hardware think new related post needed go details consider regarding overall scanner want build restricted space overall scanner larger feet cube small objects objects scanning larger foot cube close range camera positioned foot object indoor dedicated light source attached camera fixed dark box stereo cameras/sensors looking ordered price logitech webcams model particular cheap harder setup calibrate need create api built want achieve intel realsense http //click.intel.com/intel-realsense-developer-kit.html high resolution depth sensing workable minimum range unspecified fov built hands fingers tracking kinect https //www.microsoft.com/en-us/kinectforwindows/ low resolution depth sensing x unworkable minimum range excellent horizontal vertical built body tracking structure sensor http //structure.io/developers normal resolution high fps capability x fps unspecified minimum range good fov horizontal vertical built scanning tablets mobile devices zed camera https //www.stereolabs.com/zed/specs/ extreme resolution high fps capability fps depth sensing fps unviable minimum range outstanding fov built human vision simulation duo mini lx https //duo3d.com/product/duo-minilx-lv1 normal resolution high fps capability x fps workable minimum range see http //stackoverflow.com/questions/27581142/duo-3d-mini-sensor-by-code-laboratories phenomenal fov low distortion built general engineering bumblebee2 http much expensive worth mentioning note prices date change overtime see goods pros none seems perfect task fact zed seems best specifications overall lacks minimum range large baselined camera designed range applications duo mini lx seems best situation zed generates accurate depth maps seems lack precision lower resolution good proximity detection scanning opinion try build experimental stereo camera simple webcams know start think enough time deal problems face stuck great dilemma questions good resources internet give good introduction scanning concepts using c++ opencv worked lot api provided chosen camera applies static camera capturing moving object moving camera capturing static object use something conjunction stereo camera lasers profitable use cameras/sensors resolution fps global shuttering important scanning camera get something mention range maximum possible main criteria camera able generate accurate depth map range points thanks help,sensors computer-vision kinect,kinect sensors computer vision
1384,select parameters sliding mode control robotic arm,working sliding mode control smc dof manipulator know select discontinuity gain matrix k surface constant diagonal gain matrix components,control robotic-arm industrial-robot,control industrial arm robot robotic
1385,locating omni-directional robot,omni-directional robot x-drive mecanum drive need track position put encoders wheels terms sensors external beacons link issue needed keep track x-y position including strafing heading anyone resources help,localization,localization
1386,control brushless motor+esc beaglebone,find real straightforward tutorial lot original beaglebone esc brushless motor please help,brushless-motor beagle-bone,beagle brushless bone motor
1387,approach object,question basic/conceptual level looking way approach object map detected earlier robot localized map using slam object position point recieve algorithm object face picture wall smart way approach point look,mobile-robot mapping,mobile robot mapping
1388,technology used no-resistance robot arms,saw high end robot arm move bend form wanted resistance robot arm weight know class robot arm design called get information design applications,control robotic-arm joint,control joint arm robotic
1389,communicate raspi servo,want use raspberry pi pan camera mounted servo ~100 feet good servos transceivers clarify physical connection raspi servo need additional raspi servo end,motor raspberry-pi wireless,wireless pi raspberry motor
1390,gmis,gmis general machine intelligence system new article posted codeproject.com looks interesting think breakthrough field robotics,mobile-robot robotic-arm,mobile robot arm robotic
1391,jacobian point robotic arm,programming robotic simulation endeffector aproaches target way target obstacle redirect endeffector hit target want whole arm want push arm working redirect arm calculation jacobian seems faulty setup need robotic arm let x_0 closest point arm obstacle j_0 corresponding jacobian given following term \dot x_0 j_0 \dot \theta \theta joint angles calculate jacobian endeffector know calculate point ob arm anybody idea calculate corresponding jacobian cheers,robotic-arm jacobian,jacobian arm robotic
1392,make hc-sr04 receive one,ultrasonic sensor hc-sr04 want use transmitter receiver want let send ultra sonic waves receive waves tried send trigger ultrasonic connect different pins pic work something project using hc-sr04,microcontroller ultrasonic-sensors,sensors microcontroller ultrasonic
1393,building quadcopter using stm32f3 discovery board,calculate pid values stabilise quadcopter using board sensors gyro magnetometer,sensors,sensors
1394,programable drone robotic arm hand,wondering possible buy build programmable drone robotic arm hand knife want program drone harvest crops -object recognition live video stream -identify grab objects arm make cut necessary -transport produce collection site know take much knowlege many fields forsight limitations energy power estimates cost hardware,robotic-arm design quadcopter dynamic-programming,quadcopter programming dynamic design robotic arm
1395,design construction universal robotic arm,working master thesis design construction universal robotic arm goal work design dof robotic arm something picture need able lift weight move action radius rotation speed conclusion work buy robotic arm this..it lift much turn speed weighs much basic construction done simulation picked bad master thesis know know second month like ask someone proceed know first step pick servos/actuators/gearboxes realistic weight whole arm lift kg weight strong motors pick gearboxes anyone able help emails,robotic-arm servos actuator arm,actuator servos arm robotic
1396,depth image sensor integration robot,know lots consumer depth image sensors kinect primesense structure.io leap motion ... looking something suitable integration robot something case proper mount compact available least next years robot going production something similar sensors used drone https v=gj-5rnduz3i,sensors kinect,kinect sensors
1397,connecting usb xbox controller national instruments crio,robotics spec national instruments crio like connect usb wireless xbox controller order control distance minimal extra hardware using traditional wifi radio method point able find a. sidecar crio allows act usb host b. method use ni specific hardware connect someone knowledgeable subjects industrial system robot control provide assistance appreciated thanks,control industrial-robot wireless usb first-robotics,control industrial robotics robot wireless first
1398,got difficulty reading specification,guys making home automation system simple infrared remote ccontrol tv remote problem wan buy relays switch ac using arduino board understand buy want buy relay module wan buy relay,arduino,arduino
1399,possible use ros rpi controller multiwii similar,quadcopter using multiwii arduino mega controller curious way connect ros capable rpi add quad,arduino ros quadcopter,quadcopter ros arduino
1400,building industrial-like robotic arm,like build articulated robotic arm scara lift awesome payload includes weight arm+gripper moves m/s dreaming goal make similar human arm want control joint able rotate arm ^^ know uses servos available overpriced dynamixel ones.. payload excluded common linear actuators less common ones pneumatic actuators latency read arms baxter ones uses elastic series actuators guess go way lot details works getting photos see nothing lot questions thing understand uses motors spring use brushed brushless motors dc motors steppers read steppers good handle collisions difficulties used limits spring mounted motor sum collecting experience diagrams intel documents topic ps budget exceed +/- arm,motor robotic-arm stepper-motor servomotor actuator,stepper servomotor motor robotic actuator arm
1401,read ultrasonic hc-sr04,"want run hc-sr04 pic16f877a send value mesured ultrasonic serial port code using pic c compiler use rs232 baud=9600 parity=n xmit=pin_c6 rcv=pin_c7 bits=8 define e1 pin_b6 define t1 pin_b7 define e2 pin_b4 define t2 pin_b5 int int distanse int int void main int u1 u2 u1=distanse e1 t1 u2=distanse e2 t2 printf u1 printf u2 delay_ms int distanse int e int counter=0 output_bit t,1 delay_us output_bit t,0 a=input a==0 a=input e a==1 counter=counter+1 a=input return counter/3.333333 computer received random values problem",microcontroller programming-languages ultrasonic-sensors,languages ultrasonic sensors microcontroller programming
1402,kinematics cartesian robot cnc mill,implementing denavit-hartenberg forward transform 3-axes cnc mill know kinematic machine trivial need dh need make appliable robots implementation math verified tool transformation give results expect assume 3-axes cartesian robot orthogonal prismatic joints =cnc mill resulting transformation matrix give input parameters d1-d3 translation vector somehow resulting orientation matrix nice values etc odd ones etc assumption wrong,forward-kinematics cnc dh-parameters,parameters kinematics cnc dh
1403,robotc type motors,trying create function allows start motor running problem know type use motorname argument using vex motor function void runmotor motorname int speed int time startmotor motorname speed wait time know type put motorname argument type,robotc vex,robotc vex
1404,accelerate stepper using arduino starting pre-defined speed,read documentation airspayce.com seems possible accelerate stepper starting speed greater acceleration starts speed=0 tried several variations code ... include accelstepper.h int onoffpin stepper accelstepper :driver void setup stepper.setmaxspeed stepper.setspeed stepper.setacceleration void loop //turn motor digitalwrite high // go forwards onoffpin high stepper.move stepper.runtoposition // stepper start speed starts speed // go backwards stepper.move -1300 stepper.runtoposition //turn motor digitalwrite onoffpin low delay tried set speed library method void :computenewspeed good c++ get work anybody ideas update tried write custom code method void :computenewspeed idea set speed acceleration/deceleration speed intended value thought big deal see cpp skills seems good understand library tried void :computenewspeed long distanceto distancetogo // +ve clockwise curent location _speed _speed _acceleration // equation //now goes _speed _speed setspeed //i modification comment results slow stepper movement..,arduino control stepper-motor c++,control c stepper motor arduino
1405,measuring angular displacement using ti-sensortag,looked find answer hope simple question working ti-sensortag want able measure rotation unit z-axis want attach tag clock pendulum lie clock table tag clock face point measure angular displacement pendulum swings hoping mental image translated understanding solve displacement multiplying gyroscope readings sampling period sure compensate drift questions approach sound answer drift use changing x accelerations need incorporate magnetometer readings thanks,sensors kinematics gyroscope,sensors kinematics gyroscope
1406,irobot create angle measurement,working trying get angle create trying use angle heading use control robot explain procedure highlight problem create tethered computer reset create sending op code using realterm output bl-start str730 bootloader id x47175347 bootloader info rev bootloader rev x0001 2007-05-14-1715-l roomba irobot str730 2012-03-22-1549-l battery-current-zero firmware version clue look -- let know see mark robot know true angle change send following codes code starts robot spinning circle request sensor data sensors group packet id output create seen realterm makes sense wait robot rotated known degrees send request angle difference output oi specs say angle measurement degrees turned last time angle sent converting decimal expected wrong irobot create angle measurement atrocious scaling factor unaware better ways get angle measurement,irobot-create roomba,create roomba irobot
1407,using accelorometer gyroscope get velocity spin flightpath ball projectile motion,working project make smartball detect velocity km/h spin degrees second flightpath trajectory ball using intel edison block lsm9ds0 3-axis accelerometer 3-axis gyroscope 3-axis magnetometer battery block reading values block rtimulib library imu chips working integrating acceleration data accelorometer get velocity get position know method accurate integration error cumulate fast rely calculations done short time seconds re-calculate beginning kick error cumulate need acceptable accuracy high discovered dealing projectile motion ball kicking considering searching projectile motion equations found know initial velocity angle projection theta able get requirements problem know get tried different approaches getting horizontal distance getting height get resultant using pythagoras get assuming right angle small time beggining projection get height gyroscope outputs roll pitch yaw angles related sensor orientation using assuming sensor fixed orientation projection angle.now want approach/idea get velocity flightpath projectile using accelorometer gyroscope data hope made clear help get requirements appreciated thanks,gyroscope,gyroscope
1408,keeping motors common circuits,beginner robotics want create line follower+ obstacle avoider+ remote controlled robot using drive differential algorithm want keep common motors circuits got circuits ready want switch circuits please tell solution,motor wireless line-following circuit,wireless following line circuit motor
1409,determining robot distance certain point robot position changing,wondering determine robot distance fixed point robot changing positions keep encoders wheels get data gyroscope accelerometer,localization,localization
1410,dynamixel inverse rotation direction,wondering feature flip rotation direction dynamixel using mx-106 example give +1.57 motor interprets -1.57. way using ros driver package seem claim feature question user reported able source code failed replicate wanted ask capability device know limitation comes dynamixel device ros thank update usecase mine multiple robots direction dynamixel attached different robot flip motor direction driver level keep using controller software,servomotor dynamixel,servomotor dynamixel
1411,understanding various attitude estimation methods,building quadcopter using arduino uno accelerometer gyro adding separate axis magnetometer heading implemented code reads data coming sensors prints checked bias averaging measurements code calculates pitch accel pitch gyro pitchaccel atan2 accelresult accelresult biasaccelz *180.0 pi pitchgyro += gyroresult biasgyrox *dt using complementary filter fuse readings pitchcomp pitchaccel*0.02 stuck proceed using procedure roll readings pitch roll respective complementary filter outputs read lot articles dcm algorithm relates angles body reference frame earth reference frame next step taking pitch roll readings body reference frame transforming earth reference frame repeat entire procedure yaw using magnetometer yes go transformations understand math hard time understanding actual implementation dcm code-wise help appreciated,arduino quadcopter accelerometer gyroscope,quadcopter gyroscope accelerometer arduino
1412,determining transfer function ptu visual tracking,ptu system whose transfer function need determine unit receives velocity position move position given velocity kind test perform determining transfer function ... know matlab provides method problem bit confused kind test perform use matlab determine transfer function unit used flir ptu d48e -- system input system pixel displacement object center frame controller using converts pixel distances angular distances multiplied gain k_p works fine seem prove works mean know servo motors modeled controller fed angular displacement position added give angular position go angular displacement used speed move huge displacement gives huge velocity updating elements different frequency able step velocity overshoot gets minimized problem prove transfer function found fits system tests using ident function matlab unsure bit unsure ptu controller moves simple math makes sense convert,control,control
1413,difference sam slam,difference smoothing mapping simultaneous localization mapping slam general approaches seem related someone describe differences,slam,slam
1414,estimating angular speed position control purpose,new robotics designing pid control angular velocity azimuth elevation couple faulhaber motors input pid control actual angular velocity observed derived position motor time pid sample period aprox ms whereas input data rate joystick samples/s corresponding sample period ms. joystick input gets transformed desired angle speed pid control filtering position data using normal linear kalman filter angular velocity linear formula hence switched extended kalman filtering questions following latter approach makes use ekf correct parameters check order set update rate pid loop thx advance,pid ekf,ekf pid
1415,easy way exert desired load motor shaft,trying exert desired n.m bldc motor shaft whose length diameter go machine shop get small adjustable cylindrical coupling made shaft need desired torque speed rpm rad/s tried calculations according formula torque speed mass radius ^2 solve equation n.m speed rad/sec radius get kg mass huge mass motor please suggest convenient way load motor thank,motor brushless-motor,brushless motor
1416,possible a/v feed serial communication rf transceiver time arduino,possible transmit live audio/video feed time receive commands uart using rf transceiver connected board want control arduino serial communication accomplished using rf connection control remote want transmit live audio video feed arduino using rf transceiver possible found avctp sure enables serial communication use bluetooth reasons thanks advance,arduino microcontroller radio-control serial communication,control arduino communication microcontroller radio serial
1417,stm32f3 timers computing,stm32f3 discovery board want go next step want try use timers configurations calculate variables prescaler period looked datasheets manuals find anything describe values input capture mode pwm etc think downgrading frequency 1-65575. fcpu=72mhz want generate signal frequency=40khz supposed subtract prescaler -1,microcontroller,microcontroller
1418,c++ create,trying use c++ talk create robot anyone basic code write/read create using c++ c trouble converting create commands char,irobot-create c c++,c create irobot
1419,structured light camera sensors work outdoors,structured light camera sensors structure.io intel realsense microsoft kinect work outdoors read sensors wont work outdoors ambient ir light someone provide proper references/tests mean degree ir illumination needed sensor stop working etc videos youtube show microsoft kinect working outdoors prairie dog ii ugv kinect sensor limited outdoors range outdoor kinect data collection heavy interference direct sunlight released new intel realsence r200 specification says range 3-4 meters indoors range outdoors older f200 says meters meters indoors interested seeing r200 work outdoors,kinect cameras,kinect cameras
1420,odroid xu3 speed issue image processing,working using odroid xu3 lite center core running out-of-box sd card image ubuntu upgrade previous xu running using opencv functions houghcircles lines rgb color detection searching shapes color blobs different colors white red green competition running lag time little seconds opencv playback frame output second terminal xu3 running slower better machine improve speed xu3 fitting power requirements thing think issue stock ubuntu version bloated looking images avoid using android,computer-vision software uav c++ linux,c uav computer linux vision software
1421,hand eye calibration,trying use dual quaternion hand eye calibration header implementation getting values way using robot arm optical tracker aka camera fiducial attached end effector case camera hand sitting side looking arm transforms robot base end effector optical tracker base fiducial transform need fiducial end effector moving arm series points path blue line point taking position xyz orientation angle axis theta magnitude camera- fiducial base- endeffector putting vectors required handeyecalibration algorithm make sure vary orientation +-30 degrees roll pitch yaw run get following results see position order magnitude -0.0583 -0.0373 real -0.185 -0.404 -0.59 estimated handeyecalib full transforms debug output info refinement h_12 -0.443021 -0.223478 -0.86821 -0.393099 -0.335633 -0.266286 -0.891925 ceres solver report iterations initial cost final cost termination function_tolerance info refinement h_12 -0.416117 -0.185496 -0.436281 -0.889955 -0.404254 -0.0826716 -0.590227 expected robottiptofiducial simulation -0.861 -0.0583 expected robottiptofiducial simulation -0.362 -0.81 expected robottiptofiducial simulation -0.0373 expected robottiptofiducial simulation estimated robottiptofiducial -0.416 -0.185 estimated robottiptofiducial -0.436 -0.89 -0.404 estimated robottiptofiducial -0.0827 -0.59 estimated robottiptofiducial using wrong way advice give,robotic-arm stereo-vision calibration,stereo calibration arm vision robotic
1422,implement pid control robotic arm,wondering pid control linear control technique robot manipulator nonlinear system possible pid control case found paper named pid control dynamics robotic arm manipulator degrees share page use pid control robotic arm name approach remove ambiguity pid linear control technique robot nonlinear system suggestions,control pid robotic-arm industrial-robot dynamics,control industrial pid robot robotic dynamics arm
1423,rubber/pvc coupling good small torque n.m,working project involves speed regulation bldc motor no-load load conditions wish use machine operated generator acting load motor shown video coupling used motor/generator arrangement looks handmade rubber tube somethhing considering using alternative flexible coupling purchasing actual flexible coupling option need coupling urgent basis question arrangement something similar used couple motor similar rating machine rated torque exceeding n.m,control brushless-motor,control brushless motor
1424,using servos raspberry pi,asked review raspberry pi programming view pwm control upto servos hoping use time work hexapod idea thinking requires minimum servo camera/sensor pan tilt question cheap uncomplicated way extending control extra servo appear servo controller hat/shiels arduino raspi upto servos extended buying shield options advice subject appreciated dumbed bit know great deal micro controller hardware software guy,raspberry-pi servomotor rcservo,servomotor pi raspberry rcservo
1425,test gazebo works save windows show component,test gazebo installation works trying save myworld save options window shown,gazebo,gazebo
1426,ros robot operating system mandatory,build ros robotic researchs/applications main advantage situations ros mandatory,ros,ros
1427,geometric inverse problem solution continuous redundant robot,let say redundant robot operationnal position x set possible joint configuration continuous mean possible explore possible configurations moving end effector way show true false using kuka lbr robot dof specific answer searching find result accept link answer,control inverse-kinematics,control inverse kinematics
1428,need control dc servo using 4-20ma linear analog signal,looking find way small servo using 4-20ma linear analog signal generated plc industrial setting purpose allow automation task done turning adjusting potentiometer removable dial trying ghetto oldschool motor operated potentiometer mop removed affecting operation original process spent hours looking servo controllers/encoders capable able find way get pointed right direction fantastic thing exist thanks,rcservo,rcservo
1429,jacobian matrix used derive joint angles end-effector linear rotational velocity filter,2-link degree freedom robotic arm measures linear acceleration link rotational velocity joint gyroscope know using jacobian matrix compute link velocity acceleration joint angles inverse matrix compute joint velocities joint angles link acceleration sure compute joint angles using link linear rotational acceleration aware joint angle estimated integrating joint velocities applying sort filter algebraic way computed seem,robotic-arm accelerometer gyroscope jacobian,jacobian gyroscope arm accelerometer robotic
1430,cheap efficient sensor,searching cheap efficient sensor detects obstacles moving objects robot applications quadrotor navigation swarm robotics etc suggest sensor commercial product project,mobile-robot sensors swarm,mobile swarm sensors robot
1431,beginner question software calculations,complete beginner robotics programming ... started thinking robot project yesterday want order motors test saw specs motors torque etc think remember enough physics high school simple calculations example motor rotates arm given torque length arm lift lift straight angle bit thinking tweak calculations bit ... several joints attached calculations complex create program node.js example able experiment different values assume kinds calculations common designing robots assume programs types calculations created know mean types calculations know know like ask programs guys use making calculations design robots preferable open source ...,robotic-arm mechanism software,software arm mechanism robotic
1432,pole placement gains tuning,given control system found region complex space satisfies specifications determining poles position +- want find gains fix desider pole matlab understand anyone suggest example matlab thanks edit first image sum blocks +- ++,control pid tuning matlab,control pid tuning matlab
1433,education sources robot building,teach ftc robotics high school students proficient programmer teach coding mechanical skills bit soft looking good sources students go gets depth gear chain gear ratio etc. level building professional industrial robots used vex robotics curriculum starting reference http //curriculum.vexrobotics.com/curriculum go advanced topics example drive single gear drive shaft multiple motors achieve power gear lose speed good intermediate sources need bit bullet get college level mechanics text,mechanism,mechanism
1434,estimate transfer function stepper motor,stepper motor internal controller like determine know approach problem system receives input velocity position moves position using velocity input velocity plant pan tilt unit stepper motors tried ident got fit ... input noisy signal output position writes,control,control
1435,arduino-create reading sensor values,past weeks attempting interface irobot create arduino uno unable read sensor values arduino describe hardware setup arduino code several questions answers questions helpful future work create hardware irobot create connected arduino uno according suggestions given irobot diodes dc buck converter used transistor used software serial port used uart port software following code implementing arduino overall function stop spinning robot angle robot exceeds threshold software serial port used runs default create baud rate include softwareserial.h int rxpin=3 int txpin=4 int ddpin=5 //device detect int sensorbytes //array store encoder counts int angle const float pi=3.1415926 define left_encoder sensorbytes define right_encoder sensorbytes softwareserial roomba rxpin txpin void setup pinmode input pinmode output pinmode output pinmode ledpin output roomba.begin // wake robot digitalwrite ddpin high delay digitalwrite ddpin low delay digitalwrite ddpin high delay roomba.write byte //start roomba.write byte //safe mode updatesensors // spin roomba.write byte roomba.write byte roomba.write byte roomba.write byte roomba.write byte void loop updatesensors // stop angle greater degrees abs roomba.write delay void updatesensors // call left right encoder counts roomba.write byte roomba.write byte roomba.write byte roomba.write byte delay // load encoder counts array int roomba.available int c roomba.read sensorbytes c i++ angle= right_encoder*72*pi/508.8 left_encoder*72*pi/508.8 /235 questions loading sensor values array code works bump run program implemented requires knowing bit bytes many bytes read serial connection time previous post help sending serial command roomba highlights byte sent time imply reverse true solution use char array read values append chars form signed int serial communication synchronization problem assuming synchronization problem possible bytes split nibble boundaries present problem nibble datatype,arduino irobot-create roomba,create roomba irobot arduino
1436,different ways control distance covered robot,want move robot certain distance say different ways implement example measure circumference wheel assign time rotation move techniques achieve,wheeled-robot movement,movement wheeled robot
1437,issue multiple bytes irobot create,problems reading sensor information irobot create sent email asking help irobot staff super helpful gave answer next day helped push project requesting data create2 print screen figure write code read data started section code working trimmed code controlled functions tkinter import subprocess import call import datetime import serial import ttk import struct import thread port sets com port atlas baud sets baud rate connection serial.serial port baud starts serial communication program read communication create2 def program2 threadname true x connection.read print x program write create2 def program1 threadname tk starts new gui atlas control atlas.geometry sets size control window atlas.title control panal sets name control window def sendcommandascii command used send command create2 cmd v command.split cmd += chr int v sendcommandraw cmd def sendcommandraw command used send command create2 global connection try connection none connection.write command tkmessagebox.showerror connected connected robot print connected serial.serialexception print lost connection tkmessagebox.showinfo lost connection robot connection none def test sets test command check connection global buttonpress buttonpress='test' sendcommandascii makes button gui starts test command button atlas text mode command=test button1.place x=600 y=400 button1.config width=10 height=5 atlas.mainloop runs gui loop keep window open runs read write program time try thread.start_new_thread program1 program1 thread.start_new_thread program2 program2 exception e print str e told code working fine trying print value sensor packet parsing way recommended change code program2 true def tohexfrombyte val return hex ord val .rjust .upper x connection.read b x print tohexfrombyte b works prints screen bumper pressed wheel drops question deal responses longer byte ie packet id voltage try packet id prints screen sends high low byte d7 combine get convert decimal volts like figure way print screen voltage program many sensors send data bytes need way make sure combined robb,irobot-create python roomba,python create roomba irobot
1438,difference positioning localization systems,like know differences positioning localization systems review papers used example gps global positioning system gives coordinates slam simultaneous localization mapping constructing updating map unknown environment difference positioning gives information receiver coordinates.no information enviorement localization gives information receiver coordinates enviorement positioning subtopic localization,localization slam gps,gps slam localization
1439,robotic winch force sensor,requirement motor pulls piece rope rope taught loss achieve sure done sure best describe way get results wondered sensors pre-established methods sensing resistance motion electrical motors,motor,motor
1440,frequency input read values,moment trying identify system using frequency sweep using mathematica created frequency sweep g t_ pi t/333.3 plot g g range max frequency hz sample data using hz rate input system rate read,control,control
1441,building micro cnc machine,"building micro cnc machine cd roms x axis floppy drive z hard drive x cd drive floppy z sure wire work linux cnc program works parrallel port connect steppers control drivers board buy right connect pc need board go parralel port wondering people opt x/y bottom z top put x/y/z stacked place upside top view done accuracy,3 layers potential failure",driver stepper-motor cnc,stepper cnc motor
1442,irobot create encoder counts,post follows earlier post irobot create angle measurement trying use wheel encoders calculate angle create using arduino uno interface robot use following code obtain encoder values serial monitor used view encoder counts void updatesensors roomba.write byte // request encoder counts roomba.write byte roomba.write byte roomba.write byte delay // wait sensors int i=0 roomba.available sensorbytes i++ roomba.read //read values signed char array //merge lower bytes right_encoder= int sensorbytes int sensorbytes left_encoder=int sensorbytes int sensorbytes angle= right_encoder*72*3.14/508.8 left_encoder*72*3.14/508.8 /235 code prints encoder counts wheels spun backwards count increases decrement tethered connection create using realterm exhibits behavior suggests encoders keep track direction spin true,irobot-create roomba,create roomba irobot
1443,lipo times energy dense model rockets,interested comparing energy density model rocket engines lithium polymer batteries attached motors propellers propelling things upwards get feel decided compare estes c6-5 motor iris quadcopter estes c6-5 initial mass produces n total impulse impulse density n n g^-1 iris+ weighs battery battery weighs power hover minutes draw thrust produced earth kg^-1 kg impulse density n g^-1 according math lipo times energy dense model rocket engine course model rocket engine lose propellant end flight little lighter going affect things factor seem missing anything,quadcopter rocket lithium-polymer,quadcopter polymer lithium rocket
1444,implement code inner outer pd controllers quadrotor position tracking,"quadrotor system multi-odes equations linearized model used position tracking determine desired x-y positions based roll pitch angles result nested loop inner outer controllers needed controlling quadrotor implementation put while-loop ode45 inner attitude controller asking read paper inner attitude controller run faster position controller i.e 100-200 hz code loops run inside while-loop correct position tracking insert while-loop running inner loop please suggest pseudocode position tracking dynamics equations nonlinear model quadrotor provided small angles model reduced following equations \begin align \ddot x \frac u_ \theta \cos\psi \phi \sin\psi \\ \ddot \frac u_ \theta \sin\psi \phi \cos\psi \\ \ddot z \frac u_ g \\ \ddot \phi \frac l i_ x u_ \\ \ddot \theta \frac l i_ u_ \\ \ddot \psi \frac i_ z u_ \\ \end align aforementioned equations linear position tracking need control x z choose desired roll pitch i.e \phi^ \text \theta^ \begin align \ddot x \frac u_ \theta^ \cos\psi \phi^ \sin\psi \\ \ddot \frac u_ \theta^ \sin\psi \phi^ \cos\psi \\ \end align closed form desired angles obtained follows \begin bmatrix \phi_ \\ \theta_ \end bmatrix \begin bmatrix \sin\psi \cos\psi \\ -\cos\psi \sin\psi \end bmatrix -1 \left \frac u_ \right \begin bmatrix \ddot x \\ \ddot \end bmatrix desired trajectory shown results actual trajectory vs desired code experiment position controller clear clc dt initial values system x dx dy z dz phi dphi theta dtheta psi pi/3 dpsi system parameters mass kg l arm length jx inertia seen rotation axis kg.m^2 jy inertia seen rotation axis kg.m^2 jz inertia seen rotation axis kg.m^2 g acceleration due gravity m/s^2 errorsumx errorsumy errorsumz errorsumphi errorsumtheta pose load desiredx pose ,1 desiredy pose ,2 desiredz pose ,3 ddesiredx ddesiredy ddesiredz desiredxpre desiredypre desiredzpre ddesiredphi ddesiredtheta desiredphipre desiredthetapre torque input ux kpx kdx kix ux kpx* desiredx x kdx* ddesiredx dx kix*errorsumx errorsumx errorsumx desiredx x ddesiredx desiredx desiredxpre dt desiredxpre desiredx uy kpy kdy kiy uy kpy* desiredy kdy* ddesiredy dy kiy*errorsumy errorsumy errorsumy desiredy ddesiredy desiredy desiredypre dt desiredypre desiredy u1 kpz kdz kiz u1 kpz* desiredz z kdz* ddesiredz dz kiz*errorsumz errorsumz errorsumz desiredz z ddesiredz desiredz desiredzpre dt desiredzpre desiredz desired phi theta r sin psi cos psi -cos psi sin psi dangles r\ m/u1 ux uy wrap angles desiredphi wraptopi dangles /2 desiredtheta wraptopi dangles u2 kpp kdp kip u2 kpp* desiredphi phi kdp* ddesiredphi dphi kip*errorsumphi errorsumphi errorsumphi desiredphi phi ddesiredphi desiredphi desiredphipre dt desiredphipre desiredphi -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- u3 kpt kdt kit u3 kpt* desiredtheta theta kdp* ddesiredtheta dtheta kit*errorsumtheta errorsumtheta errorsumtheta desiredtheta theta ddesiredtheta desiredtheta desiredthetapre dt desiredthetapre desiredtheta -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- u4 kps kds kis u4 kps* psi kds* dpsi ode equations quadrotor =================== x ===================== ddx u1/m theta*cos psi phi*sin psi dx dx ddx*dt x x dx*dt =================== ===================== ddy u1/m theta*sin psi phi*cos psi dy dy ddy*dt dy*dt =================== z ===================== ddz u1/m g dz dz ddz*dt z z dz*dt =================== phi ===================== ddphi l/jx *u2 dphi dphi ddphi*dt phi phi dphi*dt =================== theta ===================== ddtheta l/jy *u3 dtheta dtheta ddtheta*dt theta theta dtheta*dt =================== psi ===================== ddpsi *u4 dpsi dpsi ddpsi*dt psi psi dpsi*dt store erro errorx x desiredx errory desiredy errorz z desiredz errorphi phi pi/4 errortheta theta pi/4 errorpsi psi x x z z drawnow plot3 desiredx desiredy desiredz hold plot3 x z dt end figure1 figure set figure1 set subplot plot errorx title x -axis position xlabel sec ylabel x_ x subplot plot errory title -axis position xlabel sec ylabel y_ subplot plot errorz title z -axis position xlabel sec ylabel z_ z subplot plot errorpsi title \psi xlabel sec ylabel \psi_ \psi grid figure2 figure set figure2 figure plot3 x z grid hold plot3 desiredx desiredy desiredz pos get figure2 set figure2 pos pos print figure2 legend code desired trajectory clear clc fileid fopen angle -pi radius z z z z x end z angle angle angle wraptopi angle x radius cos angle radius sin angle z end x x z z fprintf fileid f \t f \t f\n x z end fclose fileid plot3 x z grid",quadcopter matlab microcontroller,quadcopter microcontroller matlab
1445,conceptual problem regarding electronic shutters,looking ccd cmos sensors cameras use process automatic control printing process getting grips essential numbers abbreviations remains problem shutters understand different types shutters mechanical electronic understand work problem concerns speed use mechanical shutter maximum shutter speed depends particular element assembly work electronic shutters read max shutter speed specs thing see floating frames second pass limit fps depending sensor built think maximum shutter speed uses half frames seems slow faced task recording crisp clear images paper moves m/s possible shutter speeds slow forced use mechanical shutter misunderstanding something,computer-vision cameras,computer cameras vision
1446,quadcopter iphone ultimate flight controller,iphone contains gyroscope gps photo video cameras self-sufficient battery outlives motor battery wifi backup connectivity cellular bluetooth programmable computer real-time image processing capabilities face detection general purpose io something old models available cheap main benefit separate dedicated flight controller camera hobbyist rotorcraft general purpose device iphone,quadcopter,quadcopter
1447,sensing level liquid tube,looking build sensor detect level liquid tube accurate detect level certain height liquid level seen red oval thought monitoring webcam using opencv detect liquid level seemed overkill dedicated pc process images simpler solution component attach raspberry pi arduino board ... familiar laser sensors know suitable long reliable ... edit add tube contains toluene flammable vacuum sealed drill kind optical/laser sensor ok long recognise clear liquid,arduino sensors raspberry-pi laser,sensors raspberry laser arduino
1448,pid module implements pid control,charge module control smoothness platform move platform implements closed-loop control firmware closed access source code requested closed loop control implemented top pid superior layer module implements closed loop control several question correct implement pid control upper layer closed loop control implements features loose lower close loop loop control closed influenced pid implements top layer estimate angular speed yaw pitch based position motors using kalman filters generate values actual values reported,pid,pid
1449,make quadcopter avoid obstacles using infrared,quadcopter built able make follow route avoid obstacles possible general plan array sensors pre-defined front quadcopter go like make sensors pointing higher angle detect something getting closer bot moves quadcopter stop descend distance detected object decreases continues opposite event happen sensors pointing lower angle detect something getting closer quadcopter thinking something small infrared distance detectors pointing || left right matrix anyone ideas feasibility use raspberry pi need additional board read values sensors addition idea sensors use infrared work suggestions welcome thinking ultrasonic sensors get cluttered worry short range crash means death quadcopter cause interference,mobile-robot quadcopter sensors,mobile quadcopter sensors robot
1450,load current load speed battery suitable motor,specifications motor load speed load current stall current torque definition load current load speed battery suitable power motor,motor,motor
1451,implement following drone camera using gps,title states way make following drone tracks gps unit follows/orients camera similar,cameras gps line-following,following line cameras gps
1452,assuming angle respect beacons know distance localize,let assume following situation need find x possible appear solution system trigonometry bit rusty feel need distance,kinematics inverse-kinematics,inverse kinematics
1453,adding actuator force featherstone articulated rigid body model,working project need model system comprised series ball-and-socket joints attached base attached turn prismatic joint rail read roy featherstone rigid body dynamics algorithms cover-to-cover read dynamics section springer handbook robotics written featherstone took long time get acclimated using spatial vector spatial matrix notation re-creating notation hand exercise works nice way concatenating matrices vectors matrices vectors maths invents perform operations tedious read hijacks standard notation overall everything compact easy implement matlab problem add actuators model walks configuring joint definitions link definitions etc. comes actuators applied forces says something add \tau_a bob uncle discussed handbook robotics suggests introducing false acceleration fixed base add gravitational force term show add local coordinates mention add actuator input help appreciated considered starting different book going great expense time re-acclimate different set notation move feel inches shy finish line,actuator dynamics joint,actuator dynamics joint
1454,odometry vs dead-reckoning,terms robotics differences odometry dead-reckoning read odometry uses wheel sensors estimate position dead-reckoning uses wheel sensors heading sensors someone please elaborate point thanks,odometry deduced-reckoning,odometry reckoning deduced
1455,linear motion control quadrotor clarification,posted question regarding matter solve reading paper authors state linear x motion control mathematical model see motion axes x depends u_ fact u_ total thrust vector oriented obtain desired linear motion consider u_ x u_ orientations u_ responsible motion x axis extract formula roll pitch angles necessary compute controls u_ x u_ ensuring lyapunov function negative semi-definite see fig paper clear linear motion control state equations extracting angles confusing part say extract formula roll pitch angles necessary compute controls u_ x u_ formula u_ x \frac u_ \cos\phi \sin\theta \cos\psi \sin\phi \sin\psi \\ u_ \frac u_ \cos\phi \sin\theta \sin\psi \cos\phi \cos\psi \\ seems roll pitch angles depend u_ x u_ compute roll pitch angles based u_ x u_ control linear motion,control quadcopter,control quadcopter
1456,stereo vision matlab,working project robot soccer vision utilize webcams stereo vision matlab robot soccer matters,stereo-vision matlab soccer,stereo soccer matlab vision
1457,dispensing precise quantities liquid powder,toying idea automating process testing aquarium water certain chemicals briefly salt water aquariums reefs require almost-daily testing 3-4 chemicals calcium alkalinity ammonia phosphate done hand using various kits main types combine several powders fixed amount aquarium water compare color mixture turns combine several liquids aquarium water add liquid mixture turns color record much final liquid add color change occur titration methods tedious maintain aquarium need daily readings metrics adds minutes+ able automate process biggest question dispense materials needed talking gram milliliter uom kits come plastic syringes spoons correct volume powders need way measure dispense way queue several days worth refilling daily defeats purpose ideas edit different measure dispense finite amount powder liquid units measure involved need able dispense +/- powder +/- liquid,electronics,electronics
1458,help ultrasonic sensors obstacles avoiding robot,problem working project days left idea simple wheeled robot ultrasonic sensors avoid obstacles developed code working fine using arduino uno l293d driver dc motors hc-sr04 ultrasonic sensors newping library made kind shield soldered common points gnd order connect l293 ic sensors pins problem ultrasonic sensors functioned expected behavior sending result number showed disconnect sensor power problem using usb cable power arduino sensors motors powered using li-po batteries provide guidance,arduino power ultrasonic-sensors,sensors ultrasonic power arduino
1459,arm disassemble assemble notebook home,suppose perfect ai control robotic arm characteristics fulfill able take common tools linesman disassemble assemble conventional notebook computer models available seems arms owi-535 toys i.e relocate lightweight objects right update suppose ai look area multiple hd cameras understand sees,robotic-arm,arm robotic
1460,control dc motor,motors battery http //www.enigmaindustries.com/motors/bosch_ev_warrior.htm like know best solution controlling motor arduino uno motor controller need maximum current transistor connected pwm pin arduino control motor pwm voltage regulator better pwm,motor esc pwm microcontroller,microcontroller pwm esc motor
1461,make compact soft robot,want make compact actuators motors sensors soft robot actuators pneumatic dielectric need suggestions manufacturating open new ideas,actuator manufacturing,actuator manufacturing
1462,small motor,designing spherical wrist want manipulate payload design span guessing considering weight structure motors looked maxon faulhaber find motor+gearbox+encoder suggestion,motor actuator torque,actuator torque motor
1463,make motion tracking camera,looking cctv interested minimising costs motion tracking camera cover area otherwise utilise multiple cameras something market manufactured company called think track senses using pir points camera positions ping ponging subject sensors idea drawbacks wondering anything arduino similar achieve better result stumbled sure outside application thread indoor makes difference http //robotics.stackexchange.com/a/1397/9751 edit ... case mislead want unit sensors detect movement camera face position,cameras,cameras
1464,vacuum lifter moving playing cards,buy small vacuum lifter move playing cards robotics google-fu failing know search terms look ... webpages look find kind component essence want electronic version vacuum pen know search kind component found pneumatic valves complicated machinery ... want self-contained electronic vacuum pen planning move playing cards anyone idea look something thanks,robotic-arm actuator,actuator arm robotic
1465,position estimation photo fingerprinting,want make position position change estimation photos taken flying robot need suggestions fast photo matching,localization,localization
1466,transfer signed integers libusb,folks programmers stack exchange asked ask want communicate arduino sent integers code program c++ initialy used bulk_transfer sends char data api reference libusb http //libusb.org/static/api-1.0/group__syncio.html prototype bulk_transfer int libusb_bulk_transfer struct libusb_device_handle *dev_handle unsigned char endpoint unsigned char *data int length int *transferred unsigned int see data unsigned char pointer pointer buffer containing length unsigned chars transcieve strings transfer integers sign thinking system arduino asks digit sending character program sends number reply followed sign requested next solution viable transfer integer string better way,arduino communication usb c++,communication c usb arduino
1467,position control linear model quadrotor problem tracking task,"posted questions regarding position tracking nonlinear model switched linear model hope regulation problem position control seems working switch tracking system starts oscillating know stated done hope someone guides correct path linear model quadrotor provided \begin align \ddot x g \theta \\ \ddot g \phi \\ \ddot z \frac u_ g \\ \ddot \phi \frac l j_ x u_ \\ \ddot \theta \frac l j_ u_ \\ \ddot \psi \frac j_ z u_ \\ \end align paper position control based pd provided aforementioned paper desired angles \phi^ obtained \begin align \theta^ \frac \ddot x g \\ \phi^ \frac \ddot g \end align \begin align \ddot x kp x^ x kd \dot x \dot x \\ \ddot kp y^ kd \dot \dot \\ u_ kp z^ z kd \dot z \dot z \\ u_ kp \phi^ \phi kd \dot \phi \dot \phi \\ u_ kp \theta^ \theta kd \dot \theta \dot \theta \\ u_ kp \psi^ \psi kd \dot \psi \dot \psi \\ \end align regulation problem x^ y^ z^ results change problem tracking results messed last paper state saturation function needed ensure reference roll pitch angles specified limits max value \phi \theta stated paper use euler angles believe \phi range -\frac \pi \frac \pi \theta range -\pi \pi using euler method ode solver step size fixed derivative euler method used code pd controller atittude clear clc dt initial values system x dx dy z dz phi dphi theta dtheta psi pi/3 dpsi system parameters mass kg l arm length jx inertia seen rotation axis kg.m^2 jy inertia seen rotation axis kg.m^2 jz inertia seen rotation axis kg.m^2 g acceleration due gravity m/s^2 errorsumx errorsumy errorsumz errorsumphi errorsumtheta pose load set desired position tracking task desiredx pose ,1 desiredy pose ,2 desiredz pose ,3 set desired position regulation task desiredx ,1 desiredy ,1 desiredz ,1 ddesiredx ddesiredy ddesiredz desiredxpre desiredypre desiredzpre ddesiredphi ddesiredtheta desiredphipre desiredthetapre torque input ux kpx kdx kix errorsumx errorsumx desiredx x euler method derivative ddesiredx desiredx desiredxpre dt desiredxpre desiredx ux kpx* desiredx x kdx* ddesiredx dx kix*errorsumx uy kpy kdy kiy errorsumy errorsumy desiredy euler method derivative ddesiredy desiredy desiredypre dt desiredypre desiredy uy kpy* desiredy kdy* ddesiredy dy kiy*errorsumy u1 kpz kdz kiz errorsumz errorsumz desiredz z ddesiredz desiredz desiredzpre dt desiredzpre desiredz u1 kpz* desiredz z kdz* ddesiredz dz kiz*errorsumz desired phi theta disp desiredphi -uy/g desiredtheta ux/g u2 kpp kdp kip errorsumphi errorsumphi desiredphi phi euler method derivative ddesiredphi desiredphi desiredphipre dt desiredphipre desiredphi u2 kpp* desiredphi phi kdp* ddesiredphi dphi kip*errorsumphi -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- u3 kpt kdt kit errorsumtheta errorsumtheta desiredtheta theta euler method derivative ddesiredtheta desiredtheta desiredthetapre dt desiredthetapre desiredtheta u3 kpt* desiredtheta theta kdp* ddesiredtheta dtheta kit*errorsumtheta -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- u4 kps kds kis desiredpsi ddesiredpsi u4 kps* desiredpsi psi kds* ddesiredpsi dpsi ode equations quadrotor ddx g theta dx dx ddx*dt x x dx*dt ======================================================================= ddy -g phi dy dy ddy*dt dy*dt ======================================================================= ddz u1/m g dz dz ddz*dt z z dz*dt ======================================================================= ddphi l/jx *u2 dphi dphi ddphi*dt phi phi dphi*dt ======================================================================= ddtheta l/jy *u3 dtheta dtheta ddtheta*dt theta theta dtheta*dt ======================================================================= ddpsi *u4 dpsi dpsi ddpsi*dt psi psi dpsi*dt ======================================================================= store erro errorx x desiredx errory desiredy errorz z desiredz errorpsi psi x x z z dt end figure1 figure set figure1 subplot plot errorx title x -axis position xlabel sec ylabel x_ x subplot plot errory title -axis position xlabel sec ylabel y_ subplot plot errorz title z -axis position xlabel sec ylabel z_ z subplot plot errorpsi title \psi xlabel sec ylabel \psi_ \psi grid figure2 figure set figure2 figure plot3 x z grid hold plot3 desiredx desiredy desiredz pos get figure2 set figure2 pos pos print figure2 trajectory code clear clc fileid fopen angle -pi radius z z z z x end z angle angle angle wraptopi angle x radius cos angle radius sin angle z end x x z z fprintf fileid f \t f \t f\n x z end fclose fileid plot3 x z grid",control quadcopter matlab,control quadcopter matlab
1468,stop working,new robotics first time building quadcopter unable work keep losing escs testing managed calibrate escs control speed motors securing frame motor work recalibrated escs running motor work motors continued run stopped research suggested escs cut-off voltage indicating battery flat looked recharging surprise new battery appeared bulged indicating damaged research suggested size battery using insufficient amount current drawn motors pwm applied reconnected new charged battery hope listening beeps esc coughed huge puff smoke happened managed get escs run motors several attempts tweaking pwm signals calibrating ended replacing obvious reason escs keep dying assume specific escs made ask money components using raspberry pi model b 16-channel 12-bit pwm/servo driver i2c interface pca9685 rctimer mini esc opto blheli firmware oneshot125 support 2-6s rctimer 2208-8 outrunner brushless motor gens ace lipo battery pack raspberry pi powered micro usb interface step-up voltage regulator connected lipo battery pwm controller powered vcc pin gpio1 pin raspberry pi happens power sensors time motors worked able control 1-2 millisecond duty cycles,quadcopter power esc pwm,quadcopter pwm esc power
1469,mechanical design base robotic arm,using dc motors build robotic arm want make base shoulder rotates lifts stable stronger design using dc motors like put motor elbow base efficiency design best suits update building robotic arm payload 1-2 kg using dc high torque motors model using shoulder gripper gripper self made weighing grams want proper design material choice shoulder part remains less heavy stable addition want operate movement gripper i.e motion using motor base part design better alternative,robotic-arm design,design arm robotic
1470,driving non-circular timing belt,create camera slider similar part sure setup camera drive looks buy similar timing belt sure set servo drive slider keep belt contact drive pulley fabrication skills limited simple box solution,servos,servos
1471,image based position estimation camera,many position estimation camera position estimation application technique camera application technique,localization,localization
1472,arduino triggers camera start recording,made arduino device detects trigger event want trigger recording storage video event occurs camera triggered feet arduino unit optimal settle running wires need looking suggestions limited budget project want avoid reinventing wheel ordering parts get work arduino considering use camera https //www.sparkfun.com/products/11418 arduino project help welcome,arduino wireless,wireless arduino
1473,suggestion camera,good low cost cameras used robotics assuming cameras good fit robotics ... works opencv pc windows support usb2/usb3 gige usb3 vision cameras seem good image sensing performance adjustable focus manual motorized fine focus control great ip cameras make good cameras robotic vision projects,computer-vision cameras,computer cameras vision
1474,interfacing gpu image processing motor control,like make robotic system takes input video feed runs gpu-based image recognition video outputs commands set motors goal motors react video little latency possible order ms. gtx laptop running ubuntu connected camera heavy image processing takes output motor commands frequency days looking web design system loose end feasible b best approach interface laptop motors image processing run linux leeway change part things,control real-time,control real time
1475,idea application robotics,learning interested robotics need update web development skills question idea good web application connected robotics service robots industrial robots etc open source ongoing web application projects robotics make contribution thanks,design software,design software
1476,difference multiple robots swarm robots,difference multiple robots swarm robots key point multi agent systems multi agent systems works computer simulations games terms used similar applications,simulation multi-agent swarm,swarm multi agent simulation
1477,electric piston longitudinal electric motor,electric motors apply force rotational motion longitudinal motion electromagnetic design gears worms motors great linear actuators transfer force feedback name devices,motor actuator,actuator motor
1478,determine configuration space robotic arm,working parallel-mechanism arm interested writing planners arm prm rrt configuration space sure identify obstacles/collisions writing planners mobile robots workspace easy define visualize workspace obstacles planner/robot operating website link shows great example visualizing workspace configuration space arm higher dimensions,robotic-arm motion-planning,motion planning arm robotic
1479,memory alloy used alternative compressor found refrigerator,curious alloy say used alternative traditional compressor anyone explain work goal understand use case adapt alloys robotic projects gut tells perfect kinematics mechanisms missing pieces puzzle work,kinematics mechanism,kinematics mechanism
1480,introduction robotics mechanics control john j craig. ed. transformation problem examples,reading book introduction robotics mechanics control john j craig. ed. transformation problem examples ex page frame b rotated relative frame x axis degrees translated units axis units z axis find p frame p frame b book answer answer ex page vector p1 rotated degrees clockwise x axis translated units axis units z axis p1 given find p2 ex.2.2 problem transformation matrix ex translation vector column given answer sure typo missing genuine operation please let know opinion thanks,forward-kinematics books,books kinematics
1481,hector slam matching algorithm,trying understand scan-matching part hector slam ppt summary seems little difficult understand cases possible perform alignment scans anyone explain case working simulation moving robot corridor-like featureless environment walls get map move sinewave motion able get map additional feature algorithm shows real path long feature seen right part image shows weird-looking oscillatory path resemble sinewave something important notice width map accurate real=4m map's=4.014m length movement accurate real=15m map's= using hokuyo urg-04lx laser range finder odometry imu running ubuntu using ros less understand hector works idea getting map trajectory thank,localization slam ros mapping rangefinder,ros slam rangefinder mapping localization
1482,fingerprinting/ model matching algorithms localization,paper mentioned matching case find image based algorithm suggestion image based localization,mobile-robot localization,mobile robot localization
1483,robotic arm playing chess,wish build chess playing robot robot arm shown anyone please tell robot arm suit purpose bought second hand anybody willing sell used chess arm robot please help,robotic-arm,arm robotic
1484,simple wireless connection circuits,new robotics building project need simple wireless connection circuits circuit switched circuit gets switched looking build something idea wireless connections know basic wired robotics know c++ programming helps apologies question asked regards hanit banga,wireless,wireless
1485,matlab toolbox windows sick lasers,anybody know get matlab toolbox functions work sick laser-scanner windows using sick-ldrs2110 ethernet cable sopas software allow program recording times specific tasks tips welcome thanks,laser matlab,laser matlab
1486,quadcopter force/torques duty cycle conversion,determined control loops quadcopter project going determine motor commands pwm duty cycle motor forces/torques following guidelines document trying inverse matrix page determinant equal procedure correct anyone suggest link conversion searched internet found much thanks part document referring following,control quadcopter pwm,control quadcopter pwm
1487,ekf slam c++ code openslam.org,working code robot maze solver using laser sensors odometry data went pdf available online \textbf dummies understand process master student control part writing code c++ difficult task ekf slam codes available site \textbf openslam.org seem advanced beginner find site missed simplest ekf slam algorithm implementation anyone guide open source code c++ implementation build suit robot working,slam,slam
1488,libusb arduino communication working,line following robot based onboard computer old pandaboard running opencv calculate offset required path communicate arduino usb pid optimisation data adjust speed left right motors dismay communication part working tried hard day fix result relavent code running r libusb_bulk_transfer dev_handle recieve actual cout r= r endl int cin imgvalue=krish.calc_offset send =imgvalue send =imgvalue //make write cout data send- imgvalue endl //just see data want write abcd cout writing data ... endl r libusb_bulk_transfer dev_handle libusb_endpoint_out send actual //my device endpoint found trial- device endpoints r == actual == //we wrote bytes cout writing successful endl cout write error endl imgvalue data send code running arduino void loop serial.write serial.available input_tmp serial.read serial.available input_tmp input_tmp serial.read input=input_tmp mypid.compute // adjust motor speed happens run libusb read operation infinity point tried resetting arduino help make program respond start byte send arduino go wrong,arduino communication usb,communication usb arduino
1489,cheapest way detect identify vehicles entering gate real time,want detect identify vehicles passing gate live video feed gate thought process detect number plates help opencv graphics library available problem size number plates vary language number plates written good ocr performance next idea put qr code windshield vehicles vehicles supposed enter area private enlisted vehicles confident able detect identify qr codes real time accuracy qr codes get pixelated due low resolution video anyone suggest cheap way adopt detect identify vehicles nfc cheap sensors used purpose,sensors design computer-vision,sensors computer design vision
1490,quadcopter pid output duty cycle conversion,trying design pd controllers control roll pitch angle quadcopter p controller control yaw rate give system reference roll pitch yaw rate smartphone controller wifi .in case roll pitch feedback outer loop given attitude estimation algorithm inner loop reference angle rate feedback provived filtered version gyroscope data yaw rate concerned controller reference yaw rate given feedback loop provived smartphone illustrate situation sampling frequency imposed attitude estimation kalman filter using tuned controller gains matlab imposing rise time seconds maximum percent overshoot root locus matlab able found solution large gains p tuning using quadcopter model euler angle based linearized model quadcopter instance \ddot \tau_\phi i_x\ddot \phi g_\phi \frac i_x s^2 order starting point gains re-tune reality transfer function continous model used discrete version sampling rate premise following questions map controller outputs duty cycle using pwm frequency period tim channel configuration checked activation threshold motor starts move stops increasing speeds second following good answer quadcopter pid output questions throttle mapping concerned map way values coming controller interval mapped whole interval speed order allow quadcopter angular movement exploiting differences motor speeds throttle coming fact matlab propose huge gains controllers leads fact sum controller output duty cycle stated metioned answer go bound tim pulse proportion result altering gains systems placing else poles systems procedure done matlab became useless wrong tried enforce matlab gainsm instance interval case find gains constraints verified thank,control quadcopter pid matlab,control quadcopter pid matlab
1491,artificial intelligence software packages professionals university education oft step used,using windows software packages artificial intelligence programming robotics branch used today professional environment standard lots internet suggestions companies seem keep guarded secret internet rumors true switching ubuntu offer terms depth context educational field computer science artificial intelligence current focus experience others programming languages stands c++ c python looking build program develop human-like bot aiming singularity point asking question order build toolbox little,design software artificial-intelligence programming-languages,intelligence programming artificial languages design software
1492,many communication link,application requires data streamed multiple bluetooth modules host controller like multiple clients server throughput looking 1920-bits second module spbt2632c2a.at2 module supports spp profile single link client server application needs multiple modules max send information server way receiving station multiple transmitting module using spp modules spbt2632c2a need different higher end module server side supports multiple spp links advisable look module bcm2070 driver run system,electronics,electronics
1493,hard real time safe,know question asked many times clear read online people say control robots ros applications hard real time constraints need technical arguments plain ros real time specific suppose ros rtos read ros uses tcp/ip-based communication ros topics know tcp/ip reliable means use topics real time loop instance send control signal system publishing topic system sending feedback topic rtos eg linux+xenomai build real time control loop robot using ros ros bottleneck naive lack knowledge please enlighten note define hard real time system eg system guarantee miss thing control loop fails run system fails,ros real-time,real ros time
1494,achievable stiffness impedance/admittance controlled robot incl haptic devices given structural control stiffnesses,edit realised missed point paper thanks very-skim reading part relating much damping much stiffness display obtain stability given structural stiffness changed question achievable stiffness impedance/admittance controlled robot given structural control stiffnesses stiffness/compliance course terms total impedance/admittance let consider haptic device mechanical control parts mechanical part rigid compliant robot impedance admittance control thought perceivable stiffness simple serial connection stiffnesses stiffer mechanical structure better display control stiffness k \frac k_e k_c k_e k_c k_c stiffness control find confirmation something similar stated samur performance metrics haptic interfaces grateful refer sources plain wrong right paper p. found stability condition virtual damping value relation virtual stiffness given structural stiffness,control mechanism reference-request,control request reference mechanism
1495,make directed graph,working robot able navigate maze avoid obstacles identify objects monochromatic bitmap maze supposed used robot navigation till converted/read bitmap image maze array bits need guidance use array plan robot appreciate share links new stuff year electrical engineering student happy detailed explanation need elaborate anything say grateful image maze sample image robot able work maze image similar dimensions welcome thank chuck update heres code sub2ind c++ see output correct ofstream subtoind subtoind.open sub2ind.txt int sub2ind int ind2subrow int ind2subcol int linearindex=0 j z j j j++ z z z++ linearindex z j sub2ind z-1 j-1 linearindex-1 //ind2subrow linearindex-1 j-1 //ind2subcol linearindex-1 z-1 j j j++ subtoind endl //correction cout endl z z z++ subtoind sub2ind j z subtoind.close heres link output file https //drive.google.com/file/d/0bwuks98dxycusk5fbnk1ddjnq00/view usp=sharing,arduino mobile-robot localization mapping planning,localization mobile arduino mapping robot planning
1496,matlab control toolbox root locus,using control system toolbox provided matlab estimate gains controller using root locus design get graph question x x-axis pole position previous iteration optimization procedure run gain value satisfies requirements open loop pole position system formed integrators multiplied constant thanks edit requested details start following simulink diagram trasfer function g_\theta \frac u \frac \theta \tau_\theta \frac i_y s^2 iy little question point taking torque correct select analysis control design compensator design select kp kd gains tuned use root locus specifying constraints click siso design task automated tuning optimize compensator tries find gain values satisfy constraints white area satisfies constraints think pink squares poles position completed optimization procedure correct case x pole shown thanks,control matlab,control matlab
1497,pd controllers quadcopter angles control,question lot cases possible find internet pd pid control euler angles quadcopter integral part neglected kind applications thanks,control quadcopter pid,control quadcopter pid
1498,changing behaviour roomba,seen possible use micro controller send commands roomba interested changing behavior roomba operation e.g change priority behaviours ide roomba regards,roomba,roomba
1499,math course beneficial,let know academia posted get responses people active robotics development undergraduate student completing majors mechanical engineering computer science new field interest electronic mechanical systems year take courses multivariable calc linear differential equations want take time schedule allows therefore wondering explain little bit applied robotics field believe helpful learn now.thanks advance,beginner theory,theory beginner
1500,use imu hover fixed location quadcopter presence gravity,accelerometer imu output integrated estimate position least theory practice huge acceleration gravity varies locations vibrations etc filtered low-pass filters filter gravity case vertical vector ignored calculations application want build quadcopter hover place presence reasonable winds quadcopter tilt towards random gusts maintain certain position single tutorial find internet uses accelerometer estimate stationary assumes using gyroscope hold quadcopter level want use imu estimate altitude possible course input something kalman filter conjunction sonar system application gps slow,quadcopter imu,quadcopter imu
1501,human arm inverse kinematics,hi want implement human arm robot task moving glass points using robotic toolbox matlab peter coorke student kind things find good reference solving inverse kinematics human arm algorithm implements kind obstacle avoidance exploiting redundancy manipulator using null space motion anyone suggest good reference follow implementation toolbox thanks,robotic-arm inverse-kinematics manipulator matlab,manipulator inverse kinematics matlab robotic arm
1502,calculate quadcopter lift capabilities,looking equation set equations allow predict fair accuracy heavy payload quadcopter capable lifting assume main variables weight size power rotors general approach use make determination,quadcopter,quadcopter
1503,safety cages quadcopter rotors/blades affect lift capabilities,interested building quadcopter scratch err side caution considering adding safety cages propeller/rotor prevent least minimize chance spinning rotor blades coming contact someone knowing much physics lift works imagine cages present main problems rotors add weight copter making harder lift payload sheer presence/surface area makes harder spinning rotor generate lift push ground former problem obvious self-evident latter problem mean surface area imagine caging spinning rotor difficult lift instance spinning rotor ability generate enough power lift say construct entire box cage entire rotors sides openings imagine lift capability drop interested cage design provides adequate safety box rotor much causes rotor ineffective incapable providing lift looking optimal tradeoff safety boxing/caging spinning rotor lift performance imagine calculating designing huge undertaking lot math wondering anyone figured stuff anyone knows way model safety-vs-lift-performance trade way,quadcopter,quadcopter
1504,stewart platform robotic wrist joint,planning design wrist humanoid robot like choose design sturdy allowing dexterity comparable human wrist option presented stewart platform setup appears recreate possible movements human hand immediate concern platform use total actuators require additional power computational requirements want commit design certain better alternative stewart platform good choice replicating dexterousness human wrist better solution,robotic-arm design actuator joint humanoid,humanoid joint design robotic actuator arm
1505,inverse kinematics spherical wrist,possible apply kinematic decoupling dof manipulator spherical wrist possible anyone suggest reference apply approach redundant manipulator spherical wrist explain possible working robotic toolbox matlab numeric algorithm find inverse kinematics solution problem specify orientation thinking solving problem second time considering spherical wrist approach work,inverse-kinematics manipulator matlab,inverse kinematics manipulator matlab
1506,wiring driving towerpro sg90 servos,got hands tower pro sg90 servos find schematics datasheet besides link following concerns looks rated tolerate supply determine current require amps etc. wires brown red yellow-orange guys guess say red power direction position rotate,rcservo wiring,wiring rcservo
1507,calculate speed rotary encoder high sample rate,aiming control motorized joint specific speed planning attaching rotary encoder controlling motor pid controller pid controller need control joints based velocity speed distance time make sense something double getcurrentspeed return currentangle lastangle samplingrate issue encoder provide high enough resolution calculate speed sample rate high want updated data 5-15 ms range current motors seem able respond change range information bit precision degrees step encoder able calculate small speed differences possible motors going degrees/second variable speeds directions feedback accurate delayed couple ideas find encoders sample high rate thinking sampling time changes encoder value seems finicky likely noise-prone sort rolling average cause data values lag previous values hold output calculations play pid loop noise filter sort know work given changing values application none seem ideal option get bit higher encoder method/combination methods use get data need,motor pid algorithm,pid algorithm motor
1508,control servo motor raspberry pi,trying make hexapod servo motors asking control raspberry pi used saw lot stuff control ... working arduino mega ssc-32 board found slow jerky end want add camera processing image know arduino handle process raspberry pi thank information subject,arduino raspberry-pi cameras servomotor,servomotor pi raspberry cameras arduino
1509,transform x z coordinates tx ty tz,need get coordinates specific points cad file transform use move robotic arm points problem get x z coordinates robotic arm needs x z tx ty tz coordinates move certain position suggestions edited task need robotic arm go certain points pcb board heat soldering paste setting points pendant easier way get coordinates points cad file write code using pc movl motionspeedtype linear mm/s angular °/s speed mm/s max angular speed coordinate x z tx ty tz toolno type move robot cartesian coordinates linear motion code linear motion certain point looks find manual pendant manual helpful second year student robotics mechatronics internship scientific research institution appreciate help,robotic-arm,arm robotic
1510,matlab system simulation dynamic state matrix input matrix,"following system \dot x x+b u x b scalar time-dependent constant simulate system matlab using sys ss b c,0 lsim sys u x0 nice simulate system dynamic state input matrix matrices based measurement data means discrete time step matrix t_i suggestions",dynamics matlab simulation,dynamics matlab simulation
1511,determine battery power robotic circuit,robotic circuits draw different amounts power/current given battery say connecting different circuits deplete different rates robot/circuit drain battery minutes robot/circuit drain battery minutes ratings batteries allows figure long power circuit bonus points rating uphold solar panels deed power supplies batteries,power battery circuit,battery circuit power
1512,understanding solar panels supply power robotic circuits,say solar panel outputs ~1.98 watts connect arduino expects supply arduino whole requires .05a watts power understand perfect weather/sunlight solar panel power arduino day problem let say wire motors arduino draw watts arduino motors drawing ~1.25 watts panels outputting watts think perfect sunlight panel power arduino motors day problem add motors arduino circuit total motors circuit drawing watts w watts expect solar panel longer capable powering circuit least first concern understanding scenarios understanding going awry assuming less track next question solar panels daisy chained increase total power output third case way second solar panel mix making panels output watts watts make capable powering arduino motors assuming perfect weather/sunlight conditions,power circuit,circuit power
1513,wiring necessary route power several rechargeable batteries,looking robotics project draw power rechargeable batteries juice initial research done believe connect rechargeable battery lipo diode wire diodes series new robotics/electronics guess wanted bounce community sanity check see better way achieving looking way circuit detect battery power battery decides draw power instant depleted deemed less powerful battery takes thoughts/criticisms,power battery wiring,battery wiring power
1514,vector/angle stereo camera pose vehicle body,calibrated stereo camera system mounted passenger car means able retrieve point cloud stereo image need camera aligned vehicle read camera facing forwards guess face forwards need get angle vector perfect forwards actual camera pose came drive vehicle forwards use stereo visual odometry detect angle vehicle movement seen camera vector looking libviso library visual odometry output vector movement change stereo frame used detect needed vector problem able drive car rtk gps used check correction anyone suggestion proceed stereo camera use consists separate point grey usb cameras camera mounted windshield inside car mount cameras calibrated mounting stereo baseline distance cameras cm,stereo-vision odometry,odometry stereo vision
1515,spring adjustable stiffness,like build mechanical module acts spring controllable stiffness spring rate instance let imagine solid metallic cube side top side cube chair sitting top solid mechanical spring sit chair go weight proportional spring rate want spring rate adjustable real time instance microcontroller system increase spring rate detects larger weight using example best describe want achieve robotics specialist know terms electro-mechanic module describing cube chair spring interested,actuator,actuator
1516,torque coreless dc micro motor,like build small two-wheeled robot similar shown order keep robot small intend use coreless micro motors shown bellow power source aaa aa batteries order reach v. batteries represent bulk weight robot rest robot weightless specifications motor motor diameter mm motor length mm output shaft mm output shaft length mm voltage v current stall frequency​​ rpm question small dc motors type enough torque make robot start moving unable find torque info kind motors suspect weight robot much handle know typical torque motor type cheap motor appropriate project,mobile-robot motor wheeled-robot torque,mobile torque robot motor wheeled
1517,use bipolar stepper motor driver drive unipolar motor unipolar configuration,use bipolar stepper motor driver drive unipolar motor unipolar configuration,stepper-motor stepper-driver,driver stepper motor
1518,control velocity position actuator,trying control velocity+position linear actuator moment able control position velocity trying control control let linear actuator drive position i.e cm constant velocity control actuator using pwm signal measure velocity position using position sensor shaft kind control preferred pid cascade code look kind control function better thanks advance edit describing picture want velocity controlled position controller make clear edit try trapezoid wave easy way much calculation power change s-curbe accelartion/jerk alot smoother let microcontroller calculate different formulas afterwards calculate using loop iteration way pid position parameters following code fictional accelerationloops // loops velocity // mm/s deltaposition // mm // ms loopfactor looptime // velocityloop velocity /loopfactor // mm/loop velocityfactor velocityloop .5 accelerationloops // mm/loop .5 found integration loops deltaposition velocityloop accelartionloops // loops -- -- formula -- formula1 velocityfactor x^2 lastf1 last value formula1 formula1 formula2 velocityloop x lastf1 formula3 velocityfactor loops x ^2 deltaposition using parameters generate following setpoint big problem code amount accelartion loops constant changed know amount loops take using separate arduinos connected using can-bus connection communicate load becomes high make master/slave impossible system modular adding actuator circuit problem actuator speed controlled using pwm signal linear sensor deliver 0-10v signal reduce 0-5v simple voltage divider loop ms depend maximum looptime arduino 10-bit adc use oversampling try increase 12-bit decrease reading speed decrease prescaler adc pwm output 8-bit trying find way increase think steps low application arduino limit internal memory pre calculating positions impossible thank help,arduino pid microcontroller,microcontroller pid arduino
1519,converting array bits connectivity map code debugging,"working robot able navigate maze avoid obstacles identify objects boxes pot balls monochromatic bitmap maze supposed used robot navigation till converted/read bitmap image maze array bits writing code convert array represents maze connectivity map apply path planning algorithm mr. chuck helped providing code matlab converted code c++ code providing right output see code tell wrong sharing link array made matlab code code c++ convert array connectivity map link array https //drive.google.com/file/d/0bwuks98dxycuzdzwtvyzy0luefu/view usp=sharing matlab code map load map.mat nrows size map,1 ncols size map,2 mapsize size map n numel map digraph zeros n nrows j ncols currentpos sub2ind mapsize j left neighbor exists j-1 destpos sub2ind mapsize j-1 digraph currentpos destpos map currentpos *map destpos end neighbor exists j+1 =ncols destpos sub2ind mapsize j+1 digraph currentpos destpos map currentpos *map destpos end top neighbor exists i-1 destpos sub2ind mapsize i-1 j digraph currentpos destpos map currentpos *map destpos end bottom neighbor exists i+1 =nrows destpos sub2ind mapsize i+1 j digraph currentpos destpos map currentpos *map destpos end end end code c++ int **digraph digraph new int int i++ digraph new int j j j++ z z z++ currentpos sub2ind j z digraph currentpos currentpos // -- -- -- new addition -- -- -- -- -- z destpos sub2ind j z digraph currentpos destpos bitarray j z bitarray j z z destpos sub2ind j z digraph currentpos destpos bitarray j z bitarray j z j destpos sub2ind j z digraph currentpos destpos bitarray j z bitarray j z j destpos sub2ind j z digraph currentpos destpos bitarray j z bitarray j z ofstream connectivitymap connectivitymap.open digraph.txt int l j l++ // printing elements int k k k++ connectivitymap digraph l k",mobile-robot localization mapping planning,mobile mapping planning robot localization
1520,circuit design simulation,want design circuits area expertise computer science engineering listed components essential circuit want software used design simulate circuits real time projects please suggest thank akhilrajagopal,software electronics,electronics software
1521,improving velocity estimation,sensor reduction model gives velocity estimate suspension system velocity suspension system estimate velocity used calculate velocity velocity transfer function/plant model use velocity improve velocity estimate velocity kalman filtering feedback system. v1 estimated using fed geroter pump fs diagram pumps fluid manupulate damper viscous fluid applying resistance forces applied car body problem velocity sensor spring.i measure estimate trying make estimate better.assume model/plant transfer function gives v2 given v1,control sensors pid kalman-filter,control filter sensors pid kalman
1522,frequencies used drones,frequencies used drone technology values mhz mhz mhz ghz ghz,quadcopter wireless radio-control,quadcopter wireless control radio
1523,need help regarding ekf monoslam,trying understand implementation extended kalman filter slam using single agile rgb camera vector describing camera pose \begin pmatrix r^w \\ q^w \\ v^w \\ \omega^r \\ a^w \\ \alpha^r \end pmatrix r^w coordinates camera w.r.t world q^w unit quaternion describing camera pose w.r.t world v^w linear velocity coordinate frames w.r.t world \omega angular velocity w.r.t body frame camera feature vector set described \begin pmatrix y_1 \\ y_2 \\ \vdots \\ y_n \end pmatrix feature point described using xyz parameters ekf acting unknown linear angular acceleration a^w \psi^r process model used predicting next state \begin pmatrix r^w v^w\delta \frac \bigl a^w a^w\bigr \delta t^2 \\ q^w \bigotimes q^w\bigl \omega^r\delta \frac \bigl \alpha^r \psi^r\bigr \delta t^2\bigr \\ v^w \bigl a^w a^w\bigr \delta t\\ \omega^r \bigl \alpha^r \psi^r\bigr \delta \\ a^w a^w \\ \alpha^r \psi^r \end pmatrix clear ekf steps post prediction step clear perform measurement update system state slide impression need initialize random depth particles camera point camera pose feature depth unknown understand running particle filter estimating feature depth camera pose known tried implement concept project read camera pose ground truth file keep triangulating depth features w.r.t world reference frame comprehend running particle filter estimating camera pose feature depths known parameters unknown perform measurement update understand narrowing active search region feature matching based predicted next state camera features matched using ransac algorithm find updated camera pose estimating homography idea regarding monoslam rgb-d slam please help understanding ekf steps specific homography estimation step project epipolar line inverse depth xyz next frame estimate camera motion,slam ekf,ekf slam
1524,structuring ekf estimate pose velocity odometry inputs,differential drive robot building localization system like able estimate state robot \left x \theta v \omega \right x \theta represent pose robot global coordinates v \omega translational rotational velocities mobile robot kalman filter example seen uses velocities inputs prediction phase provide filtered estimate q best way structure filter estimate velocities use measured gyroscope accelerometers adding \dot v \dot \omega state inputs intuition tells use prediction step i.e integrates predicted velocities positions separate updates odometry gyro accelerometer seen anyone seem reasonable approach,localization kalman-filter gyroscope odometry,filter odometry gyroscope kalman localization
1525,calculate required motor torque harmonic drive,term project controlling two-link manipulator harmonic drive installed joint control used computed control method determine torque needed joints based formula \tau_i =m \theta \ddot \theta_i +k_d\dot e +k_pe +v+g calculate torque motor needs produce harmonic drive use \tau_ motor j_m+j_g \rho\ddot \theta_i +\frac \tau_i \rho\eta_g \rho \eta_g gear ratio efficiency harmonic drive j_m j_g motor gear inertia calculation see effect harmonic drive system comparing input torque motor model harmonic drive \tau_ motor torque model harmonic drive \tau_i professor agree formula \tau_ motor used want include stiffness k harmonic drive done p/s model consists two-link manipulator+harmonic drive joint built anyone suggest formula thank much,actuator manipulator,actuator manipulator
1526,highspeed gearbox low speed brushless motor,attempting control small vehicle slow .5 m/s m/s speeds extreme accuracy drive system considering using brushless motors greater power volume ratio able find brushed motors small size using wheels diameter rpm looking rpm max suggest driving motors low speed driving high speed gearing understand setups give high torques brushless motors decrease torque speed brushed motors obvious gearbox necessary torque system choice clear asking tl dr use brushless motors high speed gearbox low speed ungeared high torque low speed high precision application,motor brushless-motor,brushless motor
1527,middleware ipc multi-threading autonomous robot,aim multi-threading inter-process communication ipc coding autonomous robot platform embedded linux yocto constraints limited cpu power building autonomous underwater vehicle compete robosub competition first time something intent use middleware ros mira moos etc purpose using want modularise tasks divide core components subsystems run multi-threading limited computational power dual core omap soc middleware robust efficient need use middleware want program run single thread cpu cores great multi-threading improve performance program middleware provide communication layer worry data races problems associated parallel processing prior experience writing multi-threaded programs using parallel processing libraries difficult hence imo middlewares excellent choices experience best suited task want use ros lot features wont using computer science student graduate freshman mind getting hands dirty much features true take less toll cpu,ros communication underwater operating-systems,communication ros operating systems underwater
1528,on-board monocular odometry quadcopter stabilization,anyone done small microcontroller know code snippets help implementing,quadcopter odometry stability,quadcopter odometry stability
1529,detecting presence person room,working first hobby project familiar sensors trying build system detects presence person small room single entrance/exit door idea person enters room lights turn following person affect state lights last person leaves lights turn programmatic sense lights turn present person count greater explored options found infrared sensors used type problem sure detect person entered like ask help,sensors,sensors
1530,inverting transform reading j craig book robotics,introduction robotics j.j. craig chapter page anyone explain equation derived/formed stuck page due failing understand equation came thank,design theory books,books design theory
1531,starter looking advice,professional became interested robotics months researching everything come understand robotics come desire try make granted know nothing coding programming idea begin know first time least something small huge life altering project anyone suggest good resources beginner appreciate,beginner,beginner
1532,lagging sensor data pid,let say pid implemented errors calculated using sensor data sensor data lags certain amount time overhead lag time smaller sampling period pid performs thinking pid calculate errors based data use control using kalman filter estimate actual sensor data help,pid kalman-filter,filter pid kalman
1533,question experience using stereo cameras/module e.g zed duo bumblebee etc,question experience using stereo cameras/modules zed duo bumblebee cameras etc tof cameras find sample disparity outputs internet find information perform things know used cameras mentioned others resolution disparities work framerate hardware camera asic sort produce disparity maps require host quality used zed camera promotional video youtube disparity maps good,cameras stereo-vision,stereo cameras vision
1534,pull-down resistor inter-chip sensor-to-chip communication,understand concept using pull-up/pull-down resistor implementing button/switch arduino avoid floating state fact implemented sure pull-down resistor necessary chip-chip chip-sensor communication connecting coin acceptor arduino common ground coin acceptor output pin gives short pulse time coin inserted connecting output pin coin acceptor arduino pin works problem pull-down resistor line required precaution case question connecting pins separate arduino common ground arduino read pulses thanks advance experience shared dave,arduino,arduino
1535,mini recorder rc heli parts,rc helicopter video picture audio taking capabilities died unrelated short circuit board short circuted board sent data micro-sd card camera+mic fine access data card circuit usb cable reciever board sent data wire bundle camera board make take pictures/record audio way computer usb turn mini spy camera jst cable got heli back heli number camera board number tx6473 r1 board number rev.a reciever board image camera/data board image,control cameras circuit,control cameras circuit
1536,troubleshooting xbox kinect,got libfreenect running mac able test freenect-glpclview uses capabilities depth sensor noticed kinect respond pick movement happened range 3-6 inches front sensor thought lights turned seemed get little better works something block sensor anyone know something solved know old sensor got prototyping notes laser project light starts blinking goes solid green level light goes red rgb camera works choppy shows tears picture freenect-glcplview output snippet stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected max data bytes got dropping ... stream expected max data bytes got dropping ... stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected data bytes got freenect-regview output snippet stream invalid magic stream invalid magic aaf5 stream invalid magic dddb stream invalid magic stream invalid magic stream invalid magic stream invalid magic stream invalid magic stream invalid magic stream invalid magic ffff stream expected data bytes got stream expected data bytes got stream expected data bytes got stream lost packets stream lost total packets frames lppf stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected data bytes got stream expected data bytes got stream invalid magic stream lost packets found gives idea usb issue regular receipt undersized packet,kinect,kinect
1537,problems complementary imu tuning,developing project consists controlled arduino send radio module data pc euler angles raw data sensors filtering used code made available sparkfun razor ahrs dof https //github.com/ptrbrtz/razor-9dof-ahrs/tree/master/arduino/razor_ahrs code radio transmissions tuned hz sampling rate fact parameters // dcm parameters define kp_rollpitch define ki_rollpitch define kp_yaw define ki_yaw project data read records sensors set odr bandwidth gyroscope hz odr project used gyroscope different used l3g4200d frequency starting set registers global data rate max beacouse use radio read complete date frequency tune ki kp setup kp period consider frequency odr set register individual sensors set global system sample rate limited radio transmission,arduino imu gyroscope sensor-fusion,sensor fusion imu gyroscope arduino
1538,digital controller design system variable sample time,got system sensor output want apply digital implemented feedback controller problem setup sensor specifications module says sampletime sensor change wide range depending usecase second second stays constant system disabled approach tuning digital pid-controller longest sampletime works fine change shortest system stays stable expected roc problem system response slow design controller fastest samplingrate results satisfying become instable slowest samplerate explained roc use kind adaptive predefined gains change depending samplerate wondering control strategies able handle sampletime changes edit give better overview add details talking heating system heats radiation sensor use pyrometer module samplingrate problem pyrometer able produce reasonable readings radiator turned alternatives pyrometer start expensive radiator pulsed operate maintain decent heat time steady-state temperature duty-cycle decent rate target minimum off-time radiator seconds measured values reasonable end sensor got effective sampletime 1-10seconds varying duty cycle hardware hard change radiator sensor evaluted months try improve results changing control algorithm,control,control
1539,localise underwater robot,building autonomous underwater robot used swimming pools capable running normal sized pool pool test particular design feature know position pool respect initial position respect pool imu pololu miniimu finding displacement imu impossible task sensor use task expensive tank size meters,sensors localization sensor-fusion underwater,underwater sensors sensor fusion localization
1540,determine trajectory reference real robot trajectory tracking,know use algorithms lqr mpc pid make robot follows trajectory references simulation matlab specify trajectory reference function let say given sequence points generated path planning algorithm want real experiment trajectory tracking sequence points question specify errors towards real situation impression generated path path planning algorithm uncertain due error robot sensing line following robot real physical line reference generated path path planning virtual e.g exist real world confused matter,mobile-robot control,mobile control robot
1541,dh-parameters kinematics translatory motion,new dh-transformation difficulties understand works coordinates incorporated parameters seems least information useless/goes trash translatory information alpha theta rotatory information example transition coordinate systems identical orientation alpha=0 theta=0 different coordinates x1 =x2 y1 =y2 z1 =z2 dh makes maximum information please enlighten greetings edit clarify part dh-transform understand example imagine cnc-mill cos1 stand cos0 variable length =no motion cos0-cos1 reason need incorporate transformation cos0-cos1 =t0-1 forward transformation cnc-mill dh-parameters t0-1 a=5mm alpha=90° d=2mm theta=90° assuming correct dx=10mm information lost process recreate relation cos0 cos1 according dh-parameters end understand non parallel axis information lost measurement a/d diagonal include dx/dy dx/dz dy/dz pythagorean theorem parameter flaw logic,forward-kinematics dh-parameters,kinematics parameters dh
1542,orientation parameter quadcopter madgwick fusion algorithm,decided build quadricopter scratch using arduino faced orientation estimation problem bought sensor axis magnetometer axis accelerometer axis gyro barometer complementary filter use get orientation returns usable noisy values tried madgwick fusion filter returns unstable values diverges ones get complementary filter given madgwick filter implementation correct pass acceleration values measured gs gyro values measured rps radians second magnetometer values measured ut sampling time loop cycle anything missed advantage using kalman filter edit1 problem due wrong choice sampling time seems work convergence slow i.e takes seconds reach right value quick flip imu rising value kp adds much noise tried repeat filter update step cycle requires much time exceeding sampling time graphs top bottom complementary filter madgwick filter madgwick filter high kp edit2 different values caused cable plug unplug raw data example sensor downloaded,arduino quadcopter kalman-filter imu,quadcopter filter imu kalman arduino
1543,sensors field view car driving,want develop autonomous driving rc car detecting obstacles plan mount 3-5 ultrasonic sensors front car minimum necessary combined field view sensors car hits obstacle i.e minimum angle detection combined sensors car detect obstacle path data car know data relevant separation right left wheel cm wheelbase distance front wheels steering front maximum angle steering degrees car uses steering,mobile-robot sensors wheeled-robot,mobile sensors robot wheeled
1544,imu rotate axis angles change,trying use invensense mpu9250 using provided library read euler angle imu rotates axis angles axes change potential cause,imu,imu
1545,stm32_oc_timing irqhandler,created program simple time base delay seconds problem read interrupt flag channel etc. use __hal_tim_get_flag htim2 tim_flag_cc1 reset error occurs occurred uc clear flag set blue led discovery board program main.c /* includes include stm32f3xx_hal.h /* private variables br **tim_handletypedef htim2 ** /* private function prototypes br void systemclock_config void br static void mx_gpio_init void br static void mx_tim2_init void br int main void /* mcu configuration -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- */ br /* reset peripherals initializes flash interface systick */ br hal_init /* configure system clock */ br systemclock_config br /* initialize configured peripherals */ br mx_gpio_init br mx_tim2_init br /* infinite loop */ hal_gpio_writepin gpioe gpio_pin_11 gpio_pin_reset /** system clock configuration*/ void systemclock_config void rcc_oscinittypedef rcc_oscinitstruct br rcc_clkinittypedef rcc_clkinitstruct br rcc_oscinitstruct.oscillatortype rcc_oscillatortype_hse br rcc_oscinitstruct.hsestate rcc_hse_on br rcc_oscinitstruct.hsepredivvalue rcc_hse_prediv_div1 br rcc_oscinitstruct.pll.pllstate rcc_pll_on br rcc_oscinitstruct.pll.pllsource rcc_pllsource_hse br rcc_oscinitstruct.pll.pllmul rcc_pll_mul9 br hal_rcc_oscconfig rcc_oscinitstruct br rcc_clkinitstruct.clocktype rcc_clocktype_sysclk|rcc_clocktype_pclk1 br rcc_clkinitstruct.sysclksource rcc_sysclksource_pllclk br rcc_clkinitstruct.ahbclkdivider rcc_sysclk_div1 br rcc_clkinitstruct.apb1clkdivider rcc_hclk_div2 br rcc_clkinitstruct.apb2clkdivider rcc_hclk_div1 br hal_rcc_clockconfig rcc_clkinitstruct flash_latency_2 br hal_systick_config hal_rcc_gethclkfreq br hal_systick_clksourceconfig systick_clksource_hclk br /* tim2 init function */ br void mx_tim2_init void tim_clockconfigtypedef sclocksourceconfig br tim_masterconfigtypedef smasterconfig br tim_oc_inittypedef sconfigoc br htim2.instance tim2 br htim2.init.prescaler //72mhz/7200 br htim2.init.countermode tim_countermode_up br htim2.init.period br htim2.init.clockdivision tim_clockdivision_div1 br hal_tim_base_init htim2 br sclocksourceconfig.clocksource tim_clocksource_internal br hal_tim_configclocksource htim2 sclocksourceconfig br hal_tim_oc_init htim2 br smasterconfig.masteroutputtrigger tim_trgo_reset br smasterconfig.masterslavemode tim_masterslavemode_disable br hal_timex_masterconfigsynchronization htim2 smasterconfig br sconfigoc.ocmode tim_ocmode_timing br //0.0001 delay br sconfigoc.ocpolarity tim_ocpolarity_high br sconfigoc.ocfastmode tim_ocfast_disable br hal_tim_oc_configchannel htim2 sconfigoc tim_channel_1 br sconfigoc.ocmode tim_ocmode_timing br br sconfigoc.ocpolarity tim_ocpolarity_high br sconfigoc.ocfastmode tim_ocfast_disable br hal_tim_oc_configchannel htim2 sconfigoc tim_channel_2 br hal_tim_base_start_it htim2 br hal_tim_oc_start_it htim2 tim_channel_1 br //hal_tim_oc_start_it htim2 tim_channel_2 br /** configure pins br analog br input br output br br exti br pc9 -- -- -- i2s_ckin br */ void mx_gpio_init void br br gpio_inittypedef gpio_initstruct br /* gpio ports clock enable */ br __gpiof_clk_enable br __gpioc_clk_enable br __gpioe_clk_enable br /*configure gpio pin pc9 */ br gpio_initstruct.pin gpio_pin_9 br gpio_initstruct.mode gpio_mode_af_pp br gpio_initstruct.pull gpio_nopull br gpio_initstruct.speed gpio_speed_high br gpio_initstruct.alternate gpio_af5_spi1 br hal_gpio_init gpioc gpio_initstruct br br /* configure gpio pin pe8 blue led */ br gpio_initstruct.pin=gpio_pin_8 br gpio_initstruct.mode=gpio_mode_output_pp br gpio_initstruct.pull=gpio_nopull br gpio_initstruct.speed=gpio_speed_high br hal_gpio_init gpioe gpio_initstruct br gpio_initstruct.pin=gpio_pin_12 br gpio_initstruct.mode=gpio_mode_output_pp br gpio_initstruct.pull=gpio_nopull br gpio_initstruct.speed=gpio_speed_high br hal_gpio_init gpioe gpio_initstruct br br /* configure gpio pin pe11 green led */ br gpio_initstruct.pin=gpio_pin_11 br gpio_initstruct.mode=gpio_mode_output_pp br gpio_initstruct.pull=gpio_nopull br gpio_initstruct.speed=gpio_speed_high br hal_gpio_init gpioe gpio_initstruct low level implementation br void hal_tim_base_mspinit tim_handletypedef* htim_base br htim_base- instance==tim2 br br /* peripheral clock enable */ br __tim2_clk_enable br /* peripheral interrupt init*/ br hal_nvic_setpriority tim2_irqn br hal_nvic_enableirq tim2_irqn br void tim2_irqhandler void br /* user code begin tim2_irqn */ br hal_gpio_writepin gpioe gpio_pin_8 gpio_pin_set br // hal_gpio_togglepin gpioe gpio_pin_12 br hal_tim_irqhandler htim2 br //this function implemented stmcubemx tim2_irqhandler look channel generate delay +1 sec debugging program led set period equal time set led,microcontroller,microcontroller
1546,extend robotic arm wrist rotation,got owi robotic arm disappointed horizontal position gripper easiest way extend gripper/wrist rotation i.e degree freedom,robotic-arm,arm robotic
1547,kuka robotics api ide,got robotics api library demo-program robot want develop app best solution offline development kind simulator new tasks ide way byte-code machine thanks advance,robotic-arm dynamic-programming,programming dynamic arm robotic
1548,esc programmed run full throttle side quadcopter,esc quads programmed way side throttle throttle cause quad flip suppose way program controller trigger switch want quad flip thinking waterproof quad flies air channel set float water thinking triggering switch controller time going flip nothing flips trigger switch normal operation possible,quadcopter,quadcopter
1549,raspberry pi hexapod best servo control board,bought hexapod kit towerpro mg995 servos objective apply pi camera sensors claw ... researching found clear answer comes servo control board servo controller board choose complete project,mobile-robot raspberry-pi servomotor rcservo hexapod,raspberry rcservo mobile robot servomotor hexapod pi
1550,mapping area mav,researching cost-effective way scan area mav exploraton use cad/civil purposes use point cloud data cad major sensors available problems kinect use outside high computation power stereo high computation power expensive lidar expensive real time heavy need system mav/quadrotor work wifi/wireless scan outdoors expensive gives data real-time.please suggest system close requirements stereo operated wifi,kinect mapping stereo-vision 3d-reconstruction,kinect stereo mapping vision reconstruction
1551,problem acceleration sensor,i’m using bma020 elv arduino mega2560 trying read acceleration values doesn’t confuse connected sensor spi-4 mode means csb pb0 ss sck pb1 sck sdi pb2 mosi sdo pb3 miso gnd uin connected gnd pins arduino board self-written code use include avr/io.h include util/delay.h define sensor1 typedef int int10_t int tbm uint8_t high uint8_t low int buffer high uint8_t high buffer low buffer buffer buffer high low return buffer void initspi void void accsensconfig void void writebytespi uint8_t addr uint8_t data int sensor_select uint8_t readbytespi int8_t addr int sensor_select void read_all_acceleration int10_t *acc_x int10_t *acc_y int10_t *acc_z int sensor_select int main void int10_t s1_x_acc s1_y_acc s1_z_acc initspi accsensconfig read_all_acceleration s1_x_acc s1_y_acc s1_z_acc sensor1 void initspi void ddrb |= ddb2 ddb1 ddb0 portb |= pb0 spcr |= spe spcr |= mstr spcr |= spr0 spr1 spcr |= cpol cpha void accsensconfig void writebytespi sensor1 _delay_ms writebytespi sensor1 //nur spi4 einstellen void writebytespi uint8_t addr uint8_t data int sensor_select portb sensor_select spdr addr spsr spif spdr data spsr spif portb |= sensor_select uint8_t readbytespi int8_t addr int sensor_select int8_t dummy portb sensor_select spdr addr spsr spif spdr dummy spsr spif portb |= sensor_select addr=spdr return addr void read_all_acceleration int10_t *acc_x int10_t *acc_y int10_t *acc_z int sensor_select uint8_t uint8_t dummy uint8_t high uint8_t low portb sensor_select spdr addr spsr spif spdr dummy spsr spif low spdr spdr dummy spsr spif high spdr *acc_x high low spdr dummy spsr spif low spdr spdr dummy spsr spif high spdr *acc_y high low spdr dummy spsr spif low spdr spdr dummy spsr spif high spdr *acc_z high low portb |= sensor_select confuses got sensors working code fine data get expect measure earth gravity z-component iay sensor table start turning measure earth gravity component wise x- y- z- direction depending angle turn sensor sensors receive data different values jump -314 -1.2 g +160 code wires arduino checked register settings sensors checked wire connection component sensors ohm used oscilloscope made sure csb sck mosi work missing something causes similar wrong behavior sensors,arduino accelerometer,accelerometer arduino
1552,using uarts stm32f072rb,trying use uarts chibios stm32f072rb board initialized uart2 getting output uart1 pins weird include ch.h include hal.h /* uart driver configuration structure */ static uartconfig uart_cfg_1 null //txend1 null //txend2 null //rxend null //rxchar null //rxerr //usart_cr2_linen static uartconfig uart_cfg_2 null //txend1 null //txend2 null //rxend null //rxchar null //rxerr /* application entry point */ int main void /* system initializations hal initialization initializes configured device drivers performs board-specific initializations kernel initialization main function becomes thread rtos active */ halinit chsysinit /* activates serial driver pa9 pa10 routed usart1 */ //uartstart uartd1 uart_cfg_1 uartstart uartd2 uart_cfg_2 palsetpadmode gpioa pal_mode_alternate // usart1 tx palsetpadmode gpioa pal_mode_alternate // usart1 rx palsetpadmode gpioa pal_mode_alternate // usart2 tx palsetpadmode gpioa pal_mode_alternate // usart2 rx /* starts transmission handled background */ //uartstartsend uartd1 starting ... \r\n uartstartsend uartd2 starting ... \r\n /* normal main thread activity demo nothing */ true chthdsleepmilliseconds uartstartsend uartd2 soom \r\n //uartstartsend uartd1 boom \r\n line uartstartsend uartd2 soom \r\n gives output uart1 anything mcuconfig.h reads define stm32_uart_use_usart1 true define stm32_uart_use_usart2 true define stm32_uart_usart1_irq_priority define stm32_uart_usart2_irq_priority define stm32_uart_usart1_dma_priority define stm32_uart_usart2_dma_priority,microcontroller serial c,serial microcontroller c
1553,virtual model plc discrete continuous,implement virtual model continuous control system discrete plc done practice theory explain topic stranger lets say,control,control
1554,methods compare pid controller performance,input sensor measured outputs objective methods compare performance looking inputs outputs matching,pid,pid
1555,project building electric skateboard,vacation wa thinking fun make electric skateboard/longboard ... decided want use done selecting parts board driven runner turnigy aerodrive sk3 6374-149kv mount motor use kit esc recommended battery seems good seem ok setup application problem bit reason chosen esc battery pack needed amps esc withstand max current see buy set.. cheaper ... cheaper alternative drawbacks,brushless-motor battery esc,battery brushless esc motor
1556,brushless dc motor electronic speed control quadcopter,student electrical electronics engineering final project quadcopter objectives make electronic speed controller esc brushless motors used made design esc using proteus made pcb attached schematic used pic16f628a esc wrote small code mikroc esc work powered work tried sensorless control brushless motors getting know much current provide motor according articles read brushless dc bldc motor requires startup ms. posted code used codes run motor pwm pwm duty cycle rookie subject bldc motor controlling grateful anybody help clear doubts figure mistakes design make work given code tried please help figure right way program chip const delay void main trisb portb portb delay_us delay portb delay_us delay portb delay_us delay portb delay_us delay portb delay_us delay portb delay_us delay uploaded given code set delay μs motor spun time mosfets got heated touch video scenario code pwm const delay1 const delay2 int count int cnt int arr int int x void init void trisb portb //option_reg //intcon ccp1con cmcon void main init cnt cnt cnt++ portb arr delay_us portb delay_us i++ == =0,quadcopter brushless-motor esc,quadcopter brushless esc motor
1557,arduino original generic beginner,new robotics electronics world willing dive software developer want create project uses gps accelerometer data show layer google maps transferred pc doubt controller get country generic controllers based sold massive difference price original arduino talking uno model start original model expect break controller fry break components connecting wrong experience generic controller less exciting original arduino,arduino beginner,beginner arduino
1558,pid gains motor position velocity control,servo motor quad optical encoder trying control position velocity controlling meant input motor reach using arduino uno share code possible implemented pid think correct implement controller idea able find suitable gains pid gains find small steps say degree rotation work large steps vice versa used limit integral sum much using pittman motor,robotic-arm,arm robotic
1559,mapping formats small autonomous robots,robot software working java android needs store pre-designed map playing field able navigate field got fancy structure map trying good format store maps looked svgs dxfs designed purpose file format designed small geometric robotics-oriented maps field modelling,mapping,mapping
1560,choose best filter dead reckoning imu,searching filter reduce noise smooth signal dead reckoning imu gyro+accelerometer differences/advantages/disadvantages following filters kalman complementary moving average mahony applied kalman complementary filters imu gives time lag actions respect filter parameters kalman filter works slower moving average complementary choose right filter filter parameters,mobile-robot localization kalman-filter imu,kalman localization mobile robot filter imu
1561,ros calibration camera problems,trying calibrate monocular camera using ros help website calibrate monocular camera run rostopic list get /left /right /rosout_agg /usb_cam/image run rosservice list get /cameracalibrator/get_loggers /cameracalibrator/set_logger_level /rosout/get_loggers /rosout/set_logger_level run rosrun camera_calibration cameracalibrator.py -- size -- square image =/usb_cam/image camera =/usb_cam says service ... service found added parameter end -- no-service-check makes terminal stall someone please help figure going wrong fix important usb_cam saved catkin_ws/src/usb_cam,ros cameras calibration,ros cameras calibration
1562,irobot create sensors,someone please provide list sensors create hoping get want sure ultrasonic sensors bump sensors,irobot-create roomba,create roomba irobot
1563,control robotic arm motion,robotic arm mounted car camera attached suppose camera takes image room finds something say object picked say feet robot question robot reach object first place reached object know real world co-ordinates object pick object using inverse kinematic equations help appreciated thanks,mobile-robot robotic-arm,mobile robot arm robotic
1564,cliff sensors roomba work glass wall,want use ir sensors detect dustbin full want protect outside dust planning use ir sensors roomba working plastic wall range sensor detect obstacle cm wall ir sensors reason positioned certain angle,sensors roomba,sensors roomba
1565,ptam cameracalibrator error,trying run cameracalibrator.launch using ptam according camera calibration tutorial get following error error launch node type ptam/cameracalibrator locate node cameracalibrator package ptam source devel/setup.bash run code well work launch file launch node name= cameracalibrator pkg= ptam type= cameracalibrator clear_params= true screen remap from= image_raw usb_cam/image_raw remap from= pose to= pose rosparam file= find ptam /ptamfixparams.yaml /node /launch get rostopic list /rosout_agg /svo/dense_input /svo/image /svo/image/compressed /svo/image/compressed/parameter_descriptions ... /tf /usb_cam/camera_info /usb_cam/image_raw /usb_cam/image_raw/compressed ... /usb_cam/image_raw/theora /usb_cam/image_raw/parameter_descriptions /usb_cam/image_raw/parameter_updates path cameracalibration.launch file catkin_ws/src/ethzasl_ptam/ptam/launch sure error keeps coming run roslaunch ptam cameracalibrator.launch says nodes cameracalibrator ptam/cameracalibrator thinking ptam include cameracalibrator someone please point error helpful using post guide helping much ros dynamic config file says link tried find -executable find cameracalibrator find proceed ./include ./include/ptam ./cfg ... ./launch ./src ./src/ptam ./src/ptam/cfg ...,ros cameras calibration,ros cameras calibration
1566,implementing boustrophedon algorithm given room obstacles,mobile robot navigating room map room using navigation_stack ros using rotary encoders odometry fusing data rotary encoders imu using robot_pose_ekf using amcl localization move_base planning write complete coverage path planning algorithm following paper like ask best way generate boustrophedon path simple backward motions cell rectangular trapezium etc obstacles read paper use different templates combine certain way come boustrophedon path way generate boustrophedon path someone suggest implement ros great please let know need information help appreciated,ros navigation motion-planning coverage,motion planning ros navigation coverage
1567,work specifications motors propellers quadcopter,specifications motors propellers approx produce thrust quadcopter planning lift total weight kg kg weight throttle total thrust produced kg motor total thrust kg looked answer calculate quadcopter lift capabilities understand use information work specifications motor propeller required application answer given previous question limited small quad require specifications bldc motor kv torque imax v power etc propeller suitable motor,quadcopter,quadcopter
1568,actuator types exist remain locked last position hydraulic piston,like find electronic actuator mimics characteristics hydraulic actuator position remains fixed power drain actuator moving actuators exist match criteria,electronics actuator,actuator electronics
1569,get reference kalman filter technical report,sorry question fit like give shot chosen stack question related mobile robots came paper mobile robot localization cited following reference c. h. durrant-whyte j. leonard b. rao b. steer kalman filter algorithms applications utilities technical report ouel-1765/89 oxford u. robotics research group find reference nothing show google google scholar university allows access massive database nothing show technical report interested read appreciation kalman filter anyone came reference,mobile-robot localization kalman-filter,mobile filter robot kalman localization
1570,kinect v1 vs kinect v2,technical standpoint differences kinect v1 kinect v2 interested hardware equipment format data,kinect,kinect
1571,kinect vs stereo cameras,advancing project realized better hardware video input processing intuitive feeling sounds stereo cameras offers powerful flexible solution hand kinect looks great out-of-the-box solution depth sensing takes lot computational complexity output like know upsides downsides solutions known limitation and/or field application thank,kinect cameras stereo-vision,kinect stereo cameras vision
1572,extending icreate battery power auxilliary equipment,plan use icreate platform carry tablet notebook pc want power time need mah battery want powered battery system use charging source need info wire additional nimh batteries parallel existing deal additional temperature sensors ignore course ... built power control deal need upgrade somehow appreciate suggestions want separate power system aux devices charging standard home base goal take longer deal adapting aux devices add thanks,power battery roomba,battery roomba power
1573,reduce battery power,least complex way reduce power battery thank,battery,battery
1574,arduino compatible sensor motion detection positioning,working project requires motion detection positioning worked camera issue need something sleek small heavy cameras tend luminosity work lit spaces need someone worked something knows best sensor purpose,arduino,arduino
1575,object grasping robot arm control,dof robot arm camera attached takes image object image say glass course order move arm required position grasp object solve inverse kinematic equations order solve need x coordinates arm reach grasp object question x say midpoint object image thanks,mobile-robot robotic-arm,mobile robot arm robotic
1576,required build simple xy-stage,scope phd like build automated microscopy set-up take images sample done taking pictures micrometers micrometers need design xy-stage moving sample optical setup use raspberry pi steer hardware direct material best make xy-stage questions types motors use stepper many create good sliding mechanism avoid jerky steps simple links basic engineering set-ups enough start complete layman field edit found require get small angle step stepper motors edit2 need maximal range motion cm directions overall size exceed cm^2 step sizes exceed microns care moving speed based design link buying stepper motor gear box allow small radial steps deg result micron steps assuming rotor radius price goes exceed available options start usd,raspberry-pi stepper-motor,pi raspberry stepper motor
1577,anybody using robot simulators,use simulators developing robot algorithms test like get introduced simulators world know start ... recommend regards,simulator,simulator
1578,degree freedom,robotic arm pick cuboid table rotate vertical axis put possible positions many degrees freedom least necessary coordinates reached robotic arm workspace allowed put cuboid pick robot answer translatory rotatory don’t understand thouhgt prismatic joints pick cuboid move table revolute joint rotate cuboid vertical axis translatory rotatory,robotic-arm,arm robotic
1579,voltage rpm relation,measure voltage esc drawing increasing dc motor speed multimeter shows speed increases voltage value decreases anybody explain happening,brushless-motor electronics esc,brushless esc electronics motor
1580,increase pid sampling rate embedded system,robotic project running processes taking running pid max clock rate half processing time taken spi peripherals imu encoders recommendation run faster pid sampling rate,pid embedded-systems,pid systems embedded
1581,low variance resampling algorithm particle filter,particle filter decided try using low variance resampling algorithm suggested probabilistic robotics algorithm implements systematic resampling considering relative particle weights implemented algorithm matlab word-for-word text function state lowvariancers prev_state weight state_size state zeros state_size initialize empty final state r rand select random number 0-1 w weight initial weight j state_size u r /state_size index original sample size^-1 u w sure loop w w weight end state j prev_state add selected sample resampled array j j end end expected given loop structure getting error accessing weight exceeds array dimensions solve considering shifting weight array putting first index used first value weight exceed matrix dimensions sure impact rest algorithm seeing trouble understanding purpose u calculation loop anyone help clarify purpose u loop circular shift acceptable fix,mobile-robot algorithm particle-filter probability,particle probability mobile robot filter algorithm
1582,make door opening top,need make construction door closed default door opened top scheme red rectangle picture aperture blue rectangle door weight kg moves top door need opened green stripe picture rail door electrical engine use estimated time door opening seconds want send signal door drop power lost send signal drop,design electronics actuator,actuator electronics design
1583,prototyping irobot roomba,project building tele-op robot using irobot roomba drivetrain order robot work need extra castor irobot provides .stl .stp files use used printed files printed link create® bin modification file new part drivetrain caster downloaded first link called full bin bottom caster mount piece great made castor different height wheels wondering anyone file saved something different edit solidworks phone irobot hours today told post please help,irobot-create roomba,create roomba irobot
1584,optimal hardware linear algebra operations,working slam algorithms implementing extended kalman filtering brush localisation techniques thinking hardware side things embedded chips microcontroller optimised large linear algebra operations sort embedded options best processing sorts operations,slam kalman-filter,filter slam kalman
1585,reading crazy large numbers naze32,hope someone help reading large numbers naze32 max min values pitch roll yaw convert degrees radians,quadcopter,quadcopter
1586,type control law used reaction control system apollo lunar module space shuttle,reaction control systems rcs vehicles implemented using small rocket thrusters looks thrusters work kind pulse mode understand use optimal control calculate advance required reach new desired state system use pulse mode precise magnitude variation provided thrust average voltage pwm pulse-width modulation classic pid control loop,control automatic rocket,control automatic rocket
1587,matlab simulation solidworks model,learning make simulation matlab based model designed solidworks example simulink+solidworks way used create model solidworks create xml file applicable import matlab simmechanics link import model matlab/simulink simulink system created steps controlling system implemented simulink feel simulink kind strict control want flexible apply algorithm model using matlab *.m file control efficient way question way simulation matlab+solidworks using *.m file control simulink model information contained step inherited step different,matlab simulation,matlab simulation
1588,determine rotation axis given rotation matrix,find axis coordinate system rotate rotation matrix given r_ b \left \begin matrix \\ -1 \\ \\\end matrix \right r_ c \left \begin matrix \\ \\ \\\end matrix \right r_ b thought rotation z-axis r z \theta \left \begin matrix cos \theta -sin \theta \\ sin \theta cos \theta \\ \\\end matrix \right values positions a_ a_ a_ a_ a_ r_ b r z \theta identical solved cos \theta \theta rotation z-axis solve rotation r_ c,joint,joint
1589,make changes simulation project bullet/gazebo/ros/orocos,starting develop robotics project involves simulation real world programs soft-body dynamics food processing clothes/garment handling textile industry home service robots known soft-body dynamics garment handling less explored areas robotics simulation hope make development contribution projects involved following projects involed bullet physics engine dynamics gazebo simulation environment ros robot hope use universal robot ur5 ur10 arms grippers decided orocos control algorithms hope use ros indigo igloo preinstalled virtual machine nootrix.com make updates bullet gazeboo add new ros stacks question organize project updating bullet physics engine new soft-body dynamics algorithm executable files produce put virtual machine similar question asked need update gazebo seems large number files change sorry questions sofware stack seems complex robotics,ros software programming-languages dynamics gazebo,programming languages dynamics ros gazebo software
1590,possible simulate vision perception gazebo simulators,vision important part robotics unavoidable component control loop many clothes/garment handling algorithms visual cues deciding proceed question simulation environments gazebo others allow design world robot garment simulate garment dynamics simulate robot sees robot perceives garment simulation step possible simulate vision simulate algorithms vision component control loop simulation vision good research theme trend good articles initial projects expanded stated general question possible simulate sensors gazebo e.g food handling soft-body handling involve tactile sensors principle gazebo calculate deformation forces soft-body format data simulated values sensor readings similar mechanism used simulation vision,computer-vision simulator research simulation gazebo,simulator simulation computer research gazebo vision
1591,comparing industrial robot arms,study capabilities industrial robot arms example answer question price vary precision speed reach strength database industrial robot arms including information price precision speed reach strength model,robotic-arm industrial-robot,industrial arm robot robotic
1592,estimation battery life time pwm signals quadrotor,way estimation battery life pwm outputs goes motors microcontroller level planning estimate path range microcontroller sensor electronic device neglected,quadcopter battery,quadcopter battery
1593,building parts keeping laser alignment steady,building laser gun pentathlon targets like know build part gun count steady laser attached motor question laser want attached small- servo motor try implement cheat fun assuming motor good torque assume laser move sightliest bit motor turned test precision shooting small vibrations moving pointer prejudicial case minimize problem ordering motor highest torque second question off-topic related robotics people solutions problems need build sights gun tell sights fixed plastic point front adjustable large bolts side makes sight higher lower makes point right left part built simple tools thanls,motor stability laser,stability laser motor
1594,navigating maze using path-planning dijkstra,working robot able navigate maze avoid obstacles identify objects monochromatic bitmap maze supposed used robot navigation till processed bitmap image converted adjacency list use dijkstra algorithm plan path problem extract entrance point/node exit node bmp image dijkstra algorithm plan path robots starting position different inch entrance point entrance point maze supposed move entrance point using arbitrary method apply dijkstra algorithm plan path maze entrance exit way stop x marked bmp file attached x boxes pot balls plan path entrance point exit point entrance box second exit point think boxes placed shortest path starting position different entrance point match robot physical location coordinates program move entrance position starting position error deal navigate bases coordinates provided dijkstra use ultrasonics prevent collisions yes give idea use ultrasonics coordinates,arduino mobile-robot localization motion-planning mapping,localization mobile arduino robot mapping motion planning
1595,mathematical moddeling elastic robots,compute rigid robot kinematics dynamics many resources simulators modelling tools couldnt find elastic robots suggest resources modelling tools,kinematics simulator dynamics,dynamics kinematics simulator
1596,calculus robotics,high school part robotics club competes ftc first tech challenge finishing first calculus class calc ecstatic able apply real world example robotics pid seems approximations anyways working fabricated math problems deriving equation real life situations complicated thank,control software,control software
1597,create simple c++ client application control kuka robot-arm lbr iiwa fri,programming robot using java kuka ide kuka sunrise.workbench want control robot arm c++.net application use camera kinect get commands reading documents provided kuka bit hurry want understand c++ client application running laptop send/receive information robot controller kuka sunrise cabinet running server application fri. issues grasping whole mechanism simple application server/client source code explanation schematic helpful,robotic-arm c++,c arm robotic
1598,prefer dh parameters kinematic representations robot arms,interested dh parameters versus representations terms kinematic calibration best clearest source information find kinematic calibration book robotics modelling planning control bruno siciliano lorenzo sciavicco luigi villani giuseppe oriolo chapter requires description arm dh parameters multiplying kinematics equation partial differentiation w.r.t dh parameter least-squares fit left pseudo-inverse iterate fundamental reason dh parameters used different representation xyz euler angles understand fewer parameters versus calibration procedure taking much data unknowns robotics textbooks read present dh parameters say use go argument found original paper denavit track,robotic-arm kinematics calibration dh-parameters,dh parameters calibration kinematics robotic arm
1599,blade red wire,blade quadrotor quadcopter move red wire shoved circuit board fixed broken power wire red wire shown straight circuit board right configuration least understood know place horizon sensor temperature move wire quadrotor goes unstable flying appreciable change wire position red wire attached board shoved circuit board battery holder,quadcopter,quadcopter
1600,drone battery question,background propeller drone w mah lipo battery propeller drone w mah lipo battery behavior drone flies ease drone struggles 2-3 inches ground question microcontroller props escs motors thinking reason drones flying difference batteries batteries reason property responsible difference flight,battery,battery
1601,duty cycle mapping,need build conversion/mapping algorithm controller pid etc output duty cycle order command bldc motor esc l think l dont know meaning controller output anybody highlights way,arduino motor esc microcontroller,microcontroller esc motor arduino
1602,cut throttle signal esc,channel servo board adafruit see communicate i2c using raspberry pi servo board controlling qbrain sending pwm works great problem trying create kill switch signal servo board cease esc stop detects pwm signal placed toggle switch cuts vcc servo board longer produce pwm signal power cut esc jumps throttle assume esc believes signal duty cycle solve,raspberry-pi esc,pi raspberry esc
1603,modeling robot find position,task robot follows robot catch robot arena trying escape exact position robot sent robot use sonsor identify robot possible estimate next position robot using mathematical model anyone recommend tutorials books refer..,arduino kalman-filter automatic probability,filter automatic probability kalman arduino
1604,electric motor speed control pwm vs analog voltage,working 2-wheeled robot connected raspberry pi l298n motor driver sending enable pin particular motor software-generated pwm signal duty cycle observe osciloscope clean square wave going enable pin expected dirty square wave output motor terminals motor turns speed/torque expected wondering better control speed motor placing flat lower constant voltage terminals oscillating square wave ie speed/torque oscilating put constant motor terminals wonder oscillation waste power/energy true make difference high-end motor drivers use variable flat analog voltage control speed/torque use pwm pwm frequency make difference,motor,motor
1605,decide size time steps sensing control actuation,background experience solid mechanics fea experience robotics/controls problem description developing control strategy stabilize complicated 6-legged dynamical system torques ti leg joints used create net moment body stabilizing system moment known pre-determined control strategy side note dynamical solver nonlinear computational type due lack fundamental confusion dynamical system want use joint torques ti create known net moment body moment function current positions/angles leg segments reaction forces moments controlled leg controllable joint torques ti leg time given time n-1 \delta -- control strategy desired net moment computed/known -- read/sense legs positions angles reaction forces reaction moments say placed sensors time n-1 \delta -- information vector algebra yields desired joint torques ti required create net moment ** time n \delta -- applies determined joint torques ti determined t= n-1 \delta create desired moment -- course torques ti applied immediate proceeding time step applied fundamental confusion exists torques calculated based data angles/positions/reactions objective create moment m. torques ti applied ** data angles/positions/reactions different desired net moment created apply actuation instantaneous time sensing understanding controls problem questions understanding robotics problem terms strategies dilemma course create time steps sensing actuation small unrealistic/dishonest balance realistic time step performs task well,control actuator stability legged,control actuator legged stability
1606,possible slam ir sensors buddy,saw buddy page want purchase slam research wonder possible program buddy slam according buddy spec ir sonars camera know slam algorithms implemented powerful sensors rgbd/stereo camera laser range finder pepers mention ir-based slam,mobile-robot localization slam mapping rangefinder,localization mobile mapping robot slam rangefinder
1607,joints discretize ik,using ikfast openrave inverse kinematics analytical solver robot dof matches ik type dof get possible solutions robot dofs need pick joints constant value openrave python interface discretize joint i.e give set solutions radians joint question holds interface dof anthropomorphic arm joints roll-pitch-roll-pitch-roll-pitch-yaw seen image discretized joints call free joints openrave terminology let ikfast decide picks joint upper arm roll free joint using joint elbow free joint easier think realized joint discretize closer end chain ik solutions suffer joints closer chain large discretization openrave picking optimal joint discretize wondering standard practices known conventions sort thing put want set ik solutions end-effector pose fix joint start end kinematic chain set going perfect lets say ideal position epsilon imagine want hand in-front robot pick bad angle shoulder straight example rest joints hard time getting end-effector target pose fix wrist angle good chance getting end-effector lease close kind trade-offs better set solutions,inverse-kinematics,inverse kinematics
1608,control motor speed neural network dspic,like seek advise go implementing neural network dspic control motor speed robot feasible deploying typical pid control loop control speed motors encoders attached thoughts think set-up inputs desired speed current speed output pwm hidden many nodes needed many layers face contradiction supervised learning assuming pass desired speed current speed output using sigmoid function 0-1. take multiply maximum pwm value compare value required generate speed correct way determine error little unclear part determine pwm values required certain speeds result small data set training considered passing pwm values motor function wait short period capture current speed motor compare desired speed get error started coding basic neural nets hope get ideas thanks,motor pid pwm,pwm pid motor
1609,thrust measurement,try find relation rpm vs. thrust battery+motor+propeller combination image shows setup measurement result anyone explain l use datas know kv.v gives rpm voltage values decreasing p=v.i relation etc,quadcopter brushless-motor esc,quadcopter brushless esc motor
1610,calculating required torque,say object motors/wheels attached standard arrangement need calculate amount torque required motors able move object x kilograms skipping steps velocity travelling slope angle z. guessing depend factors grip tyre straightforward question hope answer way thanks advance,motor motion torque wheel,motion wheel torque motor
1611,ekf-slam initialize new landmark covariance matrix,trying implement ekf-slam using algorithm unknown correspondences proposed book probalistic robotics sebastian thrun table understand algorithm initialization new landmarks covariance matrix p_ new algorithm new landmark detected procedure normal measurment update observed landmark done kalman gain k calculated new landmark covariance updated kalman gain jacobian h new landmark p_ new k h p understanding new observed landmark effect rows columns correspond mapped landmarks robot pose covariance matrix think rows columns created uncertainity proposed uncertainty initializing new landmark ekf-slam tried split calculation p_ new claculating blockwise see somehow come initialization shown link end different covariance matrix new landmark effecting rows columns parts old covariance view right hope understand pseudo code book wrong mistake try come initialization advice initialization new lnndmarks work code appreciated edit asking normal kalman update covariance matrix line table new observed landmark explicit case initialization new rows/columns new observed landmarks covariance seems normal measurement update observed landmark,mobile-robot slam ekf,mobile ekf slam robot
1612,gyroscope remove low frequency component high pass filter,using matlab suppress low frequency components high pass filter objective filter angular velocity measurements affected high frequency noise bias order get best estimate angular position output gyroscope looks first approach easiest way remove baseline remove average achieved matlab using line code yfilt mean second approach design high pass filter attenuate low frequency components analyze frequency components signal see peak low frequency infinite small components frequencies due second order butterworth filter normalized cutoff freq wn get looking filtered data tilting gyro tilt gyroscope situation changes sampling frequency get following plot dft shown normalized scale find sample.mat file approach works great like apply second particular case low frequency components make job harder apply second approach based high pass filter remove bias edit find information edit filter signal remove bias keeping angular velocity information 110-th 300-th sample intact gyroscopes bias problem experiencing rotation offset present ~110 samples hypothesis correct high pass filtering first samples desactivate filter rotations gyro estimated angular position accurate,gyroscope matlab filter,filter matlab gyroscope
1613,robot structure kit materials,arduino wires resistors good stuff materials build structure robot guys recommend place solder solder kit material guys recommend work motors stuff thanks p.s plan building standard driving robot want able make robots materials/kit want kit makes robot want lego-esque approach building structure build want bump2,arduino beginner,beginner arduino
1614,shelf solutions gps+ins accelerometer gyro magneto sensor fusion getting filtered/fused location speed output,working project needs tracking location speed pedestrians/runners/athletes robotics see related usage posts robotics domain answer question help follower robots interested location latitude-longitude using gps position noisy/jump samples degradation due trees etc reading filtering solutions understand sensor fusion fuses gps data inertial sensors ins helps improve lot issues kind sensor fusion seems used lot places -- robotics wearables drones etc think shelf chips/modules/solutions find found sensor hub invensense integrates dof inertial sensors comes fusion firmware seem hookups firmware fusing gps providing filtered latitude-logitude looking shelf chips/modules/solutions come built sensor fusion software/firmware gps+ins fusion understand need tuning params calibration,localization kalman-filter sensor-fusion gps,kalman localization filter fusion sensor gps
1615,displacement accelerometer,want use sensor find displacement accelerometer use accelerometer find displacement want use quadcopter,quadcopter imu accelerometer uav,quadcopter imu accelerometer uav
1616,deciding length quadcopter arms,quadcopter arm length affect stability view better control copter arms stresses arms affect lift capabilities,control quadcopter stability,control quadcopter stability
1617,sensor type measures position,building joystick need measure displacement central device mechanical connection edges discussion best way achieve range motion small accuracy important sensors measured impulse response rotational linear potentiometers reliable others arguing using gyros/accelerometers heard hall effect sensors used great effect,control sensors accelerometer,control sensors accelerometer
1618,device need project laser point specific location,searching commercial projector projects single laser point world e.g using moving mirrors struggling sure thing called find area projectors use lasers party equipment laser pointers name device,laser,laser
1619,brushless gimbal motor different regular brushless motor,brushless motors gimbal designed need continual rotation accurate control precise position noticed motors gimbal usual magnetic positions motors primary design differences kinds motor,motor,motor
1620,kalman filter estimating position “direction” measurements,working pose estimation problem like use filtering explain system briefly consists cameras gps/imu module main assumption camera1 fixed stable whereas camera2 pose using computer vision obtain pose metric translation rotation camera2 w.r.t camera1 improve inherent noise gps/imu modules problem translation obtained vision method arbitrary scale i.e given instant obtain unit vector specifies direction translation absolute metric translation camera based estimation accurate idea actual distance cameras gps gives position data example camera east camera pose vision algorithm say north-east camera something hence possible consider gps estimate metric translation covariance ellipse link normalized camera measurements obtain final accurate estimate metric translation sure kind filters happy use measurement absolute value thanks,kalman-filter cameras pose,filter cameras kalman pose
1621,type servo torque calculation required robot arm,trying build 2-axis robot arm pan tilt mechanism gripper/holder hold object weighing grams total weight arm including motors kg decided degree servo motors maximum arm reach mm want ask kind servos analog/digital suitable support total weight kg object weight g calculate required many servos use make sure arm flip please suggest better approach designing robot new electronics first time building robot thanks advance,robotic-arm design servos,servos design arm robotic
1622,mcu architecture design,standards regarding single vs multiple mcu robotic system single mcu handle sensor data actuator controls better use single mcu multiple mcus hierarchical manner references/papers regarding topic arguments looking facts personal opinions pros cons standards,design,design
1623,real-time camera localisation known environment,young researcher/developer coming different non-robotic background research camera localisation came point say lost need help discovered lot slam algorithms used robots etc know unknown environments situation different problems idea time placed known room/indoor environment dimensions known like use handheld camera use predefined landmarks help case put unique stickers walls predefined positions help way faster localisation like get camera position orientation etc realtime hz faster beginning like ask slam algorithm situation start suggestions get real time camera positions known room/environment fast allow camera movements camera person robot thank advance,localization slam real-time,real slam time localization
1624,emax esc simon series arduino,want control brushless motor emax simon series esc arduino leonardo board confused understand beep sounds mean tested many code examples useful,arduino brushless-motor esc,brushless esc motor arduino
1625,olf futaba rx tx apm micro,hi found old rx tx loft need know weather compatible apm micro telemetry give manual control guess need new rx current make hash electronics apm thanks advance enter image description enter image,quadcopter,quadcopter
1626,tune pid k*x system,opinions pid type selection system description comes simple system \mbox output k \mbox input \mbox systemvariable k constant \mbox systemvariable system variable change according time goal whole system maintain system output close possible controller compensate \mbox systemvariable change \mbox systemvariable modeled slow ramp controller description controller input output system measurements modeled band-limited white noise measurements pid controller output goes integrator pid controller calculates change plant input questions original thoughts add pid controller p=1/k enough time controller gets error e calculated compensation controller output e/k matlab auto-tuning give pid relation p pid measurement noises p large system tend rambling due noises p small system tend converge correct value slow make trade-offs prevent system rambling get quick system responses thanks lot,control pid,control pid
1627,absolute flash size calculated microcontroller,working stm32f103c8 flash size using chibios build file binary file using st-link utility program getting dumped microcontroller flash question come code fits flash size .bin calculated attaching picture display compare ch.bin device memory report errors found parts code work fine see problems tried features code nothing breaks behaves someone please explain thanks,microcontroller,microcontroller
1628,irobot create serial cable turtlebot,need irobot create serial cable end mini-din connector end usb turtlebot i. connect bot pc,mobile-robot irobot-create serial roomba,roomba mobile create robot irobot serial
1629,rc servo motors rotate,know rc servo motors designed precise movement d.c. motors continual rotation rc servo motors limited movement rotation made continually rotate say movement limited specific arc depend type rc servo motor seen videos industrial size steppers rotating wondering mg995 rc servo motors test want make sure make purchase keep seeing conflicting information example instructable modify rc servo motor continuous rotation motor walker robot implies rc servo motor rotate else need modify addendum realised digging google highvoltage points answer confused steppers servos addition found towerpro mg995 servo continuous rotation,stepper-motor rcservo,stepper motor rcservo
1630,simple sensor fusion pose estimation,working balancing robot project features low-cost sensors imu measurement states \textbf x _\text imu \left a_x a_y a_z g_x g_y g_z m_x m_y m_z \right ^\text use accelerometer gyroscope readings fused complimentary filter get angular deviation robot upright stable position magnetometer values tilt-compensated yield robots orientation respect earth-magnetic field awful magnetic distortion pretty decent rotational encoders mounted wheels deliver information wheel velocity \textbf x _\text enc \left v_l v_r\right ^\text given measurements want try get robots pose position heading \textbf x _\text rob \left x \theta\right ^\text minor theoretical knowledge ekf kf sufficient derive practical implementation note computational resources limited raspberry pi b+ rtos want avoid using ros non-std libs anybody help approach kind problem,sensors kalman-filter imu sensor-fusion odometry,odometry kalman filter fusion imu sensors sensor
1631,simulation environment conducting visual servoing experiment,want conduct following experiment want set scene kuka lwr4+ arm model object camera overlooking want find pose object using pose estimation move arm towards object general want piece software combination cooperating software reinvent wheel anything available,software simulation visual-servoing,visual simulation servoing software
1632,dispense greasy fluid,agricultural engineering student complete trying build simple mechanism attached drone dispenses grease-type fluid familiar field hard time googling know correct terms search looking mechanism push grease problem carrying necessary weight hectare fluid dispenser mechanism drone looking lightweight dispenser mechanism capable small amounts fluid distributed trees canopy grease need heated flows normal temperatures toothpaste pump syringe-type arrangement fine long control,motor quadcopter design battery actuator,quadcopter battery design motor actuator
1633,determine x-axis z-axis intersecting denavit hartenberg representation,suppose link dimensional chain joints revolutes first revolute joint z-axis global axis second joint x-axis global first link x-axis global second link z-axis global order use dh representation introduced local frame link joint z axis z x axis x frame joint z-axis axis rotation global x clueless determine x-axis joint z intersecting standard procedure find common normal z thanks time,robotic-arm dh-parameters,parameters arm dh robotic
1634,get values imu serial message received simulink uart,try read imu sensor data arduino mega uart serial receive block arduino support package simulink imu send binary packets nmea packets configure output serial recieve block output used displays numbers 0-255. l need help parse coming data contains euler angles want use binary structure n p packet type pt address data bytes d0 ... dn-1 checksum checksum pt byte specifies packet read write operation batch operation length batch operation applicable pt byte used um7 respond commands specific meaning bit pt byte given packet type pt byte data batch bl3 bl2 bl1 bl0 hidden cf packet type pt bit descriptions ... data packet contains data bit set bit cleared ... batch packet batch operation bit set bit cleared length bl bits specifying length batch operation unused bit cleared maximum batch length ... hidden set packet address specified “address” field “hidden” address hidden registers used store factory calibration filter tuning coefficients need viewed modified user bit set avoid altering factory configuration ... command failed cf used autopilot report command failed set packets written um7 address byte specifies register involved operation read operation data address specifies register read write operation data address specifies place data contained data section packet batch read/write operation address byte specifies starting address operation data bytes section packet contains data written registers byte packet states many bytes section possible determine number data bytes packet evaluating pt byte data bit pt byte cleared data data bytes packet checksum follows address hand data bit set data number bytes data section depends value batch batch length portions pt byte batch operation batch length packet data section equal batch length note batch length refers number registers batch number bytes registers bytes long non-batch operation batch length data section equal bytes register data section lengths total packet lengths different pt configurations shown checksum bytes consist unsigned sum preceding bytes packet including packet header read operations initiate serial read registers sensor packet sent um7 data bit cleared tells device read operation address specified packet address byte batch bit set packet trigger batch read address byte specifies address first register read response read packet um7 send packet data bit set batch batch length bits equivalent packet triggered read operation register data contained data bytes section packet example binary communication code uint8_t address uint8_t pt uint16_t checksum uint8_t data_length uint8_t data um7_packet // parse_serial_data.this function parses data ‘rx_data’ length ‘rx_length’ attempts find packet data packet found structure ‘packet’ filled packet data.if enough data full packet provided array parse_serial_data returns enough data packet header found parse_serial_data returns packet header found insufficient data parse whole packet parse_serial_data returns happen serial data received parse_serial_data called.if packet received checksum bad parse_serial_data returns good packet received parse_serial_data fills um7_packet structure returns uint8_t parse_serial_data uint8_t* rx_data uint8_t rx_length um7_packet* packet uint8_t index // make sure data buffer provided contain full packet minimum packet length bytes rx_length return // try find ‘snp’ start sequence packet index index rx_length – index++ // check ‘snp’ found exit loop rx_data index == ‘s’ rx_data index+1 == ‘n’ rx_data index+2 == ‘p’ break uint8_t packet_index index // check see variable ‘packet_index’ equal rx_length loop executed completion found packet header packet_index == rx_length – return // get packet header found check see enough room left buffer contain full packet note point variable ‘packet_index’contains location ‘s’ character buffer byte header rx_length – packet_index return // we’ve found packet header enough space left buffer least smallest allowable packet length bytes pull packet type byte determine actual length packet uint8_t pt rx_data packet_index // bit-level manipulation determine packet contains data batch.we individual bits pt byte specify contents packet uint8_t packet_has_data pt // check bit has_data uint8_t packet_is_batch pt // check bit is_batch uint8_t batch_length pt // extract batch length bits // figure actual packet length uint8_t data_length packet_has_data packet_is_batch // packet data batch means contains ‘batch_length registers // length bytes data_length // packet data batch means contains register bytes data_length // packet data data_length // point know packet check make sure enough data full packet rx_length – packet_index data_length return // get know full packet buffer remains data make sure checksum good start extracting data packet- address rx_data packet_index packet- pt pt // get data bytes compute checksum step packet- data_length data_length uint16_t computed_checksum ‘s’ ‘n’ ‘p’ packet_data- pt packet_data- address index index data_length index++ // copy data packet structure’s data array packet- data index rx_data packet_index index // add new byte checksum computed_checksum packet- data index // see computed checksum matches received checksum // first extract checksum packet uint16_t received_checksum rx_data packet_index data_length received_checksum |= rx_data packet_index data_length // check see don’t match received_checksum computed_checksum return // point we’ve received full packet good checksum parsed copied ‘packet’ structure return indicate packet processed return,arduino electronics embedded-systems matlab,matlab electronics systems embedded arduino
1635,using blob detection v-rep,"trying reproduce tutorial v-rep came problems concerning blob detection complaints matter video believe blob detection stopped working recent v-rep versions unable make work new v-rep user anyone idea implement vision sensor named cam want follow red ball vision sensor detect position ball use control joints steer sensor yaw pitch script follows threadfunction=function yaw=simgetobjecthandle yaw pitch=simgetobjecthandle pitch cam=simgetobjecthandle cam simgetsimulationstate ~=sim_simulation_advancing_abouttostop result pack1 pack2=simreadvisionsensor cam result xtarget=pack2 ytarget=pack2 simauxiliaryconsoleprint string.format \n x xtarget ytarget simsetjointtargetvelocity yaw,1* 0.5-xtarget simsetjointtargetvelocity 0.5-ytarget end end end simsetthreadswitchtiming simauxiliaryconsoleopen debug ,8,1 res threadfunction function err return debug.traceback err end res simaddstatusbarmessage runtime error end run simulation see sensor sees red ball point result meaning detection takes place scene",simulator visual-servoing,visual servoing simulator
1636,calculate jacobian,trying calculate jacobian days details master thesis calculate jacobian tendon-driven continuum robot homogeneous transformation matrices implemented kinematics robot due new structure discrete joint variables continuous parameters want compute jacobian awesome someone provide detailed way compute numerical jacobian 6-dof rigid-link robot rotational joints rrrrrr transfer continuum robot started computing let homogeneous transformation matrix endeffector tip t=\begin bmatrix r r \\ \end bmatrix r rotational matrix contains orientation r \begin bmatrix x z \end bmatrix ^t endeffector position approach compute rows j increasing joints computing difference original joint values dividing increment delta joint-space q \begin bmatrix q_1 q_2 q_3 ... q_6 \end bmatrix q_1 q_1 \delta j x_ increment x_ orig /\delta q_2 q_2 \delta j x_ increment x_ orig /\delta z coordinates get first rows j. know compute last rows refer rotational matrix r. matrix scalar value know handle,jacobian,jacobian
1637,kinematics constrained double pendulum,wondering help problem double pendulum set origin cartesian coordinates head first arm fixed end second arm attached block slides x-axis want derive equations relating pendulum angles distance origin block know go deriving equations constraint x_1 l_1cos a_1 y_1 l_1sin a_1 x_1 y_1 arm joins second arm a_1 angle horizontal arm derive equations end second arm x_2 x_1 l_2 cos a_2 y_2 y_1 l_2 sin attach sliding block end second arm know equation x_2 change think somehow restrict swing angles block moves x direction problem finding equation x_2 attached block moves x- direction,forward-kinematics,kinematics
1638,beginner soldering question,need know couple things soldering primary workspace robotics desk computer little free space in. wondering safe solder small area level ventilation solder desk normal house room desk write next air vent house heating a/c need fan fume sucker thing plan solder little get things stay less bread board soldering header pins wires minimum requirements soldering space ventilation anyone point hobby/beginner level soldering must-haves amazon great thanks,beginner,beginner
1639,rotate dc motor fixed rpm,using microcontroller dc rotate motor fixed rpm let say possible generating pwm calculations relation duty cycle rpm,control motor microcontroller,control microcontroller motor
1640,tell servo motor capable controlled degree degree,want create rotating control mechanism turn surface face direction dad electrical engineer said connecting servo motors looking servo motor want moving decent precision ~1 degree know kinds motors able handle precision challenge servo hold second servo top understand torque rating determines maximum amount force servo exert load figure servo strong math,control servos,control servos
1641,non linear control system,dual sequential loop control system controlling angle rotational joint robot using absolute encoder tuned inner control loop motor working tuning outer loop joint example dual loop controller disturb system response expect kp kp kd add ki term steady state error confused fact second overshoot plot larger first matter adjust parameters seem get rid oscillation velocity joint seen second plot limitation increase kp kd high gearbox becomes noisy noise encoder signal creates larger adjustments position motor working adding filter output using method described code using outer loop static float e joint_setpoint joint_angle e_i += e/0.001 // dt e_d e e_prev /0.001 // dt e_prev e motor_setpoint += k_p e k_i e_i k_d e_d beginning think system able modeled first order equation change implementation control loop advice appreciated ben,pid,pid
1642,arduino mega shield v2.0 compatibility arduino due,title says.. work know due volt limitations want build hexapod servo shield looking http //yourduino.com/sunshop2/index.php l=product_detail p=195 compatible alternative shield work seem much due,arduino,arduino
1643,telemetry apm xbee,transmission telemetry data ground base station arducopter using xbee documented documentation telemetry-xbee specify xbee version used checking guess version p2p link others like know xbee modules people use flying drones problems apm connection control drone using xbee link mavlink protocol,quadcopter radio-control mavlink,quadcopter control mavlink radio
1644,inverse kinematics solution serial arm,joint robot arm structure meet requirements closed form solution consecutive axes intersecting point parallel axes ... best method adopt get solution less estimation accuracy assuming computation done average laptop intel core i3 ram,inverse-kinematics,inverse kinematics
1645,robot localization sensors,possible localize robot sensors odometer servo motors assume robot dc motors obstacles,localization mapping,mapping localization
1646,positioning sensor,like locate position stationary autonomous robot x-y-z axis relative fixed starting point someone suggest sensors suitable application hoping move robot space able locate position rate position update important like stop robot moving relay information range looking km better +/- cm system thanks help,sensors imu,sensors imu
1647,robot path planning,goal move robot certain points shown figure initial position x0 move coordinates able track robot position using camera connected pc camera located top arena mounted ir beacon robot camera find beacon locates coordinate cm arena using coordinate move robot position say new position x1 y1 robot arduino mega dc motors communication pc robot done using bluetooth update thanks chuck answer doubts regarding turning angle robot position setup shown image xc yc current position xt yt target position want align robot direction target coordinates calculate atan2 target current coordinates angle remains current position changing respect target point assume robot makes rotation current position update path points show image initial heading angle assumption correct starting point update thank patience time struck turning code goes //current points float xc -300 float //target points float xt -300 float yt -300 //turning angle float turnangle void setup // pin setup serial.begin void loop turnangle yt-yc xt-xc //calculate turning angle turnangle turnangle //convert degrees turnangle turnangle turnangle-360 turnangle -180 turnangle turnangle+360 turnangle -10 //turn right turnangle //turn left angle -90 robot makes right turn loop current point angle changing think missing something,arduino navigation,navigation arduino
1648,charge lipo nano tech battery imax b3 charger,charge lipo nano tech battery imax b3 charger battery,battery lithium-polymer,battery polymer lithium
1649,multiple ekfs big,let say like use ekf track position moving robot ekf estimate position variables affecting position estimate example imu biases wheel radius wheel slip question better use big ekf state vector containing estimated variables multiple smaller ekfs responsible tracking subset variables estimated difference example ekf split tracking position estimating wheel radius slip estimating imu biases position course use estimations output concurrent ekfs vice versa seems easier tune test multiple smaller ekfs big advantages/disadvantages execution time ease debugging etc assuming resulting estimates equal approaches least thanks michael,kalman-filter ekf,filter ekf kalman
1650,recommendation high precision attitude measurement sensors,new field looking high precision gyroscopes accelerometers attitude measurements.the precision requirement deg/s dynamic done digging single integrated mems sensor costing much heavy math needed fine.i need make sure prefect sensors chosen budget less help thanks advanced,sensors research,sensors research
1651,wall following using hokuyo lidar sharp ir sensors,mobile robot like follow walls room map room wheel encoders odometry kalman filter fusing data wheel encoders imu hokuyo lidar localization obstacle avoidance kinect see obstacles seen hokuyo amcl localization couple sharp sensors side wall following planning use global local costmap localization robot perfect robot think closer wall wall following fail planning use data hokuyo lidar sharp sensors wall following maintain constant distance wall say cm like know best technique wall following manner deal issue open gaps wall open doors etc.. wall following using approach know general question suggestions regarding appreciated please let know information update trying wall following given room vertices room global reference frame example lets say map room shown want make robot follow wall say cm wall open space bottom left robot go adjacent room keep wall following given room boundary limits room use make sure robot given room approach thinking come initial global path set points wall wall following make sure robot goes point making sure maintains certain distance wall wall robot follow global path assuming localization good sure implementation complexity better algorithm/ approach something,sensors localization navigation,sensors navigation localization
1652,compatibilty setup,building quadcopter components intend buy motor emax bl2212 kv brushless outrunner motor kg thrust flight controller multiwii v2.5 flight controller propellers know get fut-electronics propellers collection gps skylab uart gps module skm58 small form factor radio communication radio telemetry mhz affordable alternative buying radio telemetry using wi-fi escs esc speed controller quadcopter battery know choose questions components compatible battery choose planning gps planned missions gps important anything else way intend attach camera smart-phone video capturing think extra grams,quadcopter multi-rotor uav,quadcopter rotor multi uav
1653,name combinatorial,decomposition methods motion planning given name combinatorial motion planning,motion-planning,motion planning
1654,axis rotation imu,using imu gyro accelerometer magnetometer found smartphones detect differences tilting device say different parallel axis positions clarify axis rotation sensor motion contains translational component distance position axis extracted imu data data fusion algorithm,imu accelerometer gyroscope magnetometer,magnetometer imu gyroscope accelerometer
1655,hand eye calibration solver,rig good estimate static transformation camera joint based cad errors hoping fix hand eye calibration started generating data based transformation papers reading want solve ax xb problem converting b dual quaternions simplifying equation something n_a xn_b n_a n_b eigenvectors corresponding eigenvalue b rotations generating data tested data collection correct validated checking ax xb b generated used camodocal library try solve problem got -0.457069 -0.999965 -0.00813605 -0.00196822 -1.74257 -0.889394 -0.457069 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- /hand_eye_calib_node actual transform -1 -0.070465 -1 actual transform based b data tried implementing tsai-lenz horaud dornaika nonlinear optimization techniques using lm solver avail get correct transformation solvers wondering point hand eye calibration library paper worked,kinematics calibration,kinematics calibration
1656,book mechanisms,wanted know archive mechanisms contains brief description mechanisms type motion forces involved lengthy derivations stuff,mobile-robot mechanism,mobile robot mechanism
1657,tuning pd line follower,trying make line following robot using atmega328p mcu pololu motors pololu qtr6-rc sensor li-po code /* linefollower.c created author mikk */ define f_cpu //we running clock define numberofbuttons define readport portc define readddr ddrc define readpin pinc // lines connected pc0 pc5 define maxticks define qtrcnt include avr/io.h include util/delay.h include avr/interrupt.h include mikk/button.h include mikk/qtrrcsensors.h int basespeed int maxspeed const float kp const float kd uint8_t mode //indicates mode program uint8_t rmotorspeed // uint8_t lmotorspeed //motors void button void void setmotors int ml int mr ml maxspeed //make sure speed range left motor ml maxspeed ml -maxspeed ml -maxspeed mr maxspeed //make sure speed range right motor mr maxspeed mr -maxspeed mr maxspeed ml //if left motor speed positive drive motor forwards lmotorspeed ml ml == //if left motor speed stop motor lmotorspeed mr //if right motor speed positive drive motor forwards rmotorspeed mr mr == //if right motor speed stop motor rmotorspeed void emitterson void //function turning emitters portd |= pind0 void emittersoff void //function turning emitters portd pind0 void ledon void //function turning led portb |= pinb5 void ledoff void //function turning led portb pinb5 void stop void //stop everything ledoff setmotors emittersoff void calibration void //calibration takes seconds //turn led ledon //turn emitters emitterson // reset minimums maximums int qtrcnt i++ qtrmax qtrmin maxticks //calibrate sensors int i=0 i++ calibrateqtrs _delay_ms //turn emitters emittersoff //turn led void start void //turn led ledon //create necessary variables int power_difference float error float lasterror float derivative int position //turn emitters emitterson _delay_ms //wait pull hand mode == //check mode change button //read position position readline //make calculations error position derivative error lasterror //remember last error lasterror error //calculate power_difference motors power_difference error/ kp/100 derivative* kd/100 //make sure power difference correct range power_difference basespeed power_difference basespeed power_difference -basespeed power_difference -basespeed //drive motors power_difference setmotors basespeed-power_difference/2 else power_difference setmotors basespeed+power_difference/2 basespeed-power_difference power_difference == setmotors maxspeed maxspeed void button void char buttonstate //check current button status buttonstate buttonreleased pinb //check button pressed buttonstate //pin change low high mode++ mode == calibration void pwminit void //set fast-pwm mode inverting mode timer0 tccr0a |= com0a1 com0a0 wgm00 wgm01 com0b1 com0b0 //set fast-pwm mode inverting mode timer2 tccr2a |= com2a1 com2a0 wgm20 wgm21 com2b1 com2b0 //set timer0 overflow interrupt timsk0 |= toie0 //set timer2 overflow interrupt timsk2 |= toie2 //enable global interrupts sei //set timer0 prescaling tccr0b |= cs01 //set timer2 prescaling tccr2b |= cs21 int main void ddrb |= //0b00101010 ddrd |= //0b01101001 ddrc |= //clear port portd |= //enable pull-up resistor portb |= pinb1 initqtrs pwminit //blink times indicate ready int i=0 i++ portb ^= pinb5 _delay_ms button mode == stop mode == start mode mode //update ocrnx values isr timer0_ovf_vect ocr0a rmotorspeed isr timer2_ovf_vect lmotorspeed qtr library ifndef qtrrcsensors define qtrrcsensors define slow define static inline void initqtrs void tccr1b cs11 uint16_t qtrtime qtrcnt qtrmax qtrcnt qtrmin qtrcnt static inline void readqtrs uint8_t forceslow uint8_t lastpin done qtrcnt i++ // previous times readddr |= // set pins output readport |= // drive high _delay_us // wait charge capacitors readddr // set pins input // turn pull-up registers tcnt1 // start timer lastpin readpin tcnt1 maxticks done qtrcnt || forceslow // forceslow take maxticks time lastpin readpin // pins changed lastpin readpin qtrcnt i++ qtrtime == lastpin // pin go low first time qtrtime tcnt1 done++ done qtrcnt // timed set pins go low qtrcnt i++ qtrtime == qtrtime maxticks void calibrateqtrs void uint8_t j j j j++ // take readings find min max values readqtrs slow qtrcnt i++ qtrtime qtrmax qtrmax qtrtime qtrtime qtrmin qtrmin qtrtime void readcalibrated void uint8_t uint16_t range readqtrs fast qtrcnt i++ // normalize readings relative min max qtrtime qtrmin // check reading calibrated reading else qtrtime qtrmax qtrtime else range qtrmax qtrmin range // avoid div min max equal broken sensor else qtrtime int32_t qtrtime qtrmin range uint16_t readline void uint8_t online uint32_t avg // weighted total long division sum // total values used division static uint16_t lastvalue // assume line way left arbitrary readcalibrated avg sum qtrcnt i++ // following white line set qtrtime qtrtime qtrtime // average values noise threshold avg += uint32_t qtrtime sum += qtrtime qtrtime // see line online online // last read left center return lastvalue qtrcnt-1 *1000/2 return // last read right center return max return qtrcnt-1 lastvalue avg/sum // chance div online true return lastvalue endif trying find kp constant robot turns line spot kp follows staright line wobbles lot take corners tried increase kd times kp change get working robot track want follow,pid line-following avr tuning,following line pid tuning avr
1658,total hand calculations procedure formulaes mega-quadcopter,student taking mega-quadcopter final year project.can u please help total hand calculations mega-copter i.e procedure formulaes wanted know calculate dimensions frame specifications motor propeller rating esc power rating batteries total no.s.i want direct answers procedure formulaes.i want lift aload 20-30 kgs .please feel free help,quadcopter,quadcopter
1659,orthogonal projection laserscanner data,discovered ros-package http //wiki.ros.org/laser_ortho_projector need using ros need done package information range measurement r angle theta measurement point degree laserscan orientation roll pitch yaw angles laserscanner yaw important ignored get head project points ground plane mean easy measurement point align roll pitch axes know points solution thought convert measurement point r theta cartesian coordinates x z vector use rotations matrices create rotation matrix rotation roll axis roll angle pitch axis multiplay bot matrices multiply x z vector orthogonal projection measurement x z vector z=0 convert x vector polar coordinates r theta step complicated rotation matrices change according sign roll pitch angles like note value role pitch angles unambiguity rotations.. easier elegant way solve problem guess problem solved robot application uses 2d-laserscanner fixed axis find solution glad anyone point right direction kind regards,quadcopter slam,quadcopter slam
1660,pid values keep,built quadcopter problem balancing doesnt goes using pid techniqe balancing finding suitable values pid tuning using mpu6050 sensor get accelerometer values x axis find error lets say accel x error cause zero balanced using +-2g sensitivity scale accelerometer motors using dji kva values kp ki kd set cant set flight cause balance design home made modified little photo balance z short pid short error v error desired-current //error/=390 integ += error der error perror x=error x2=integ x3=der x*=kp x2*=ki x3*=kd v=kpi x/=100 v=kii x2/=1000 v=kdi x3/=1000 x=x+x2+x3 //x/=390 perror error return x questions scale error pid output error ranging setting scaling divide error pid value,quadcopter pid balance,quadcopter balance pid
1661,erector sets function normal servo motors,need basic erector set parts fit servo motors dc motors looked minds-i basic set looks good know function servos hot glue extensive modifications matters making bipedal robot require wheels anything pre-built need basic set add build whole bunch different robots,mobile-robot rcservo,mobile robot rcservo
1662,air hockey robot opponent,right place post goes title states planning building desk doubles air hockey table robot side robot mounted rail able go using linear actuator able attack puck using servos real problem detect puck location idea table tiny holes corners square fit laser bottom part table laser square location reflected ceiling table laser diodes replaced planning matrix reading signals ldr columns rows performing logic locate center puck problems see performance flaws plan see tons flaws done tiniest bit accurate regarding laser diode position center holes easy going place according estimations going 300-700 laser diodes depending planning putting lasers opponent side entire board costly imagine ... huge problem hassle wiring forget pcbs project area large thought numerous way lessen using color sensor get x-axis location laser situated negative x-axis pointing positive x-axis locate puck location comparing ideas advantages get 3d-like graphical representation 3d-like controls 3d-like reality lasers plotted x axis facing z-axis project going room desk situated automated room thinking making desk modes toggle game takes advantage lasers controls control desk room ordinary desk mode air hockey mode question request anyone idea regarding able locate puck x location real time edit table roll-able stored underneath loft bed under-area height means go grande vertical solution edit thanks helpful people come conclusion using camera camera smartphone create app tracks object color fixed size comparison identify distance robot puck phone process send signals phone anchored end robot moving part camera reminiscent games first-person view incoming problems looking delay given processing,sensors microcontroller design electronics laser,laser sensors microcontroller design electronics
1663,calculate vehicle detection distance,like know calculate distance car run application autonomous vehicle real time addition want know implement calculation c++ see images know distance vehicle know code make calculations vehicle please check photo trying achieve,control sensors localization ros cameras,control sensors ros cameras localization
1664,series xbees talk x-ctu,series xbees transparent mode command mode x-ctu asked help answer telling flow control xbees configured dl settings thinking shorten get command mode stay command mode time get series xbees talk x-ctu need series xbees transparent mode powered,wireless,wireless
1665,ceiling depth monocular camera,camera mounted robot looking upwards want estimate distance ceiling robot moves position landmarks observed ceiling lamps example know structure motion problem confused implement case much simpler case bundle adjustment intrinsic calibration camera existing camera pose changes x directions observed thing planar ceiling odometry available like start solving know libraries offer good simple api thing based levenberg-marquardt similar optimization algorithms taking observations python bindings nice,cameras 3d-reconstruction,cameras reconstruction
1666,buy continuous servos absolute positioning,looking parts beginners robotics kit teach museum wondering servos buy continuous servos relative position encoders find continuous rotation servos absolute position encoders exist understand forums shopping questions suspect part exist understand understand servos use potentiometer position encoder turn rotation types encoders seem job thanks help,servos quadrature-encoder,quadrature servos encoder
1667,weave weld lincoln electric mig robot,simple question seem find answer setting weave function frequency hz determine fast moves forth words raise frequency move quicker slower factors consider,robotic-arm industrial-robot,industrial arm robot robotic
1668,quadcopter accelerating,project quadcopter use pid stabalizing think going wrong adding pid output motors thrust motors thrust means acceleration reason previous statment quad static air goin time thrust cancel gravity means thrust negative gravity acceleration add pid output thrust acceleration motors wrong add pid speed motors visible quad stabalizing reason see adding pid acc added speed derivate pid output add thrust https //mbasic.facebook.com/photo.php fbid=1545278952394916 id=100007384772233 set=a.1447457675510378.1073741830.100007384772233 refid=17 ft=top_level_post_id.1545278952394916 3a-1394728329505289925 tn=e https //mbasic.facebook.com/photo.php fbid=1545281645727980 id=100007384772233 set=a.1447457675510378.1073741830.100007384772233 refid=17 tn=e drawing circuit giving current esc whole circuit esc pwm wire connected circuit,quadcopter pid,quadcopter pid
1669,image based visual servoing algorithm matlab,"trying implement ibvs explained introduction matlab facing following problem algorithm seems work cases camera change orientation respect world frame.for example try make vertex initial square go closer opposite vertex algorithm work seen following image red x desired projections blue circles initial ones green ones ones get errors dereasing wrong attaching matlab code runable anyone take look grateful took code performing plotting hope readable visual servoing performed least target points problem unique solution willing help suggest take look calc_rotation_matrix function check rotation matrix calculated verify line ds vc euler_ode correct camera orientation expressed euler angles according convention check interaction matrix l calculated function visualservo global a3d b3d c3d d3d b c ad bd cd dd coordinates points wrt camera frame a3d -0.2633 b3d -0.2749 c3d -0.2637 -0.2746 d3d initial projections computed show relation desired ones /a3d b=b3d /b3d c=c3d /c3d d=d3d /d3d initial camera position orientation orientation expressed euler angles x-y-z inertial frame reference cam= desired projections ad=a+ bd=b cd=c+ dd=d t0 tf s0 cam time step euler_ode t0 tf dt s0 end function ts euler_ode t0 tf dt s0 global a3d b3d c3d d3d ad bd cd dd s0 ts= t=t0 dt tf ts end+1 =t cam rotation matrix r_wcs_ccs r calc_rotation_matrix cam cam cam r cam coordinates points wrt new camera frame a3d_cam r'* a3d-r b3d_cam r'* b3d-r c3d_cam r'* c3d-r d3d_cam r'* d3d-r new projections a=a3d_cam /a3d_cam b=b3d_cam /b3d_cam c=c3d_cam /c3d_cam d=d3d_cam /d3d_cam computing l matrices l1 l_matrix a3d_cam l2 l_matrix b b b3d_cam l3 l_matrix c c c3d_cam l4 l_matrix d3d_cam l l1 l2 l3 l4 updating projection errors e a-ad b-bd c-cd d-dd compute camera velocity vc -0.5*pinv l *e change camera position orientation ds vc update camera position orientation ds*dt end ts end+1 =tf+dt end function r calc_rotation_matrix theta_x theta_y theta_z rx cos theta_x -sin theta_x sin theta_x cos theta_x ry cos theta_y sin theta_y -sin theta_y cos theta_y rz cos theta_z -sin theta_z sin theta_z cos theta_z r rx*ry*rz end function l l_matrix x z l -1/z,0 x/z x*y -1/z y/z,1+y^2 -x*y -x end cases work b2=2*b c2=2*c d2=2*d a2=a+1 b2=b+1 c2=c+1 d2=d+1 a2=2*a+1 b2=2*b+1 c2=2*c+1 d2=2*d+1 cases work rotation degrees zoom zoom works better visualization b2=2*c c2=2*a d2=2*b",control algorithm matlab visual-servoing,control visual matlab algorithm servoing
1670,arduino mobile robot,way control arduino robot world robot goes range home wifi wifi shield help way make sure robot internet matter goes,arduino mobile-robot raspberry-pi,mobile pi raspberry robot arduino
1671,complete quadrotor tutorial text book,looking complete tutorial textbook build control quadrotor dynamics control etc. engineer broad background programming mechanics control several years rusty wondering anyone knew great ground tutorial quadrotors found book looks interesting thought ask thanks edit taken formal course necessary topics system modeling mechanics control theory state estimation programming etc looking book assumes reader familiar topics goes step-by-step example stating system equations looking let derive system equations assumes familiar modeling/kinematics start quadcopter side project precious spare time prefer single good reference jumping individual topic textbook greedy,quadcopter,quadcopter
1672,indoor positioning system better,method better term accuracy detection indoor localization drone camera based system wireless techniques wlan bluetooth,slam,slam
1673,pid quaternion contoller,want control attitude roll pitch yaw vehicle capable pitching rolling created quaternion pid controller take current attitude vehicle converting quaternion qc desired attitude quaternion qd calculate input pid controller qr qc x qd imaginary parts quaternions fed force requests roll pitch yaw axes vehicle test simulator control works unstable cases request r p y:60 want work singularities i.e pitch anyone know get behavior explain wrong,control pid stability,control stability pid
1674,continuous vs discrete simulation robotics,know robot sends orders discrete signals computer simulation based continuous simulation know happen important difference comparing reality simulation cases heard cable-driven robots sensitive,control simulation,control simulation
1675,raspberry pi quadcopter drifts crazy,built raspberry pi based quadcopter communicates tablet wifi problem drifts lot thought problem vibration mounted mpu-6050 frame seemed help bit drifts tried tuning pid tuning complementary filter installing real time os nothing seems help code written java suggestions appreciated quadserver.java package com.zachary.quadserver import java.net import java.io import java.util import com.pi4j.io.i2c.i2cbus import com.pi4j.io.i2c.i2cdevice import com.pi4j.io.i2c.i2cfactory import se.hirt.pi.adafruit.pwm.pwmdevice import se.hirt.pi.adafruit.pwm.pwmdevice.pwmchannel public class quadserver private final static int frequency private static final int min private static final int max private static sensor sensor new sensor private static double px private static double py private static double pz private static double ix private static double iy private static double iz private static double dx private static double dy private static double dz private static double kp //2.0 private static double ki //8.5 private static double kd //0.14 private static long time system.currenttimemillis private static double last_errorx private static double last_errory private static double last_errorz private static double outputx private static double outputy private static double outputz private static int val new int private static int throttle static double setpointx static double setpointy static double setpointz static double errorx static double errory static double errorz static long receivedtime system.currenttimemillis private static string data static int trimx -70 static int trimy public static void main string args throws ioexception nullpointerexception datagramsocket serversocket new datagramsocket pwmdevice device new pwmdevice device.setpwmfreqency frequency pwmchannel esc0 device.getchannel pwmchannel esc1 device.getchannel pwmchannel esc2 device.getchannel pwmchannel esc3 device.getchannel /*runtime.getruntime new thread new runnable public void run system.out.println terminating try esc0.setpwm calculatepulsewidth min/1000.0 frequency esc1.setpwm calculatepulsewidth min/1000.0 frequency esc2.setpwm calculatepulsewidth min/1000.0 frequency esc3.setpwm calculatepulsewidth min/1000.0 frequency catch ioexception e e.printstacktrace system.out.println running */ thread read new thread public void run true try byte receivedata new byte datagrampacket receivepacket new datagrampacket receivedata receivedata.length serversocket.receive receivepacket string message new string receivepacket.getdata data +ix adddata iy adddata sensor.readaccelangle adddata sensor.readaccelangle byte senddata new byte senddata data.getbytes inetaddress ipaddress inetaddress.getbyname datagrampacket sendpacket new datagrampacket senddata senddata.length ipaddress serversocket.send sendpacket setpointx double.parsedouble message.split \\s+ *0.7 setpointy double.parsedouble message.split \\s+ *0.7 throttle int integer.parseint message.split \\s+ *12.67 +min kp math.round integer.parseint message.split \\s+ *0.05 *1000.0 /1000.0 ki math.round integer.parseint message.split \\s+ *0.2 *1000.0 /1000.0 kd math.round integer.parseint message.split \\s+ *0.01 *1000.0 /1000.0 trimx integer.parseint message.split \\s+ -50 *2 trimy integer.parseint message.split \\s+ -50 *2 double accelsmoothing // integer.parseint message.split \\s+ *0.05 +1 double gyrosmoothing // integer.parseint message.split \\s+ *0.01 sensor.setsmoothing gyrosmoothing accelsmoothing //system.out.println trimx +trimx+ trimy +trimy system.out.println kp +kp+ ki +ki+ kd +kd+ trimx +trimx+ trimy +trimy receivedtime system.currenttimemillis catch ioexception e e.printstacktrace read.start true arrays.fill val throttle errorx sensor.readgyro -setpointx errory -sensor.readgyro -setpointy errorz sensor.readgyro -setpointz double dt double system.currenttimemillis -time /1000 double accelanglex sensor.readaccelangle double accelangley sensor.readaccelangle dt px errorx py errory pz errorz ix += errorx *dt iy += errory *dt //iz += errorz*dt ix iy dx errorx last_errorx /dt dy errory last_errory /dt //dz errorz last_errorz /dt last_errorx errorx last_errory errory last_errorz errorz outputx kp*px+ki*ix+kd*dx outputy kp*py+ki*iy+kd*dy kp*pz+ki*iz+kd*dz time system.currenttimemillis //system.out.println ix+ +iy+ +throttle add -outputx-outputy-outputz-trimx+trimy //clockwise add -outputx+outputy+outputz-trimx-trimy //counterclockwise add outputx+outputy-outputz+trimx-trimy //clockwise add outputx-outputy+outputz+trimx+trimy //counterclockwise //system.out.println val +val +val +val try system.currenttimemillis -receivedtime esc0.setpwm calculatepulsewidth val /1000.0 frequency esc1.setpwm calculatepulsewidth val /1000.0 frequency esc2.setpwm calculatepulsewidth val /1000.0 frequency esc3.setpwm calculatepulsewidth val /1000.0 frequency esc0.setpwm calculatepulsewidth frequency esc1.setpwm calculatepulsewidth frequency esc2.setpwm calculatepulsewidth frequency esc3.setpwm calculatepulsewidth frequency catch ioexception e e.printstacktrace private static void add double value int val +value min val +value max val += value val +value min //system.out.println low val min val +value max //system.out.println low val max static void adddata double value data += +value private static int calculatepulsewidth double millis int frequency return int math.round millis frequency/1000 sensor.java package com.zachary.quadserver import com.pi4j.io.gpio.gpiocontroller import com.pi4j.io.gpio.gpiofactory import com.pi4j.io.gpio.gpiopindigitaloutput import com.pi4j.io.gpio.pinstate import com.pi4j.io.gpio.raspipin import com.pi4j.io.i2c import java.net import java.io public class sensor static i2cdevice sensor static i2cbus bus static byte acceldata gyrodata static static gyrocalib static double gyrox static double gyroy static double gyroz static double smoothedgyrox static double smoothedgyroy static double smoothedgyroz static double accelx static double static double accelz static double accelanglex static double accelangley static double smoothedaccelanglex static double smoothedaccelangley static double anglex static double angley static double anglez static boolean init true static double accelsmoothing static double gyrosmoothing public sensor try bus i2cfactory.getinstance i2cbus.bus_1 sensor bus.getdevice sensor.write byte sensor.write byte system.out.println calibrating ... calibrate thread sensors new thread public void run try readsensors catch ioexception e e.printstacktrace sensors.start catch ioexception e system.out.println e.getmessage private static void readsensors throws ioexception long time system.currenttimemillis long sendtime system.currenttimemillis true new byte gyrodata new byte int r sensor.read acceldata accelx acceldata +acceldata -accelcalib /16384.0 *9.8 acceldata +acceldata -accelcalib /16384.0 *9.8 accelz acceldata +acceldata -accelcalib /16384.0 *9.8 +9.8 accelz accelz-9.8 double hypotx math.sqrt math.pow accelx +math.pow accelz double hypoty math.sqrt math.pow +math.pow accelanglex math.todegrees math.asin accely/hypoty accelangley math.todegrees math.asin accelx/hypotx //system.out.println accelanglex +accelanglex +accelanglex +accelanglex //system.out.println accelx accelx+ accely+ accelz accelz r sensor.read gyrodata gyrox gyrodata +gyrodata -gyrocalib /131.0 gyroy gyrodata +gyrodata -gyrocalib /131.0 gyroz gyrodata +gyrodata -gyrocalib /131.0 init smoothedaccelanglex accelanglex smoothedaccelangley accelangley smoothedgyrox gyrox smoothedgyroy gyroy smoothedgyroz gyroz init false smoothedaccelanglex smoothedaccelanglex+ accelanglex-smoothedaccelanglex smoothedaccelangley smoothedaccelangley+ accelangley-smoothedaccelangley smoothedgyrox smoothedgyrox+ gyrosmoothing* gyrox-smoothedgyrox smoothedgyroy smoothedgyroy+ gyrosmoothing* gyroy-smoothedgyroy smoothedgyroz smoothedgyroz+ gyrosmoothing* gyroz-smoothedgyroz /*smoothedaccelanglex accelanglex smoothedaccelangley accelangley smoothedgyrox gyrox smoothedgyroy gyroy smoothedgyroy gyroy */ /*smoothedaccelanglex += accelanglex-smoothedaccelanglex /accelsmoothing smoothedaccelangley += accelangley-smoothedaccelangley /accelsmoothing smoothedgyrox += gyrox-smoothedgyrox /gyrosmoothing smoothedgyroy += gyroy-smoothedgyroy /gyrosmoothing smoothedgyroz += gyroz-smoothedgyroz /gyrosmoothing */ anglex += smoothedgyrox* system.currenttimemillis -time /1000 angley += smoothedgyroy* system.currenttimemillis -time /1000 anglez += smoothedgyroz anglex angley time system.currenttimemillis //system.out.println int anglex+ int angley //system.out.println int accelanglex+ int accelangley public static void calibrate throws ioexception int i++ acceldata new byte gyrodata new byte int r sensor.read acceldata accelcalib += acceldata +acceldata += +acceldata += +acceldata r sensor.read gyrodata gyrocalib += gyrodata +gyrodata gyrocalib += gyrodata +gyrodata gyrocalib += gyrodata +gyrodata try thread.sleep catch exception e e.printstacktrace gyrocalib /= gyrocalib /= gyrocalib /= accelcalib /= accelcalib /= accelcalib /= system.out.println gyrocalib +gyrocalib +gyrocalib system.out.println accelcalib +accelcalib +accelcalib public readangle int axis switch axis case return anglex case return angley case return anglez return public double readgyro int axis switch axis case return smoothedgyrox case return smoothedgyroy case return smoothedgyroz return public double readaccel int axis switch axis case return accelx case return case return accelz return public readaccelangle int axis switch axis case return smoothedaccelanglex case return smoothedaccelangley return public void setsmoothing double gyro double accel gyrosmoothing gyro accelsmoothing accel,pid raspberry-pi quadcopter,quadcopter pi raspberry pid
1676,convert classic modified dh parameters,description joint robot classic dh parameters like modified parameters conversion simple shifting alpha columns parameter table row imagine joints lot re-derive parameters classic parameters pulled openrave command planningutils.getdhparameters robot,kinematics dh-parameters,kinematics parameters dh
1677,kp ki kd keep,"// mpu-6050 short example sketch // arduino user johnchi // // public domain include wire.h include servo.h servo firstesc secondesc thirdesc fourthesc //create much servoobject want const int mpu=0x68 // i2c address mpu-6050 int speed1=2000 speed2=0 speed3=0 speed4 int16_t acx acy acz tmp gyx gyy gyz float integ=0 der=0 pidx=0 kp .5 ki=0.00005 kd=.01 prerror dt=100 void setup firstesc.attach // attached servo secondesc.attach // attached servo thirdesc.attach // attached servo fourthesc.attach // attached servo wire.begin wire.begintransmission mpu wire.write // pwr_mgmt_1 register wire.write // set zero wakes mpu-6050 wire.endtransmission true wire.begintransmission mpu wire.write // pwr_mgmt_1 register wire.write // set wakes mpu-6050 wire.endtransmission true serial.begin firstesc.writemicroseconds secondesc.writemicroseconds thirdesc.writemicroseconds fourthesc.writemicroseconds firstesc.writemicroseconds secondesc.writemicroseconds thirdesc.writemicroseconds fourthesc.writemicroseconds delay firstesc.writemicroseconds secondesc.writemicroseconds thirdesc.writemicroseconds fourthesc.writemicroseconds delay void loop wire.begintransmission mpu wire.write // starting register accel_xout_h wire.endtransmission false wire.requestfrom mpu,4 true // request total registers acx=wire.read // accel_xout_h accel_xout_l acy=wire.read // accel_yout_h accel_yout_l firstesc.writemicroseconds secondesc.writemicroseconds 700- pidx/10 thirdesc.writemicroseconds pidx/10 fourthesc.writemicroseconds pid //if serial.available //speed1 serial.parseint //serial.print acx serial.print acx //serial.print acy serial.print acy //serial.println //delay void pidd float error error atan2 acy acz *180/3.14 millis dt now-ptime error error=180-error error error=0-error integ integ+ error*dt der error prerror /dt prerror=error pidx kp*error pidx+= ki*integ pidx+= kd*der pidx pidx=1000 pidx pidx=-1000 ptime program quadcopter tune pid values kp ki kd accelome please point wrong program error signal appropriate please give help choose correct pid tuning limitation connect arduino pc change kp ki kd values remote control available",quadcopter pid,quadcopter pid
1678,irobot create serial battery power,seem able get battery power create spliced original cable came tried use power red/purple yellow/orange power raspberry pi2 luck serial-to-usb cable works able command robot python seems power coming red/purple cables tried multimeter luck moved device passive/safe/full modes power create charging/docked,raspberry-pi irobot-create serial roomba,raspberry roomba create irobot serial pi
1679,homogeneous transformation matrix,trying understand use requires compute homogenous transformation matrix know points different frames origins corresponding frames transformation matrix looks whats confusing compute position vector matrix needs understand vector origin old frame compared new frame calculate obvious answer think subtract o_ new o_ old feel know simple question head get issue right way information know,kinematics frame,frame kinematics
1680,motor diy remote controlled shades,undertaking project build remote controlled shades scratch piece figured know know much motors involved something looking suggestions type motor search imagine need type go stop shade retracted know search help appreciated,motor,motor
1681,factors consider selecting motor free wheeled cart-pole balancing robot,developing small scale cart-pole balancing robot consisting wheels driven single motor base like unicycle wheels constrain balance dimensional problem sure qualities look motor think motor able accelerate directions opposite motion dictated control system sure rapid acceleration correlate higher torque motors faster speed motors think higher torque motors slow react control commands contrast fast speed motors able overcome momentum cart design equations calculations make based robot dimensions weight determine right specs needed robot motor determine right motor specs application resorting brute-force trial error experiments,motor design balance,balance design motor
1682,optimal-time acceleration sequence line-following robot following moving obstacle,"say line-following robot moving obstacle front one-dimensional problem moving obstacle defined initial state sequence longitudinal acceleration changes acceleration function piecewise constant let say robot controlled specifying sequence acceleration changes initial state robot maximum minimum acceleration maximum minimum velocity calculate sequence accelerations minimizing time robot needs reach goal note final velocity zero briefly explain problem addressed point references algorithm described point related problems furthermore solution depend goal position robot brake late possible time avoiding collisions reach goal optimal time formal problem description given position obstacle x_b x_ b,0 \int_ t_0 ^t v_b dt velocity obstacle v_b v_ b,0 \int_ t_0 ^t a_b dt a_b known piecewise constant function a_b \begin cases a_ b,1 \text t_0 \leq t_1 \\ a_ b,2 \text t_1 \leq t_2 \\ \dots \\ \end cases given initial state line-follower x_ a,0 v_ a,0 \in \mathbb r search piecewise constant functions a_a a_ min \leq a_a \leq a_ max v_ min \leq v_a \leq v_ max x_a \leq x_b collision freeness holds times reasonable assumptions e.g v_b \geq x_ b,0 \geq x_ a,0 feasible solutions like pick minimizing \int_ t_0 \infty x_b x_a dt similar objective approximation algorithms ok. numbers like test input http //pastebin.com/izsm2uhb",mobile-robot control motion-planning line-following,control mobile robot motion planning following line
1683,ir receiver,days trying build ir long range receiver use ir phototransistor want use components tsop ... need make daylight filter intensify filtred signal sensor wan use microcontroller someone help idea thanks,sensors,sensors
1684,solution ins gps integration,gps module imu gyro accelerometer magnetometer need build autonomous navigation system quadcopter know position time track predefined path know order improve precision need merge sensors data kalman filter technique matter thing kalman filter way common according research problem stuck know something simple seem find solution least answer basic questions start know get position accelerometer readings filters help eliminate noise minimize integration errors gps readings latitude longitude first question sensor fusion make measurements compatible latitude longitude gps mix displacement given starting point calculate displacement gps readings assume starting latitude longitude update accelerometer applying filter developed simple kalman filter plug new reading values obtain next estimate position wheeled car sources merge filter inputs find function get best estimate average accelerometer gps lost guys examples code use learn easy find articles full boxes arrows pointing direction data flow long equations start get confusing presented article http //isas.uka.de/material/samba-papierkorb/vorl2014_15/si/terejanu_tutorialukf.pdf problems equations seen real life example implementation help topic deeply appreciated thank much,kalman-filter sensor-fusion gps,filter fusion sensor kalman gps
1685,mobile robot path reconstruction using imu acceleration yaw angle,hope help project using skid-steering wheeled mobile robot autonomous navigation find way able perform path reconstruction matlab using robot encoders installed robot yaw rate information come accurate imu sensor mounted robot frame path reconstruction using xbow-300cc sensor problem like try reconstruct path using imu yaw rate imu acceleration values x able obtain velocity distance integrating times imu acceleration values problem know use data use rotation matrix pass imu frame robot frame coordinates asking use rotation matrix encoder values come robot encoder moment use equations robot encoders imu yaw rate tetha yaw +yaw i-1 /2* encoder -encoder i-1 +tetha i-1 trapezoidal integral rx= cos -roll_angle -sin -roll_angle sin -roll_angle cos -roll_angle ry= cos -pitch_angle sin -pitch_angle -sin -pitch_angle cos -pitch_angle rz= cos -tetha -sin -tetha sin -tetha cos -tetha r2=rz*ry*rx disp=r2 encoder_displacement x_r =disp y_r =disp z_r =disp x =x0+sum x_r =y0+sum y_r z =z0+sum z_r use r2 matrix thank lot,mobile-robot kinematics imu navigation matlab,mobile robot imu matlab kinematics navigation
1686,anyone tell things roomba robot clean please,doubt proper ask question apologizing delete roomba robot worked years working producing strange sounds decided clean disassembled point got stuck sort glass things marked red rectangles picture filthy figure clean anyone know remove dust things roomba creators thanks advance,roomba,roomba
1687,wifi module robot,cs student trying implement clustering algorithm work set robots indoor controlled environment starting robotics experiencing figuring work plan get zumo robots plug wifi module wifi shield use inter communication execute algorithm question wifi module plugged work go achieving task see lots arduino boards different names sure works plugged help appreciated,arduino wifi,wifi arduino
1688,safe give pin arduino uno r3 usb cable inserted,safe give pin arduino uno r3 usb cable inserted connected likely start cases gnd coming bec circuit connected esc please help thanks,arduino esc,esc arduino
1689,learning control algorithm cubli,video https //www.youtube.com/watch v=qce5vguj5jg new version see learning part versions trials cubli learn balance new surface,control,control
1690,control real time sensor slow system display,"experiments real time representation sensor position tv experiments used sensors collect real time position tv display sensor position used matlab c++ programming opengl platform programming iteration dat display tv erase draw circle object represent real time position display program collect points points second becuase think refresh rate tv gone thread control realtime system slow system control realtime system slow system understand implement loop question implement matlab/c++ store data sensors points real time display tv help pseudo code appreciate help thank advance please help p.s code display main window using psychtoolbox win=screen setup data collection error calllib hex2dec precord errorhandler error record get precord sensor number count=2 evalc count num2str count evalc count num2str count evalc count num2str count record x position sensor sensornumattached count real time position minus world origin real time position display tv table1 count,1 count -x_world_origin table1 count,2 count -y_world_origin end conversion pixel centimeter ratio x_center_new x_center x_ratio table1 y_center_new y_ratio table1 conversiorn display circle tv represent real time poistion sensor x1 =round x_center_new r_num_data y1 round r_num_data x2 round x1 y2 round display command tv screen win x1 y1 x2 y2 screen win end",design communication matlab c++,communication c design matlab
1691,overheating/jamming mg996r servo,purchased first servo unbranded chinese mg996r servo £3.20 ebay using conjunction arduino servo shield see arrived plugging unscrewed ensured shorter pcb full length pcb found servos seems reasonable facsimile bona-fide mg996r read shame lost link limited life due resistive arc potentiometer wearing test durability uploaded following code arduino sweeps left running minutes order perform simple soak test include servo.h const byte servo1pin servo servo1 // create servo object control servo // twelve servo objects created boards int // variable store servo position void setup servo1.attach servo1pin // attaches servo pin servo object serial.begin void loop pos servo1.write pos // tell servo go position variable serial.println pos delay // waits servo reach position pos servo1.write pos // tell servo go position variable serial.println pos delay // waits servo reach position returned servo making grinding longer sweeping seemed stuck position picked servo whilst hot warm quick sniff revealed hot burning motor windings smell switching external power supply allowing cool servo began work issue occurred little allowing rest re-powering servo continues work reluctant continue soak test don’t want burn motor common “no-no” making servos sweep extreme extreme “play nice” perform sweeps cheapness servo issue powering servo external bench supply capable lack current issue please note follow question mg996r servo extreme position change time,arduino rcservo,rcservo arduino
1692,mg996r servo extreme position change time,question follow previous question overheating/jamming mg996 servo purchased first servo unbranded chinese mg996r servo £3.20 ebay mounting servo horn bracket realised mounted horn tout fait orientation angle bracket servo side switching servo couple times time allowing servo perform say sweeps time noted servo’s extreme positions changing time initial extremes cycles changed bracket parallel body servo surprised assumed positions fixed change time vary time switched seeing stop peg gear connected potentiometer possible,rcservo,rcservo
1693,positioning mobile robot,starting explore idea novice robotics looking position robot possible concrete slab new construction building many walls vertical points reference basic premise robot print floor plans straight slab access bim building information models cad revit files building want robot position possible blank slab using bim files best avenue track adjust positioning robot open space slab low frequency lidar wifi sensors best,mobile-robot sensors localization,mobile sensors robot localization
1694,use specific esc bldc motor arduino uno r3,attempt clean trying use motor esc arduino uno r3 used pwm pins use arduino esc control motor use servo library tried sample code different websites esc beep understand high-low-high high seconds find anything google motor spins short time know sites recommend using flash bootloader prefer use arduino pwm servo library original post specific esc rctimer mini esc16a opto simonk firmware sn16a esc.. using esc discussed above.. rctimer 1806-1450kv multi-rotor bldc motor used pwm pins 11-because similar signal frequency using arduino-esc.. control bldc motor used servo library.. used usual websites example code esc unknowable beep .. di-ri-di di seconds .. find way.. google country websites motor spins certain value short time know motor spins google sites using flash bootloader use arduino pwm servo.. so.. please please help thank reading thread,arduino brushless-motor esc pwm,brushless pwm esc motor arduino
1695,multiple control loops overlapping effects,familiar using pid perform closed loop control single output single error signal well output achieving desired set-point suppose multiple control loops output error signal loops independent particular loop increases actuator signal changes impact output loops system concrete example imagine voltage source series resistor applying voltage system adjustable resistors parallel measure current resistor want control current resistor adjusting resistance course trick adjust resistor resistance changes overall resistance parallel set means changes voltage drop due divider voltage source resistance hence changes current resistors ideal model system predict resistance use resistors solving set linear equations whole point closed loop control want correct various unknown errors/biases system deviate ideal model question good way implement closed loop control model kind cross-coupling,control pid,control pid
1696,covariance optimization,trying build map containing lamps landmarks drive robot monocular camera looking ceiling first step detect edges observed rectangular lamp save position pixels current position odometry robot lamp disappears field view enough base-line reconstruction based structure motion reconstruction done uncertainty position lamps modelled covariance imagine robot driving position estimated odometry high incertitude integrate incertitudes final covariance matrix position lamp understand following covariances camera inaccurate camera calibration matrix inaccurate result optimization drift odometry goal loop closure using example g2o graph optimization think correct covariances needed point,slam cameras 3d-reconstruction,slam cameras reconstruction
1697,sensors mcu vectornav vn300 use,hesitant open mucho- vectornav vn300 see anybody know underlying sensors uses accel gyro mag outputs low-noise compared high end 3-axis mems devices ie kionix kxr94 maxim st lis3mdl everything fits small package guessing using devices integrated axes navigation grade devices tend analog fewer axes enormous compared consumer-level mems automotive mems sensors mention using web pages tend single dual axis less noisy consumer-grade sensors,imu navigation,navigation imu
1698,device generate screen tap response,limited knowledge general topic robotics question shot dark please let know topic unsuitable site interested creating device generate touchscreen tap like replicate touchscreen automated functionality obtain software autohotkey windows jailbreaking phone software solution impossible occurs first components physical device simulates tap options component exist recognize philosophical implications creating device assuming entire conversation theoretical related hardware design thanks alex,automatic,automatic
1699,powering robot battery charged gas/petrol generator robot operating,designed robot perform tasks farms problem sure best way supply continuous power robot motors rated arduino sensors work less charge lead acid battery adapter comes plugged ac output generator robot operating worry overcharging battery use generator dc output supply suggestions information adapter stated package built-in over-charge protection device built-in thermal protection device output generator http //global.yamaha-motor.com/business/pp/generator/220v-60hz/0-1/et950/ first robot big requires lot electrical/electronic knowledge power lot experience field feedback appreciated,electronics power battery,battery electronics power
1700,exclusive inputs control,system inputs throttle brake output speed design controller way outputs controller throttle brake greater accelerate brake thanks,control automation,control automation
1701,connect arduino usb laptop arduino started,sensors attached arduino uno r3 esc start motor attached esc ardiuno usb connected laptop starts start arduino non usb supply esc started means motor doesnt start usb connected pc get sensor values laptop connect usb pc starting motor work,arduino esc,esc arduino
1702,calculate current consumed brushless motor quadcopter,want create virtual quadcopter model struggling come satisfying model brushless motors props let take example based great ecalc tool let say want know much current consumed motor hovering state know mass quad compute thrust produced motor thrust n motor thrust produced moving mass air average speed v thrust rho v² rho air density propeller disk area pi radius² props compute v v sqrt thrust rho m/s right calculate aerodynamic power created propeller p thrust v w right calculate mechanical power produced motor use pconst efficiency term ecalc pmec paero pconst ecalc predicts number imagine use sophisticated hypotheses ... post know power equal pmec vin rm iin iin io know rm ohms io question calculate vin iin course knew rotation speed engine get vin n kv vin kv rpm/v know rotation speed ... note vin assumed averaged pulse-width-modulated output produced esc thanks help,motor quadcopter brushless-motor electronics power,quadcopter brushless power electronics motor
1703,line following robot path planning,built mobile robot several ultrasonic sensors detect obstacles infrared sensor track line path written simple algorithm follow line works fine avoiding obstacles problem robot know path move guaranteed find path line line straight think need use path/motion planning algorithm find way store path robot predict move get path line keep following overcoming obstacle like hear suggestions types algorithms focus specific problem picture help specifying problem facing thank,motion-planning,motion planning
1704,interferences using tof cameras,im using time-of-flight tof cameras ds325 softkinetic creative senz3d time depthsense-sdk point-cloud-library ubuntu got strong interferences possibility control laser software side send light special frequency turn alternating way get rid interferences,cameras laser 3d-reconstruction 3d-model,model cameras laser reconstruction
1705,thermal imaging arduino and/or lego mindstorm nxt,trying build robot sent rooms/buildings detect people using nxt and/or arduino addition like able view robot seeing real-time pc infrared image sensors shortlisted thermal infrared nxt sensor dexter industries £44 rm-g212 thermal array sensor £94 omron d6t mems thermal ir sensor £31 believe roboard omron sensors capable thermography wondering anyone experience sensors give advice thinking using idea project www.robotc.net/blog/tag/dexter-industries case use data read sensor plot graph showing different temperatures,mobile-robot sensors nxt,mobile nxt sensors robot
1706,high-traction thin tires vs wide moderate-traction tires sumo-bot,building sumo-bot competitors thin sticky tires wider less sticky tires diameter gearbox/motor win ps sticky tires https //www.pololu.com/product/694 wide tires https //www.pololu.com/product/62 thanks,movement wheel two-wheeled,wheel wheeled movement
1707,using dc motor generator recharge battery robot,trying recharge lead acid battery dc motor using battery power robot climbs descends notice dont need reverse voltage dc motor backdrives act generator recharge right know need step low voltage generated backdriven motor needed recharge battery board think job https //www.pololu.com/product/799 need make work method concerned stages charging bulk absorption float please advise feedbacks appreciated,mobile-robot battery,mobile battery robot
1708,using slam create topography,small mobile robot lidarlite laser range finder attached servo range finder side-sweeping degree arc taking continuous distance readings side robot perpendicular robots motion goal robot drive parallel wall side-scanning entire time create map wall moving topography map created post processing use r much data processing know popular kind work know slam sounds great tool want issues know robot consistent speed way predict measure speed robot way estimate odometry robot robot move closer wall proceeds path depend steady plane travel robot given odometry data realtive distance wall changes course run possible use slam create maps looking stitching algorithms used applications handle variances relative distance hoping slam algorithm use,slam servos laser rangefinder,rangefinder laser slam servos
1709,sensor orientation external magnetometer,many drones external magnetometers orientation sensors unknown e.g sensor tilted pitch/roll x° yaw wondering calculate rotation sensor relative vehicle application accelerometer gyrometer accelerometer yields vector used calculation coordinate system discrepancy gyrometer used calculation correct orientation compass compass used yaw calculation starting orientation sensors example orientation compass anything someone know good way figure rotation compass,magnetometer orientation,magnetometer orientation
1710,tie quadcopter thing adjust pid axis,stuck adjusting pid quadcopter cant adjust fly get control adjusting attaching quadcopter something method correct pid values required different fly please suggest attach quad thing,quadcopter pid balance,quadcopter balance pid
1711,someone explaine code,static void set_default_param dpmtticparam param param.overlap param.threshold -0.5 param.lambda param.num_cells,c++,c
1712,implement vocal interface arducopter,student working robotics project complete beginner robotics working arducopter structure using ardupilot mega associated ardupilot imu autopilot board easyvr module arduino uno vocal recognition stuff know give order autopilot board vocal module need change arducopter source code use mission planner software final aim,arduino quadcopter ardupilot,quadcopter ardupilot arduino
1713,use multiple batteries vs ubec,use multiple separate batteries vs single battery multiple ubecs trying design power system small 2-wheeled robot main drive motors power arduino raspberry pi couple small servos actuate sensors motors rated peak stall current arduino uses raspberry pi uses servos use peak stall current theoretical max current draw planning use separate lipo batteries using step-down converter power main drive motors peak lipos step-up converter rated handle servos logic discovered ubecs sound good true seem cheap efficient able handle exact volt/current requirements use single high-current lipo ubecs power drive motors sensor motors logic suffer brown-out power irregularities motor much current missing,battery bec,battery bec
1714,much offset speed motors axis required adjusting pid,adjusting pid much speed motors required adjusting pid need give much offset speed cancels weight sure cant start adjusting pid speed motors,quadcopter pid,quadcopter pid
1715,robot arm reachability pose cartesian space,given set robot joint angles i.e \textbf q q_1 ... q_n calculate resulting end-effector pose denoted \textbf x _\text eef using foward kinematic map let consider vice-versa problem calculating possible joint configurations \textbf q _i desired end-effector pose \textbf x _\text eef des inverse kinematics yield many solutions comes interested solution meaning pose reachable robot mathematical method distinguish pose cartesian space reachable rank jacobian furthermore find reachability test case certain joint angle limitations,mobile-robot robotic-arm kinematics inverse-kinematics jacobian,inverse mobile jacobian robot kinematics robotic arm
1716,digital servo motors modified continuous rotation,autonomous mobile robot planning using digital servo motors drive wheels servo motors rotate modified based many tutorials online mention modifying analog servo motors question method ones used modify digital servo motors thanks,mobile-robot rcservo,mobile robot rcservo
1717,robot wire follower position wire,designing lawn mower robot perimeter stage electronic part done works good comes software need advice deal problem line following mean robot line parallel line easy manage situation robot driving approaches line wire sensors left right turned respect forward direction robot arrive angle signal amplitude read sensor random.. understand order move position wire ... usual approach idea wire yard mower sensors left right sense signal emitted wire square wave signal khz signal amplitude read sensors mower v wire,line-following magnetometer,following magnetometer line
1718,simpler way ros dof dynamixel arm control,dof arm build dynamixel herculex smart servos need move gripper cartesian trajectory calculate c++ application looked ros learning curve steep looks major overkill use case need distributed system complexity brings like call standalone c++ library libraries get actuated options limitations using full blown robotics framework ros yarp case edit like code vector point way_points vector pose way_poses compute_cartesian_trajectory way_points way_poses // code execute_cartesian_trajectory way_points way_poses // library call last line spread several library function calls intermediate data structures needed end result gripper following cartesian trajectory given way_points way_poses,robotic-arm ros motion-planning c++,c motion planning robotic ros arm
1719,avoid roomba error code,trying run series roomba large open space recognize large open space throws error code recognize edge -3 fall edge become stuck suggestions,mobile-robot irobot-create roomba,mobile create roomba robot irobot
1720,rotation matrix euler angles gimbal lock,determine angle negate gimbal lock occurs understood gimbal lock remove degree freedom determine degree removed value r rotation matrix size value roll pitch yaw taken equation,motion-planning,motion planning
1721,choosing motors quadcopter frame,bought drone frame q450 glass fiber quadcopter frame http //hobbyking.com/hobbyking/store/__49725__q450_v3_glass_fiber_quadcopter_frame_450mm_integrated_pcb_version.html considering buying ax-4005-650kv brushless quadcopter motor http //hobbyking.com/hobbyking/store/__17922__ax_4005_650kv_brushless_quadcopter_motor.html motor fit frame determine motor fit frame,quadcopter,quadcopter
1722,camera calibration fails run ros,running ros indigo ubuntu mono-camera calibration trying follow camera calibration tutorial ros wiki give following command rosrun camera_calibration cameracalibrator.py -- size -- square image =/my_camera/image camera =/my_camera get following error importerror numpy.core.multiarray failed import traceback recent call last file /opt/ros/indigo/lib/camera_calibration/cameracalibrator.py line import cv2 importerror numpy.core.multiarray failed import thought updating numpy rosdep update difference possible way solve problem update uninstalled reinstalled ros scratch get error look outside ros,ros cameras calibration,ros cameras calibration
1723,wires columns contract passing electricity,background introductory robotics competition college freshmen bot open jars balls ten minutes load balls shooting mechanism project hit upon challenge jar opening intended decided get rack-pinion mechanism unscrewing lid large unable fit bot required dimensions actual question wires rigid columns/things contract ~1 cm electricity passed price range budget list constraints bot edit include wire length column length cm wire needs contract,mechanism,mechanism
1724,ekf-slam shrink covariance matrix direction,implemented ekf mobile robot x theta coordinates problem detect landmark like correct estimate defined direction example robot travelling plane meets landmark orientation degrees want correct position estimate direction perpendicular landmark i.e degrees position estimate update x_posterior normal case store x_temp calculate error x_temp x_prior project error vector direction perpendicular landmark add projected quantity x_prior working covariance matrix want shrink covariance direction perpendicular landmark thank help,mobile-robot slam kalman-filter ekf,kalman mobile ekf robot filter slam
1725,velocity end-effector,joint velocities constant equal \dot \theta \dot \theta compute velocity end-effector \theta_ =\pi/2 \theta_ \pi/6,robotic-arm,arm robotic
1726,quadcopter stability vs pid error signal lag sample time,question asking effect stability increasing decreasing sample time lagging error signal pid helps stability degrade,quadcopter pid stability,quadcopter stability pid
1727,uwsim pressure sensor units,attempting use data underwater simulator uwsim provides ros interface simulate number sensors running physical aquatic robot sensors detects current depth robot want simulate data provided uwsim simulated pressure sensor problem uwsim wiki source code find reference units uwsim uses measure pressure said units uwsim use measure pressure appreciate general information units uwsim uses data provided virtual sensors,ros simulation underwater,underwater ros simulation
1728,balancing robot control model,trying find control model system balancing robot purpose project control \theta_2 motors wheels i.e torque τ started dynamic equations went transfer function find pid gains control robot keep balanced optimum response time interested finding transfer function dynamic model example https //www.youtube.com/watch v=fdsh_n2yjzk sure free body diagrams wheels inverted pendulum robot body calculations dynamic equations \begin array lcr m_1 \ddot x _1 f_r f_ \rightarrow \\ m_2 \ddot x _2 f_ \rightarrow \\ j_1 \ddot \theta _1 f_r r \tau \rightarrow \\ j_2 \ddot \theta _2 \tau mgl\theta \rightarrow \mbox linearized pendulum \\ \end array kinematics x_1 r\theta_1 \\ x_2 r\theta_1 l\theta_2 \\ equating m_1 \ddot x _1 f_ f_r \\ \frac j_1 \ddot \theta _1 r \frac \tau r f_r yields \frac j_1 \ddot \theta _1 r m_1 \ddot x _1 \frac \tau r f_ \rightarrow equating \frac j_1 \ddot \theta _1 r m_1 \ddot x _1 \frac \tau r m_2 \ddot x _2 \rightarrow \\ using kinematic equations j_1 m_1 r^2 m_2 r^2 \ddot \theta _1 m_2 l r \ddot \theta _2 -\tau \rightarrow \\ equating \begin array ccc \underbrace j_1 m_1 r^2 m_2 r^2 \ddot \theta _1 \underbrace m_2 l r j_2 \ddot \theta _2 \underbrace m_2 gl \theta \rightarrow \\ b c \\ \end array using laplace transform finding transfer function \frac \theta_1 \theta_2 -\frac bs^2 c as^2 \\ substituting transfer function equation j_1 m_1 r^2 m_2 r^2 \frac \theta_1 \theta_2 \theta_2 s^2 m_2 lr\theta_2 s^2 -\tau \\ yields \frac θ_2 τ \frac -1 mlr-b s^2+c simplifying \frac θ_2 τ \frac j_2 s^2-m_2 gl comments -this expresses pendulum wheel i.e dependent pendulums properties -poles real verify instability,arduino control pid wheeled-robot,control robot pid wheeled arduino
1729,balancing plate imu offset center,bought imu new question positioning imu matter differences placing center plate offset center learning topic help appreciated thanks,control sensors imu sensor-fusion,control sensor sensors imu fusion
1730,determining pose ar_track_alvar message ros,using ar_track_alvar package indigo detect ar tags determine respective poses able run tracker visualize markers rviz give following command print pose values rostopic echo /ar_pose_marker get following output indicating poses determined header seq stamp secs nsecs frame_id /head_camera id confidence pose header seq stamp secs nsecs frame_id pose position x -0.238047436646 z orientation x z -0.126455066154 w -0.205573121457 want use poses ros node hence need subscribe appropriate ros message unable get enough information web header files functions use order extract data published message great somebody point reference implementation documentation handling messages useful note ar_track_alvar ros wrapper hence people used alvar outside rosmay give inputs update tried write code task suggested ben comments get error code follows include ros/ros.h include ar_track_alvar_msgs/alvarmarker.h include tf/tf.h include tf/transform_datatypes.h void printpose const ar_track_alvar_msgs :alvarmarker :constptr msg tf :pose marker_pose_in_camera_ marker_pose_in_camera_.setorigin tf :vector3 msg.pose.pose.position.x msg.pose.pose.position.y msg.pose.pose.position.z int main int argc char **argv ros :init argc argv pose_subscriber ros :nodehandle nh ros :subscriber pose_sub nh.subscribe ar_pose_marker printpose ros :spin return get following error /home/karthik/ws_ros/src/auto_land/src/pose_subscriber.cpp function ‘void printpose const constptr ’ /home/karthik/ws_ros/src/auto_land/src/pose_subscriber.cpp:17:53 error ‘const constptr’ member named ‘pose’ marker_pose_in_camera_.setorigin tf :vector3 make *** auto_land/cmakefiles/pose_subscriber.dir/src/pose_subscriber.cpp.o error make *** auto_land/cmakefiles/pose_subscriber.dir/all error make *** error suggestions,ros pose,ros pose
1731,replicate tank/zero-turn steering system small robotic vehicle,working project requires build small vehicle footprint x inches less pounds traverse sand steering system thinking replicating way tanks lawn mowers navigate ability zero-point turns want wheels tracks tank need help implementing idea preliminary thoughts motors motor power wheels side vehicle think require gearing system motor power individual wheel avoid,mobile-robot motor wheeled-robot,mobile robot motor wheeled
1732,copter flight module replace smart phone,want replace flight module smart phone sensors required gyroscope magnetometer etc possible using google android os model control using mobile able write app arduino acting bridge smartphone copter using flight controller openpilot cc3d coptercontrol,arduino quadcopter,quadcopter arduino
1733,robot arm stepper motors tool-chain hobbyist,built simple robot arms home using rc servo motors stepper motors till like build new arm steppers used arduino a4988 stepper drivers gcode calculating inverse kinematics real time think arduino enough powerful searching new tool-chain gcode interpreter inverse kinematics calculation stepper controller see linuxcnc beaglebone black cnc cape expensive hobbyist possibility found possibilities hobbyist implement robot arm working stepper motors,stepper-motor arm,stepper arm motor
1734,settling time large,settling time large sets setpoint large amount time covered large distance settle point gives jerk push returns settle normal duration doesnt shoots little problem settling time move stick front takes huge amount time wrong tried giving p value value pid overshoots get unstable pid program pid values given read channels remote using command pulsein guess taking upto command kp ki= kd= void pid error atan2 lx ly error *= error setpoint1 error millis dt ptime ptime dt /= integ integ error dt der error prerror dt pidy kp error pidy += ki integ pidy += kd der //serial.println error prerror error pidy added subtracted esc speeds,arduino quadcopter pid,quadcopter pid arduino
1735,premade flight controller custom made,interested building quadcopter result obtain autonomous drone interested gps allow remain stationary air fly checkpoints done flight controller need programmed sure flight controllers someone offer materials help get towards goal thanks jacob,arduino quadcopter,quadcopter arduino
1736,embedded frame grabber machine vision fusion,looking find solution save stills cameras communication protocol camera link gige looking lightweight solution save stills require video system tested multirotor application frames saved seconds require lot bandwidth require anything frames store thanks,sensor-fusion uav embedded-systems,fusion sensor systems embedded uav
1737,linear actuators cartesian robots,like make cartesian robot maximum speed -1 x/y plane acceleration -2 accuracy least expected loads x axis expected reliability work hours seen printers belt drive seems precise much backlash screw drive slow types linear actuators available used commercial grade robots i.e http //www.janomeie.com/products/desktop_robot/jr-v2000_series/index.html,actuator industrial-robot cnc,actuator industrial robot cnc
1738,connect ethernet based hokuyo scanner,basic beginner question know trouble connecting hokuyo ust-10lx sensor found terms helpful documentation online tried connecting hokuyo ust-10lx ethernet port lubuntu machine default settings hokuyo ust-10lx ip netmask tried going network manager setting ipv4 settings ip addr netmask gateway route set settings scanner go terminal run rosrun urg_node urg_node _ip_address =192.168.0.10 get output setparam failed contact master localhost:11311 retrying ... fix figure simple misunderstanding end searching find anything get running thank help edit highvoltage pointed running case running problems roscore tried output rosrun command error error connecting hokuyo open network hokuyo open ethernet port thanks,sensors ros rangefinder linux,sensors ros rangefinder linux
1739,aligning datasets drift,dataset contains position information tracking robot environment position data comes accurate optical tracking system vicon similar imu need compare position data integrating imu differentiating optical tracking data main problem systems different reference frames order compare need align reference frames found several solutions general problem aligning datasets seems called absolute orientation problem concern use methods get rotation translation aligns datasets minimizing error whole dataset means compensate extent imu drift interested getting feeling much imu drifts solution seem applicable anyone pointer solve absolute orientation problem want correct drift thanks,sensors localization imu calibration,sensors calibration imu localization
1740,angular velocities rotation matrices,let assume object axis x_ y_ z_ different orientation global frame x_ y_ z_ care position know instantaneous angular velocities object respect frame \omega_o^o \omega_ ^o \omega_ ^o \omega_ oz ^o obtain angular velocity respect global frame \omega_o^s thank,mobile-robot imu gyroscope,mobile imu robot gyroscope
1741,gyro measurement absolute angles,let assume gyro aligned global frame x z know gyro data give angular rate respect gyro axis x z let say got \omega_x \omega_y \omega_z know frames aligned perform following operations \theta_x dt \omega_x \theta_y dt \omega_y \theta_z dt \omega_z \theta_x rotation angle x question update following steps time measurement get related global frame rotated respect gyro frame thank,imu gyroscope frame,frame imu gyroscope
1742,accurate wheeled robot odometry,looking good algorithm/model wheeled odometry estimation encoders wheels tricycle robot imu controller board use mems gyro angular velocity estimation encoders linear velocity integrate get pose hard calibrate gyro drifts due temperature imperfect initial calibration improve pose estimation consider model incorporates encoders gyro heading estimation model slippage sensor noise nice standard model use more/better gyro considering visual odometry,kalman-filter wheeled-robot odometry,filter odometry wheeled kalman robot
1743,robotic arm fail error display festo mitsubishi melfa rv-2aj controller cr1-571,avoid wasting time question want react knowledge industrial robotic arms specific common troubleshooting unlikely fix problem take much time started project mitsubishi melfa rv-2aj robotic arm everything went fine moment replaced batteries controller displays fail respond buttons commands sent serial connection replace batteries robot controller took time get batteries delivered left robot controller withouth power weekend caused problem anyone knowledge mitsubishi robotic arms kinda hoping common problem/mistake anyone experience subject know,robotic-arm,arm robotic
1744,real-time video processing video feed drone camera,working project want run computer vision e.g face recognition live video stream coming flying many commercial drones offer video streams http //www.flyzano.com/mens/ https //www.lily.camera/ etc.. none seem give access video feed real-time processing idea drone carry smartphone processing phone phone camera use digital camera arduino attached drone ideas feasible access video-feed drone question drones offer feature hacked achieve,computer-vision cameras,computer cameras vision
1745,dc motors rov,planning build homemade rov wanted know couple things motors ok use brushed dc motor motor major disadvantages second rpm dc motor aim high rpm low rpm enough specific motor talking http //www.ebay.ca/itm/37mm-12v-dc-600rpm-replacement-torque-gear-box-motor-new-/320984491847 hash=item4abc2aa747 mebeqxxpqmng4-vxmfazp5w good motor propellers rov planning motors propellers downward thrusting forward side thrusting propellers plan use basic plastic blade propellers diameter main question rpm torque aim choosing dc motor,motor,motor
1746,ros moveit virtual joints planar joints prismatic joints,robotic application robot arm mounted omnidirectional mobile platform overall goal get moveit calculate sequence joint movements robot eef reaches desired goal cartesian space order combine robot platform world moveit setup assistant lets assign virtual joints footprint platform world placed strategies select planar joint virtual joint degrees freedom joint information gather joint select fixed joint add prismatic-x prismatic-y revolute-z chain robot model significant differences advantages/ disadvantages approaches,mobile-robot robotic-arm ros motion-planning,mobile robot motion planning robotic ros arm
1747,put sensor cart-pole robot,using accelerometer gyroscope detect angle tilt rate two-wheeled cart-pole robot optimal height place sensors place closer bottom wheels middle center mass top justification optimal choice appreciated,sensors balance,sensors balance
1748,therotical parameters match physical setup constraints modeling robot,working modeling simulation robotic arm obtained mathematical model robot used implement control techniques control motion robot dimensions masses links taken available kit ra02 robot servo joint modeling different parameters plotted joint angles\speeds\torques ... etc point value obtained joint much higher torque limit servo mean design\modeling realizable get close torque value servo torque suggestion,control robotic-arm servomotor dynamics torque,control torque servomotor robotic dynamics arm
1749,torque bandwidth actuated joints affect control systems,rest student team process redesigning exoskeleton building based existing papers reading references low high zero impedance torque bandwith control system measured hz table papers,control design mechanism joint,control joint design mechanism
1750,ways estimate drift rate gyrometer,much literature topic ask someone know ways estimate drift rate gyrometer thinking approaches use low pass filter low cut-off frequency estimate drift angular velocity second use accelerometer calculate attitude dcm angular velocity difference angular velocity gyrometer drift rate nevertheless sure good way get reliable drift rates,sensors gyroscope,sensors gyroscope
1751,connect arduino uno android phone usb cable,possible set communication arduino uno android phone using wire connects android phone arduino,arduino usb,usb arduino
1752,sourcing motors physical dimensions,square tube like place motor motor takes available space inch like find largest motor fit space cobble much housing where/how find motors physical dimensions,motor,motor
1753,crock pot knob turner,crock pot analog knob like find way knob using appliance timer idea begin need help thanks,control sensors stepper-motor,control sensors stepper motor
1754,aerodynamics modeling/simulation software capable consume solidworks model interface matlab/simulink,developing control system aircraft unique design something helicopter dirigible moment model dynamics vehicle aerodynamic effects taken account use following work-flow mechanical model solidworks msc adams dynamics -- matlab/simulink control dynamics vehicle modeled adams control algorithms matlab/simulink adams simulate aerodynamic effects result design control system capable fight small wind disturbances,control simulator uav matlab simulation,control simulation uav matlab simulator
1755,advanced line following robot maze solving,know make line follower video done giving source destination map robot moves based instruction given map procedure mapped path please watch video,wheeled-robot mapping line-following,following mapping line wheeled robot
1756,need mobile robot simulator provides easier odometry funtions,want mobile robot go starting position goal position want calculate pose encoders want know exist simulator provides pose function makes work easier go_to x_coordinate y_coordinate means robot calculate current position leads goal position,mobile-robot odometry simulation,mobile odometry robot simulation
1757,using gazebo installed machine matlab,planning use matlab gazebo course projects tutorials seen till use gazebo using virtual machine ros gazebo installed installed ros gazebo machine os ubuntu installed possible use gazebo machine matlab toolbox thanks,ros matlab gazebo,ros gazebo matlab
1758,difference path planning motion planning,main differences motion planning path planning imagine objective algorithm find path humanoid soccer playing robot ball short possible satisfying specified safety path terms distance obstacles better terminology motion planning path planning,mobile-robot motion-planning humanoid,mobile motion planning robot humanoid
1759,required theory building robotic arm,planning building robotic arm arm specs follows servos move next arm single servo clamp mounted revolving turntable turntable rotated stepper motor turntable mounted baseplate ball bearings allow rotation baseplate mounted caterpillar track chassis baseplate smaller length caterpillar chassis required determining much torque servo produce keeping mind arm able lift weights kilogram considering ball bearings take load arm strong stepper formulas answers overall dimensions concerned entire assembly x x l x w x h finalized arm length aforementioned dimensions give general estimate size,arduino robotic-arm stepper-motor rcservo torque,rcservo torque arduino stepper motor robotic arm
1760,modelling robot deriving equations motions applicable system unstable,someone new learning robotics hope help let say systems inverted pendulum unstable system b pole climbing robot stable system system say dynamic system produces fast motion order control derive equations motions eom supply sufficient input desired output program implement eom enables produce right signal get desired output system b stable system deriving eom cant rely sensor determine output produced want achieve unstable system controlling difficult tolerate erratic system get damaged consequence contrary stable system tolerant towards unpredictable behavior fact stable right think perspective need deriving eom systems b advantages affect programming systems edited examples climbing robot talking i.ytimg.com/vi/gf7hibl5m2u/hqdefault.jpg ece.ubc.ca/~baghani/academics/project_photos/utpcr.jpg,mobile-robot control,mobile control robot
1761,filtering angular velocity spikes cheap gyroscope,like filter angular velocity data cheap gyroscope values used input nonlinear controller quadcopter application interested removing bias readings edit using l2g4200d gyroscope connected i2c arduino uno following samples acquired arduino sent serial plotted using matlab sensor steady plot shows several undesired spikes filter spikes approach spikes attenuated present ... let consider following samples couple fast rotations performed let assume frequency components fast movement ones deal final application discrete fourier transform signal normalized frequency scale second order butterworth low pass filter filter main components signal preserved undesired spikes attenuated factor plot shows slight phase shift ... spikes present improve result thanks edit using board sparkfun find circuit arduino gyro post roll l3g4200d gyroscope arduino matlab added pullup resistors circuit exclude option sensors connected i2c interface working decoupling capacitors installed integrated circuit gyro board using uf please check left side schematic wrong motors separate circuit soldered components protoboard gyro quadcopter body test motors turned interesting sampling frequency used test increasing update freq hz doubled glitching found comments web board topic open comments bottom page ctrl-f virtual1,quadcopter gyroscope filter,quadcopter filter gyroscope
1762,need idea automated sim card switcher,sorry question naive related forum best matching found stackexchange amount sim-cards access single sim-card inserted usb-modem want able access specified card set best way achieve think create device somehow replace current card modem set use several modems know amount cards like automate process programmer engineer everything follows including entire concept switching cards looks pretty weird better solution best come consider building sort conveyor move cards insert ones need feed device looks overkill expensive build uneffective work want idea device replace sim-cards modem better solution problem needed possible required automate receiving sms clients different contact phones simple redirection sms option,automatic automation,automatic automation
1763,transforming angular velocity,following system http //imgur.com/utqswoi range finder gives r_s model model rotate centre mass angular values velocities beta \beta betadot \dot \beta see life figure formula angular velocity range finder frame supposed values listed variables object move vehicle/system pitches stationary,robotic-arm sensor-fusion,fusion sensor arm robotic
1764,filtering imu angle discontinuities,try measure euler angles imu discontinuities happens measurement vibrationless environment shown images someone explain type filter best choice filter type discontinuities,sensors imu matlab noise filter,filter sensors noise imu matlab
1765,designing bar linkage robot plot clock,beginner robotics stumbled robotic clock youtube electrical engineering student interested submitting minor project studied basics inverse kinematics greubler equation bar linkage robot seems bar linkage want know implement bar linkage use inverse kinematics solutions described combined synthesis five-bar linkages non-circular gears precise path generation make robot follow desired trajectory stuck days ... sort help appreciated,robotic-arm beginner first-robotics,robotics first arm beginner robotic
1766,relation pole placement marginal stability,given assignment design full state feedback controller pole placement state space system controllable using matlab/simulink determine required gain k using place command several sets poles use poles negative example p= -100 -200 -300 -400 -500 controlled system starts showing bounded oscillatory behaviour possible negative poles cause marginal stability read possible real part poles equals case,control stability,control stability
1767,kuka fri program using java,trying establish fri connection kuka lbr iiwa know configure fri connection example programs available sunrise.workbench sample code given question pass joint torque values joint position wrench controller using mentioned code find documentation difficult figure sample code explanation clues helpful java code package com.kuka.connectivity.fri.example import static com.kuka.roboticsapi.motionmodel.basicmotions.ptp import java.util.concurrent.timeunit import java.util.concurrent.timeoutexception import com.kuka.connectivity.fri.clientcommandmode import com.kuka.connectivity.fri.friconfiguration import com.kuka.connectivity.fri.frijointoverlay import com.kuka.connectivity.fri.frisession import com.kuka.roboticsapi.applicationmodel.roboticsapiapplication import com.kuka.roboticsapi.controllermodel.controller import com.kuka.roboticsapi.devicemodel.lbr import com.kuka.roboticsapi.motionmodel.positionhold import com.kuka.roboticsapi.motionmodel.controlmodemodel.jointimpedancecontrolmode /** moves lbr start position creates fri-session executes positionhold motion fri overlay motion joint angles joint torques commanded fri. */ public class lbrtorquesineoverlay extends roboticsapiapplication private controller _lbrcontroller private lbr _lbr private string _clientname override public void initialize _lbrcontroller controller getcontext .getcontrollers .toarray _lbr lbr _lbrcontroller.getdevices .toarray // ********************************************************************** // *** change next line friclient ip address *** // ********************************************************************** _clientname public void run // configure start fri session friconfiguration friconfiguration friconfiguration.createremoteconfiguration _lbr _clientname // torque mode command value least friconfiguration.setsendperiodmillisec friconfiguration.setreceivemultiplier getlogger creating fri connection friconfiguration.gethostname getlogger .info sendperiod friconfiguration.getsendperiodmillisec ms receivemultiplier friconfiguration.getreceivemultiplier frisession frisession new frisession friconfiguration frijointoverlay torqueoverlay new frijointoverlay frisession clientcommandmode.torque // wait fri session ready switch command mode try frisession.await timeunit.seconds catch final timeoutexception e getlogger .error e.getlocalizedmessage frisession.close return getlogger .info fri connection established // move start pose _lbr.move ptp math.toradians math.toradians -60 .0 math.toradians .0 math.toradians -60 .0 // start positionhold overlay jointimpedancecontrolmode ctrmode new jointimpedancecontrolmode positionhold poshold new positionhold ctrmode timeunit.seconds _lbr.move poshold.addmotionoverlay torqueoverlay // done frisession.close /** main param args */ public static void main final string args final lbrtorquesineoverlay app new lbrtorquesineoverlay app.runapplication,robotic-arm programming-languages,languages programming arm robotic
1768,trying calculate thrust quadcopter motors,trying calculate thrust quadcopter motors sure parts using lipo pack prop motor max output esc amp thank,quadcopter,quadcopter
1769,trying figure parts buy quadcopter,building quadcopter frame inches feet grams want run elite 5010-274kv multi-rotor motor kv rpm/v lipo cells max current max amps load current weight want use multistar high capacity multi-rotor lipo pack minimum capacity configuration constant discharge peak discharge pack weight props thinking using anyone knows wrong setup work tips pointers beginner drone builder want spend take build work advice appreciated total estimated weight grams pounds chart motor helpful chart price files tab multistar elite 5010-274kv multi-rotor motor thanks advance,battery multi-rotor,battery rotor multi
1770,changing stm32 nucleo board microcontroller,stm32f072rb board microcontroller application chose stm32f103rg bigger ram size flash size remove f072r board put top testing code f103c flash ram size meeting requirement f072r nucleo board lying quick developmental test swap r series pin compatible anyone done microcontroller swapping,microcontroller,microcontroller
1771,differences scara arm design,interested scara arm designs beginner questions find answers comparing professional arms made epson staubli ... noticed actuator used translation z axis end arm hobby arms makerarm project kickstarter use leadscrew actuator beginning arm thought smarter put handling dof begining arm weight end assume companies experience company makerarm like understand like understand kind actuators used arms flx.arm kickstarter project seems using stepper motors say using closed loop control added encoder stepper motors better use stepper instance use dc brushless motors servos saw arms using belts z axis rotation advantage allows put begining arm,robotic-arm design actuator,actuator design arm robotic
1772,need help quadcopter pid,trying make quadcopter arduino angles roll pitch yaw thanks imu degrees filtered complementary filter want apply pid algorithm axis dont know inputs angles degrees angular velocities degrees second calculate errors respect referencies difference best way question pid code seen many people include time codes example derivative term kd× last error-actual error kd× last error-actual error /looptime something similar integrative term difference thank advanced,quadcopter pid,quadcopter pid
1773,low output voltage output l298n,using arduino l298n motor driving ic drive dc motors using lipo battery mah .i connected pwm pins l298n digital high arduino.battery positive terminal connected input negative terminal arduino ground connected ground input ic.also input given arduino ic ground arduino connected gnd pin adjacent int3 pin.motor1 pins connected motors connected right side bot motor2 pins connected motors connected left side bot .appropriate inputs given int1 int2 int3 int4 drive bot direction.but bot moving slowly.the voltage measured motor1 pins connected battery motors running fast.how run fast.please help ... ..,arduino motor,motor arduino
1774,robot arm velocity end effector vs. joint velocities,dof arm whose velocities controlling function force applied end effector software robot allows input desired end effector velocity desired joint angular velocities know found using inverse jacobian benefits using scheme example help avoid singularities better lead accurate control,robotic-arm jacobian force-sensor,sensor jacobian force arm robotic
1775,using device os microcontrollers,im working robot needs image processing analyze data recieves cameras searched arm avr libraries found library micros limited ram hard image data process want know hardware connects win android ... devices make possible device connect actuators sensors thank helping,microcontroller,microcontroller
1776,ardrone navdata reading error,"trying read ardrone using following callback function int state battery void callback const ardrone_autonomy :navdata :constptr msg state msg- state battery msg- batterypercent std state state std :endl std :cout battery battery returing value echo navdata linux terminal topics publishing non-zero value error edit debugging found callback function called wrote subscriber node ros :subscriber sub ardrone.subscribe /ardrone/navdata ,1 callback going wrong",quadcopter,quadcopter
1777,switching scheme vector controlled pmac drive,pmac motors 3-ph volt kw motor control center please suggest time staggered switching scheme order avoid tripping due voltage sag swell flicker etc,power,power
1778,detects animals pir passive infrared sensors,dont know kind radiation animals emit humans emit ir radiations pir sensors help identify humans pls suggest someone knowledge sensors detects animals,arduino raspberry-pi first-robotics,robotics pi raspberry arduino
1779,kk2.1.5 gyro bubble centre,quadcopter controlled kk2.1.5 flight controller flying problems facing problem start arm kk2.1.5 giving throttle starts turning towards direction acceleration checked motor pins locations things correct took look gyro bubble kk2.1.5 wasnt mid crosshair turned quad check bubble centre gave started turning towards direction checked wasnt centre time armed state gyro bubble moves centre giving throttle due quad overcorrects understood gyro centre due vibration fc antivibrate material keep vibrations zero,quadcopter,quadcopter
1780,torque control eye-in-hand visual servoing,papers ibvs camera velocity computed used pseudo-input manipulator e.g work dynamic lagrange model h q \ddot q +c q \dot q \dot q+g q =\tau manipulator taken consideration order compute torque required move joints,dynamics torque visual-servoing,dynamics torque visual servoing
1781,make stepper motor rotate come position certain degress say degrees initial position,tried coding working void loop int int x2 vertical2.currentposition int y-x2 int x1 horizontal2.currentposition int y-x1 horizontal2.moveto z1 horizontal2.run vertical2.moveto z2 vertical2.run problem coding placed loop loop working anyone help figuring problem using accelstepper library coding void loop int dummy=1 dummy==1 int int x2 vertical2.currentposition int y-x2 int x1 horizontal2.currentposition int y-x1 horizontal2.moveto z1 horizontal2.run vertical2.moveto z2 vertical2.run,arduino stepper-motor,stepper motor arduino
1782,optimal trajectory manipulators using optimal control,trying implement direct-multiple shooting method problem objective function tf constraints q q_max v v_max v=dq/dt a_max tau tau_max tau=m q a+b q v +g q c q =r_0-|p-p_0| obstacle avoidance initial condition q =q_0 q_0 given q t_f =q_f q_f given v v t_f =0 understand theory divide variables state variables control variables state variables q v control variable tau time interval generate cubic splines q =a_0+a_1*t+a_2*t^2+a_3*t^3 help implement understand ode construct algorithm example edit make equations clear rewrite based link state variables x1 q1 ··· qn ^t x2 q˙1 ··· q˙n ^t derivatives state variables equal x˙ f x u f f x u q˙1 q˙5 ^t x −1· u − n x know insert cubic polynomials equation system solve ode x =ode45 t_f q_0 q_f,manipulator,manipulator
1783,dof inverse kinematics implementation wrong code,"trying implement inverse kinematics solver baxter arm using pitch dof ygoal value redundant axis revolution part copied slide pseudocode page http //graphics.cs.cmu.edu/nsp/course/15-464/fall09/handouts/ik.pdf def sendarm xgoal ygoal zgoal invjacob np.matrix -2.9082 -16.32 -3.4001 -17.34 ycurrent xcurrent xgoal theta1 left.joint_angle lj theta2 left.joint_angle lj theta3 left.joint_angle lj xcurrent zcurrent forwardkinematics theta1 theta2 theta3 xincrement xgoal xcurrent zincrement zgoal zcurrent incrematrix np.matrix xincrement zincrement change invjacob incrematrix left.set_joint_positions lj currentposition change.index /10 pitch joint left.set_joint_positions lj currentposition change.index /10 second pitch left.set_joint_positions lj currentposition change.index /10 third pitch joint def forwardkinematics theta1 theta2 theta3 xcurrent sine theta1 sine theta1+theta2 sine theta1+theta2+theta3 zcurrent cos theta1 cos theta1+theta2 cos theta1+theta2+theta3 return xcurrent zcurrent logic writing calculated jacobian matrix taking derivative equation seen forwardkinematics method arriving theta1 theta1+theta2 ... .. -370sin theta1 -374sin theta1+theta2 ... ... order arrive numerical values inputted delta theta change theta1,2 radians arrived jacobian numbers .219 -.178 -.142 -0.0678 input matrix pseudoinverse solver came values see invjacob matrix code posted multiplied difference goal end effector applied tenth value joints make small steps goal goes infinite loop numbers way go wrong complete rewrite implementation necessary thank help",inverse-kinematics python joint jacobian,python joint inverse kinematics jacobian
1784,easiest efficient way detect human close range distance make robot follow,thesis regarding robot research requires robot attached linear guide rail robot detect human close range meters distance easiest efficient method components use,sensors wheeled-robot industrial-robot,sensors industrial wheeled robot
1785,connecting mpu-9250 gy-9250 sensor module arduino uno,"using sensor make self balancing robot.at soldered header vcc gnd scl sda imu borad opposite side component mounted.then connecting arduino uno r3 vcc vcc gnd gnd scl scl sda sda first time next aref second time a5 a4 uploaded sketch https //github.com/adafruit/adafruit_adxl345/blob/master/examples/sensortest/sensortest.pde opened serial monitor got test ff ooops detected ... check wiring thought soldered header wrong direction picture videos internet desolder solder iron technique header solder hole remove.then checking continuity pins multimiter resistance mode found resistance scl-sda ,220k scl-gnd ,220k sda-gnd vcc pins multimieter shows range soldered opposit side time components mounted .the serial monitor shows output muiltimeter.so problem soldering need disolder header clean left solder chip quik type desoldering technique opposite side component mounted hope need buy picture opposite side component mounted desoldering resoldering",imu accelerometer gyroscope,imu gyroscope accelerometer
1786,updating firmware kk2,facing problems updating kk2 board used usbasp header connecting pc kk2firmware software fails says valid vid pid values etc please help idea updating firmware used usbasp header connecting kk2 board pc,arduino,arduino
1787,using rgb depth camera locate x z coordinates ball,trying use gazebo modelling couple tasks robot able locate ball get x coordinates terms pixels using simple rgb camera kinect point cloud generated kinect hope find depth perception ball using x coords sent circle recognition rgb camera plan earlier convert x coordinates rgb camera meters using dpi kinect find info much harder object recognition using point cloud hoping stick using rgb camera recognition considering simple hough transform anybody pointers,localization computer-vision kinect cameras gazebo,localization cameras kinect computer gazebo vision
1788,tilt camera using mirrors,tilt camera degrees using mirrors trying add pan/tilt mechanism raspberry pi camera camera uses flat cables unstranded wires strain gauge trust handle repeated bending trying design tilt mechanism allows camera mounted wires move tilting happen trying minimize amount mass need move saw oculus kit actuates mirror tilt laptop fixed webcam trying extend idea trouble working mechanics allow tilt extend degrees oculus mechanism supports tilt degrees mirrors large possible modify support degrees ways bend view camera move actual camera,mechanism cameras,cameras mechanism
1789,propeller drone works hope,propeller drone work good flight stable camera footage drone flight,quadcopter,quadcopter
1790,joint space singularities,like clarify singularity configurations moving robot joint space joint time come singular configuration thanks,joint jacobian,joint jacobian
1791,compute relative pose robots,"compute relative pose robots robots matlab code poser1 poser2 corresponding covariance matrix probability distribution movement robot asociate gaussian distribution co1 diag co2 diag auxiliar functions solve function compose poses x theta function tac=tcomp tab tbc composition transformations given poses ang tab +tbc ang pi ang -pi ang anglewrap ang end sin tab c cos tab tac tab c -s c *tbc function get inverse pose pose function tba=tinv tab tba zeros size tab t=1:3 size tab,1 tba t+2 tinv1 tab t+2 end solution get relative pose compute things pose composed poser1 get poser2 means need get pose_inc satisfy equality tcomp psoer1 **pose_inc** poser2 next code compute relative pose allows poser1 reach poser2 computing relative pose r1 r2 pose composed poser1 reach poser2 pose_inc tcomp tinv poser1 poser2 covariance matrix relative pose uncertainty r1 reach position poser2 c cos poser1 sin poser1 x_1 poser1 y_1 poser1 x_2 poser2 y_2 poser2 jacobians compute covariance relative pose jacf_1 -c -s x_2-x_1 *s+ y_2-y_1 *c -c x_2-c_1 *c- y_2-y_1 *s -1 jacf_2 c -s c computing covariance relative pose c_p12 jacf_1*co1*jacf_1 jacf_2*co2*jacf_2 jacf_1 jacobian define difference poser1 pose_inc jacf_2 jacobian define difference poser2 pose_inc c_p12 covariance matrix r1 move poser2",sensors movement pose first-robotics,robotics sensors pose first movement
1792,running dof inverse kinematics code works matlab python,asked question similar earlier believe new problem working figuring inverse kinematics given x z coordinate adopted jacobian method taking derivative forward kinematics equations respect angles input jacobian take inverse multiply step towards goal distance details look http //www.seas.upenn.edu/~meam520/notes02/introrobotkinematics5.pdf page onwards better picture something code matlab script runs gives solution seconds ycurrent using xcurrent starting position x zcurrent starting position xgoal .5 goal x/z values zgoal .5 theta1 angle dof theta2 angle second dof theta3 angle third dof xchange xcurrent xgoal current distance goal zchange zcurrent zgoal length segment segment segment xchange .02 || xchange -.02 || zchange -.02 || zchange .02 in1 theta1 equations stated link provided in2 theta1+theta2 in3 theta1+theta2+theta3 in4 -0.370*sin theta1 in5 -0.374*sin theta1+theta2 in6 -0.2295*sin theta1+theta2+theta3 jacob in1+in2+in3 in2+in3 in3 in4+in5+in6 in5+in6 in6 invjacob inv jacob xcurrent .3708 sin theta1 .374 sin theta1+theta2 .229 sin theta1+theta2+theta3 zcurrent .3708 cos theta1 .374 cos theta1+theta2 .229 cos theta1+theta2+theta3 xincrement xgoal xcurrent /100 zincrement zgoal zcurrent /100 incrematrix xcurrent zcurrent dx/dz/phi change invjacob incrematrix dtheta1/dtheta2/dtheta3 theta1 theta1 change theta2 theta2 change theta3 theta3 change xcurrent .3708 sin theta1 .374 sin theta1+theta2 .229 sin theta1+theta2+theta3 zcurrent .3708 cos theta1 .374 cos theta1+theta2 .229 cos theta1+theta2+theta3 xchange xcurrent xgoal zchange zcurrent zgoal end python code goes infinite loop gives results looked differences matlab code look exact clue grateful somebody take look point def sendarm xgoal ygoal zgoal lj ycurrent xcurrent zcurrent theta1 theta2 theta3 xcurrent zcurrent forwardkinematics theta1 theta2 theta3 xchange xcurrent xgoal zchange zcurrent zgoal xchange xchange -0.05 zchange -0.05 zchange in1 theta1 equations in1-6 pdf linked inv kinematics section in2 theta1+theta2 in3 theta1+theta2+theta3 in4 -0.370*math.sin theta1 in5 -0.374*math.sin theta1+theta2 in6 -0.2295*math.sin theta1+theta2+theta3 jacob matrix in1+in2+in3 in2+in3 in3 in4+in5+in6 in5+in6 in6 jacobian invjacob inv jacob inverse jacobian xcurrent zcurrent forwardkinematics theta1 theta2 theta3 xincrement xgoal xcurrent /100 dx increment zincrement zgoal zcurrent /100 dz increment incrematrix matrix xincrement zincrement change invjacob*incrematrix multiplying matrixes theta1 theta1 change.item theta2 theta2 change.item theta3 theta3 change.item xcurrent zcurrent forwardkinematics theta1 theta2 theta3 xchange xcurrent xgoal zchange zcurrent zgoal print xchange f zchange f xchange zchange print goals f f f theta1 theta2 theta3 right.set_joint_positions theta1 first pitch joint right.set_joint_positions theta2 second pitch right.set_joint_positions theta3 third pitch joint def forwardkinematics theta1 theta2 theta3 xcurrent .3708 math.sin theta1 .374 math.sin theta1+theta2 .229 math.sin theta1+theta2+theta3 zcurrent .3708 math.cos theta1 .374 math.cos theta1+theta2 .229 math.cos theta1+theta2+theta3 return xcurrent zcurrent,kinematics inverse-kinematics matlab python jacobian,python inverse kinematics matlab jacobian
1793,require force turn servo connected servo,servo motors rigged telescope remote focuser idea turn servo hand use power generated turn geared focuser knob noticed servos connected harder turn servo compared turning tried changing polarity connection hoping help harder turn servo connected anyone know,servos servomotor,servomotor servos
1794,get motors turn raspberry pi,want turn motors using raspberry pi able turn led using gpio pin motors tried using l293d chip instructions link happened first time set circuit motor worked moved pi little motor refused work bought new pi luck circuit bought l298n board fits top gpio pins pi followed instructions video luck motor run pi using aa batteries power motor connecting pi power supply wall problem,motor raspberry-pi,pi raspberry motor
1795,relationship earth frame attitude acceleration quadcopter,quadcopter relationship roll pitch yaw earth frame acceleration x z dimensions earth frame concrete suppose roll \theta rotation earth frame x-axis pitch \phi rotation earth frame y-axis yaw \psi rotation z-axis furthermore suppose gives acceleration produced rotors i.e acceleration normal plane quadcopter f g h a_x f \theta \phi \psi a_y g \theta \phi \psi a_z h \theta \phi \psi a_x a_y a_z accelerations x z dimensions seen number papers/articles giving relationship x z accelerations attitude clear attitude angles rotations earth frame body frame,quadcopter dynamics,quadcopter dynamics
1796,denavit hartenberg parameters articulated manipulator,trying solve kynematics problem manipulator working robotics toolbox matlab created peter corke calculte dh parameters introduce matlab compute fordward kynematics plotted robot guess made mistakes calculating dh parameters attached file see dh frames calculated joint dh parameters frame anyone give clue correct answer image frames calculated robot get matlab using robotics toolbox p.corke,robotic-arm inverse-kinematics forward-kinematics,forward inverse kinematics arm robotic
1797,charger use zippy compact lipo multirotor battery,hello trying build quadcopter school project need finish quick mission trip asked finish take problem figuring charger work zippy compact lipo pack specs battery capacity voltage cell discharge constant burst weight including wire plug case dimensions balance plug jst-xh discharge plug hxt4mm running t4-3d brushless gimbal gopro 3-axis anyone tell good battery run better run main battery thanks advance,quadcopter battery lithium-polymer,quadcopter battery lithium polymer
1798,moatech stepper motor salvage unsure pinout,salvaged moatech bl55k-m01 stepper motor old printer play unsure use pinout listed board pinout reads gnd gnd sgnd st/sp rd clk gain good sure sgnd st/sp rd gain used understand clk know frequency expects moatech e-mail bounced hoping someone coherent datasheet know designations mean,stepper-motor,stepper motor
1799,use slam simple sensors,slam implementations included ros used simple distance sensors ir ultrasonic rangefinders small mobile platform equipped facing ultrasonic sensors positioned degrees -45 degrees 6-dof accel/gryo wheel encoders use play toy slam implementation want waste money kinect less commercial laser rangefinder methods require high-density laser measurements applicable,slam ros,ros slam
1800,way turn sound roomba,working irobot create work others turn robot send oi reset command etc. makes various beeps noises like happen find little annoying sure work like things quiet concentrate work way accomplish turning beeps able re-enable luck,irobot-create roomba digital-audio,create audio roomba irobot digital
1801,quadrotor control system begin,starting assemble quadrotor scratch structure imu accelerometer gyro compass escs dc motors propellers raspberry pi control system lipo battery calibrated motors working ready stuck guess next step dive deeply control system sure begin read articles control using pids know many use need model quadrotor compute kinematic dynamic quadrotor rpi sorry question basic details structure kit calibrated documentation adjust cut voltage lipo battery made tests python code found outputs motors control i2c bus communicate imu problems need rpio library pwm quick2wire-python-api work i2c libraries mit control imu know rpio works python2 quick2wire works python3 know manage code control motors testing code test imu imu learning work use mit library unit includes sensors hmc5883l-fds itg3205 see picture quadrotor said like know handle control system implemented raspberry pi start work python code assemble motors imu control,control pid raspberry-pi quadcopter beginner,control quadcopter raspberry beginner pid pi
1802,torque current control bldc motors,working robotic application want control torque current brushless dc motors many bldc speed controllers find anything related torque current spinning motor actuating robotic joint means need control torque steady-state low-speed finite rotation looking low-cost low weight solution similar texas instruments drv8833c dual h-bridge motor drivers brushed dc motors,brushless-motor,brushless motor
1803,hardware components build modular robot consists several modules,computer science student knowledge robotics project trying find controllers modular robots make specific tasks using evolutionary techniques moment simulator want make physical robots know priori components add robot place modules robot small cubes ... questions components make physical robot arduino batteries sensors ... small robot many batteries need modules communicate wifi put card module want add imu position important mean put middle robot thank much,arduino mechanism,mechanism arduino
1804,easiest precise method make track train,like put train track control movement high precision left right using wireless controller best way,arduino,arduino
1805,small ir distance sensor works black surfaces,anyone recommend ir distance sensor works black surfaces looking something use cliff sensor help small mobile robot avoid falling stairs table thought sharp gp2y0d805z0f work testing found matte black surface register sensor meaning sensor report dark carpet dropoff sharp models better handle much larger expensive type sensor good detecting ledges dropoffs small inexpensive works wide range surfaces,sensors,sensors
1806,create cad files,found cad files create ros turlebot download page .zip shells gazebo sim page ideas files create found,design irobot-create,create design irobot
1807,electronic circuit heating nylon fishing line muscle,trying make artificial muscles using nylon fishing lines see http //io9.com/scientists-just-created-some-of-the-most-powerful-muscl-1526957560 http //writerofminds.blogspot.com.ar/2014/03/homemade-artificial-muscles-from.html produced coiled piece nylon fishing line confused heat seen people say wrap muscle copper wire pass current wire muscle acuates dissipated heat given wire resistance questions regarding heating copper wire resistance low generates little heat metal use circuit build heat wire control heating examples attach battery wire afaik short-circuiting battery heating wire damage battery dangerous safe efficient way produce heat necessary make nylon muscle react read centigrads correct example arduino simple circuit breadboard thanks lot,arduino electronics actuator,actuator electronics arduino
1808,automatic sliding window shutter,want build automatic sliding window shutter need help part selection dimensioning assumptions window width sliding shutter weight kg max speed m/s max acceleration m/s^2 pulley diameter leaving friction need motor nm torque rated speed rpm like use motor controller soft-start jam protection dc motor pulleys timing belts suggest components different setup connect motor pulleys clamping set need additional bearings radial load m=p m=b=p m=p=b m=b=p=b motor p pulley b bearing shaft extend motor shaft use clamp collars couplings width need belts belt profile hdt use update construction aiming resembles seen page pdf numbering,motor design microcontroller automation,microcontroller design motor automation
1809,sizing high current power supplies large robots,researcher lab starting work larger humanoid/quadruped robots several power supplies max rating modified quadcopter maxes current limit half propellers running seems power supplies meant small electronics work low current limits think want look power supplies able higher extended period time unreasonable expensive labs connect psus series get higher voltages thanks input,quadcopter power humanoid,quadcopter humanoid power
1810,xaxxon oculus prime platform using different sbc sold manufacturer,using kit version prime mobile platform sold xaxxon project planning use odroid xu4 running ros problem faced odroid xu4 processor whereas server application ros packages written oculus prime run links documentation server application anyone tell 32-bit variant way run application ros packages odroid single board computer 64-bit architecture able run required packages special configuration motherboard sell case platforms general single board computers ideal situation purchase,ros ugv platform,platform ros ugv
1811,dynamic simulation compliant elements quadruped robot,preliminary design legged robot uses compliant elements legs parallel motors energy recovery impact pair flywheels front oscillate forth generate angular momentum create dynamic simulation robot order able test control strategies build real model simulation package using good things msc adams slow learn lot capability including integration matlab simulink heard simmechanics toolbox matlab nice use decent cad know matlab language familiar simulink used labview,mobile-robot design dynamics matlab simulation,mobile robot simulation design matlab dynamics
1812,kinematic decoupling,kinematic decoupling revolute serial manipulator valid last joints spherical joint literatures talks decoupling manipulators thanks advance oswald,kinematics,kinematics
1813,reduce motor maximum current draw,motor stall current motor controller peak current rating way reduce stall current protect motor controller realize right solution buy better motor controller bit low funds thought putting resistor series motor came value reduce maximum current draw given maximum impedance motor downside harming performance motor reducing stall torque,motor microcontroller current,current microcontroller motor
1814,difference feedforward control,reading murray feedback systems introduction scientists engineers difference feedforward book states feedback reactive error corrective actions taken circumstances possible measure disturbance disturbance influenced system effect disturbance reduced measuring generating control signal counteracts way controlling system called passage makes seem reactive feedforward argue feedforward control uses sensor values produce control signal reactive conditions system finds control different feedback forms reactive control separates illustrative example difference helpful,control,control
1815,powering servomotors requiring,title much says team building robotic arm capstone project engineering degree design similar dobot degrees purchased servomotors requires preliminary research able find power source satisfy purchase individual ac/dc power source servo introduce problems voltage-regulated suggestion received buy computer power source modify output voltage amperage need raises concerns professor running course find dangerous input power servos going overboard costs students thanks,power servos servomotor arm,servomotor servos arm power
1816,build fast quadcopter,risky proyect involves building fastest quad afford im trying get something fast warpquad reading lot quadcopters know buy fit fly problem motors multistar elite 2306-2150kv esc afro race spec mini quanum neon carbon racing frame love looks props cc3d flight controller 40-80c battery radio questions im wrong im missing something read thinking common build racer quad overheat bad consecuences let drain full battery throttle fly least minutes previous conditions get higher c-rating battery find better motors size way improve speed putting battery happen put props know get faster rpm changes noticeable sizes general tips make faster welcome thanks,quadcopter,quadcopter
1817,relative orientation robots,"given robot arms tcp tool center point coordinates world frame x_1 \pi/2 \pi/2 -\pi/2 x_2 -\pi/2 base robots base_ rob1 base_ rob2 coordinates expressed successive transformations x-translation y-translation z-translation x-rotation y-rotation z-rotation none joint axes capable continuous rotations many degrees tcp robot rotate orientation tcp robot calculation \sqrt \pi/2 ^2 \pi/2 -\pi/2 ^2 -\pi/2 ^2 wrong please specify updated relative orientation robots π/2 π/2 −π/2 − −π/2,0 π/2 π −π/2 euclidean distance applied calculate angular distance words programming robot tool frame selected motion match orientation issue move_rel \pi/2 \pi -\pi/2 command executed motion magnitude \pi programming robot world frame selected motion match orientation issue move_rel \pi command executed motion magnitude \pi",robotic-arm kinematics geometry,geometry kinematics arm robotic
1818,mapping camera pose image features visual servoing,robotic arm camera eye-in-hand configuration know relationship body velocity v camera velocities \dot image feature space \dot s=l z v l interaction matrix wondering find mapping called diffeomorphism connects image features vector camera pose x able find possible structured environment understand,mapping visual-servoing,visual mapping servoing
1819,kinematic inverse kinematic ... use,sure understand difference concepts difference concept yesterday trying compute jacobian needed inverse kinematics usual input provided transformation kinematics points p xyz applied transformation matrix given state vector q tool position retrieved ... sure understand concept seem google topics include terminologies makes concepts simple angle calc on.. know much ask form input needed compute jacobian difference inverse kinematics ..,inverse-kinematics forward-kinematics jacobian,forward inverse kinematics jacobian
1820,lifting robotic leg servo,note start put anything planning changes require shape change anything accepted working making walking robot arduino printing pieces need legs needs mobile want power supply huge decided best get leg require servo know get leg move forth want able lift brings leg needs lift foot thing think rotation locking sort gear motor begins rotating clockwise power short motion move object begins moving counterclockwise power short distance servos using rotation go way loop know important peculiar construction foot best lifted straight angle necessary robots unaware thanks time,mechanism motion-planning servomotor legged gearing,servomotor legged motion planning mechanism gearing
1821,approaches indoor robot positioning,understand self-driving cars solutions based lidar video slam robots reserved indoor usage robot vacuums industrial agvs see lidar used irobot latest version uses vslam agvs seem lidar,slam lidar,slam lidar
1822,engineering problems needs solved build potato-peeling robot,ok let say tech request robotic system peeling potatoes design follows arm picking potato holding rotating needed arm holding knife-like something peel skin potato arm picks potato first container holds trash bin peeling puts peeled potato second container simplicity human rinses peeled potatoes need build automatic system first iteration spherical peeled potatoes ok good peel little possible minimize wastes question know building system technical difficulties needs solved robot built edit let assume stick design invent something different solving problem chemistry dissolving skin something know problem peeling potatoes solved means applying friction lot water question asking problems solved two-arms setup using humanlike approach peeling,robotic-arm,arm robotic
1823,connect absolute encoder rotating shaft please see options,hi added options connecting encoder shaft motor gearhead shaft connected using coupling best place encoder avoid backlash coupling gearhead hollow encoder available see option dont know best kind system using arrangements options encoder placed motor,motor,motor
1824,getting pitch yaw roll rotation matrix dh parameter,calculated dh parameter matrix know top matrix rotation matrix dh parameter matrix using https //en.wikipedia.org/wiki/denavit e2 using understand rotating z-axis x-axis explanations extracting euler angles rotation matrixes deal rotations anyone know equations thankful help,kinematics forward-kinematics dh-parameters,forward kinematics parameters dh
1825,recommendation mechanism modeling simulation software,working robotic hand like simulate different joints tendon insertion points starting build googling found things solidworks autodesk seem costly hobbyst understand capabilities cad modelling simulation simulation interactive found things freecad seem abandoned cad simulation requirement interactivity simulation rendering problem commercial software looking reasonable cost hobbyst engineering company software meets requirements several programs specific purpose thanks,design mechanism software simulator 3d-model,model simulator design mechanism software
1826,quadrocopter problem stability,building quadcopter scratch software implemented stm32f4 microcontroller frequency main control loop equals everything finished mounted everything started calibration pids faced problem impossible adjust pid parameters started test lower power enough fly managed fast adjust pid roll increased power problems control came done measurements make test blades worse calibrate problem due vibration fix something cause symptom solve better controls data fusion algorithms use complementary filter acc gyro sensors data fusion roll pitch,control imu accelerometer gyroscope,control imu gyroscope accelerometer
1827,usb interface android device use motor driver,new robotics controlling dc motors android device selected l298n motor controller watching videos got dc motors idea connect android device usb cable help appreciated ref https //www.bananarobotics.com/shop/l298n-dual-h-bridge-motor-driver https //youtu.be/xrehsf_9yq8 ps know programming android,motor usb,usb motor
1828,brushless dc propeller choose,small bot 4-5kg wheels pushed contact bot plan using bru propeller problems selecting right combination please help questions bldc high kv low kv need high rpm low rpm ideal propeller use motor create enough thrust get bot motion keep motion criteria keep mind selecting,brushless-motor,brushless motor
1829,setting gimbal dji wookong-m using separate transmitter receiver,bought wookng-m multi copter wondering possible man system controls main craft transmitter controls camera gimbal transmitter know set gimbal wookong-m use separate transmitter control control waiting 3-axis gopro gimbal arrive control pan control gimbal separate use wookong-m gimbal camera beginner time working wookong-m please keep answers understandable thanks advance,quadcopter,quadcopter
1830,increase resolution signal,say motor want spin revolutions minute say precise sensor detect rpm motor resolution revolution minute produce pwm signal match speed degree precision variables signal parameters adjust get precision possible use additional circuitry motor driver design signal/circuitry specific specifications motor use stepper motor assuming using microcontroller measure motor speed adjust signal real-time maintain certain speed,motor microcontroller stepper-motor pwm stepper-driver,driver pwm microcontroller stepper motor
1831,pole-balancing inverted-pendulum active control,sure posting question correct community relates reinforcement learning apologies reinforcement learning many algorithms exist cart-pole problem balancing mass edge stick connected cart hinge dof td learning q-learning many off-policy methods recent model-based policy search method pilco wondering suppose physics question need active control possible find point cart prevents mass move left right sits atop pole,control,control
1832,modelling point clouds collision detection gazebo,applying path planning robotic arm gazebo chosen use rrt order detect points collision thinking getting point cloud kinect subscriber feeding something octomap collision map import gazebo gazebo plugin import octomap files write next idea feed point cloud mesh generator meshlab turn urdf starting get input somebody experienced right way go keep mind environment static things moving arms thank picture octomap,robotic-arm localization slam kinect gazebo,localization kinect slam robotic gazebo arm
1833,dh parameters kinematic decoupling,possible decouple manipulator question asked earlier believe got right answers show drawings manipulator hesitating setup dh parameters forward kinematics see drawing depicted,kinematics forward-kinematics dh-parameters,forward kinematics parameters dh
1834,trajectory planning algorithm minimizing jerk,order perform cyclic task need trajectory planning algorithm trajectory minimize jerk jounce search trajectory planning algorithms get many different options found satisfies requirements terms values specify extra complicating factor algorithm used online system computing power mpc algorithms possible ... trajectory planning stripped trajectories dimention obstacles field bounds field minimum maximum values x values able specify total time needed reach destination specific time starting end position starting end velocity starting end acceleration maximum values position able specify bounds velocity acceleration jerk jounce comfortable generating trajectory checking values exceeded algorithm used fifth order polynomials checking limits velocity acceleration jerk jounce afterwards set maximum values position problem ... thank advance,control algorithm,control algorithm
1835,length line following robot,building line following robot made different chassis designs main prototype using rectangle base side motors placed side rectangle caster wheel placed middle look following image varying values distance seen stability robot varying driving robot using pid seen chassis designs impossible calculate correct constant values chassis easy word stability meant feeling robot dimensions distance values stability relationship.. equation something used estimate value distance width robot known.. relationship robot weight diameter wheel robot dimensions diameter.. thanks attention,arduino motor pid line-following,following line pid motor arduino
1836,venetian mirror possible autodesk inventor,see things glass mirror autodesk inventor professional possibility venetian mirror side look mirror side look transparent glass,design mechanism 3d-printing 3d-model visualization,visualization model printing design mechanism
1837,humanoid balancing,working humanoid robot solved inverse kinematic relations robot turn fine want move walking seen tons algorithms research papers none make idea clear understand concept zmp method tries get head details required implement real robot plan gait generate trajectories beforehand solve joint angles store feed motors real-time generate everything run-time bad idea imo step-by-step procedure follow get job done crawl way research papers make sense least,mobile-robot stability humanoid,mobile stability robot humanoid
1838,velocity link i+1 respect frame i+1,read several textbooks find good explanation anybody tell velocity link i+1 respect frame i+1 argument velocity link i+1 velocity origin frame i+1 respect introduction robotics mechanics control,kinematics forward-kinematics,forward kinematics
1839,calculate robot heading follow wall avoid obstacles,task involves implementing robot behaviour follow wall avoid obstacles path robot stay desired distance wall stick loose sight robot sensing surrounding ultrasonic sensor oscillating left right filling small length values detected distances degrees reading like calculate heading vector result robot similar shown bottom picture black walls red obstacles blue robot green desired path,wheeled-robot navigation,navigation wheeled robot
1840,pid tuning dof robotic arm,developing dof robotic arm arm vibrating stop moving want reduce thing arm heavy projector lol use spring joints anyone tell select springs supervisor told proper selection springs reduce vibration tune pid parameters joints dynamixel servos pid parameters tunable read article tuning single servo tune parameters whole arm,control pid robotic-arm,control pid arm robotic
1841,change pwm values according encoder output,motor encoder set speed motor change speed encoder readings second fit equation ax^2 bx c x speed value given motor encoder readings second get motor encoder reading counted equal value encoder output get motor calculated using equation pwm input motor vary in-order get desired encoder output want control value using pid controller confused writing equations help appreciated..,motor pid pwm,pwm pid motor
1842,arduino power adapters,shopping first arduino specific goal mind need attach standard servo motors arducam mini camera several leds trying figure power requirements assume usb power sufficient looking ac-to-dc outlet adapters noticed amps vary ~500ma want use batteries recommend minimum amperage setup maximum amperage arduino boards want plug burn plug usb cable power adapter time power drawn cables thanks,arduino power,power arduino
1843,ros kinect data callbacks,get rgb depth data kinect found little tutorial http //wiki.ros.org/cv_bridge/tutorials/convertingbetweenrosimagesandopencvimagespython fine able get data demand callback triggered assuming try get data faster available appreciate help go easy ros jargon learning ... thanks,ros kinect,kinect ros
1844,measure actual speed distance traveled robot external setup,good day clarify intention question solve localization problem popular robotics purpose gather feedbacks measure speed robot external setup purpose able compare speed robot detected encoder actual speed detected external setup trying measure distance traveled speed robot problem experiences slippage encoder accurate kind application mark distance measure time robot reach specified point work stopwatch transfer data analyzed ways great external setup data sent software matlab concern hardware side external setup sensors devices help achieve thanks,mobile-robot control wheeled-robot,mobile control robot wheeled
1845,manipulator end-effector orientation quaternions,following problem given points surface adjust manipulator end-effector i.e pen baxter robot normal surface points get coordinate frame normal vector question use tell manipulator supposed orientation baxter inverse kinematics solver takes x z -tuple cartesian coordinates desired position x z w -quaternion desired orientation set orientation feeling use normal vector n_1 n_2 n_3 calculation,inverse-kinematics orientation,inverse kinematics orientation
1846,order integrate mcl occupancy grid implement grid-based fastslam record data,unclear goes integrating occupancy grid mapping monte carlo localization implement slam assuming mapping process localization process motion generating process called exploration exist necessary record data sequenced time stamps coherence motion u_t map m_t estimated state x_t measurement z_t so.. estimated state x_t function current motion u_t current measurement z_t previous map m_ t-1 confidence weight estimated state function current measurement z_t current estimate state x_t previous map m_ t-1 current map m_t function current measurement z_t current estimated state x_t previous map m_ t-1 question proper way integrating mapping localization processes something record timestamp sequences suppose record data fullslam maintain full history verify sequenced time referred current i.e measurement previous measurement,slam occupancygrid,slam occupancygrid
1847,picture/data tell,implemented model ball-on-plate plant controlling network open loop output excited successive sinusoidal inputs increasing frequencies know plant open loop unstable cool figure captures instability know information glean plant relationship input output state state clipped units,control balance distributed-systems,control balance distributed systems
1848,comparison lifting systems,kind systems used make torso lifting system used robot black part rack pinion lead screw scissor lift triple tree help pro cons system ensure stability way draw current lowering drawing current lifting,mechanism,mechanism
1849,ros kinect depth data duplication,trying get depth data kinect ros project looks arrive done depth_sub rospy.subscriber /camera/depth/image image depth_cb ... def depth_cb data img bridge.imgmsg_to_cv2 data img np.array img dtype=np.float32 img cv2.normalize img img cv2.norm_minmax cv2.imshow depth img cv2.waitkey launch openni.launch openni_launch package publishes depth data get weird warning node seen image complexwarning casting complex values real discards imaginary part understand data type 32-bit floats values appear like depth image corresponds rgb image array size tracking rgb space using tracked coordinates x index depth array thanks edit turns /camera/depth/image published array uint8s actual data floats listed hunt people code uint8s interpreted floats quartered number data points explain image times smaller hence accessing datapoints bounds nan,ros kinect,kinect ros
1850,choosing sampling time pid controller,robotic system controlling arduino heuristic way determine sampling time pid controller considering things compute sketch require time course good sampling time crucial distance sensor needs detect constant rate object moving slow fast good model system tell physical frequency system,pid,pid
1851,mechanical robustness/shock resistance lipo batteries,robust lipo batteries force acceleration withstand failure mechanical shock resistance electrical components used robots imu found datasheets suffer mechanical failure accelerated loaded given values imu m/s^2 wondering similar values known lipo batteries known vulnerable components quantification known claimed vulnerability,battery,battery
1852,open source implementations gps+imu sensor fusion,open source implementations gps+imu sensor fusion coupled i.e using gps module output degree freedom imu sensors -- kalman filtering based find open source implementations imu sensor fusion merge accel/gyro/magneto raw-pitch-yaw found anything includes gps data filtered location speed info,kalman-filter imu sensor-fusion gps,kalman filter fusion imu sensor gps
1853,iphone controlled rc car,r.c car program computer code car perform movements.i like application design.where shows cars path available software code saves lots time,software research,research software
1854,combustion engine controlled remote,control combustion engine using remote control make car controlled using remote,robotic-arm first-robotics,robotics arm robotic
1855,\alpha \sin \theta \beta \frac \theta inverted pendulum problem,preparing exam neural networks example self-organizing maps showed inverted pendulum problem want keep pole vertical part understand f \theta \alpha \sin \theta \beta \frac \mathrm \theta \mathrm let x= \theta y=\frac \mathrm \theta \mathrm z=f solution som three-dimensional surface x z adapt two-dimensional som surface method control given x find neuron k wich w_k w_ k1 w_ k2 w_ k2 w_ k3 f \theta w_ k3 guess use som learn function f like understand f comes means model,control stability machine-learning,control stability machine learning
1856,c advantages c++ robotics,want build robots aim work arduino boards know compatible c c++ wondering language better robotics general know write java fact c++ object oriented makes look better choice c advantages c++,arduino c++ c,c arduino
1857,kinematic computing transformation matrix,moment trying compute transformation matrix robot arm made joints serial robot arm issues l l1 l2 q q_1 q_2 q_3 \frac -\pi \frac \pi based information compute kinematic calculate position joint problem compute angle x z.. transformation matrix using sin cos tan course possible angle corresponds axis correspond tried using steveo compute p_0^ tool using method provided answer somehow mess something value resemble answer given example..,kinematics forward-kinematics orientation,forward kinematics orientation
1858,imu sensor compensation,hi using minimu dof imu gyro accelerometer compass sensor gives pitch roll yaw values slope desktop touch vibration steady axis angle degree x axis time second x axis length seconds fix pitch roll yaw note1 minimu code,sensors imu sensor-fusion,sensor sensors imu fusion
1859,sum_error pid controller,trying implement pid controller question sum_error control short code based pid theory void pid error target current pterm kp error sum_error sum_error error deltat iterm ki sum_error dterm kd error last_error deltat last_error error term k* pterm iterm dterm start commands phase t=0 set target=1.0 controller begins drive motor go target=1.0 phase t=n set target=2.0 controller begins drive motor go target=2.0 question beginning phase error=1.0 sum_error=0 phase sum_error positive beginning phase error=1.0 sum_error positive iterm t=n greater iterm t=0 means curves phase phase different end-user command command drive effort set sum_error anyone tell handle sum_error typical comment appreciated kuei,pid,pid
1860,discontinuity device orientation,discontinuity quaternion representation device orientation using sentral+pni rm3100+st lsm330 track orientation performed following test place device center horizontal rotating plate lazy susan pause seconds rotate plate clockwise pause seconds rotate plate clockwise got output appears discontinuous sample 1288-1289. sample qx qy qz qw sample qx qy qz qw -0.6969 -0.0807 plugging formulas page document corresponds change orientation heading pitch roll heading pitch roll -89° graph heading pitch roll continuous mod output make sense expect discontinuity plot unit quaternions covering space hardware problem interpreting data edit sensor code central.c main.c read python script,sensors calibration orientation,sensors orientation calibration
1861,robotbasic outdated,found website http //robotbasic.org/ talks language used programming things related robotics want make sure worth investing time energy compared languages wipe good nowadays better languages methods going things talks mean site looks old something late pre-2010 heard site wonder relevant,control software,control software
1862,finding cubic polynomial equation joints,professor gave assignment find cubic equation 3-dof manipulator end effector resting moves stops seconds go use jacobian matrix use path planning coefficient matrix solve problem assuming coefficient matrix given original position form taught use path planing original angles given,motion-planning inverse-kinematics motion jacobian,motion inverse planning kinematics jacobian
1863,p gain tuning quadcopter perception p-gain high correct,good day working project using complementary filter sensor fusion pid algorithm motor control viewed lot videos consulted various blogs papers expect setting p gain high low p gain low easy correction easy turn hand p gain high oscillates sample video think high p gain case looks look p gain high https //youtu.be/8rbqkcmvs1k video noticed quad corrects orientation turning degrees 4-5 deg consitent manner overcorrects reason doubt quadcopter react changes checked complementary filter updates filtered angle reading sudden angular acceleration gyro updates long term filtered changes accelerometer right p gain responsible compensating delay formula used complementary filter following float float pitchanglecf= alpha *pitchanglecf+gyroanglevelocityarray.pitch*deltatime 1-alpha accelanglearray.pitch video p gain https //youtu.be/rsbrwulkun4 help appreciated,quadcopter pid sensor-fusion tuning filter,quadcopter tuning pid filter fusion sensor
1864,calculating required torques given trajectory using lagrange-euler,"robot revolute joints shown diagram trying calculate using matlab torque required move answers match expecting denavit-hartenberg parameters \begin array c|cccc joint \alpha \theta \\ \hline \pi/2 \theta_1 \\ \theta_2 \\ \end array trying calculate torques required produce given using euler-lagrange techniques described pages paper t_i inertial \sum_ j=0 ^nd_ ij \ddot q_i d_ ij \sum_ p=max j ^n trace u_ pj j_pu_ pi ^t j_i \begin bmatrix -i_ xx +i_ yy +i_ zz i_ xy i_ xz m_i\bar x_i \\ i_ xy i_ xx -i_ yy +i_ zz i_ yz m_i\bar y_i \\ i_ xz i_ yz i_ xx +i_ yy -i_ zz m_i\bar z_i \\ m_i\bar x_i m_i\bar y_i m_i\bar z_i m_i \end bmatrix trouble tried create simplest example getting wrong attempting calculate inertial torque required accelerate \theta_1 constant rad\over s^2 \theta_2 constant believe remove gyroscopic/coriolis forces made link weightless pseudo-inertia matrix calculated pseudo-inertia matrix link i_ xx mr^2 i_ yy i_ zz ml^2 \over j_2 =\begin bmatrix -1 \\ \\ \\ -1 \\ \end bmatrix expected torque joint t_1 i\ddot \omega \\ t_1 ml^2 \times \ddot \omega \\ t_1 \times1 \\ t_1= nm torque calculated code joint q qdd calct q calc_inertial_torque j qdd t_1= nm problem code t_1 match simple mechanics t_1 key functions called shown function inertial_torque_n calc_inertial_torque n j qdd inertial_torque_n j mnj joint_accel qdd j uij calcuij j ji j ,i uin calcuij n mnj mnj trace uin*ji*transpose uij end inertial_torque_n inertial_torque_n mnj joint_accel end end function u=calcuij j ,j derivative ,j u eye x u u*t ,x end end function derivative dt_by_dtheta -1 dt_by_dtheta*t end realise simple robot complicated process hoping scale dof happy works",dynamics matlab torque,dynamics torque matlab
1865,program nxt brick hit ball,using mindstorm robot nxt brick using graphical interface create program part course robot take includes black line white background end line gap gap semi circular line ball robot hit robot crosses gap robot small code follow black line certain amount time enough time stops gap robot runs second gap robot swings arm hit ball code line-following crosses gap robot stops different place time arm misses ball possible program robot hit ball time/almost time gui things tried using ultrasonic sensor detect ball sensor pick,nxt mindstorms,mindstorms nxt
1866,color sensor alternatives,making white line follower using ir sensor module based taking adc reading arduino uno printing values serial monitor observe values white 25-35 ok. problem arises try detecting surface sensor gives values white 25-40. use color sensor bulky sure get readings faster take finite time sampling pulses someone please tell alternate approach detecting colours possible solution problem edit like add line wish follow width hence plan use sensors outside line sides centre sampling frequency arduino uno sampling ir issue quick using color sensor takes lot time,sensors line-following,following sensors line
1867,visual servoing tracking point,trying resolve issues inverse kinematics robot arm using camera end object tracked camera frame retrieve position relative frame convert position frame robot state set joint manner camera keep object center frame ... -- approach -- image analysis retrieve position object tracking positioned x coordinate know time position end tool t_base^tool matrix image analysis know position b object relative camera frame compute difference c b a. compute image jacobian given c distance object focal length camera ... thats moment.. sure position change retrieved cam frame seen position tool point equation become un undetermined length state vector become equation j_ image q dq dp j_image q image jacobian robot current state q dq wanted change q-state dp computed positional change ... solution found using linear least square.. get robot appearing equation let doubt approach..,inverse-kinematics visual-servoing,visual inverse kinematics servoing
1868,robotic manipulator,started working robotic manipulators got project deals control robotic manipulator using artificial neural networks solution inverse kinematics trajectory generation precise someone please suggest start knowledge robotic manipulator ann code,arduino robotic-arm inverse-kinematics machine-learning,inverse arduino machine kinematics learning robotic arm
1869,calculating position based accelerometer data,please help following task mpu get acceleration/gyro magnetometer data interested get orientation position robot get position using quaternions stable changes staying problem converting accelerometer data calculate displacement know required integrate data get position using quaternion rotate vector acceleration sum axises get velocity get position work way moving sensor position moving give position problem put sensor stays movement velocity change acceleration data coming sensors zeros example gravity -0.10 -0.00 raw accel -785 -28 accel scaling +-g -0.10 -0.00 result rotating accel vector using quaternion -0.00 -0.00 moving sensor putting acceleration becomes -0.00 -0.01 -0.00 -0.01 -0.00 -0.00 -0.00 -0.01 integrating get increasing position z. worst problem velocity come example move sensor put velocity -0.089 vx vy several movements becomes -1.22 vx vy -8.63 vz movement vx -1.43 vy vz -9.7 x doesnt change sensor moving z changing quaternion changing correct way part code integrations vx += wx speed vy += wy speed vz += wz speed posx += vx speed posy += vy speed posz += vz speed set speed test works edit code retrieve quaternion data rotate compensate gravity get final accel data // display initial world-frame acceleration adjusted remove gravity // rotated based known orientation quaternion mpu.dmpgetquaternion q fifobuffer mpu.dmpgetaccel aareal fifobuffer mpu.dmpgetgravity gravity q //serial.print gravity\t serial.print gravity.x serial.print \t serial.print gravity.y serial.print \t serial.print gravity.z serial.print \t //serial.print accell\t serial.print aareal.x serial.print \t serial.print aareal.y serial.print \t serial.print aareal.z serial.print \t float val float ax val float float ay val float float az val float theworldf.x ax theworldf.y ay theworldf.z az //serial.print scaled_accel\t serial.print ax serial.print \t serial.print ay serial.print \t serial.print az serial.print \t theworldf.x -= gravity.x theworldf.y -= gravity.y theworldf.z -= gravity.z theworldf.rotate q //gravity.rotate q //serial.print gravity_compensated_accel\t serial.print theworldf.x serial.print \t serial.print theworldf.y serial.print \t serial.print theworldf.z serial.print \t serial.print deltatime serial.println edit dmpgetquaternion dmpgetaccel functions reading fifo buffer mpu dmpgetgravity uint8_t mpu6050 :dmpgetgravity vectorfloat *v quaternion *q v x q x*q z q w*q v q w*q x q y*q z v z q w*q w q x*q x q y*q q z*q z return edit library using mpu https //github.com/sparkfun/mpu-9150_breakout edit example gravity vector -1.00 -0.02 raw accel data -8459 -141 accel data scaled +-2g range -1.03 -0.02 gravity compensation rotation data,accelerometer algorithm,algorithm accelerometer
1870,increase current draw serial port icreate,icreate document pins vpwr connected roomba battery ptc resettable continuous draw pins exceed draw peak pins fuse reset project need draw bit number disable short circuit fuse replace bigger fuse reside bot circuit board possible fuse embedded chip difficult access example safe run small wire battery pole pin pass fuse know run wire pole circuit draw power motor wires love running serial port keep things simple,power irobot-create serial,serial create irobot power
1871,know powerful take calculate max thrust g given current voltage v,build quadcopter following components take frame f450 glass fiber polyamide landing gear high landing gear battery burst motor xxd a2212 brushless outrunner motor esc burst brushless bec prop propeller set assume total weight quad ~1.1kg like payload upto making quad weigh ~1.5kg learnt thrust weight ratio fall recommended better control creates problems lifting planning high maneuverability cruise sky pushing quad limits want fly motors pull g -amps -voltage v -power w -specificthrust g/w information a2212 x props battery discharge rate limited wrong give entire circuit motors take max table produce ~600g thrust motors mean get thrust weight throttle quad take confused efficacy motor meaning buy bigger motor get thrust same/bigger props efficient combination motor prop maximum thrust practical pulling force g n get outta equation tells defines exact relation provided fly quad usual conditions exttemp/80 -90 relhumidity/max15malti ps tried prop power thrust efficiency calculations online stuff update replacing 3000mah-20c/30c battery 5000mah-20c/30c keeping everything solve problems increase flight time provided keep everything,quadcopter brushless-motor battery lithium-polymer,quadcopter polymer battery motor brushless lithium
1872,max thrust brushless motor produce produce,newbie got motor http //www.rcbazaar.com/product.aspx productid=1915 specification motor avionic m1818/17 kv4500 micro brushless motor kv rpm/v power winds resistance mohm idle current weight combination usage prop e ● get gms thrust lipo cell esc amp claim thrust compaired motors hobbyking motor seems good power input /thrust ratio true besides esc amp seems sufficient recommend max thrust get motor w.r.t power consumed decent price,quadcopter brushless-motor,quadcopter brushless motor
1873,perform odometry arduino differential wheeled robot,using differential wheel robot project need know current coordinates robot respect initial position taken origin computation arduino uno sensory input get encoders function called loop corresponding code void updateodometry static int encoderrposprev static int encoderlposprev float sr distancepercount encoderrpos encoderrposprev float sl distancepercount encoderlpos encoderlposprev encoderrposprev encoderrpos encoderlposprev encoderlpos x += sr cos theta += sl sin theta theta += sr sl wheeldistance theta theta -= theta -6.28 theta += code team mates made reading paper wondering best possible way solve problem arduino odometry done differential wheeled systems,arduino kinematics odometry differential-drive,odometry differential kinematics drive arduino
1874,controlled escs escs available build quadcopters ppm controlled,see manufacturer online store telling esc ppm controlled second googling asking comments escs youtube videos find anything useful need ppm controlled escs project based mentioned requires use ppm controlled escs use escs available market project mentioned github repo ppm controlled escs common ones explained escs youtube video commented doubt telling common escs pwm controlled contradicting previous statement ps need use arduino mega control escs arduino mega programmed send ppm signals need ppm controlled escs correct made mistakes,arduino quadcopter esc,quadcopter esc arduino
1875,inverse kinematics osciliations..,moment issues jacobian going towards singularity think values becomes robot oscillates thought form optimization least square solution needed interior point method sure apply equation this.. j q dq du implement optimization needed,inverse-kinematics c++,c inverse kinematics
1876,pixhawk v2 aerial imaging small study area hexacopter,project going involve capturing ~80 images x agricultural study area image processing wondering use naza v2 pixhawk controller outfit ship dji f550 flamewheel understanding limited amount waypoints particular mission break imaging mission sub-missions understand many ways superior getting running limited time frame project,gps uav radio-control,control uav radio gps
1877,using device rc transmitter,want make pc controlled quadrotor tutorials/projects made rc receiver want use arduino xbee rc receiver pc control quadrotor note arduino beaglebone xbee hc-05 kk2 multiwii parts,pid quadcopter,quadcopter pid
1878,birrt getting path array dof angle configurations,"kind finished implementing birrt dof arm using kd-tree numpy.spatial order get nearest queries picture trouble fact impossible retrieve path start particular node using kd-tree array nodes edges calculated subsets array edges useful order anyone give tips retrieve path starting node first array ending node second array useful data structures let code def makeline distance q_near xrand nodes int distance /0.01 range num+1 qnext xrand q_near /distance q_near check collision qnext collision detected nodes numpy.append nodes qnext else collision return nodes xrand q_near /distance*0.01* i-1 +q_near return nodes qnext def birrt start goal startnode numpy.array start goalnode numpy.array goal limits -2.461 .890 -2.147,1.047 -3.028,3.028 -.052,2.618 -3.059,3.059 -1.571,2.094 -3.059,3.059 range xrand numpy.array k range len limits xrand numpy.append xrand random.uniform limits k limits k kdtree scipy.spatial.kdtree startnode distance index kdtree.query q_near kdtree.data index success startnode qfinal makeline distance q_near xrand startnode kdtree2 scipy.spatial.kdtree goalnode distance2 index2 kdtree2.query qfinal q_near2 kdtree2.data index2 success startnode qfinal2 makeline distance2 qfinal q_near2 startnode success return startnode goalnode qfinal qfinal2 xrand numpy.array k range len limits xrand numpy.append xrand random.uniform limits k limits k kdtree scipy.spatial.kdtree goalnode distance index kdtree.query q_near kdtree.data index success goalnode qfinal makeline distance q_near xrand goalnode kdtree2 scipy.spatial.kdtree startnode distance2 index2 kdtree2.query qfinal q_near2 kdtree2.data index2 success goalnode qfinal2 makeline distance2 qfinal q_near2 goalnode success return startnode goalnode qfinal qfinal2 return",inverse-kinematics motion-planning planning rrt,motion planning inverse kinematics rrt
1879,ros raspberry pi model ubuntuarm vs rosberrypi,ask question better confirm read prominent post running ros raspberry pi devices post contains valuable information bit dated ros support arm devices better days fact ros going excellent support running embedded devices raspberry pi got pi model birthday eager get ros running build robot working based wild platform perspective pros cons regarding ubuntuarm rosberrypi ubuntuarm pros ubuntu official ros distro well-supported ros os best documentation ros wiki running arm devices written ubuntuarm cons raspbian rosberrypi based official distro rasbperry pi best support board rosberrypi pros raspbian rosberrypi based official distro rasbperry pi best support board cons ros supported os ubuntu use rosberrypi distro build ros source question anyone provide insight dilemma running ros raspberry model please model b+ different issues well-supported ubuntu experience distro would/did choose,ros raspberry-pi arm,pi ros arm raspberry
1880,convert rotation matrix equivalent quaternion using eigen library,eigen library http //goo.gl/cv5ly used ros pcl thank,ros,ros
1881,degrees analytical solution,got robot looks shown figure worked inverse kinematics analytical solution base rotation considering dof able find analytical solution including base dof find anlytical solution robot,robotic-arm,arm robotic
1882,algorithms used autonomous robot,working proposal autonomous fire fight robots little bit confused sensor algorithms friend suggested path finding ai algorithms bfs dfs a* dijkstra algorithm used robots believe want ask algorithms used real world robots genetic algorithms robot path detect differentiate human fire want explanation gives knowledge,algorithm machine-learning,machine learning algorithm
1883,microcontroller flashing,micro controller flash mean say stm32f103rg flash size uart communication modem connected send firmware .hex .bin microcontroller radio verify checksums microcontroller saves file sd card spi restarts start flashing reading file sd card something done external mcu required carry flashing purpose microcontroller radio sitting remote location way change microcontroller firmware sending firmware update file,microcontroller,microcontroller
1884,go home feature dji phantom project built quadcopter,access order make home feature work gps enough approach needed make happen used arduino mega imu stable quadcopter,arduino quadcopter sensors localization gps,quadcopter gps sensors localization arduino
1885,dc motor shaft gear installation,hoping use dc motor drive cog bar track afaik need install plastic cog motor shaft grips plastic cog bar anyone know prevent cog shifting shaft shaft long make sure cog cog sits cog bar help appreciated thanks,motor,motor
1886,sending commands ubuntu,irobot create model need send commands open interface ubuntu using gtkterm baud press button drives tried send commands raw data hexadecimal data work wrong,irobot-create roomba linux,create roomba irobot linux
1887,weird magnetometer values,bought 3-axis magnetometer similar plugged arduino order read heading value mounted robot drove robot meters turned degrees drove starting position plotted heading value shows inconsistent values degrees turn started rest driving direction using joystick following wall reference small deviations expected big image robot turning in-place problem heading variation follows rotation robot robot little bit shaky magnetometer x axes parallel floor think degrees offset cause huge difference calculate heading follows heading atan2 field intensity x field intensity happen form metals electric wires floor suggest robust method/sensor estimating heading indoor environments edit drove path pattern similarity making weirder,mobile-robot navigation magnetometer,mobile magnetometer navigation robot
1888,motor shaft swapped threaded shaft,looking n20 dc motor popular anyone know shaft swapped threaded shaft,motor,motor
1889,phantom type robot inverse kinematics solution,guys robot looks thanks croco came know much similar phantom omni looks similar phantom omni trying get inverse kinematics geometric solution using inverse kinematics solution build fpga design good research paper http //ieeexplore.ieee.org/xpl/login.jsp tp= arnumber=6318365 url=http understand page find l3 l4 shown image find robot project done find l3 l4 robot bring end effector position shown fig2 amd measure l3 l4 work great guys help cheers,inverse-kinematics geometry,geometry inverse kinematics
1890,bulding robot arm neural networks understanding,thinking building small robotic arm small servo motors arduino uno apply basic neural networks concepts good idea use hand made robotic arm learn power neural networks thank time merry christmas,control,control
1891,automatic activation spray,like control button spray pressing spray comes example deodorant bottle best way thing mount bottle,robotic-arm,arm robotic
1892,implementation,studied claus brenner lectures implement algorithm particle maintains robot pose maintains ekf landmarks like implement fastslam understand uses particle filters fs particle maintaining ekf landmark particle maintains array particle filters landmarks,slam,slam
1893,autonomous traversal planar graph,program autonomous robot traverse grid given following figure main problem nodes visit known received bot real time e.g.- reaching node bot go shortest path 19-17-7-6 calculated dijkstra algo know make robot traverse path idea edit sorry making question clear facing problem determining current position direction robot facing define set commands turn left/right/forward traverse next desired node thinking extra array visited nodes current node extra variable facing direction define command sets node better idea,mobile-robot automatic dynamic-programming,mobile dynamic programming automatic robot
1894,moving small plate forth,hoping move plate x forth using dc motor idea motor drives threaded shaft attached side plate help alignment rod added side plate red guess rod hole jam afaik bigger setups linear bearing come handy given plate thick better ways help alignment making edge hole donut help something easy make fact concern valid thanks edit centre area plate needs kept clear intended part ~10mm thick pole climber several guide rollers fitted left side plate motor driven roller left part depicted idea press guide roller pole rollers good grip pole whole car light force expected complete depiction rollers spring loaded need released retracted adjusted different pole widths,motor linear-bearing tracks,bearing tracks linear motor
1895,attaching m5 screw shaft cog wheel,anyone know good low profile way attach threaded chamfered end m5 screw shaft plastic cog wheel good idea widen shaft hole let threads grip hole edit torque 6kg-cm plastic looking pom,mechanism torque gearing,gearing torque mechanism
1896,panasonic msmo22f2g stepper motor hook-up,panasonic msmo22f2g servo motor using stepper motor motor wires coming port wires coming port towards rear unit presumed encoder trying drive motor arduino motor shield question hook read stepper leads bipolar stepper group coil wires found wires stepper coil fourth seems effect stepper checking process using ohm meter see connected connecting wires feeling resistance,arduino stepper-motor,stepper motor arduino
1897,lithium ion battery monitors designed hobbyists quadcopters,friend getting quadcopters good techie buddy trying find right technology battery monitoring expensive machine fall sky technology hobbyists seeing voltage monitors useful battery chemistry flat voltage curve liion expect voltage monitor report low battery draw extra current seeing buddy fast maneuvers mid flight day job use charge counting battery monitors bms battery chemistry custom designed battery pack laptop batteries etc built battery pack sold cell suppliers missed product electric aircraft hobbyists battery dark ages,battery lithium-polymer,battery polymer lithium
1898,best power solution robot,built quadruped robot using servos towerpro sg90 servo raspberry pi model b right feeding charger make un-tethered look selecting batteries think separate powering rpi servos power jumping moves good rpi little video testing walking algorithm,mobile-robot raspberry-pi power battery walking-robot,walking raspberry power mobile robot battery pi
1899,suitable gear construction robotic extender plastic,simple setup robotic extender dc motor turns shaft worm worm connects small worm gear green small gear red shaft connecting large gear blue dc motor gearbox gives 50-100rpm stall torque small gear tall large gear tall load large gear maximum torque 5kg-cm typical torque 3kg-cm gears made plastic module metric form pitch chuck pointed higher module needed worm made plastic nylon help appreciated edit fixed updated diagram,motor torque gearing,gearing torque motor
1900,see cc3d actual configuration,received first hobby-grade quadcopter eachine racer comes preassembled transmitter receiver included comes kind cc3d flight board people say original configured software flying box im sure want touch fc config im interested learning fly manual/acro mode transmitter seems switch flight modes looks low/high rates self-level mode im expect third acro mode im sure right couldnt test weather third higher rate way look actual fc config changing anything witch software need flight modes set fc transmitter able see edit thanks advance,quadcopter,quadcopter
1901,pom gears metal fittings,looking setup pom bevel gears fitted kind metal bronze tube fits shaft benefits provide shaft free-spin metal fitting able grip shaft supposed canonical approach fitting pom gear high-load applications,motor mechanism gearing,gearing mechanism motor
1902,gazebo simmechanics,considering choose gazebo simmechanics simulating quadruped robot set standards simulation support real-time application ros simulate contact impact ground deformable possible good rendering quality learned gazebo months see limits meet requirements contact friction problems use simmechanics impressed see video anyone experiences quadruped simulation share advice thank much,simulator gazebo,gazebo simulator
1903,lipo battery work,building quadcopter wondering lipo battery work esc mt4108 kv motors gemfan carbon fiber props payload 5-6 pounds,quadcopter,quadcopter
1904,create wheel interface board replacement,http //www.irobotweb.com/~/media/mainsite/pdfs/about/stem/create/create_2_wheel_hack.pdf la=en scroll page trying interface roomba preloaded navigation system pair motors attached roomba itself- need interface board dimensions pictured document contact centers seem available anyone provide help locating pcbs size,irobot-create electronics navigation roomba,roomba create navigation irobot electronics
1905,accurate technique locate position,accurate way locate position orientaion body motion rotation translation need track body required accuracy 100-200 microns high frequency least body rotation axis axis translate path track ellipse shape translation path change need track body limit motion cm direction maximum velocity m/s requirments sensors possible place sensor surface impossible change construction impossible use encoders rotation axis measure angle tried mems sensors difficult understand motion noise idea use magnet magnetomemter possible measure resolution way,kinematics navigation tracks orientation,navigation tracks kinematics orientation
1906,arduino project turning fixed front wheel axis,working arduino robot project project requires base wheels wheels attached dc motors controlled thinking robot turn giving power motors trouble front axis look possible solid front axis wheels possible robot turn friction great,arduino wheeled-robot brushless-motor,brushless robot wheeled motor arduino
1907,orienting rectangular plastic bricks,part sorting machine need orient plastic brick-shaped objects identical size x x end white side facing fed bowl feeder type machine re-orienting accomplish optical sensors thinking cutting bricks putting magnets elegant solution,mechanism orientation,orientation mechanism
1908,mah battery mean longer power power,lipo battery mah slower run energy larger power output thanks advance,power battery,battery power
1909,joint state vectors limited,joint-state vectors q define position orientation set joints limited know used rotation part transformation matrix think limited \pi,joint,joint
1910,erratic motor behavior due faulty remote control grounding something,using arduino mega run motors motor controllers using ps2 controller remote control joystick rest motor stop problem motor moves joystick rest joystick produce forward motion motor grounding issue ps2 remote control issue ir others.. gnd arduino board connected gnd external battery troubleshoot thanks,mobile-robot control power,mobile control robot power
1911,q-state vector used define transformation matrix,used determine transformation matrix example computing inverse kinematics small displacements j q \delta q \delta u \delta u vector defining difference current desired position desires position computed keep solving manner time solve j q \delta q \delta u q q \delta q compute t_ base tool compute difference t^ tool base desired~position base tool q change less 10^-5 finish output q resolve compute transformation matrix based q state vector,inverse-kinematics jacobian,inverse kinematics jacobian
1912,rc car circuit,disassembled rc car bbr scale ferrari enzo attached stepper motor controls steering car small circuit board cog wheel attached trying figure circuit idea responsible keeping track wheels position certain picture see wires coming know green gnd anyone idea function,stepper-motor radio-control circuit,control radio stepper circuit motor
1913,path following precise positioning system rtk,general problem using precise positioning centimeter-accurate gnss rtk system meant autonomous car guidance given predefined path car follow mean autonomous cars topic ces simple system seems introduced date ... course path planning part autonomous package problems need solved collision prevention etc wonder something simple rtk guidance used rtk system relies little amount live correction data kb/s mobile networks ubiquitous today see technical problem solution given enough rtk base stations question using precise positioning follow predefined obstacle-free environment asking systems need implemented autonomous car collision prevention etc systems employ lidar stereo camera collision prevention autonomous system consider theoretical case updated question precise satellite positioning accurate enough guide/navigate full-scale passenger car obstacle-free outdoor environment speed km/h given precise-enough path prerecorded follow answers say solved problem nice answers elaborated detail regarding existing solutions accuracy possible problems etc. solutions open source apm autopilot work rovers example emlid seem use rtk accuracy low,navigation gps precise-positioning,precise positioning navigation gps
1914,dc motor open door,want open door using dc motor estimated required power worst case around 35-40w considering ~80 efficiency whole controlled particle photon thinking use l298n control output current motor looked powerful enough motors consume much current stalling part l298n datasheet ideas overcome dual-bridge handle current exists dc motor ok l298n need simultaneous dc motors edit part question keep future visitors know sub-question please ignore answering sub-question better use brushed brushless dc motor,motor h-bridge,h motor bridge
1915,exchange air maintain thermal insulation,application composting worms outdoors styrofoam cooler use heat lamp thermo-electric cooler maintain temperature temperature bounds healthy worms temperature bounds exchange air fresh air want compromise insulating properties bin lots air holes looking actuator solutions allow window sorts considering solenoid air valve need/want air compressor simple fan sufficient circulate air suggestions,actuator valve,actuator valve
1916,tracking objects camera pid controlling parrot ar drone,working project perform object tracking using camera parrot ar drone main idea drone able identify specified colour follow keeping distance using cvdrone api establish communication drone api provides function ardrone :move3d double vx double vy double vz double vr moves space vx x velocity m/s vy velocity m/s vz z velocity m/s vr rotational speed rad/s written application simple image processing images obtained camera drone using opencv finds needed contours object tracked see example part struggling finding technique using find velocities sent move3d function read common way controlling using pid controlling read get related problem summarise question move robot towards object detected camera find coordinates certain objects camera,control pid quadcopter tuning opencv,control quadcopter pid tuning opencv
1917,quadcopter charging,thesis multicopter using batteries wherein first battery used power goes placed use charge first battery second battery powering multicopter process repeats power battery drained process possible achieved edit clear everything thesis quadcopter uses batteries power source batteries attached switching circuit system allow battery drained transferred battery solar panels serve charger battery standby mode discharged battery battery used connected solar panel charging battery battery drained quadcopter switch charged battery continue go batteries drained achievable,battery multi-rotor,battery rotor multi
1918,detect ground collision hexapod robot,planning build small centimeters rest hexapod robot able walk ground improve somehow detect leg collides ground able know much weight leg supporting balance weight adapt moving terrain put finger leg lifted leg go possible simple binary signal simple compact method,sensors hexapod,sensors hexapod
1919,imu position gps camera,imu 3-axis accelerator 3-axis magnetometer 3-axis gyroscope row yaw pitch value want get location imu coordinate beginning point know using double integration dead reckoning problem found paper talking combining imu gps camera using kalman filter possible use imu get precise position data future work use multiple imus bounded human arms increase accuracy,imu gps,imu gps
1920,angle random walk vs. rate noise density mpu6050,i’ve made datalog mpu6050 imu gyroscope sample rate want calculate characteristics gyro evaluate sensor gyro i’ve found following values datasheet total rms noise °/s low-frequency rms noise °/s rate noise spectral density °/s/sqrt hz want ask calculate values dataset moment i’ve following values dataset standard deviation °/s variance angular random walk °/sqrt allan deviation plot bias instability °/s arw equal rate noise spectral density mentioned datasheet rms noise datasheet equal standard deviation edit found following website http //www.sensorsmag.com/sensors/acceleration-vibration/noise-measurement-8166 statement ... gaussian standard deviation histogram rms noise guess standard deviation rms noise datasheet arw,sensors imu gyroscope sensor-fusion statistics,statistics fusion imu sensors sensor gyroscope
1921,cracked gps chip antenna,gps unit crash today happen come top split broken case noticed chip antenna cracked unfamiliar type antenna functions issue closed source drone little insight number gps locks acquired signal strengths broken antenna cause type signal degradation able acquire lock,gps,gps
1922,tf frame origin offset actual base_link,built differential drive mobile robot solidworks converted urdf file using soliworks2urdf converter launched robot simulated tele-operation node intended use navigation stack viewed transform robot rviz resulted see base plate supports wheels castors tf base plate shown actual link odom model gone wrong fix refer urdf model xml version= robot name= jmbot link name= base_plate inertial origin xyz= -0.3317 -0.39019 rpy= mass value= inertia ixx= ixy= ixz= -8.6651e-18 iyy= iyz= -1.4656e-17 izz= /inertial visual origin xyz= rpy= geometry mesh filename= package //jmbot_description/meshes/base_plate.stl /geometry material name= color rgba= /material /visual collision origin xyz= rpy= geometry mesh filename= package //jmbot_description/meshes/base_plate.stl /geometry /collision /link link name= wheel_r inertial origin xyz= 1.1102e-16 -1.1102e-16 rpy= mass value= inertia ixx= ixy= -1.2355e-19 ixz= 1.0715e-18 iyy= iyz= -6.7763e-20 izz= /inertial visual origin xyz= rpy= geometry mesh filename= package //jmbot_description/meshes/wheel_r.stl /geometry material name= color rgba= /material /visual collision origin xyz= rpy= geometry mesh filename= package //jmbot_description/meshes/wheel_r.stl /geometry /collision /link joint name= wheel_r continuous origin xyz= -0.14688 -0.73464 rpy= -2.7127 -0.081268 -3.1416 parent link= base_plate child link= wheel_r axis xyz= /joint link name= wheel_l inertial origin xyz= -0.039049 2.2204e-16 2.498e-15 rpy= mass value= inertia ixx= ixy= -9.6693e-19 ixz= -1.7816e-18 iyy= iyz= 1.3553e-19 izz= /inertial visual origin xyz= rpy= geometry mesh filename= package //jmbot_description/meshes/wheel_l.stl /geometry material name= color rgba= /material /visual collision origin xyz= rpy= geometry mesh filename= package //jmbot_description/meshes/wheel_l.stl /geometry /collision /link joint name= wheel_l continuous origin xyz= -0.46668 -0.70859 rpy= 3.4272e-15 parent link= base_plate child link= wheel_l axis xyz= -1 /joint link name= castor_f inertial origin xyz= 2.2204e-16 rpy= mass value= inertia ixx= 2.4476e-05 ixy= -2.8588e-35 ixz= 1.0281e-20 iyy= 2.4476e-05 iyz= -1.2617e-20 izz= 7.4341e-06 /inertial visual origin xyz= rpy= geometry mesh filename= package //jmbot_description/meshes/castor_f.stl /geometry material name= color rgba= /material /visual collision origin xyz= rpy= geometry mesh filename= package //jmbot_description/meshes/castor_f.stl /geometry /collision /link joint name= castor_f continuous origin xyz= -0.31952 -0.57008 rpy= -1.5708 -1.3614e-16 parent link= base_plate child link= castor_f axis xyz= /joint link name= castor_r inertial origin xyz= -1.1102e-16 rpy= mass value= inertia ixx= 2.4476e-05 ixy= ixz= -3.9352e-20 iyy= 2.4476e-05 iyz= -1.951e-20 izz= 7.4341e-06 /inertial visual origin xyz= rpy= geometry mesh filename= package //jmbot_description/meshes/castor_r.stl /geometry material name= color rgba= /material /visual collision origin xyz= rpy= geometry mesh filename= package //jmbot_description/meshes/castor_r.stl /geometry /collision /link joint name= castor_r continuous origin xyz= -0.34387 -0.86909 rpy= -0.93144 parent link= base_plate child link= castor_r axis xyz= /joint gazebo plugin differential_drive_controller filename= libgazebo_ros_diff_drive.so leftjoint wheel_l /leftjoint rightjoint wheel_r /rightjoint robotbaseframe base_plate /robotbaseframe wheelseparation /wheelseparation wheeldiameter /wheeldiameter publishwheeljointstate true /publishwheeljointstate /plugin plugin joint_state_publisher filename= libgazebo_ros_joint_state_publisher.so jointname castor_f castor_r /jointname /plugin /gazebo /robot,mobile-robot ros navigation odometry gazebo,odometry mobile navigation robot ros gazebo
1923,mobile robot rotate,please look youtube video mobile robot operates rack said weight kg center mass com distributed location example com located cm center robot robot revolves center rotation center robot see video rotate many circles up-right axis think possible mechanical design use kind advanced feedback control system counter effect off-center com,mobile-robot control mechanism,mobile control robot mechanism
1924,need uav perform circle turn,got project require drone perform circle turn drone facing tangent turning curve similiar car performing frictionless banked turn wondering method use achieve throttle control ignored pid height control suggestions appreciated,quadcopter pid multi-rotor,quadcopter rotor multi pid
1925,use dc brushed motors building drone,want make drone budget low brushless motors expensive want use brushed cheap ones,quadcopter motor brushless-motor,quadcopter brushless motor
1926,canny roadmap algorithm,find general implementation canny roadmap algorithm silhouette method robot motion planning,motion-planning,motion planning
1927,find center disk using robotic arm,hello new field robotics knowledge raspberry pi arduino python want make robotic arm used find centre disk disk different diameter coming conveyor need make hole center disk using robotic arm techniques sensors use implement mechanical electronic part want use camera opencv thanks advance,robotic-arm mechanism electronics movement,electronics movement arm mechanism robotic
1928,cc3d openpilot communication port,building quadrotor cc3d openpilot rpi idea trying communicate cc3d rpi using main port find information communicate board device information commands serial configuration anybody knows possible find info,raspberry-pi quadcopter,quadcopter pi raspberry
1929,figure pid values drone specs,specs quadcopter everthing possible figure pid specs,quadcopter pid,quadcopter pid
1930,gazebo moving joint model plugin,week gazebo tutorials clear dearth c++ knowledge working move things getting cloudy made model comprising boxes revolute joint file one_r_test.world loads model plugin loaded model.sdf plugin modelcontrol comes model_push.cc model plugins tutorial http //gazebosim.org/tutorials tut=plugins_model cat=write_plugin uses setlinearvel move box get behavior model_control.cc copy tutorial code change plugin name appropriate want seeking simulate joint control robotic manipulators working basic simulation attempt move model joint modelcontrol plugin moves gui set velocity torque way model_control.cc code pasted hopes identify problem model_control.cc include boost/bind.hpp include gazebo/gazebo.hh include gazebo/physics/physics.hh include gazebo/common/common.hh include stdio.h // real file quotes greater-than less-than // know get show question namespace gazebo class modelcontrol public modelplugin public void load physics :modelptr _parent sdf :elementptr /*_sdf*/ // store pointer model this- model _parent // store pointers joints this- jointr1_ this- model- getjoint r1 // listen update event event broadcast simulation iteration this- updateconnection event :events :connectworldupdatebegin boost :bind modelcontrol :onupdate _1 // called world update start event public void onupdate const common :updateinfo /*_info*/ // apply small linear velocity model //this- model- setlinearvel math :vector3 .03 // apply angular velocity joint this- jointr1_- setparam vel this- jointr1_- setparam max_force double currangle this- jointr1_- getangle .radian printf current angle \t f\n currangle // want keep track time common :time last_update_time_ // pointer model private physics :modelptr model // pointer update event connection private event :connectionptr updateconnection // pointers joints physics :jointptr jointr1_ // register plugin simulator gz_register_model_plugin modelcontrol edit change this- jointr1_- setparam vel this- jointr1_- setvelocity joint moves wrong setparam vs setvelocity,simulator joint gazebo,joint gazebo simulator
1931,printer moves header makerbot printer,like know header makerbot printer moves vertical /down direction detailed explanation including parts involved,mechanism 3d-printing,printing mechanism
1932,pid control possible stabilize quadcopter considering angle measurements,good day student working autonomous quadcopter project stabilization part using tuned propeller system considered balancing quadcopter component placements tuning pid quadcopter weeks achieved constant angle oscillation quadcopter +-10 degrees degrees setpoint/desired angle tried conservative degrees setpoint results pitch axis pid code takes difference angle measurement complementary filter filteredangle= filteredangle gyroanglevel*dt accelangle desired angle read impossible stabilize quadcopter utilizing angle measurements adding angular rate taken consideration read lot works using single pid loop angle differences pitch roll input contrast stated read comment article https //www.quora.com/what-is-rate-and-stabilize-pid-in-quadcopter-control edouard leurent single pid control loop angle errors cascaded pid loop angle rate utilizes angle errors angular velocity errors equivalent continue using single pid loop angle method tune parameters kp ki kd change code utilize cascaded loop angle angular velocity tune sets parameters kp ki kd angle kp ki kd angular velocity cascaded pid control loop give better performance single pid control loop cascaded loop set point angular velocity stabilized flight deg/sec quadcopter desired angle thank,control quadcopter pid raspberry-pi stability,control quadcopter pi pid stability raspberry
1933,slam marginalization schur complement,consider system \tag h\delta x=-g h g hessian gradient cost function f form f x =e x ^te x function e x =z-\hat z x error function z observation measurement \hat z maps estimated parameters measurement prediction minimization encountered iteration many slam algorithms e.g.one think h bundle adjustment hessian suppose x= x_1 x_2 ^t let x_2 variables seek marginalize many authors claim marginalization equivalent solving smaller liner system m\delta x_1=-b g computed applying schur complement i.e h= \begin pmatrix h_ h_ \\ h_ h_ \end pmatrix m=h_ -h_ h_ -1 h_ b=g_1-h_ h_ -1 g_2 fail understand equivalent marginalization ... understand concept marginalization gaussian know schur complement appears marginalization use canonical representation using information matrix see link linear system edit understand schur complement appears process marginalizing conditioning p b b gaussian variables link supplied josh vander hook come conclusions using canonical notation express gaussian p b canonical form p gaussian information matrix schur complement information matrix p b etc problem understand schur complement appears marginalization bundle adjustment reference recent papers c-klam page want look part titled marginalization papers single bundle adjustment ba iteration performed manner similar described question feel simple connection marginalizing gaussian marginalization ba missing example say optimizing f iteration equivalent drawing random variable following denstiy e^ -\frac x-\mu ^t\sigma^ -1 x-\mu \sigma inverse hessian h f \mu true value x approximation value marginalizing density equivalent using schur compelement bundle confused ...,slam computer-vision,slam computer vision
1934,real-time gy-85 imu sensor interfacing simulink,read real time values gy-85 imu sensor simulink connected arduino intend interact virtual reality environment simulink using gy-85 imu sensor possible make matlab read real time values gy-85 imu sensor connected arduino i2c communication please help,imu matlab,imu matlab
1935,create portable solar panel lipo charger,working quadcopter carry solar panel top charging lipo battery quad smallest easiest way recreate charger allow safe charging lipo battery,quadcopter battery,quadcopter battery
1936,inverse kinematics dlr/hit ii hand,trying find inverse kinematics formulation dlr/hit ii hand till success finding analytical method described thesis mavrogiannis christoforos i. named grasp synthesis algorithms multifingered robot hands given b. question regarding a.28 author calculates q3 mentioned text q3 equal q2 note q denotes joint angles,inverse-kinematics,inverse kinematics
1937,typical problem simple line follower using sensors,working building line follower robot using atmega2560 want movement precise facing typical problem consists ir sensors thickness line followed gap sensors black line comes center side sensors sensors white stops need robot stop white due application please anyone suggest good algorithm tackle situation think pid control good use searched google understand implement sensors please help,microcontroller line-following avr,following line microcontroller avr
1938,find kinematics differential drive caster robot,working little project simulations small robot case using differential-drive robot bigger robot platform differential-drive casters understand find kinematics order describe model finding speed v_tot platform robot know following parameters joint robot costrained blue point joint robot linked robot platform l distance wheels r radius wheel robot spin blue point theta angle know dimensions like apply velocities v_left v_right order move robot let assume v_left v_right find icr istantaneous center rotation costrained robot mean understand introduce formula,mobile-robot kinematics wheeled-robot differential-drive two-wheeled,mobile differential drive robot kinematics wheeled
1939,quadcopter program execution time optimization using raspberry pi increasing i2c baudrate,possible speed execution time c++ program raspberry pi increasing i2c baudrate increasing sampling frequency sensors issue sudden jerkiness quadcopter found culprit frequency loop excecutes minimum requirement quadcopter 100-200hz similar issue faces raspberry pi quadcopter thrashes high speeds said able increase sampling rate increasing i2c baudrate confused done wiring pi library says set baudrate using command gpio load i2c set baud rate – ie bps k times curious set baudrate achieve desired sampling rate plan optimizing achieve least sampling rate execution time loop quadcopter program takes obtain data complementary filter adjusted registers sensors output readings gyroscope l3gd20h accelerometer lsm303 magnetometer lsm303,quadcopter pid raspberry-pi sensor-fusion c++,quadcopter c raspberry pid fusion pi sensor
1940,actuate pneumatic muscle signals received emg sensors interfaced raspberry pi,aim actuate pneumatic muscle based signals received emg sensors placed biceps matlab code process received emg signals convert form useful muscle actuation linked video gives better insight question exoskeleton arm pneumatic muscle,raspberry-pi matlab,pi raspberry matlab
1941,canny silhouette method,construct silhouette curves roadmap canny silhouette method model environment obstacles robot given want implement cannys roadmap method works n dimensional configuration space,motion-planning,motion planning
1942,combine odometry information time-shifted information imu,working differential-drive robot odometry measurements wheel shaft encoders heading information imu using bno055 imu mode get euler angles heading angle use imu header angle augment odometry prone slipping errors imu lags odometry combine measurements get best estimate robot pose thanks word,mobile-robot imu odometry,mobile odometry imu robot
1943,gazebo laser plug-in fails publish scan results,added hokuyo laser plug-in mu urdf file launched robot gazebo done required changes visualize rviz get error laser scan results published fine results terminal launching gazebo model world result rostopic echo /scan verified tf model rqt fine aslo find urdf file someone help fix link joint link name= hokuyo_link collision origin xyz= rpy= geometry box size= /geometry /collision visual origin xyz= rpy= geometry box size= /geometry /visual inertial mass value= 1e-5 origin xyz= rpy= inertia ixx= 1e-6 ixy= ixz= iyy= 1e-6 iyz= izz= 1e-6 /inertial /link joint name= hokuyo_joint type= fixed axis xyz= origin xyz= -0.055 rpy= parent link= base_plate child link= hokuyo_link /joint controller gazebo reference= hokuyo_link sensor type= gpu_ray name= hokuyo pose /pose visualize false /visualize update_rate /update_rate ray scan horizontal samples /samples resolution /resolution min_angle -1.570796 /min_angle max_angle /max_angle /horizontal /scan range min /min max /max resolution /resolution /range /ray plugin gpu_laser filename= libgazebo_ros_gpu_laser.so topicname /scan /topicname framename hokuyo_link /framename /plugin /sensor /gazebo,mobile-robot ros navigation simulation gazebo,mobile navigation robot simulation ros gazebo
1944,irobot create ir bump light sensor specifications,someone tell find specifications irobot create ir bump light sensors sdf model create uses hoyuko laser range finder sensor simulate behavior ir sensors starting laser scan data like additional information ir sensors find anywhere web exact position robot chassis maximum range shape detection field,sensors irobot-create,sensors create irobot
1945,robotic manipulator jacobian product exponentials,taken class started thesis robotics reference calculating jacobian product exponentials seems incorrect see http //www.cds.caltech.edu/~murray/books/mls/pdf/mls94-complete.pdf resulting jacobian matrix scara manipulator page believe end effector translational velocity depends joints someone please explain,jacobian manipulator product-of-exponentials,exponentials product manipulator jacobian
1946,localization imu,best approach get localization accuracy accelerometer gyroscope,localization imu accelerometer gyroscope algorithm,algorithm imu gyroscope accelerometer localization
1947,mbed dc motor speed control using optocoupler encoder,playing mbed week like create test program dcmotor speed control im using dc motor encoder attach.. test supplying mbed motor thing work fine giving later try using give try input speed wont come count tick counting possible reason move isr routine catch speed..,control motor,control motor
1948,wheel encoder triggers interrupt many times,building simple robot driving wheel want control wheel rotation using wheel encoder code arduino try understand problem facing int count void setup serial.begin attachinterrupt digitalpintointerrupt upl rising pinmode input void loop serial.println string digitalread __ string count void upl count++ notice interrupt triggered multiple times sensor beam cut digitalread change noticed interrupt triggered going high low example ouput ... ... change low high ... interrupt incremented ... ... ... change high low interrupt triggered ... increments ... ... ... increments ... ... ... increments way explain change state signal received sensor square noisy image many rising change ... reading output sensor analog pin shows direct variation high low anyone explanation solution problem edit thanks tobiask know called bouncing effect research came solution playground.arduino.cc/main/rotaryencoders ctrl+f rafbuff trying let know,arduino wheel two-wheeled interrupts,wheel interrupts wheeled arduino
1949,establishing data transfer raspberry pi using gpio,good day implementing autonomous quadcopter stereo vision using raspberry pi let call pi_1 responsible stereo vision responsible motor control trajectory planning pi_2 looking way transfer element float vector gpio pi_1 pi_2 pi_1 stereovision program runs pi_2 motor control runs protocol deliver amount information second raspberry pi gpio looking spi saw raspberry pi turned slave making option looked uart slow needs i2c ports pi used stereo vision cameras imu gpio option feasible open suggestions using hardware middle man wireless options,quadcopter raspberry-pi communication,quadcopter pi raspberry communication
1950,software control arduino setup timing belt stepper motors,like know software available control timing belt stepper motors arduino board.much done printing case wont making printer.just simple setup,arduino robotic-arm stepper-driver,driver robotic stepper arm arduino
1951,position control trajectories interrupted,strategies used trajectories applied robotic joint interrupted say robotic arm hits obstacle controller keeps applying trajectory end error gets large torque get strong damage robot snap,control robotic-arm joint,control joint arm robotic
1952,cc3d replacing rc emitter rpi,trying control quadcopter using te openpilot cc3d board raspberrypi main idea replace signals rc cc3d rc receiver rpi connected rc receiver inputs cc3d know rc signals cc3d pwm rpi able control channels using rpio library create pwm software make tests find way move motors using ground control system openpilot software configure cc3d sure need send pwm signals order something sure flight mode switch works suposse works way channels using pwm anyone made anything similar,raspberry-pi quadcopter uav,quadcopter pi raspberry uav
1953,motors torque lift pounds,looking dc motors converted torque force meter distance got able lift pounds right http //www.active-robots.com/high-torque-dc-servo-motor-10rpm-with-step-dir-drive catch seeing,motor torque,torque motor
1954,good ros alternative regarding message passing cross multiple devices,used ros environment raspberry pi ubuntu opencv ros c/c++ several ros packages tf2 usb_camera slam related laser scanner capture projects multiple devices using multiple master package project review tutorials alljoyn handon experience questions regarding message ros image passing cross devices good ros alternative devices connected wifi alljoyn need single master roscore ros coordinate nodes similar thanks,ros alljoyn,ros alljoyn
1955,estimate position multiple static ground targets captured facing camera,aerial vehicle captures images ground using facing camera images multiple targets converted pixel position camera reference frame using pinhole camera model targets static information vehicle attitude orientation sample converted world referencial frame note targets flat level plane vehicle keeps scanning targets converting world referencial frame due quality camera detection errors altitude information position scanned targets constant accurate good representation gaussian distribution target true position influenced movement aerial vehicle best approach estimate position targets multiple readings resumes problem noise removal removal estimation like know algorithms strategies solve problem end expect implement test collection different approachs understand performance specific problem furthermore system implemented using ros know packages searching glad hear cite papers topic think interest,localization ros computer-vision algorithm uav,algorithm localization uav computer ros vision
1956,implement third order complementary filter estimating altitude using data barometer,working cjmcu build cleanflight small drone algorithm altitude hold uses first order complementary filter combine data barometer accelerometer integrating accelerations noticed considerable lag altitude readings seems hampering control algorithm performance filter question implemented https //github.com/diydrones/ardupilot/blob/db8a2f7e8bb2183e6d281e7a348d455d855cf5e1/libraries/ap_tecs/ap_tecs.cpp unable understand works pardon errors committed,quadcopter sensors sensor-fusion,quadcopter sensors sensor fusion
1957,get create communicate laptop serial usb cable,computer recognize serial usb cable tried mac hp driver need install supposed install,irobot-create serial usb,create irobot serial usb
1958,error building map ros slam_gmapping,recorded rosbag data simulating robot gazebo played logged bag file tried build map using slam_gmapping node ended error warn laser mounted planar z-coordinate -1 gave -0.03982 iterations able build map modifying laser scanner joint origin urdf file origin xyz= -0.040 rpy= -1.5708 -1.5708 origin xyz= -1 rpy= -1.5708 robot model become weird laser scanner robot get issue relocating laser scanner find urdf file,slam ros navigation mapping simulation,ros slam navigation mapping simulation
1959,building quadcopter motors props calculations,year old like apologise beginner understand professional talk hobby building quadcopter flight controller kk esc q brain frame kk fpv frame addon kk/fpv long frame upgrade kit tx rx hobbyking tx rx mode battery nano-tech mah sure motor propellers use know frame motor mounts m3 screws sure means questions calculations find much thrust quad needs produce useful calculations using calculations best cheapest motors propeller suited motor p.s looking durable cheap motors live london shipping problem immense bill thanks lot time sid,quadcopter motor,quadcopter motor
1960,slam dummies extra variables jacobian matricies,reading slam dummies find google link slam dummies tutorial approach simultaneous localization mapping differentiation matrices page getting different answers resulting jacobian matrices paper derived \left \begin array c \sqrt \lambda_x x ^2 \lambda_y ^2 v_r \\ \tan^ -1 \left \frac \lambda_y \lambda_y x \right \theta v_\theta \end array \right got \left \begin array ccc \frac x \lambda_y r \frac \lambda_y r \frac \lambda_y r^2 \frac \lambda_y x r^2 -1 \end array \right get r came got different answers anybody know r stands different way represent jacobian matrix,slam,slam
1961,quadcopter pid controller derivative measurement removing derivative kick,good day implementing single loop pid controller using angle setpoints inputs trying different approach part pid controller bought able reach loop rate adding gain quadcopter seems dampen movements continous manner case algorithm running angle set point degrees try push side degrees try stay rock solid resisting movements lets go enabling get degrees dampening effect weakens time tries dampen motion implementation traditional pid derivative error //calculate orientation error current target float pitcherror pitchanglecf pitchtarget pitcherrorsum += pitcherror*deltatime2 float pitcherrordiff pitcherror pitchpreverror pitchpreverror pitcherror float rollerror rollanglecf rolltarget rollerrorsum += rollerror*deltatime2 float rollerrordiff rollerror rollpreverror rollpreverror rollerror float yawerror yawanglecf yawtarget yawerrorsum += yawerror*deltatime2 float yawerrordiff yawerror yawpreverror yawpreverror yawerror //pid controller list float pitchpid pitchkp*pitcherror pitchki*pitcherrorsum pitchkd*pitcherrordiff/deltatime2 float rollpid rollkp*rollerror rollki*rollerrorsum rollkd*rollerrordiff/deltatime2 float yawki*yawerrorsum yawkd*yawerrordiff/deltatime2 //motor control mixing //motor front left float motorpwm1 -pitchpid rollpid yawpid basethrottle basecompensation tried implement derivative measurement method article remove derivative output spikes derivative part seems increase corrective force dampen derivative measurement //calculate orientation error current target float pitcherror pitchanglecf pitchtarget pitcherrorsum += pitcherror*deltatime2 float pitcherrordiff pitchanglecf pitchprevanglecf // -- -- pitchprevanglecf pitchanglecf float rollerror rollanglecf rolltarget rollerrorsum += rollerror*deltatime2 float rollerrordiff rollanglecf rollprevanglecf // -- -- rollprevanglecf rollanglecf float yawerror yawanglecf yawtarget yawerrorsum += yawerror*deltatime2 float yawerrordiff yawanglecf yawprevanglecf // -- -- yawprevanglecf yawanglecf //pid controller list // -- -- terms negative float pitchpid pitchkp*pitcherror pitchki*pitcherrorsum pitchkd*pitcherrordiff/deltatime2 float rollpid rollkp*rollerror rollki*rollerrorsum rollkd*rollerrordiff/deltatime2 float yawki*yawerrorsum yawkd*yawerrordiff/deltatime2 //motor control mixing //motor front left float motorpwm1 -pitchpid rollpid yawpid basethrottle basecompensation question something wrong implementation second method source http //brettbeauregard.com/blog/2011/04/improving-the-beginner e2 99s-pid-derivative-kick/ way obtained change time dt taking timestamp start loop taking next time stamp end loop difference obtained obtain dt gettickcount opencv function /* initialize i2c */ /* open files data logging */ deltatimeinit= float gettickcount /* get imu data */ /* filter using complementary filter */ /* compute errors pid */ /* update pwm */ //terminate program seconds float gettickcount -starttime float gettickfrequency float stoptime= float gettickcount -starttime float gettickfrequency gpiopwm //1 gpiopwm //2 gpiopwm //3 gpiopwm //4 gpioterminate int i=0 i=0 arrpitchcf.size i++ file8 arrpitchcf.at endl i=0 arryawcf.size i++ file9 arryawcf.at endl i=0 arrrollcf.size i++ file10 arrrollcf.at endl i=0 arrpitchaccel.size i++ file2 arrpitchaccel.at endl i=0 arryawaccel.size i++ file3 arryawaccel.at endl i=0 arrrollaccel.size i++ file4 arrrollaccel.at endl i=0 arrpitchgyro.size i++ file5 arrpitchgyro.at endl i=0 arryawgyro.size i++ file6 arryawgyro.at endl i=0 arrrollgyro.size i++ file7 arrrollgyro.at endl i=0 arrpwm1.size i++ file11 arrpwm1.at endl i=0 arrpwm2.size i++ file12 arrpwm2.at endl i=0 arrpwm3.size i++ file13 arrpwm3.at endl i=0 arrpwm4.size i++ file14 arrpwm4.at endl i=0 arrperr.size i++ file15 arrperr.at endl i=0 arrderr.size i++ file16 arrderr.at endl file3.close file4.close file5.close file6.close file7.close file8.close file9.close file10.close file11.close file12.close file13.close file14.close file15.close file16.close cout time elapsed endl break float gettickcount -deltatimeinit float gettickfrequency =0.00419 //0.00209715|0.00419 cout dt end deltatime2 endl deltatime2= float gettickcount -deltatimeinit float gettickfrequency cout dt end deltatime2 endl data,control quadcopter pid raspberry-pi stability,control quadcopter pi pid stability raspberry
1962,robot goes straight,using identical dc motors castor wheel motors connected l293d motor driver controlled rpi robot going straight veers running motors pwm tried correct error adjusted pwm wheel going faster robot turns adjusted weight robot problem persists tried run motor load cause later told running dc motor load damages cause please tell solve problem using sensors controlling,control motor wheeled-robot raspberry-pi,control raspberry robot motor pi wheeled
1963,motors needed arm move circular,limited motors legs robot rotate go up/down directions use motors leg correct,stepper-motor,stepper motor
1964,connect phone robot charging phone external battery,controlling robot usb android phone running robot code phone poor battery need extend life usb charger change phones charge android phone usb maintaining usb connection robot solder wires needed buy adapters needed,mobile-robot usb,mobile robot usb
1965,distortion introduced lens protector significant practice,computer-vision application made localize robot room software use working fine calibrated camera got intrinsics lens distortion coefficients lens protector lens mounted robot lid take robot lid lens protector localization solution becomes erratic inaccurate think lens protector changing distortion properties today lens protector became detached replaced calibration longer valid localization solution much noisy lens protector effect distortion properties image someone offer explanation intend recalibrate super-glue lens protector robot curious problem anyone encountered lens protectors,computer-vision cameras calibration,computer cameras vision calibration
1966,many dofs required define pose,understand able define point space need degrees freedom dofs define orientation space need dofs intuitive dofs defines position orientation axis orthogonal x-y-z system consider robot arm http //www.robotnik.eu/robotics-arms/kinova-mico-arm/ dofs dof defining position orientation x-y-z system defines angular rotation joint arm joints arranged single axis example dofs fact define angular rotation true dof defines single position orientation case robot arm reach positions orientations assuming geometry links joints make dof define independent position orientation vague concept intuitive dof position orientation somebody offer help understanding concepts,kinematics,kinematics
1967,logic implementing auto-level function pid flight controller,multi-rotor basic pid controller keeps axis stable gyroscope multi rotor keep height position like use accelerometer keeping rough position auto level want use gyro accelerometer accelerometer values used implemented pid ways gyro values degrees second rate used calculate pid adjusting esc confused part basic logic using accelerometer values,quadcopter pid imu accelerometer,quadcopter imu pid accelerometer
1968,way measure axis orientation magnetometer,bought stm inemo evaluation board order monitor inclination separate magnetic sensor array moves linear scan non-magnetic stainless steel pipe want measure inclination sensor scan ensure change problem found measured magnetic field integrated magnetometer varies position pipe turn causes large position dependent error axis inclination reported inemo imu fig show set test measured inclination imu moving pipe board change inclination measurement fig show magnetometer inclination measurements recorded inemo application showing large error inclinations question know way correcting magnetic field variation determine inclination directions data suggests magnetic field variation measured much greater geomagnetic field inclination measurement inaccurate follow question way measure axis orientation using magnetometer,imu gyroscope magnetometer orientation,magnetometer imu orientation gyroscope
1969,walking robots use accelerometers,understanding walking robots e.g https //www.youtube.com/watch v=xjlkbbdybyi use gyroscope determine current orientation robot joint robot put encoders joint cumulative error entire robot large maintain stability gyroscope measures real orientation used robot walking aware walking robots use accelerometers maintain stability benefit using accelerometer case used gyroscope gyroscope guess gyroscopes measure acceleration calculate based lots orientation readings accelerometers measure numerical method know acceleration position enables robot predict future position hence feedback loop robust correct missing point,control sensors accelerometer dynamics walking-robot,control walking accelerometer robot sensors dynamics
1970,modular arm joints work,hello trying figure modular arm joints designed kind bearings/shafts used modular-type robotic arm take ur arm example believe pipes include drive bearing system see second image detached think simple motor shaft connecting member want rotate mechanism wondering type mechanism bearing system t-shaped pipes transfer rotational motion member using shafts,mechanism joint arm,joint arm mechanism
1971,degrees mean,looking page describes various characteristics gyroscopes accelerometers close end speak imus names items something degrees degrees anyone explain mean,accelerometer gyroscope,gyroscope accelerometer
1972,load puma robot existing environment openrave,pr2 robot environment seen gui openrave load puma robot arm environment,robotic-arm motion-planning,motion planning arm robotic
1973,autonomous mode usercontrol,want switch usercontrol autonomous program running seconds come wont switch autonomous mode thanks pragma config motor port1 drivebr tmotorvex393 openloop pragma config motor port2 drivefr tmotorvex393 openloop pragma config motor port3 drivefl tmotorvex393 openloop pragma config motor port4 flyright tmotorvex393 openloop pragma config motor port5 drivebl tmotorvex393 openloop pragma config motor port6 flyleft tmotorvex393 openloop pragma config motor port10 belt tmotorvex393 openloop //* code generated configuration wizard *// pragma platform vex pragma competitioncontrol competition pragma autonomousduration pragma usercontrolduration include vex_competition_includes.c //main competition background code ... modify void pre_auton task autonomous true == true motor flyleft -127 motor flyright wait1msec motor belt -127 task usercontrol true == true motor drivefr -vexrt ch2 motor drivefl vexrt ch3 motor drivebr vexrt ch2 motor drivebl vexrt ch3 vexrt btn6d == motor flyright -127 motor flyleft -127 vexrt btn6d == motor flyright motor flyleft vexrt btn5d == motor belt -127 vexrt btn5d == motor belt,wheeled-robot robotc vex,robotc wheeled vex robot
1974,metal shaft design plastic bevel gear,small pom bevel gear dimensions hole shaft m4 hole set screw suppose bevel gear meshed bevel gear give max output torque design shaft diameter flattened shape set screw hold shaft planning use metal shaft help appreciated thanks,mechanism torque gearing,gearing torque mechanism
1975,joystick rate limit filter frc java programming,programmer school frc robotics team received request hardware/driving department limit speed robot motors accelerate given joystick input telling increase speed motor example robot starts driver decides move joystick center position full motor power want go full motor power instant creates jerky unstable behavior receive target joystick position joystick save build time inputs sent process — telling turn — stop current process enact new using java wpilib robotics library api http //first.wpi.edu/frc/roborio/release/docs/java/ tutorials http //wpilib.screenstepslive.com/s/4485/m/13809 using iterativerobot template class teleop run method teleopperiodic called milliseconds program receiving joystick input calling method robotdrive.tankdrive inputs realize programming question robotics question figured better put overflow etc someone give simple pseudocode conceptual idea done pertains library language using great,software first-robotics,robotics first software
1976,create cable series roomba,last months playing ros nvidia jetson tk1 development board point playing gpio header arduino uno couple physical contact sensors custom motor servo boards slapped eyeing old series roomba gathering dust replaced series anyone know communication cable create work series roomba know diy designs fan using off-the-shelf components exist save money time something cable similar component create cable work use see make,ros irobot-create roomba,create ros roomba irobot
1977,alternative beaglebone black node.js based remote control project,working remote control project involves using node.js socket.io transmit joystick data webpage beaglebone black disappointed beaglebone seems simple tasks connecting wi-fi tricky ... question alternative boards looking boards node.js libraries pwm support stream video easier set larger developer community,control microcontroller pwm beagle-bone,control beagle pwm microcontroller bone
1978,mass matrix lagrange equation,want find equations motion rrrr robot.i studied bit confusion lectures found describes inertia matrix link ii computed tilde described picture tilde computed wrt fixed frame attached centre mass example source rotation matrix multiplication ic1 ic2 shown above.am missing something significance multiplying rotation matrix ic1 tilde using former approach getting large mass matrix normal terms mass matrix need know method correct equation used mass matrix,robotic-arm dynamics,dynamics arm robotic
1979,supposed bearing,looking tail rotor look original image wonder tail output shaft stopper circled red meant bearing piece metal stopper reading held set screws whole part rotate rod rotating rub bevel gear tail drive missing something,mechanism torque gearing,gearing torque mechanism
1980,irobot create screw size/thread,looked think find information come anything anyone know kind screws use replace ones top roomba realize create series expect replace screws roomba standoffs stick mounting plate top additional sensors cpu etc,irobot-create roomba,create roomba irobot
1981,analogue video digital,fpv camera outputs analog video rca pal want capture video image processing need way convert analog video digital recommend advice shield assist please note want convert frames minimum latency real time flying drone need convert image compressed format decoding take time get rgb matrix straight preferred thought digital output camera need grams found,quadcopter cameras,quadcopter cameras
1982,determine robot position nearby room,scenario roaming robots different rooms house robots connected house wifi robot access equipment question robots aware exact position using equipment house wifi edit additional info right robots rgbdslam kinect initial knowledge house location docks mappings/markings nada communicate wifi part open ended hoping able stitch scanned rooms robots meet compass altimeter gps get close goal inch accuracy makes tough freedom add parts robots laptop home needs stay dynamic robots different home time,mobile-robot localization precise-positioning,mobile precise positioning robot localization
1983,software real-time ros system,know hardware real-time robot control system requires specific computing unit solve kinematics dynamics robot interval rtx assigns cpu cores calculation dsp board calculation configuration makes sure calculation ms. understanding ros runs ubuntu exclusive computing unit kinematics dynamics run different threads cpu operates ubuntu system path plan everything else question ros achieve software-real time slow sampling time makes sure calculation done time sampling time changes cycle time order fast possible ros somehow compensates cycle,microcontroller ros real-time,ros real microcontroller time
1984,pid tuning unbalanced quadcopter know i-gain set high,good day working autonomous flight controller quadcopter configuration using angles inputs setpoints used single loop pid controller running pid implementation quadcopter pid controller derivative measurement removing derivative kick trying get quadcopter stabilize setpoint degrees able come +-5 degrees bad position hold tried using pd controller quadcopter front heavy due stereo cameras amount stabilize system example image added small gain see image second plot oscillations occur level zero degrees due front heavy means quad oscillates level postion degrees negative angle/towards front compensate behaviour discovered set level oscillations occur using gain reach setpoint image shown think adequate gain applied adjusted pid gains reduce jitters caused much p gain gain current settings tests corresponding footage test https //youtu.be/8jsraze6xgm test https //youtu.be/zzte6vqerq0 seem tune reach setpoint least +-1 degrees error noticed increasing i-gain longer increases dc offset know i-gain set high reflect plot edit perr graphs difference setpoint cf complementary filter angle derr plotted divided deltatime execution time small make errors p hard see ierr plotted integrated time errors plotted perr ierr derr multiplied kp ki kd constants plot images response quadcopter values axis correspond value placed input gpiopwm function pigpio library mapped using scope values pigpio integer input corresponds time high pwm esc's edit current code implementation setpoint degrees cout starting quadcopter endl float //1510ms float //this current set max throttle pitch yaw roll pid give allowance altitude pwm maximum equivalent time high pwm float basecompensation //for altitude pid implemented delay float starttime= float gettickcount deltatimeinit= float gettickcount //starting value pass //read sensor data readgyro gyroanglearray readaccelmag accelmaganglearray //time stamp //the loop used get consistent dt proper integration obtain correct gyroscope angles found variable dt impossible obtain correct angles gyroscope float gettickcount -deltatimeinit float gettickfrequency //0.00209715|0.00419 deltatime2= float gettickcount -deltatimeinit float gettickfrequency //get time elapsed cout dt endx deltatime2 endl //deltatime2= float gettickcount -deltatimeinit float gettickfrequency //get time elapsed deltatimeinit= float gettickcount //start counting time elapsed cout dt end deltatime2 endl //complementary filter float pitchanglecf= alpha pitchanglecf+gyroanglearray.pitch*deltatime2 1-alpha accelmaganglearray.pitch float rollanglecf= alpha rollanglecf+gyroanglearray.roll*deltatime2 1-alpha accelmaganglearray.roll float yawanglecf= alpha 1-alpha accelmaganglearray.yaw //calculate orientation error current target float pitcherror pitchanglecf pitchtarget pitcherrorsum += pitcherror*deltatime2 float pitcherrordiff pitcherror pitchpreverror pitchpreverror pitcherror float rollerror rollanglecf rolltarget rollerrorsum += rollerror*deltatime2 float rollerrordiff rollerror rollpreverror rollpreverror rollerror float yawerror yawanglecf yawtarget yawerrorsum += yawerror*deltatime2 float yawerrordiff yawerror yawpreverror yawpreverror yawerror //pid controller list float pitchpid pitchkp*pitcherror pitchki*pitcherrorsum pitchkd*pitcherrordiff/deltatime2 float rollpid rollkp*rollerror rollki*rollerrorsum rollkd*rollerrordiff/deltatime2 float yawki*yawerrorsum yawkd*yawerrordiff/deltatime2 //motor control mixing //motor front left float motorpwm1 -pitchpid rollpid yawpid basethrottle basecompensation //motor front right float motorpwm2 -pitchpid rollpid yawpid basethrottle basecompensation //motor left float motorpwm3 pitchpid rollpid yawpid basethrottle basecompensation //motor float motorpwm4 pitchpid rollpid yawpid basethrottle basecompensation //check pwm saturating method used trim outputs pwm gets fed gpiopwm function avoid exceeding earlier set maximum throttle maintaining ratios motor throttles float motorpwm1 motorpwm2 motorpwm3 motorpwm4 float minpwm motorpwm int i=0 i++ // get minimum pwm filling motorpwm minpwm minpwm=motorpwm cout minpwm minpwm endl minpwm basethrottle float fillpwm=basethrottle-minpwm //get deficiency use fill motors cout fill fillpwm endl motorpwm1=motorpwm1+fillpwm motorpwm2=motorpwm2+fillpwm motorpwm3=motorpwm3+fillpwm motorpwm4=motorpwm4+fillpwm float motorpwm2 motorpwm1 motorpwm2 motorpwm3 motorpwm4 float maxpwm motorpwm2 i=0 i++ // get max pwm trimming motorpwm2 maxpwm maxpwm=motorpwm2 cout maxpwm maxpwm endl maxpwm maxthrottle float trimpwm=maxpwm-maxthrottle //get excess use trim motors cout trim trimpwm endl motorpwm1=motorpwm1-trimpwm motorpwm2=motorpwm2-trimpwm motorpwm3=motorpwm3-trimpwm motorpwm4=motorpwm4-trimpwm //pwm output gpiopwm motorpwm1 //1 gpiopwm motorpwm2 //2 gpiopwm motorpwm3 //3 gpiopwm motorpwm4 //4,pid raspberry-pi quadcopter tuning,quadcopter pi raspberry pid tuning
1985,optimal location center mass inverted pendulum,building inverted pendulum controlled dc motors run conundrum personal life experience tells better lower center mass maintain balance hand greater moment inertia e.g higher center mass easier maintain balance views seem plausible seem contradictory inverted pendulum optimal balance perspectives right wrong wrong error thinking,dynamics balance,dynamics balance
1986,xbee xtend recovery/troubleshoot,broke xbee xtend module firmware-writing job restarted windows tried recovery procedure xctu new version work working old version error facing,radio-control,control radio
1987,alternative manifolds using quaternions orientation representation pose graph slam,want implement pose graph slam following vehicle moving 3d-space represent pose using 3d-translation vector quaternion orientation tells necessary adapt algorithm using manifolds project poses euclidean space studied approach section iv.b nonlinear systems write approach remains valid nonlinear systems conclude case obligatory make use manifold understand avoid questions correct alternative manifolds alternative look grisetti g. kummerle r. stachniss c. burgard w. tutorial graph-based slam intelligent transportation systems magazine ieee 31-43 kaess m. ranganathan a. dellaert f. isam incremental smoothing mapping robotics ieee transactions 1365-1378,slam pose,slam pose
1988,simple function plotter project,plot curve function paper need points curve draw curve store set points processor use motors markers mechanism draw straight lines attaching points points resultant look actual curve going draw curve marker pen project need motors change position marker knowledge stepper motor servo motors appropriate sure appropriate used work dimension paper working cms ideas machine a. rectangular shown make marker holder movable help rack pinion mechanism sure precise alter mechanism know help b. cylindrical roll paper cylinder paper get unrolled cylinder rotates marker holder movable x direction rolling paper nothing change position methods good know microcontrollers want control motors using decided go atmega microcontroller need microstepping signals able microcontrollers know answer questions answers welcomed need clarifications please leave comment thankyou time jasser edit draw lines particular slope know points depending slope rotate motors particular speed marker move straight fashion slope,microcontroller stepper-motor servomotor,servomotor microcontroller stepper motor
1989,reference request path accuracy algorithm joint angle space,reviewing path accuracy algorithm measured data points dimensional joint space robot test axes robot importance question know path accuracy measured assessed configuration space wondering path accuracy definition joint angle space practical value sure looks joint angle space dimensional vector space example euclidean distance measure math seems odd instance angle discrepancy measured expected lowest much significance discrepancy axis actuator end effector question anyone point references path accuracy joint space and/or algorithms calculation discussed sure tags use sorry misused,algorithm industrial-robot joint,joint industrial robot algorithm
1990,finding center mass humanoid robot,working humanoid robot face problem finding center mass robot help balancing biped com simple definition unable simple solution problem view solved inverse kinematics robot torso base frame find position orientation joint base frame average get com approach reasonable produce correct com anyone offer series steps follow find com biped help appreciated cheers,mobile-robot inverse-kinematics humanoid balance,inverse mobile robot humanoid kinematics balance
1991,connecting cc3d board raspberry pi get telemetry data,want get telemetry data raspberry connected cc3d board usb cable serial communication get data plan wifi communication pi laptop oplink modems used pi cc3d telemetry anyone python example help build interface output linux shell get raw telemetry data rpi,serial communication,communication serial
1992,lag altitude measurements using barometer acclerometer,fusing data barometer accelerometer using complementary filter considerable lag readings affecting alt-hold performance accelerometer mpu baro ms code https //github.com/cleanflight/cleanflight/blob/master/src/main/flight/altitudehold.c find filter implemented function calculateestimatedaltitude anyone suggestions improve measurements,quadcopter sensors sensor-fusion,quadcopter sensors sensor fusion
1993,make raspberry pi,robotics hobbyist full fledged arduino used raspberry pi make robots pcs thinking making raspberry pi scratch breadboard pcb something surfed web bit get hoping making pi mean buying arduino make buying atmega328 crystal oscillators etc asking school requires project make computer gaming console something hate look disappointed face tester bought connected devices thanks advance,arduino raspberry-pi,pi raspberry arduino
1994,simple equation calculate needed motor torque,suppose dc motor arm connected arm length arm weight motor speed connect weight end arm much torque needed motor complete spin provided motor placed arm vertical simple equation input weight get required torque provided factors remain,motor torque,torque motor
1995,sphero logic work,willing make first robot make similar sphero know add motors make work hamster ball understand make rotate x axis aswell assume front robot x sides ideas,design two-wheeled,design wheeled
1996,choosing stepper motor hand,developing robotic hand decided place motors joints picture stuck finding stepper motor fit approximate size motor body radius length mm suggestions,stepper-motor,stepper motor
1997,compute error function graph slam poses,given pose x_i t_i q_i translation vector t_i rotation quaternion q_i transform poses x_i x_j z_ ij t_ ij q_ ij want compute error function e x_i x_j e_ ij minimized yield optimal poses x^* x_i x^* argmin_x \sum_ ij e_ ij ^t \sigma^ -1 ij e_ ij naive approach look e_ ij z_ ij f x_i x_j z_ ij current measurement transform x_i x_j f calculates estimate transform ij computes difference translations difference turning angles ij \begin pmatrix t_ ij t_j t_i \\\ q_ ij q_j q_i^ -1 -1 \end pmatrix anything wrong naive approach missing something,slam errors,slam errors
1998,choosing state vector ekf,someone help understand logic choosing particular state space vector ekf context say wheeled robot operates equipped inertial unit a/g/m wheel encoders understand satisfy accuracy constraints consider hypothetical case literature state q x vx vy others q q_dot x vx vy question advantage certain terms opposed normal parameters including bias terms go selecting appropriate state space vector use-case general set intuitive/mathematical steps consider/follow thanks,wheeled-robot kalman-filter ekf pose,kalman ekf pose robot filter wheeled
1999,find orientation transformation matrix,robot rotational joints trying simulate program creating frames base frame joint frame transformation functions go frame frame using transformation matrix want know much frame rotated x z compared base frame suggestions reason want made simple shapes represent joint using dh parameters made transformation matrices change θ mater θ changes want whole structure update take translation last column want get rotations,robotic-arm dh-parameters,parameters arm dh robotic
2000,freewheel diode capacitor board,dc motors common put freewheel diode and/or capacitor order protect equipment motor induce current system plan use board control dc motor arduino-like microcontroler example documentation put protection wanted know unsafe board protects system example question,arduino motor protection,protection motor arduino
2001,homotopy used planning algorithms,intuitive understanding homotopy stage homotopy understand stretching bending path planning algorithm homotopy involved example implementing algorithm rrt,motion-planning rrt,motion planning rrt
2002,making car go,trying work car controlled arduino using following chassis new car chassis dc gear motor wheels easy expansion l298n motor driver problem make car go giving pwm value motors makes spin different speeds trying calibrate value hard time recharge batteries value changes options making car go want want turn course thought using encoder wish avoid complicate whole project viable option using encoder means need keep track time adjust motors value built-in library,arduino wheeled-robot calibration two-wheeled,calibration robot wheeled arduino
2003,list books similar thrun probabilistic robotics robot mechanics manipulation,put list books c/c++ stackoverflow similar sebastian thrun probabilistic robotics robotic manipulation mechanics thrun book wonderful resource implementable algorithms dealing mathematics/theory similar vein robotic mechanics mathematical introduction robotic manipulation s.sastry z.li r.murray lot mathematical/theoretical content missing book algorithms concerned go implementing theoretical stuff requirements list books dealing diverse areas robotics books present algorithms thrun book algorithms presented language agnostic possible based packages matlab case categorized,kinematics inverse-kinematics algorithm dynamics books,books dynamics inverse kinematics algorithm
2004,inverse kinematics calibration,working robot arm project big question derived inverse kinematics ik algorithm decoupling spherical wrist get equations based nominal dh values alpha degrees many zeros a_i d_i kinematics calibration identified dh parameters longer ideal ones certain small non-zero bias added nominal values question ik algorithm used actual dh parameters yes end-effector errors actual operation change ik algorithm p.s working modular robot arm means dh bias bigger traditional robot arms,inverse-kinematics calibration,inverse kinematics calibration
2005,import catia matlab simmechanics,catia .stl format available part file file please help import simmechanics .catproduct .stl way,matlab,matlab
2006,regarding finding sensor,looking sensor able read displayed data lcd display digits output sensor fetched microcontroller anyone suggest sensor please,sensors hall-sensor,sensors sensor hall
2007,multi-rate sensor fusion using ekf,context imu a/g/m wheel odometry measurement data trying fuse order localize ackermann drive robot state vector x x yaw using odometry data propagate state time control input update step includes measurement vector z x_odo questions make sense use odometry data v_linear omega prediction update steps account frequency difference odometry data imu data run filter lower frequency change matrix sizes way thanks,localization wheeled-robot imu ekf odometry,odometry localization ekf robot imu wheeled
2008,check collision robot environment openrave,robot arm environment check collision robot arm environment,robotic-arm motion-planning python,motion python planning arm robotic
2009,memory benchmarking criteria motion planning algorithm,applications memory criteria respect motion planning algorithms memory efficient motion planning algorithms relevant,mobile-robot quadcopter motion-planning,mobile quadcopter planning motion robot
2010,pid control integral error converge zero,good day reading pid controllers stumbled something called integral wind working autonomous quadcopter concentrating moment pid tuning noticed setpoint zero degrees reached video quadcopter overshoot bit https //youtu.be/xd8wgvffesm corresponding data testing roll axis noticed i-error converge continues increase integral wind-up effective way resolve seen many implementations focusing limiting output system means saturation see bringing integral error zero system stable current code implementation setpoint degrees cout starting quadcopter endl float //1510ms float //this current set max throttle pitch yaw roll pid give allowance altitude pwm maximum equivalent time high pwm float basecompensation //for altitude pid implemented delay float starttime= float gettickcount deltatimeinit= float gettickcount //starting value pass //read sensor data readgyro gyroanglearray readaccelmag accelmaganglearray //time stamp //the loop used get consistent dt proper integration obtain correct gyroscope angles found variable dt impossible obtain correct angles gyroscope float gettickcount -deltatimeinit float gettickfrequency //0.00209715|0.00419 deltatime2= float gettickcount -deltatimeinit float gettickfrequency //get time elapsed cout dt endx deltatime2 endl //deltatime2= float gettickcount -deltatimeinit float gettickfrequency //get time elapsed deltatimeinit= float gettickcount //start counting time elapsed cout dt end deltatime2 endl //complementary filter float pitchanglecf= alpha pitchanglecf+gyroanglearray.pitch*deltatime2 1-alpha accelmaganglearray.pitch float rollanglecf= alpha rollanglecf+gyroanglearray.roll*deltatime2 1-alpha accelmaganglearray.roll float yawanglecf= alpha 1-alpha accelmaganglearray.yaw //calculate orientation error current target float pitcherror pitchanglecf pitchtarget pitcherrorsum += pitcherror*deltatime2 float pitcherrordiff pitcherror pitchpreverror pitchpreverror pitcherror float rollerror rollanglecf rolltarget rollerrorsum += rollerror*deltatime2 float rollerrordiff rollerror rollpreverror rollpreverror rollerror float yawerror yawanglecf yawtarget yawerrorsum += yawerror*deltatime2 float yawerrordiff yawerror yawpreverror yawpreverror yawerror //pid controller list float pitchpid pitchkp*pitcherror pitchki*pitcherrorsum pitchkd*pitcherrordiff/deltatime2 float rollpid rollkp*rollerror rollki*rollerrorsum rollkd*rollerrordiff/deltatime2 float yawki*yawerrorsum yawkd*yawerrordiff/deltatime2 //motor control mixing //motor front left float motorpwm1 -pitchpid rollpid yawpid basethrottle basecompensation //motor front right float motorpwm2 -pitchpid rollpid yawpid basethrottle basecompensation //motor left float motorpwm3 pitchpid rollpid yawpid basethrottle basecompensation //motor float motorpwm4 pitchpid rollpid yawpid basethrottle basecompensation //check pwm saturating method used trim outputs pwm gets fed gpiopwm function avoid exceeding earlier set maximum throttle maintaining ratios motor throttles float motorpwm1 motorpwm2 motorpwm3 motorpwm4 float minpwm motorpwm int i=0 i++ // get minimum pwm filling motorpwm minpwm minpwm=motorpwm cout minpwm minpwm endl minpwm basethrottle float fillpwm=basethrottle-minpwm //get deficiency use fill motors cout fill fillpwm endl motorpwm1=motorpwm1+fillpwm motorpwm2=motorpwm2+fillpwm motorpwm3=motorpwm3+fillpwm motorpwm4=motorpwm4+fillpwm float motorpwm2 motorpwm1 motorpwm2 motorpwm3 motorpwm4 float maxpwm motorpwm2 i=0 i++ // get max pwm trimming motorpwm2 maxpwm maxpwm=motorpwm2 cout maxpwm maxpwm endl maxpwm maxthrottle float trimpwm=maxpwm-maxthrottle //get excess use trim motors cout trim trimpwm endl motorpwm1=motorpwm1-trimpwm motorpwm2=motorpwm2-trimpwm motorpwm3=motorpwm3-trimpwm motorpwm4=motorpwm4-trimpwm //pwm output gpiopwm motorpwm1 //1 gpiopwm motorpwm2 //2 gpiopwm motorpwm3 //3 gpiopwm motorpwm4 //4,control quadcopter pid stability tuning,control quadcopter pid tuning stability
2011,plotting location using wheel encoder data,context working sfu mountain dataset http //autonomylab.org/sfu-mountain-dataset/ ugv image sfu mountain dataset website used following state update equations husky a200 differential drive state update prob robotics thrun al x theta represent state next time step plotting x positions based wheel encoder data v_fwd w dataset provides vr vl curve seems weird unexpected wheel odometry data http //autolab.cmpt.sfu.ca/files/datasets/sfu-mountain-workshop-version/sfu-mountain-torrent/encoder-dry-a.tgz blue wheel red gps actual path question curve expected considering inaccuracy wheel something missing wheel encoder data bad ekf odom imu work ps worried ekf update step concerns horrible wheel odometry data,localization wheeled-robot ekf odometry differential-drive,odometry localization ekf differential robot drive wheeled
2012,kind sensor use identify fruit mango apple,kind sensor use identify fruit mango apple moreover sensor identify different varieties apples mangoes,sensors,sensors
2013,best way attach printed part servo robotics use,trying make custom parts fit servo proved difficult expected hoping avoid incorporating provided servo horns printed part trying method images current test printed attachment servo indentation m3 nut servo accepts m3 bolt attachment servo plastic ring spline print level detail think tight top piece attaches nut use threaded rod laying difficulty setup working level torque spinning place ... correct approach going design piece servo horn inside get servo connect better approaches considered,servos 3d-printing,printing servos
2014,information gain based exploration differ frontier based,come concept using information gain mutual information criteria metric minimizing entropy map aid robotic exploration basic question lot papers talk minimizing entropy consider example case something laser scanner try compute best pose maximum entropy reduction achieved mentioned information gain based approaches help finding best spot move robot entropy minimized using raycasting techniques opposed based exploration greedy etc understand underlying reason information gain/entropy based exploration better let say robot room walls open space front range limitations see walls frontier based exploration robot choices move towards third wall realize obstacle move towards open space keep going information gain based method pick open space frontier wall frontier idea frontiers raycasting help,mapping exploration information-gain,information exploration mapping gain
2015,ekf slam prediction new landmarks,prediction new landmarks expressed xm xr r*cos phi theta_r ym yr r*sin phi theta_r true point landmarks extracting line feature,slam ekf,ekf slam
2016,ultrasonic sensor used detecting hydraulic flow,looking make non contact hydraulic flow meter wondering ultrasonic sensor use specific ideas go documented builds subject,ultrasonic-sensors,sensors ultrasonic
2017,using genetic algorithm tuning controllers,read papers controlling nonlinear systems e.g nonlinear several approaches targeting nonlinear systems common ones linearizaing backstepping sliding mode controllers case done theoretical practical parts controlling nonlinear model simple pendulum manipulators problems c++ utilized backstepping controller solving tracking task angular displacement velocity results \ddot \theta k/m \dot \theta g/l \sin\theta= u m=0.5 k=0.0001 l=.2 g=9.81 results good tuning controller time consuming majority papers use genetic algorithms tuning controllers pd pid backstepping controllers clueless field hope someone sheds light concept preferable matlab sample least controlling simple pendulum designed simple gui c++/qt order tune controller picture response controller step function,control,control
2018,ultrasonic flow sensor,goal non-invasive flow meter clamp hydraulic lines student hydraulics ended looking poking good way make ultrasonic flow sensor arduino hc-sr04 married idea admit know nothing possible easier way,ultrasonic-sensors,sensors ultrasonic
2019,determines speed quadrotor,design quadrotor travels particular maximum speed determine power required quadrotor hover,mobile-robot quadcopter power,mobile quadcopter robot power
2020,align solidworks global origin origin exporting solidworks urdf,created robot model solidworks exported solidworks urdf plug-in exporting co-ordinates model misaligned causing problem using ros see picture z-axis horizontal assembly whereas vertical solidworks co-ordinates generated co-ordinate system similar solidworks co-ordinates mated origin base_link origin,mobile-robot ros navigation odometry gazebo,odometry mobile navigation robot ros gazebo
2021,vector field histogram implementation python,trying implement vector field histogram described koren python using scipy stack able calculate polar histogram described paper smoothing function eliminate noise variable stored numpy array named self.hist function computetheta pasted computes steering direction able compute proper direction valleys i.e consecutive sectors polar histogram whose obstacle density certain threshold contain section full circle completed i.e sector corresponding make things clearer consider examples histogram contains peak angles say rest histogram valley steering direction computed peak contained say valley start go way end steering direction computed single valley considered valleys def computetheta self goal thrs s_max start calculating sector corresponding direction target target_sector int *np.arctan2 goal self.vcp goal self.vcp target_sector target_sector += target_sector /= next assume best sector best_sector -1 dist_best_and_target abs target_sector best_sector find sector valley closest target sector k range self.hist.shape self.hist k thrs abs target_sector k dist_best_and_target best_sector k dist_best_and_target abs target_sector k sector -1 return error print target_sector best_sector best_sector == -1 return -1 proceed ... elif best_sector -1 ... deciding valley best sector belongs wide narrow assume wide type_of_valley wide find sector contradicts assumption change minds sector range best_sector best_sector s_max sector self.hist.shape self.hist sector thrs type_of_valley narrow wide valley return corresponding sector k_n s_max /2 type_of_valley == wide theta best_sector s_max /2 return theta find border valley return angle corresponding mean value best sector border elif type_of_valley == narrow sector range best_sector best_sector s_max self.hist sector thrs far_border sector theta best_sector far_border /2 return theta address issue way treat histogram circular better way write function thank time,motion-planning python planning,motion python planning
2022,helicopter stabilization algorithm,hacked rc helicopter able control running program computer interested writing algorithms stabilize helicopter instance helicopter hovering shoved balance return previous position stable state help algorithm awesome,algorithm stability,stability algorithm
2023,difference planning kinematic car dynamic car blimp quadrotor,working sampling based planning library looked implementation found kinematic car se2 state space x dynamic car se2 compound state space space allowing composition state spaces blimp quadrotor se3 compound state space used understand design se2 se3 state spaces compound state spaces dynamic car blimp quadrotor comprehend differentiate difference terms state space motion planning kinematic car dynamic car blimp quadrotor,mobile-robot quadcopter motion-planning,mobile quadcopter planning motion robot
2024,wireless mini camera,looking mini wireless chargeable camera stream video real time computer put mini camera helicopter send live video feed pic make certain calculations make helicopter navigate certain way help great,cameras,cameras
2025,communication old robotic arms electric,robotic manipulators electric trying communicate using rs232 success robot model microrobots 88-4 88-5. sending commands com port received anything box using usb-to-db9 converter ftdi db9-db25 cable net reference robot old post year user peterkneale help link scanned pdf manual see commands page 23-24 pdf page 21-22 document advice grateful,robotic-arm,arm robotic
2026,wind flow diagram quadcopter,trying determine wind flow diagram quad-copter action looked internet find reliable source wind flow diagram mean quad-copter mid-air hovering fixed position air moving directions needed kept top bottom vertical direction horizontal direction thank,quadcopter dynamics,quadcopter dynamics
2027,solar cells charging li-po battery,way charge li-po battery using solar panels increase flight time quadcopter flight,quadcopter power,quadcopter power
2028,evaluating similarity degree freedom arms,working baxter robot arm configuration bunch arm configurations want find closest arm configuration many arm configurations trick end effector location/orientation exact arm configurations different ik solutions anyone point towards right direction towards thank,robotic-arm inverse-kinematics,inverse kinematics arm robotic
2029,interrupt data ready trigger communications sensor interrupt driven,background using l3gd20h mems gyroscope library pololu l3g turn relies interrupt-driven i2c wire.h able handle new reading sensor update calculated angle background using data ready line drdy poll status register zyxda bit drdy line outputs needed general question digital output sensors i2c spi etc datasheets application notes describe using separate out-of-band hardware line interrupt microcontroller handle new sets data many microcontrollers retrieving data let clearing flag raising interrupt line requires using interrupt-driven i2c subsystem microcontroller new sensor data retrieved isr interrupt line using i2c subsystem interrupt-driven manner possible workarounds use nested interrupts hauptmech mentioned re-enable i2c interrupt isr approach discouraged non-interrupt-driven i2c polling -- dangerous approach isrs sensor library used depends interrupt-driven wire library edit professors suggestion timer interrupt set sample rate sensor settable constant measure e.g datasheet handling i2c transaction requires re-enabling interrupts i.e nested interrupts performing i2c reads main program edit comment found similar issue led believe hang encountered i2c reads failing interrupt handler https //www.sparkfun.com/tutorials/326 comment-4f4430c9ce395fc40d000000 …during isr interrupt service routine trying read device determine bit changed bad idea chip uses i2c communications require interrupts interrupts turned everything goes kinda,arduino microcontroller gyroscope i2c interrupts,i2c interrupts microcontroller gyroscope arduino
2030,syncing camera signals,sure best place ask question someone give advice device hooked data acquisition system provide sync signal record sync signals need synchronize recordings device video feed trouble finding camera provide sync signal good way accomplish thanks help,sensors cameras,sensors cameras
2031,controlling hubsan x4 crazyflie usb dongle,crazyflie usb dongle works crazyflie software usb dongle control crazyflie drones drones operate ghz get dongle software work hubsan x4 help great link usb dongle software http //www.seeedstudio.com/depot/crazyradio-pa-long-range-24ghz-usb-radio-dongle-with-antenna-p-2104.html https //github.com/bitcraze/crazyflie-clients-python,python,python
2032,cartesian space velocity profile minimize jerk,working dof manipulator implemented simple velocity controler fixed direction xyz space control xyz space velocity xdot using predefined velocity profile time joint values updated based defined velocity profile assume want move robot direction parallel z axis define trapezoidal velocity profile z dot time following robot controller program convert z dot velocity time joint space multiplying inverse jacobian way move robot needed question define velocity profile time total jerk joints time minimized help appreciated,control robotic-arm manipulator,control manipulator arm robotic
2033,simulation software kuka lbr iiwa robot,working kuka lbr iiwa r800 robot kuka ide virtual platform verify code simulate difficult need test code deploying robot anyone suggest simulation software available test code written using robotics api sunrise.workbench came v-rep simulation software sure use code workbench platform appreciate anyone shed light thanks advance,robotic-arm simulation,simulation arm robotic
2034,use matlab compiler sdk generated package kuka sunrise.workbench,matlab compiler sdk allows create wrapper matlab function accessed java software based understanding kuka sunrise.workbench ide uses standard java functions trying read package generated using matlab compiler sdk new version matlab builder ja workbench platform read package eclipse ide workbench reason using compiler sdk functions matlab want use workbench programming anyone experience appreciate help,matlab robotc,matlab robotc
2035,possible decouple mimo transfer function robot multi siso system,mimo transfer function size inputs outputs g g11 g12 g13 g14 g15 g16 g17 g21 g22 g23 g24 g25 g26 g27 g31 g32 g33 g34 g35 g36 g37 possible decouple interaction loops get multi siso system g,control,control
2036,ros tutorials longer working,anyone run case fresh install ros run tutorial packages running ros indigo nvidia jetson tk1 using nvidia-supplied ubuntu image fresh install ubuntu ros keep things clean project building kind students teaching use demo files code setting things try run tutorial check make sure everything running rospack pretty sure tutorials exist example inputting terminal rosrun rospy_tutorials talker outputs rospack error package found case tutorial file python c++ sure tutorials installed looking file system installed latest versions github think something ros side things anyone bumped something similar ros package installed found ros reinstall avoid edit playing discovered multiple packages running turtlebot code packages returned error suspect something got messed install ros roswtf able run detect problems going edit double checked bashrc file export missing ros directory trying work adding solve problem looking solution involve reflashing tk1 edit alright poking days much gave trying get ros work decided re-flash necessary think found something booted host machine downloads folder v2.0 v1.2 jetpack know used v2.0 latest install time used provides useful updates opencv bug fixes things going re-flash using v1.2 jetpack time see things behave better ros version shot work moment lose ros capabilities wanted opencv update everyone seems work ok everything seems working problem seem issue jetpack v2.0 suspect change v1.2 v2.0 made accommodate new tx1 board messes running ros indigo tk1 going detailed explanation question,ros,ros
2037,simulation robots,designing new mechanism similar robot arm axis arms traditional articulated arms result new dh matrix inverse kinematics involve like consult robot professionals forum suggest simulation tool mechanism plan start start end points trapezoid velocity plan take sample points sampling time path like transfer sampling points motor joints dh matrix inverse kinematics basic animation visualize movement plan simulate controller behavior application motor drivers deal need focus sending reasonable commands motor drivers opinion matlab octave vc++ third-party tools candidates starting ground time-consuming work appreciate experts share tool open source code experience search matlab robotics toolbox sure fits need expensive optimized ros octave robotics toolbox sure,robotic-arm matlab simulation c,c matlab simulation arm robotic
2038,quadcopter pid controller saturating,good day creating autonomous quadcopter using cascading pid controller p-pid controller using angle setpoints outer loop angular velocities inner loop finished tuning roll pid last week +-5 degrees error stable able withstand disturbances hand able tune nights pitch axis different story introduction problem pitch asymmetrical weight front heavy due stereo vision cameras placed front tried move battery backwards compensate due constraints dji f450 frame front heavy pid controller asymmetrical quadcopter i-gain responsible compensating able remember accumulating error problem hand saw tuning pitch gains tune due irregular oscillations made hard pinpoint due high p gain quadcopter pitch pid settings prate=0.0475 irate=0.03 drate=0.000180 pstab=3 giving error angle setpoint +-10degrees data corresponding video rate kp ki kd stab kp=3 video https //youtu.be/nmbldhrzp3e plot analysis results seen controller saturating motor controller set limit pwm pulse used control esc code maximum minimum set enough quad lift itselft feel weightless make room tuning altitude/height pid controller maintaining throttle ratio motors pid controllers something wrong implementation limiting maximum throttle implementation //check pwm saturating method used trim outputs pwm gets fed gpiopwm function avoid exceeding earlier set maximum throttle maintaining ratios motor throttles float motorpwm1 motorpwm2 motorpwm3 motorpwm4 float minpwm motorpwm int i=0 i++ // get minimum pwm filling motorpwm minpwm minpwm=motorpwm cout minpwm minpwm endl minpwm basethrottle float fillpwm=basethrottle-minpwm //get deficiency use fill motors cout fill fillpwm endl motorpwm1=motorpwm1+fillpwm motorpwm2=motorpwm2+fillpwm motorpwm3=motorpwm3+fillpwm motorpwm4=motorpwm4+fillpwm float motorpwm2 motorpwm1 motorpwm2 motorpwm3 motorpwm4 float maxpwm motorpwm2 i=0 i++ // get max pwm trimming motorpwm2 maxpwm maxpwm=motorpwm2 cout maxpwm maxpwm endl maxpwm maxthrottle float trimpwm=maxpwm-maxthrottle //get excess use trim motors cout trim trimpwm endl motorpwm1=motorpwm1-trimpwm motorpwm2=motorpwm2-trimpwm motorpwm3=motorpwm3-trimpwm motorpwm4=motorpwm4-trimpwm possible solution possible solutions mind redesign camera mount lighter 20-30 grams less front heavy increase maximum throttle leaving less room altitude/throttle control anyone know optimum solution problem additional information quadcopter weighs motor/esc set dji e310 rated recommended thrust motor real world test showed capable motor setup weighing take-off weight tune roll pid gains set first rate pid gains setpoint dps set gains increase p gain response system disturbances steady oscillation increase gain remove oscillations increase gain correct long term errors bring oscillations setpoint dc gain repeat desired system response achieved using single loop pid controller checked data plots testing make adjustments increasing kd minimize oscillations increasing ki bring oscillations setpoint similar process cascaded pid controller reason rate small rate kp set gains started oscillate wildy characteristic high p gain https //youtu.be/scd0hda0fty set rate pid maintain placed setpoint degrees second used gain outer loop stabilize pid translate angle setpoint velocity setpoint used control rate pid controller roll degrees set point https //youtu.be/voaa4ctc5ru rate kp ki kd stabilize kp stable reaction time/rise time slow evident video,quadcopter pid stability,quadcopter stability pid
2039,pure arduino quadcopter,bought set escs brushless outrunner motors propellers trying perform calibration esc find using components arduino uno setup managed make shown picture escs mystery manual found helps buy link http //www.ebay.co.uk/itm/4x-a2212-1000kv-outrunner-motor-4x-hp-30a-esc-4x-1045-prop-b-quad-rotor-/111282436897 problem battery lipo andybody figure wrong sample arduino code found include servo.h define max_signal define min_signal define motor_pin servo motor void setup serial.begin serial.println program begin ... serial.println program calibrate esc motor.attach motor_pin serial.println writing maximum output serial.println turn power source wait seconds press key motor.writemicroseconds max_signal // wait input serial.available serial.read // send min output serial.println sending minimum output motor.writemicroseconds min_signal void loop,arduino quadcopter esc,quadcopter esc arduino
2040,way check valve,working micro dispensing system using syringe pump design involves syringe top moved stepper motor liquid reservoir form syringe pull liquid push eject liquid end pull syringe liquid sucked syringe opening shut syringe pushed liquid ejected end quantity liquid dispensed small using small syringe ml .. measurement dispensing operations ml syringe empty need pull liquid reservoir syringe dispensing question unsure check valve check valve available allow kind flow happen,motor design,design motor
2041,difficult build simple robots example line follower using raspberry pi ros,want build low cost robot running ros educational purposes simple line follower using raspberry pi ir sensor overambitious beginner project difficult make ros run custom hardware p.s robotics programming interested building actual robots running simulations cant afford buy ros compatible robots,ros raspberry-pi electronics,pi electronics ros raspberry
2042,topics object perception pr2,started use ros hydro robot operating system ubuntu using simulator gazebo roscpp library order program robots case pick place known objects robots topics object perception pr2 ros,ros gazebo,ros gazebo
2043,operational space joint space dependent,questions friends argued problem operational space joint space dependent know x_e end effector pos q joint var expressed equation non-linear function k x_e k q think tells operational space joint space dependent,kinematics,kinematics
2044,waiting r_gripper_sensor_controller/gripper_action action server come,started use ros hydro robot operating system roscpp tested examples move gripper pr2 gazebo code http //wiki.ros.org/pr2_gripper_sensor_action/tutorials/grab catkin package launch roslaunch pr2_gazebo pr2_empty_world.launch run code rosrun pack_name node_name get waiting r_gripper_sensor_controller/gripper_action action come ... waiting r_gripper_sensor_controller/gripper_action action come ... want know cause lines order see results notable launch roslaunch pr2_gripper_sensor_action pr2_gripper_sensor_actions.launch previous link get pr2_gripper_sensor_actions.launch launch file package pr2_gripper_sensor_action pr2_gripper_sensor_action launch file name,ros gazebo,ros gazebo
2045,localization lasers,"know multi-rotor rectangular room lasers axis problem inputs room square meters meters positions lasers fixed frame orientations lasers fixed frame measurements lasers quaternion imu flight controller pixhawk origin centered gravity center multi-rotor defined walls perpendicular axes normal wall x -1,0,0 output position x z angular position quaternion got angular position multi-rotor rotated laser positions orientations quaternion extrapolate measurements got walls orientations walls trivial point enough determine position noticed yaw rotation z measurement pixhawk unreliable measure yaw lasers success event problem easy lost someone know know xyz position quaternion measurments exists right way go problem question get measurements lasers know original position orientation pitch roll note green pointers origin position red pointers final position rotated red circle due yaw",algorithm geometry,geometry algorithm
2046,suggestions object types features track camera,update aded bounty question stackoverflow trying implement object tracking camera camera z info camera resolution rescale faster processing tracking done robots camera want system robust possible list results tried colour tracking convert image hsv colour space thresholding morphological transformations find object biggest area approach made fair tracking object object colour looking max objects bigger need robot go bigger decided track circled objects specific colour difficult find different angles decided square objects specific colour used // approximate contour accuracy proportional // contour perimeter cv :approxpolydp cv :mat contours approx cv :arclength cv :mat contours true true checked condition approx.size approx.size afterwards checked solidity aspect ratio result robust expect size several squares find needed need suggestions features object use improve tracking mentioned several times main problems size know size object sure make use know distance object camera sure represent size pixel representation eliminate blobs fall range update third step described going detect squares specific colour examples getting used hsv range red colour scalar scalar params opencv inrange function hmin hmax smin smax vmin vmax like see suggestions tweaking values picture see processing gaussian blurring morphological closing times image label result shows tracked object please look green square second frame see detect red square main difference pics bended lid laptop please look closer notice suppose happens illumination causes thresholding give desired results way think separate processing image thresholding based colour find object move frame use opencv find squares method involve processing image,quadcopter cameras opencv,quadcopter opencv cameras
2047,action cost get smooth path,action cost used get smooth path use distance traversed get shortest path cost get smooth path something related rate change slope path,motion-planning,motion planning
2048,papers algorithms robotics,cs student need give 30-minute lecture 1-2 papers describing 1-2 algorithms main problems robotics navigation coverage patrolling etc. background robotics take classes algorithms ai including basic ai algorithms a* ids ucs subjects decision trees game theory etc. difference describing need paper refer actual physical robots algorithms real problems physical world opposed ai agents theoretical algorithms required lecture 1-2 academic papers published respectable amount citations suggestions papers appreciated,navigation algorithm theory coverage,coverage navigation theory algorithm
2049,guide camera circular tube,let say 6-dof flying camera want make move circular tube let suppose camera system makes considered point space feature image get camera use move camera get end tube get example thought use edge detection camera moves tube due fact plane dark circle forming camera sees nothing surrounded walls tube think preserving circle way go example becomes move camera become circle features help preserve circle like use image-based visual servoing troubles following visual-servoing applications seen control objective make features look certain way camera point view example projections points want camera move projections coordinates specific values features case thought example say want projections edge points circle/ellipse take specific values define circle centered fov camera camera moves achive setup features new edge points correspond projections different real points pipe theory collapses think way get oher ideas relevant literature,localization cameras motion-planning visual-servoing exploration,servoing localization cameras motion visual planning exploration
2050,inverse kinematics singularity matlab,"want find general coordinates q= alpha beta gamma revolute joints minimizes norm ||rgoal r||_2 rgoal included manipulator workspace problem solved coordinates rgoal manipulator workspace dont know singularities given functions r_bf_inb alpha beta gamma j_bf_inb alpha beta gamma foot positon jacobian r_bf_inb alpha beta gamma ... -sin beta gamma sin beta ... sin alpha cos beta gamma cos beta ... -cos alpha cos beta gamma cos beta j_bf_inb alpha beta gamma ... cos beta gamma cos beta -cos beta gamma ... cos alpha cos beta gamma cos beta -sin alpha sin beta gamma sin beta -sin beta gamma *sin alpha ... sin alpha cos beta gamma cos beta cos alpha sin beta gamma sin beta sin beta gamma *cos alpha write algorithm inverse kinematics problem find generalized coordinates q gives endeffector position rgoal -2 store qgoal q0 pi/180* -30,60 rgoal -2 enter algorithm q=q0 b=true b q_old=q dr=rgoal-r_bf_inb q_old q_old q_old dq=j_bf_inb q_old q_old q_old \dr q=q_old dq rgoal-r_bf_inb q_old q_old q_old 1e-3 b=false end end qgoal q stopping criteria use norm rgoal-r_bf_inb q_old q_old q_old norm rgoal-r_bf_inb q q q give correct answer solved general rgoal workspace",inverse-kinematics,inverse kinematics
2051,phone power packs,robotics project like utilise available mobile phone banks simplify power system robot power banks output great logic systems motors wondering wire power banks series get bad idea wire parallel use boost converter custom solution using li-po batteries associated charging circuit best answer additional information wheeled robot logic motor driver power banks,mobile-robot power battery,battery robot power
2052,micro powder dosing,process designing micro powder doser metallic powder plastic capsules capsule volume bigger require traditional capsule filling wont work quantity need mg .. opinion best approach research found approaches based solution auger used control powder drop volumetric powder quantities small metal rods groove proper volume designed dispense powder keep powder flowing use vibration motor pour powder groove stepper motor rotate rod dispensing powder made rod bigger show concept mounted cap rotate much volume powder dropped cap weight based measurement dropping powder weighing balance control feedback .. think difficult thing time consuming provided fill thousands capsules prio accuracy error margin -2 .. cost .. costly .. metal powder magnetic .. fine .. clump .. read articles appears continues tapping powder flow improved lot,arduino motor,motor arduino
2053,choosing battery harbor freight solar battery ok r/c lawnmower,built r/c lawnmower call honey badger tears good thing used used batteries get project going long past time get honey badger going honey badger built electric wheelchair frame used wheelchair deepcycle batteries u1 recall wired banks series parallel give motors going used wheelchair parts place hour drive requires weekend visit get used batteries unknown condition contrast harbor freight minutes solar batteries physical dimensions comparable electrical characteristics think coupons tax playing game get price used u1 found u1 batteries ~\ shipping batteries sell deepcycle auto batteries greater ah capacity gross solution winds ~\ ~\ difference technology solar battery wheelchair battery difference substantial given rough thing particular technology better suited tasks benefit drawback using automotive battery charger original wheelchair good capacity room spare think put amps,battery,battery
2054,roboclaw seem ignoring pid gain settings,seeing behavior roboclaw explain trying tune velocity pid settings windows box use ionmc tuning tool using command set velocity pid gains command verify set spin wheel half maximum speed problem combination pid gains seems make difference set motor spins set point something wrong pouring datasheet see rights motor spin use ideas,control pid,control pid
2055,finding rotation quaternion,trying use quaternions robotics thing understand understand define position quaternions define rotation quaternions difference.. please watch understanding steps correct wrong lets assume vehicle positions described rotation quaternions q_1 w_1 x_1i y_1j +z_1k \cos \pi/4 \sin \pi/4 quaternion normalized represents rotation x axis \pi/2 angle understand q_2 w_2 x_2i y_2j z_2k \cos \pi/4 \sin \pi/4 k represents rotation angle \pi/2 axis q_1*q_2 q_3 rotation made q_1 first q_2 second q_3 \frac \frac +\frac j +\frac k question given q_2 q_3 find q_1 question find rotation angle vector given rotation quaternion example want find angle q_3 turned 2i+j-k quaternion,kinematics,kinematics
2056,finding high torque servo robotic arm,new working robotic arms trouble finding correct servo base arm link robot link weighs kg cm gripper centimeters servo gripper hold max whole robotic arm including maximum load carry servos accessories kg maximum load needs carry kg end arm cm servo use move rotary base servo use lift arm base last move link preferable axis servo specification need servo use energy supply volts dc batteries connected series need servo dc things worked servo best work,robotic-arm servomotor,servomotor arm robotic
2057,direct vs semi-direct methods visual inertial odometry,reading papers visual inertial odometry iros semi-direct ekf-based monocular visual-inertial odometry robust visual inertial odometry using direct ekf-based approach appreciate someone explain semi-direct direct methods vary understand direct methods use pixel intensities framework papers listed photometric intensities/pixel intensity values semi direct direct,ekf,ekf
2058,output angle dc motor current input,preferred time-domain method simulate ideal position motor given electrical-current input assume goal plot position output motor based constant electrical-current input example x amps given motor plot output function time using time-based tools laplace matlab outputs ========= methods =========== methods yield different results reason ideas identical input constant current i. method find updated velocity given acceleration acc k k *kt b*vel k-1 j vel k vel k-1 acc k *dt pos k+1 pos k vel k *dt k *dt^2 desired function version less stable oscillating output order vel acc computed method find velocity using difference positions noisy result practice need filtered acc k k *kt b*vel k j vel k pos k k-1 dt pos k+1 pos k vel k *dt k *dt^2 position equation function i. version smoother output ===================== appendix method assume ideal current-driven dc motor laplace model angvelocity/current kt/ js+b kt motor constant j rotor inertia b damping acc*j b*vel current*kt k+1 current k *kt b*vel k j. reminder vel k found using previous acceleration v k k-1 acc k-1 *dt noted,motor kinematics servomotor simulation,servomotor kinematics motor simulation
2059,ultrasonic sensor lag effect pid contol loop rate,good day like ask possible use ultrasonic sensor altitude hold quadcopter sampling rate ultrasonic sensor hc-sr04 incurring errors polling tested seen sensor implemented projects find papers explain use sensor better detail seen possible solutions raspberry pi using interrupts using linux multithreading understanding right use interrupts need data ready signal ultrasonic sensor available particular sensor possible use echo pin positive edge trigger interrupt service routine read sonar/calculate distance function introduce inconsistent loop execution times bad consistent pid loop approach use multithreading using wiring-pi library enables run function let say function triggers sonar calculates side pid control loop affect pid control loop rate best way implement sonar sensor based altitude hold,quadcopter pid stability real-time sonar,quadcopter real pid stability time sonar
2060,create light red/green,working project create run problem battery state create charging night clean light shows green unplug press clean button shows red run commands arduino hooked problem,arduino irobot-create battery,battery create irobot arduino
2061,kuka delimiter .net,chance develop user interface program lets user control kuka robot computer know program stuff kuka utilities orangeedit know want know best language talk robot idea control robot arrow buttons up/down controls z axis left/right controls x/y someone help know lot libraries control robot xbox controller limit robot axes able control simple buttons edit imagine routine consists going p1 p2 p3 know touch points refresh coordinates using console .net application modifying src/srcdat files,robotic-arm kuka,kuka arm robotic
2062,understanding drift simultaneous localization mapping slam,trying understand effect drift simultaneous localization mapping slam understanding drift occurs robot tracks position relative set landmarks storing landmark small error location accumulation small errors long trajectory causes large error end trajectory confused happen robot tracks way starting positions suppose robot starts position starts move mapping environment reaches position robot error stored position b due drift tracking suppose robot makes way tracking relative landmarks created first path reaches true position i.e started first path drifted intuition end true position landmarks errors large robot get position stored landmarks a. landmarks correct error initialized drift errors started accumulate help thanks,mobile-robot localization slam navigation mapping,localization mobile mapping robot slam navigation
2063,quadrotor motion planning hard,introduction incremental sampling algorithms prm rrt planning higher dimensional spaces reasonable computation time become possible pspace-hard quadrotor motion planning problem difficult simplified quadrotor model solving dynamic car problem ompl produced solution set planning time quadrotor find solution,mobile-robot quadcopter motion-planning planning rrt,quadcopter mobile robot motion planning rrt
2064,hard time understanding equation monocular ekf slam,reading paper visual odometry used bearing vector parameterize features hard time understanding state propagation equation bearing vector term means vector n mentioned equations clear appreciate someone help understand,localization slam navigation ekf mapping,ekf slam navigation mapping localization
2065,lateral load servo motor,looking pictures existing designs quadropod robots servos legs seem mounted inside chassis second attachment putting looks asymmetrical load knees aesthetics real structural reasons minimize lateral load axle robot size,joint,joint
2066,quadcopter pid tuning altitude hold/position hold z axis,good day finished tuning pitch roll pid setting throttle quad weightless tuning axes like ask best way tune pid maintaining altitude setpoint best turn pitch roll pid controllers tuning altitude pid active tuning latter controller going use cascaded pid controller using velocity z-axis calculated accelerometer output inner pid loop altitude measurement hc-sro4 ultrasonic sensor outer pid loop,quadcopter pid stability real-time sonar,quadcopter real pid stability time sonar
2067,vision-based position estimation quadrotor,subtask main project compute position x z quadrotor using homography use camera attached quadrotor pointing artificial landmark floor need compute extrinsic parameters camera know pose respect landmark know projective points landmark camera intrinsic matrix camera need real landmark position x z suppose z coordinate equal landmark plane sure compute real x coordinates idea interested put x z position quadrotor control path anybody knows find info common controllers kind task,control computer-vision quadcopter uav visual-servoing,control quadcopter servoing uav visual computer vision
2068,controlling syma laptop,curiosity possible control x5c computer think buy transmitter attach laptop think communications transmitter drone proprietary protocol adhere standard links/advice point right direction appreciated,quadcopter,quadcopter
2069,jacobian inverse kinematics quaternion end effector,quaternion parameters calculating jacobian inverse-kinematics positions quaternion parameters make jacobian reduce jacobian using quaternion,robotic-arm inverse-kinematics jacobian,inverse kinematics arm jacobian robotic
2070,suitable star variant non-holonomic motion planning mobile robots,working non-holonomic motion planning problem mobile robot unknown environment going research papers found d-star algorithm used conditions many d-star variants focused d* d*-lite field d* etc ... variants suitable case please approach problem,mobile-robot motion-planning algorithm,mobile motion planning robot algorithm
2071,computer stereo vision simulator,research project deal mobile robot perceives stereo vision stereo input data use several datasets taken passenger vehicle contain real world photos datasets good get started limited content need model traffic situations work stereo vision system thinking using kind synthetic graphics simulation input stereo system options imagine graphics rendering engine whose output fed input stereo vision used found general robotic simulators available gazebo new robotic simulation know begin edit forgot write code pure c++ use opencv libelas stereo vision point cloud library pcl visualization glued single c++ project compiles single binary,mobile-robot simulator stereo-vision,mobile stereo robot vision simulator
2072,zigbee network fpv,zigbee designed transmission need mesh network contains multiple nodes zigbee networking robots fpv solution,communication,communication
2073,geo-projection use odometry,like make little survey regarding geo spatial projection use elaborating gps movement data spatial awareness robots moving gps coordinates planar projection seems reasonable choice distances several formulas approximations exist bearings computed scales small avoiding equirectangular approximation seems good idea order keep consistent system avoiding working world haversine great-circle stuff good idea keep computations moving world projection hence seems best solution reprojection input gps coordinates needed like get opinions ideas subject ... anyone interested u_u,odometry geometry,geometry odometry
2074,pick place robot,simulate pick place robot dof tried matlab pick place different objects according geometry find similar m-codes algorithms,robotic-arm matlab,matlab arm robotic
2075,applying mocap data real life robot,kinect sensor ipi software use create motion capture data use film editing looking creating small raspberry pi driven bipedal robot fun wondering possible use mocap control robot 20-30 cm tall servos hips knees ankles possible apply movement joints human body robot string left knee joint left knee servo either real-time following actions using pre-recorded data note needed plug apple/windows computer pi support upper torso moment,mobile-robot motion-planning servos,mobile motion planning servos robot
2076,esc stop,built brushless motors escs using arduino control written complex code enough get running everything fine send number serial reason motors stop spinning using bought charged lipo cells v link site bought seem resource a2212 outrunner motor hp esc prop b quad-rotor tried turning motor write microseconds motor minimum works somebody explain happens fix code include servo.h int value servo second third fourth void setup serial.begin // start serial baud first.attach second.attach third.attach fourth.attach void loop first.writemicroseconds value second.writemicroseconds value third.writemicroseconds value fourth.writemicroseconds value serial.available value serial.parseint,arduino quadcopter brushless-motor esc,quadcopter brushless esc motor arduino
2077,dynamic model robot lifted balloon multibody system,hard time trying understand obtain dynamic model system similar image balloon simple helium balloon box aerial differential drive platform using rotors model balloon actuated box lost combine connection rigid string documentation point order help develop dynamics model system lost help useful thanks advance,mobile-robot kinematics dynamics,mobile dynamics kinematics robot
2078,difference underactuated system nonholonomic system,difference underactuated system nonholonomic system read car good example nonholonomic vehicle controls configuration space dimension thought underactuated system number actuators less number degrees freedom,kinematics,kinematics
2079,relationship motor torque acceleration,working designing building small lbs 2-wheeled differential drive arduino-controlled autonomous robot electronics figured trouble understanding much torque motors need move robot trying use calculations shown related calculator tool determine speed torque need using wheels diameter pololu high-power micro metal gearmotors performed calculations robot lbs safe found hp micro metal gearmotors rpm oz-in work fine moving robot ft/s acceleration ft/s^2 5-degree incline found explanation several things think important know choosing drive motors robot moving motors turned full power need full stall torque based calculations seems amount torque get robot moving torque faster robot acceleration true power source supply full stall current motors robot able start moving case powering robot nimh battery pack provide voltage drops able power motors robot reaches full speed longer accelerating motors providing torque think case know torque providing motors chose enough torque move robot,mobile-robot motor,mobile robot motor
2080,real-time object classification autonomous quad-rotor,designing indoor autonomous drone writing object classification program opencv purpose objects interests classification ceiling fans ac units wall ceiling lamps wall corners using bow clustering algorithm svm classifier achieve process developing code try testing primary task drone scan mean scanning moving hovering entire ceiling space ceiling space given closed region avoiding obstacles ceiling fans ac units ceiling wall lamps drone navigation scanning process ceiling space organised pattern moving tight zig-zag paths entire ceiling space said order achieve goal trying implement following achieve take fly given closed ceiling space use slam localise map environment running slam run object classier algorithm classify objects interests track real time obtained detail map environment classified objects interest local environment integrate data form unified map meaning slam output label classified objects obtained classifier algorithm fun comprehensive map environment labeled objects interest real-time tracking localization pick random corner map plan navigation pattern order scan entire ceiling space question using object classification real-time yield successful results multiple environments quad able achieve mentioned tasks given environment using lot train image sets train classifier bow dictionary feel robust method real-time harder isolate object interest order overcome real-situation train images train images contain isolated objects interests using computer vision redundant goal achievable using slam yes classify objects interest want drone fly running ceiling fan mistaking wall corner edge kind methods sensors type detect objects motion using optical flow computer vision method useless robust real-time help advice appreciated,mobile-robot quadcopter slam opencv,mobile quadcopter slam robot opencv
2081,drawbacks goal bias rrt,working rrt planner remove goal_bias introduce new_method direct planner towards goal find method good lower dimension dimension increases dynamic car new_method works better observe goal_bias works better possible advantages removing goal_bias loosing adding,mobile-robot motion-planning algorithm rrt,algorithm mobile robot motion planning rrt
2082,measure weight object using servo,assuming quality industrial servo possible calculate weight/resistance load comparing current draw holding position time takes lift/lower object measure grams kilograms kind tolerance achieved trying eliminate need dedicated weight measurement sensor,sensors robotic-arm servomotor,servomotor sensors arm robotic
2083,real time simulation model sensors matlab,trying make real time simulink model leddar sensor ledddar sensor evaluation kit matlab using usb port use acquisition toolbox control toolbox leddar vendor listed toolboxes appreciate someone help new real time simulink,sensors matlab simulator real-time,real sensors time matlab simulator
2084,slam map quardrant,"transformation frame global local crucial measurement update keep track direction eg robot location -10,2 requires different sign way set case general expression",slam,slam
2085,pid tuning quadcopter,stabilizing quadcopter tuned angle pidies quadcopter tries stabilize overshooting think due gyro rates read pidies axis problems attach pidies anyone help cascading angle pid rate pid tune rate pid tuning angle pid,quadcopter pid,quadcopter pid
2086,books web resources robotics mechanical design,plan build mechanism multiple axis similar robot start need define specifications repeatable precision speed acceleration payload motor structure selected designed based parameters need choose methods manufacture components like consult experienced experts forum suggested books website resources learn knowledge,mechanism manufacturing books,manufacturing books mechanism
2087,make robot arm follow shape/path,hope stupid question find ware solution constructed dof robot arm want follow trajectory plane xy tha shapes want follow lines cycles splines math shaped defined kinematics inverse kinematics jacobian whole control system pid controller system receives inputs xd position xd velocity xd acceleration time found following image shows less system stuck translate shape position velocity acceleration joint needs make end effector moves cartesian space according shape,pid robotic-arm line-following,following line pid arm robotic
2088,pid tuning methods ga pso,started reading pid tuning methods encountered particle swarm optimization genetic algorithm problem understand particle/chromosome determines real physical system particle/chromosome checks fitness system take long time think missing something ... implemented actual physical system,pid algorithm,pid algorithm
2089,angle circle tangent line,want simulate detection moving object unicycle type robot robot modelled position x direction theta states represented circle radius r1 r_1 code want find angles alpha_1 robot local coordinate frame circle shown trying find angle robot line joining robot circle centre angle called aux_t code find angle tangent line called phi_c find angles want adding subtracting phi_c aux_t diagram thinking shown problem getting trouble code try find alpha angles starts calculating angles negative values sure causing trouble car circle get closer phi_c becomes larger aux_t alphas change sign example getting \begin array c c c c \text aux_t \text phi_c \text alpha_1 \text alpha_2 \\ \hline \text -0.81 \text +0.52 \text -1.33 \text -0.29 \\ \text -0.74 \text +0.61 \text -1.35 \text -0.12 \\ \text -0.69 \text +0.67 \text -1.37 \text -0.02 \\ \text -0.64 \text +0.74 \text -1.38 \text +0.1 \\ \end array alpha_2 gets wrong form know something wrong sure know limit angles pi better way find alpha angles,mobile-robot kinematics matlab geometry,mobile geometry kinematics robot matlab
2090,building robotic clamp,single stepper motor use create robotic clamp grab hold something plank wood release standard parts use trouble finding names parts,robotic-arm,arm robotic
2091,slam odometer requirement,accurate odometer reading slam writing extra section says question body meet quality standard,slam,slam
2092,kuka robot update coordinates,need develop something order update coordinates kuka kr c4 robot predefined program research found ways free several options developing hmi console buttons touch coordinates update example sending xml file work rsi connection proper software guess know something c++ library allows access .src/.dat files create new body different coordinates summing imagine conveyor carries boxes need develop pick place program good boxes size changes predict operator goes updates coordinates want make sure change anything else program ideas,robotic-arm industrial-robot kuka,kuka industrial arm robot robotic
2093,fly bad weather maintain control strong winds,need fly drone strong winds stabilize use accelerometers gyroscopes keep steady use flight technique circumstances,quadcopter navigation accelerometer,quadcopter navigation accelerometer
2094,choosing motor type high reliability many cycles,designing multi modal stent testing machine bend twist compress stents thin light fragile cylindrical meshes arteries tube machine operate maximum hz months time cycles machine lab people noise minimal choosing actuators design overwhelmed range products available rotating stents axis need rotary actuator following specs torque negligible max angle deg angular velocity needed deg/s hollow shafts compressing stents need linear actuator following specs force low max stroke possible allowing different stent lengths stroke velocity needed price motors driving factor looked stepper motors servo motors piezoelectric motors seems huge selection fits requirements motor types reliability suits needs characteristics/advantages/disadvantages consider determine selection suitable actuators know difference motor types lot concrete suggestions welcome,actuator reliability,actuator reliability
2095,slam starting point quardrant issue,question puzzling simple rectangle enclosure extracted lidar odometer data test run put starting position gives bad map shift something map seems fine,slam,slam
2096,vex cortex motor speeds load,trying get robot drive straight trouble find running motors load run fine put load motor accelerates performs expected tries maintain speed running motors encoders pid selected running robot c. see following video https //youtu.be/u3p0wectwco program follows pragma config i2c_usage i2c1 i2csensors pragma config sensor dgtl12 killb sensortouch pragma config sensor i2c_1 sensorquadencoderoni2cport autoassign pragma config sensor i2c_2 sensorquadencoderoni2cport autoassign pragma config sensor i2c_3 sensorquadencoderoni2cport autoassign pragma config motor port2 rmotor tmotorvex393_mc29 pidcontrol reversed driveright encoderport i2c_1 pragma config motor port3 lmotor tmotorvex393_mc29 pidcontrol driveleft encoderport i2c_2 pragma config motor port4 topmotor tmotorvex393_mc29 openloop encoderport i2c_3 pragma config motor port5 pmotor tmotorvex393_mc29 openloop //* code generated configuration wizard *// void stopall motor rmotor motor lmotor motor topmotor motor pmotor //stops program push button task estop sensorvalue killb == wait1msec stopall stopalltasks task main starttask estop nmotorencoder rmotor nmotorencoder lmotor motor rmotor motor lmotor wait1msec motor rmotor motor lmotor stopall thank mark,pid robotc vex,pid robotc vex
2097,drone need magnetometer accelerometer gyroscope sufficient,drone need magnetometer drone information think tell direction need accelerometer gyroscope,mobile-robot magnetometer,mobile magnetometer robot
2098,rrt algorithm c++,want implement rrt motion planning robotic arm searched lot internet get sample code rrt motion planning get someone please good source find rrt implemented c++ type motion planning,robotic-arm motion-planning algorithm,motion planning arm algorithm robotic
2099,battery power robot,need motor powered hour decide ah rate battery please suggest lithium ion battery specification,mobile-robot motor power battery lithium-polymer,polymer power mobile robot battery motor lithium
2100,i-gain outer-loop,implementing set loops control pitch-and-roll angular positions inner-loop motor speeds adjusted desired angular rates rotation inner-loop setpoints outer-loop decides desired angular rates inner-loop setpoints based aircraft angular positions outer-loop frequency ~400hz outer pv input angular position degrees outer sp desired angular position input angular position degrees inner-loop frequency ~760hz inner pv input angular rotation degrees-per-second inner sp constant1 outer mv degrees-per-second pwm inner mv constant2 percentile understand i-gain important able see practical reason i-gain specified outer-loop inner-loop compensate accumulated error leaving error compensate outer-loop thinking flawed example gain values elaborate appreciated,quadcopter pid,quadcopter pid
2101,drone flight formation,today program fleet drones fly formation visual feedback onboard camera,quadcopter uav,quadcopter uav
2102,pose-graph-slam create edges imu-odometry given,want estimate poses vehicle certain key frames sensor information use imu yields translational acceleration orientation measurments obtain pose i.e position vector unit quaternion orientation integrate translational acceleration propagate orientation measurements want add new edge graph need constraint edge general pose graphs constraint represents relational transformation z_ ij vertex positions x_i connected edge comparing case literature following questions arised calculate prediction \hat z ij compare measurement z_ ij computing edge error understood graph slam models vertex poses gaussian distributed variables prediction calculated \hat z ij =x_i^ -1 x_j calculate information preferred covariance matrix update information matrices optimization edge creation loop closure read chi-square distribution relates mahalanobis distance involved steps studying current implementations e.g mrpt-graph-slam g2o discover predictions probability density function involved confused reading mrpt-graph-slam example choose raw poses poses treated means probability distribution,slam imu data-association,data slam imu association
2103,object following robot,please help need car prototype follow object using ultrasonic sensors hc-sr04 sense distance obstacle want sensors determine direction servo motor mg995 using python calibrate servo get appropriate output anybody help code python grateful,software,software
2104,common process place robotic arm gripper,implemented simulation robotic arm grab things arm structure simple gripper top made simple ccd ik algorithm control arm use ways compute position last joint arm hand part means end-effector use analytical method place hand good orientation compute arm hand position giving ccd ik algorithm end-effectors finger hand used method grabbing arm robot willing find solution know people,robotic-arm inverse-kinematics,inverse kinematics arm robotic
2105,simulate actuator strong torque pid controller,use gazebo simulate robot arm control joints use pid controllers know pid hard tune case robotic arm avoid tuning need pid values realistic set derivative integral parameters increase lot proportional gain add lot damping joints get working arm disable gravity question following idea simulate strong actuator realistic parameters edit setting integral derivative gain stupid integral gain helps correcting effect gravity derivative gain counters loss stability speed due integral gain question leads know tuning robotic arm manufacturer big arms car industry example guess arm use actuators strong low maximum speed reduces need tuning edit info setup use gazebo ode robot description sdf control robot model plugin pid controler use pid class common library gazebo get associated model let say like actuators robust tuning needed way simulation dynamics opposition setposition method think possible,pid power servomotor joint gazebo,servomotor joint gazebo pid power
2106,create2 commands called serial,app called serial available app store downloaded mac experimenting ideas send create2 oi commands using serial seems handy app bypassed need drivers anyone serial/something *when serial terminal open number pressed mac seems activate cleaning mode thats communication getting hours playing python terminal,mobile-robot irobot-create serial,mobile create robot serial irobot
2107,openrave chechcollison command c++,equivalent code env.checkcollision robot c++ said conversion commands python c++ easy intuitive find proper documentation conversion,motion-planning algorithm,motion planning algorithm
2108,name large robotic arms finger wrist arm hands spinning shoulder axis,looking large robotic arms fingers arm able pick drop things space arm spin sure terminology arm seen owi-535 robotic arm edge looks close something larger hooked raspberry pi remote controller particular term generic context way build arm using shelf parts,robotic-arm raspberry-pi,pi raspberry arm robotic
2109,programming rover,part college team planning enter mars rover challenge point view start know c main language nasa used basic understanding much look rtos part making rover books/links topic appreciated,programming-languages c,languages c programming
2110,correct name servo brackets,refer types brackets servo brackets robot brackets know specific brackets shown known short-u vendors refer c en lieu u multi-function bracket types available long u bracket oblique u bracket bracket l bracket etc sure correct name types bracket range bracket servo brackets generic name brand name seen term random web page name escapes named creator recall institution developed anyone definitive answer citation web reference little historical background,mechanism,mechanism
2111,use accelerometer altitude estimation,implementing autonomous quadcopter got flying stable unable correct presence significant external disturbances assume tuned pid gains tweaked inflight current progress ruled barometer scope research indoor flight barometer deviation +-5 meters according colleague using ultrasonic sensor hc-sr04 altitude estimation resolution found ultrasonic sensor refresh rate slow get enough response altitude correction tried use accelerations z get height data integrating acceleration get velocity used rate pid cascaded pid controller scheme current implementation altitude pid controller single loop pid controller using p controller position input ultrasonic sensor taken account negative acceleration measurements due gravity matter much compute offset negative acceleration eg -0.0034 computed gravitational offset setting quadcopter flat surface collecting samples z axis averaged get offset stored constant variable variable subtracted z-axis output remove offset get accelerating said question negative acceleration eg -0.0034 quad proceeds climb altitude ultrasonic sensor p controller quad oscillates cm consistent negative acceleration reading dealt possible solution planning cascading pid contoller altitude hold innerloop pid controller using accelerometer outer loop p controller using sonar sensor adviser said single loop p controller enough make quadcopter hold slow sensor noticed p gain quadcopter overshoot altitude leaky integrator found article explaining dealt negative accelerations using leaky integrator trouble understanding work think negative error turn positive error solving problem sure http //diydrones.com/forum/topics/multi-rotors-the-altitude-yoyo-effect-and-how-to-deal-with-it single loop pd controller ultrasonic sensor feasible using feedback slow sensor sources lsm303dlhc datasheet http //www.st.com/web/en/resource/technical/document/datasheet/dm00027543.pdf leaky integrator http //diydrones.com/forum/topics/multi-rotors-the-altitude-yoyo-effect-and-how-to-deal-with-it ardupilot pid loop http //copter.ardupilot.com/wp-content/uploads/sites/2/2012/12/alt-hold-pid-version-3.0.1.jpg,quadcopter control pid raspberry-pi sensor-fusion,quadcopter control pi pid fusion raspberry sensor
2112,building stationary robot talk,computer science major basic ideas robotics planning build stationary cubical ai main purpose bot sensor check door opened asks question opened door want recognize correct words interact word talking voice recognition word recognition speaks correct words words bot memory interact depending opens door family want speak different things want respond simple questions date time random qoute fact joke hard achieve anyone give basic idea approach project,sensors communication first-robotics speech-processing,processing communication robotics speech sensors first
2113,quadrocopter pid,building quadcopter school project trying program flight controller using pid algorithm try make question simple using example motors -- -- -- -- -- -2 let say trying stabilize motor system using gyro diagram -- -- -- -- -- using formula output gyro pgain need increase output motor increase output motor decreasing output motor thank,quadcopter pid ardupilot logic-control,quadcopter control ardupilot pid logic
2114,controlling system need complex system controlled,theoretical principle postulate states controlling system complex system controlled formal sense notion complex,control theory,control theory
2115,remaking rc transmitter controlling aircraft,thinking working alternative drone controllers looking making easy use natural feel debating sensor bracelets rings etc. main issue looking standard rc transmitters used control rc aircraft sure technology kind ics use actual rc signals want information make rc transmitter protocol used send messages circuitry needed transmit kind components need implement software aiming side project hobby chance use uni project give shot lack proper information getting started take current rc controller oscilloscope decode protocol answers short long reading material appreciated questions protocol implemented software embedded system raspberry pi arduino intel galileo etc. asking frequency ghz part bigger project drone related use alternative methods sending information wireless means first prototype suggestions welcomed need aircraft rc transmitter protocol info rc transmitter components schematics anything help transmission side,microcontroller radio-control,control microcontroller radio
2116,fastening sheet steel nylon,trying attach small piece sheet steel x x small piece nylon x x anyone know fastened using small screws thought appreciated,mechanism,mechanism
2117,fixed wing uav unstable systems desire stable cases closed loop control implemented,know fixed wing vehicles designed inherent instability enables fixed wing vehicles fly apply cases unstable systems desire stable cases closed loop control implemented,control pid microcontroller uav stability,control stability microcontroller pid uav
2118,apm mission planner install firmware failure mac os x,installed multiple versions apm windows ubuntu osx connect ardupilot install firmware error get started downloading http //firmware.diydrones.com/copter/stable/apm2-hexa/arducopter.hex finished downloading /var/folders/r4/s_j4c02s3wvcx6wy41__rnwh0000gp/t/apm planner.uq1800 opening firmware file ... unable open file /var/folders/r4/s_j4c02s3wvcx6wy41__rnwh0000gp/t/apm planner.uq1800,ardupilot,ardupilot
2119,use data gyroscope calculate orientation,gyroscope getting angular velocities droll dpitch dyaw rad/s sampled intervals dt calculate short term global orientation drift ignored gyroscope pseudo code helpful,gyroscope,gyroscope
2120,euler-lagrange systems autonomous nonautonomous,reading article euler-lagrange systems stated q c q q depend autonomous result use lasalle theorem uploaded page article highlighted sentence ren.pdf read spong book robotics used theorem confused spong.pdf research found non-autonomous means depend independent variable independent variable time systems considered autonomous,control dynamics robotc,control dynamics robotc
2121,considerations design actuators loop systems robotic arm,let say industrial sized robotic arm want control joints non-linearity produced chain structure gravity weight loads lift focus speed power limitations want arm respond like avoid use prior knowledge inertial computation considerations considering play actuator design loop feedback control system limit maximum speed actuator smooth error variation increase damping actuators avoid high frequency instability find good control system pid make sure targets reached oscillations considerations mind know process es industrial designers follow edit said comments question concern design adaptive controller robot arm design joint control system actuator loop control need inertia masses computed controller adapt structure loads much interested know paper adaptive control field robotic arms,control pid robotic-arm design actuator,control pid design robotic actuator arm
2122,dc motor control,project requires dc motor mobility similar rc car precision critical use solid state relay motor driver vehicle moves extra inch ground care,motor driver,driver motor
2123,choose connect camera robot,tons cameras devices days used photo cameras smartphones tablets home gathering dust wonder easiest way get camera module device connect robot project soldering iron make work software point view planning use something arduino stm32 platform intel edison camera modules easier solder program custom project look way better find camera module designed custom projects,cameras,cameras
2124,difference g-value rhs-value lifelong planning a*,difference g-value rhs-value lifelong planning a* according link d* lite g correspond g-values search i.e g g c rhs given rhs \begin cases s_ start \\ \min_ s'\in pred g c \text \end cases pred denotes set predecessors node node predecessor g-value rhs-value remain question case rhs-value g-value node different,mobile-robot robotic-arm wheeled-robot motion-planning algorithm,algorithm mobile robot arm motion planning robotic wheeled
2125,neural nework code library msp430g2553 microcontroller,new new neural network p gone concepts neural networks want implement project including microcontroller msp430g2553 launchpad series using sensors want use neural network code manipulate data sensors get threshold went post tried implement codes link given giving error less ram guess due mcu wanted help regarding neural network code library energia use thanks advance,microcontroller electronics machine-learning embedded-systems,embedded microcontroller machine systems learning electronics
2126,propeller physics,propellers airspeed increases thrust decreases air speed component taken vector quantity perpendicular propeller thats true quiet easy visualize case airplanes quadcopters copter_airspeed sin copter tilt,quadcopter,quadcopter
2127,anthropomorphic arm,developed anthropomorphic arm structure aluminium dof spherical wrist direct kinematic chose magnetic rotary encoders measure angles satisfied due causing noise angle measurements advise add sensor perform sensor fusion replace magnetic encoders optical ones ...,arm manipulator,manipulator arm
2128,meaning writhe matrix,following equation writhe matrix article topology based representation page meaning second part equation sure typo article article hierarchical motion planning page neglects term ...,mobile-robot control robotic-arm wheeled-robot motion-planning,control mobile robot arm motion planning robotic wheeled
2129,meaning symbol n equation gaussian system dynamics,article topological based representation page equation linear gaussian system dynamics given equation meaning n,mobile-robot control robotic-arm wheeled-robot motion-planning,control mobile robot arm motion planning robotic wheeled
2130,meaning equation graphical model,paper topology-based representations motion planning generalisation dynamic environments interactions ivan et.al. says page approximate inference control aico framework translates robot dynamics graphical model following equation p x0 u0 mean feel p means uncertain quantity sure,mobile-robot control robotic-arm motion-planning,control mobile robot motion planning robotic arm
2131,autonomous indoor positioning system robot based cv approach,questions regarding ips autonomous robot system configuration mounting camera ceiling room assume room cube lxwxh assume camera microsoft lifecam studio cmos sensor technology sensor resolution x diagonal field view auto focus ≥ frames second frequency response hz – khz rover objectives putting unknown location x room system localize rover position rover coordinates known navigation next step want rover navigate known coordinates x1 y1 let say point point b map x2 y2 control signals sent rover servos complete navigation task methodology camera capture environment real time environment represented cells occupancy grid mapping assume cell represents cm environment localized system point determine navigation point b determine path rover grid map ex go x cells horizontal cells vertical control signal sent rover servos questions use camera task need type cameras factors affecting system accuracy ex sensor resolution fov fps frequency response distance camera ceiling important factor consider increase accuracy appreciate opinions regarding project king regards thank,mobile-robot localization slam computer-vision mapping,computer localization mobile robot mapping slam vision
2132,reverse engineering commercial drone control algorithms,wondering way figure actual controllers used commercial drones drone phantom according ar drone sdk users allowed access actual hardware platform capable sending receiving commands from/to drone edit hoping check actual controller utilized software fly drone seems platform stabilize perform aggressive maneuvers guess use linearized model applicable using simple controllers pd pid,quadcopter control,quadcopter control
2133,topology-based representation invariant certain change environment,article topology-based representation page line says topology-based representation invariant certain changes environment means trajectory generated topology-based space remain valid certain changes environment possible simple example understand concept,mobile-robot control robotic-arm motion-planning,control mobile robot motion planning robotic arm
2134,counting number people entering room,making project want count people entering leaving room single entrance using ir sensors detectors aurdino problem system i.e persons entering leaving room time getting wrong count thanks valuable time solution ... better way please state,arduino sensors microcontroller,sensors microcontroller arduino
2135,quadcopter pid algorithm,trying implement pid control quadcopter using tiva c series microcontroller trouble making pid stabilize system testing pid noticed slow weak response pid controller quad shows response small angles words seems quad angle range large degrees show response response shoots matter gains choose system low p prevent overshoot becomes weak sure pid algorithm problem kinda bad hardware configuration low imu sample rate bad pwm configurations strong doubts pid code noticed changing gains improve system response appreciate someone point anything wrong pid snippet pitch component posted roll pid similar code posted leave void pitchpid int16_t pitch_conversion float current_pitch pitch_conversion //d_temp_pitch global variable //i_temp_pitch global variable float pid_pitch=0 //pitch pid controller float p_term i_term d_term float error_pitch desired_pitch current_pitch //if statement checks error pitch negative positive direction error_pitch error_max || error_pitch error_min error_pitch error_max //negative pitch- rotor3 speed p_term pitch_kp*error_pitch //proportional i_temp_pitch += error_pitch //accumulate error i_temp_pitch imax i_temp_pitch imax i_term pitch_ki*i_temp_pitch i_term i_term=-1*i_term d_term pitch_kd* d_temp_pitch-error_pitch d_term d_term=-1*d_term d_temp_pitch error_pitch current error next iteration pid_pitch p_term+i_term+d_term pid_pitch pid_pitch= -1 *pid_pitch //change rotor3 pitchpid_adjustment pid_pitch //n negative pitch error_pitch error_min // positive pitch- rotor speed p_term pitch_kp*error_pitch //proportional i_temp_pitch += error_pitch i_temp_pitch imin i_temp_pitch imin i_term pitch_ki*i_temp_pitch i_term i_term=-1*i_term d_term pitch_kd* d_temp_pitch error_pitch d_term d_term=-1*d_term d_temp_pitch error_pitch pid_pitch p_term+i_term+d_term pid_pitch pid_pitch= -1 *pid_pitch print pid_pitch //pitch printstring \r\n //change rotor1 pitchpid_adjustment pid_pitch //p positive pitch void pitchpid_adjustment float pitchpidcontrol unsigned char pitch_attitude pitchpidcontrol maximum_dutycycle-set_dutycycle pitchpidcontrol=maximum_dutycycle-set_dutycycle switch pitch_attitude //change rotor1 case //positive status pwm0_2_cmpa_r += pitchpidcontrol // red //motor1 pwm0_0_cmpa_r += pitchpidcontrol // yellow //motor2 break //change rotor case //negative status pwm0_1_cmpa_r += pitchpidcontrol // orange //motor3 pwm1_1_cmpa_r += pitchpidcontrol // green //motor4 break someone please tell motor mixing works =throttle pitchpid =throttle pitchpid left =throttle rollpid right =throttle rollpid vs function void pitchpid_adjustment float pitchpidcontrol unsigned char pitch_attitude,quadcopter control pid imu pwm,quadcopter control pwm pid imu
2136,best sensor determine versus,want start designing arduino project telemetry readings indicate tilt angle placement accelerometer best determining good tutorials,mobile-robot arduino,mobile robot arduino
2137,cim motor,trying make decisions motors robot build keep running cim motors cim motor designation cim come cim mean,motor,motor
2138,robotic arm analysis matlab/simulink,going paper kinematic modelling simulation 2-r robot using solidworks verification matlab/simulink 2-link revolute joint robotic arm according paper trajectory analysis robot done simulations matlab/simulink shows following picture trajectory generation robot matlab/simulink simulink simulation block calculate trajectory think done simmechanics sure experienced users please tell looking reproduce,robotic-arm matlab simulation,matlab simulation arm robotic
2139,simulating dynamixel motors gazebo,trying simulate humanoid robot using gazebo plugins actual model uses dynamixel motors know work make simulation realistic possible gazebo offers options control joints pid controller provided jointcontroller class way set torque joint pid method implemented using torques trying pid-based implementation used controller damping joints guess values large amount noise difference actual desired position times much 10-12 degrees foot robot hits ground actual motor use pid controller well seem find details dynamixel ex-106 user guide link dynamixel ex-106+ robot actuator mentions compliance/pid yes motor use pid controller parameters allow set moving speed motor use pid controller pattern torque provided manual first link found current position 512-16-5=491 movement made appropriate torque reach set speed 512-5=507 torque reduced punch value torque generated vague details provided aware high damping high p-values trick want simulate happens motors way go appreciate anyone idea dynamixel servos examples simulated dynamixel motors,pid simulation gazebo humanoid dynamixel,gazebo dynamixel pid humanoid simulation
2140,transfer function quadrotor position controller,trying find transfer function quadrotor controller loops following next structure know calculate attitude stability controller relate rotor speed desired angles clear implement translational controller transfer function whose output desired angle rotors achieve considering position want translate considering controllers pd calculate translational controller transfer function include system time domain equations outer loop next u terms relate thrust axis components thanks,quadcopter control,quadcopter control
2141,create2 serial canonical versus number bytes interface,message system appear document oi spec appears canonical terminal type serial interface messages come firmware version stuff sure determine end type message fixed number end lines bytes message seems indicate str730 byte string open interface spec seems indicate canonical interface spec read fixed number bytes processing end lines correct,irobot-create roomba,create roomba irobot
2142,ultrasonic sensor range shape,looking cheap ultrasonic sensor +/-30 cm sensors find use following shape suitable project robot design hole chance find sensor shape range starting wondering shape makes constraint mandatory found appropriate product,ultrasonic-sensors,sensors ultrasonic
2143,servo motors large scale rc car,want convert electric atv quad kids highper atv-6e radio control robotics project small atvs weigh kg need choose servo motors steering braking grade servos much torque need use strongest rc servo find metal gears course need industrial grade servo plan use servo steering braking braking atv mechanical disc brakes discs front common disc rear brake levers front/rear plan use servo use front rear plan mount brake wire servo simulate lever movement guess make weak servo stronger adding proper gear mechanical engineering prefer off-the-shelf component,servomotor rcservo steering brake,servomotor brake steering rcservo
2144,downgrade ros jade indigo,possible downgrade ros jade indigo familiar robot operating system ros ros,ros,ros
2145,meaning s_last star lite algorithm,d*lite algorithm described line figure page d* lite main starts defining s_ last =s_ start value s_ last updated entire algorithm purpose defining term mean,mobile-robot control robotic-arm motion-planning algorithm,control algorithm mobile robot motion planning robotic arm
2146,mechanical odometer digital output,like measure distance kids electric atv traveled atv used kids mobile robot common rear axle rear wheels think good place put chance wheels slip minimal regarding suspension single shock rear axle plan put bigger gear add smaller gear kind sensor measure number rotations rotation axle something rotations small gear kind sensor use sensing rotation way making odometer kind optical solution disc holes optical sensor seems complicated direction travel estimated motor running direction found term called wheel speed sensor looks interesting seems employ non-contact sensing better mechanical gears optical solution hall effect sensor solution simple robust question open implement ... like use odometer speed estimation distance estimation need read sensor c/c++ linux box edit thing looking called rotary encoder wheel encoder atv look,mobile-robot sensors odometry encoding rotation,odometry encoding mobile robot sensors rotation
2147,hand-eye calibration,issue hand-eye calibration using simple robot tool point stereo camera mounted want perform visual serving/tracking based stereo images extracted camera hand camera provides x z coordinates object want track time extract homogenous transformation matrix base tool cam t_tool_base ... guess need perform form robot vice versa camera calibration idea consist something t_base_world t_base_tool t_tool_cam t_cam_world t_tool_cam entail calibration ... camera tool point entail t_tool_cam entail information much camera displaced tool point rotated according tool point ... based x z coordinate make homogeneous transformation matrix includes rotation matrix thirdly.. desired transformation matrix theory t_base_world t_base_tool t_tool_cam t_cam_world provide inverse kinematics solution provide multiple solution ... theory provide,robotic-arm inverse-kinematics rotation,rotation inverse kinematics arm robotic
2148,determine pose origin transformations,find origin coordinate directions frame resulting rotation \circ z axis followed displacement \begin pmatrix pmatrix hence find position original frame vector \begin pmatrix pmatrix defined resulting frame,kinematics inverse-kinematics,inverse kinematics
2149,computeshortestpath dstar lite algorithm,optimized d*lite algorithm shown figure page paper d*lite procedure computeshortestpath called first time line u list inconsistent vertices contains goal vertex s_ goal procedure computeshotestpath line 10-28 u s_ goal k_ old new k_m=0 condition k_ old \leq k_ new satisfied u s_ goal inserted u value k_ old =k_ new seems line 11-15 run able find shortest path goal start know used failing understand going wrong,mobile-robot control robotic-arm motion-planning algorithm,control algorithm mobile robot motion planning robotic arm
2150,quadcopter heading calculation,working autonomous quad copter gps co-ordinates source destination co-ordinates need move source destination need calculate heading set value quad calculate heading make sure quad headed right direction target co-ordinates use magnetometer declination angle vary place place keep changing declination calculating based gps co-ordinates accurate best way calculate,quadcopter gps magnetometer,quadcopter magnetometer gps
2151,quaternion kalman filter algorithm,"stuck weeks hope someone help thank advance trying write imu attitude estimation using quaternion kalman filter based research paper https //hal.archives-ouvertes.fr/hal-00968663/document developed following pseudo code predict stage qk+1/k ak qk ak contains gyro measurement pk+1/k ak pk *ak.transpose q q assumed prediction use formula get supposed gravity measurement accelerometer yg body frame yg r g // r rotation matrix generated quaternion qk+1/k g equation translates following equation allows get measurement model matrix h. h qk+1/k //where h stores value related yg-g update stage k p h h p h.transpose +r -1 //r adjusted right initialized identity matrix qk+1/k+1 i-kh qk+1/k qk+1/k+1 qk+1/k+1 /|qk+1/k+1| //normalize quaternion pk+1/k+1 kh pk+1/k following main part code complete c++ code https //github.com/lyf44/fcu want test matrix3f skew_symmetric_matrix float float b float c float matrix3f matrix matrix d* -1 c b* -1 c* -1 b return matrix void akf :state_transition_matrix float dt float gx float gy float gz vector3f tmp tmp gx*pi/180 tmp gy*pi/180 tmp gz*pi/180 float magnitude sqrt pow float tmp ,2 +pow float tmp ,2 +pow float tmp ,2 /*q k+1 cos |w|*dt/2 quaternion_multiply q k w/|w|*sin |w|*dt/2 */ //w/|w|*sin |w|*dt/2 tmp tmp/magnitude*sin magnitude*dt/2 //quaternion multiplication cos magnitude*dt/2 a.block tmp a.block tmp.transpose -1 matrix3f skew_symmetric skew_symmetric skew_symmetric_matrix float float tmp float tmp float tmp a.block skew_symmetric void akf :observation_model_matrix vector3f meas vector3f g vector3f tmp g /* h acc-g .transpose acc-g acc+g .skewsymmetric */ tmp meas-g h h.block tmp h.block tmp.transpose -1 tmp tmp+g+g matrix3f matrix matrix skew_symmetric_matrix float tmp float tmp float tmp h.block matrix* -1 //h h* cout h endl cout h endl cout h*x endl std h*x std :endl void akf :setup x_prev vector4f :zero x_prev q matrix4f :zero z vector4f :zero r matrix4f :identity p_prev matrix4f :identity p_prev p_prev* matrix4f :identity sum vector4f :zero noise_sum matrix4f :zero counter=1 void akf :predict_state cout endl x a*x_prev a_t a.transpose p a*p_prev*a_t+q void akf :update_state matrix4f ph_t matrix4f tmp ph_t p*h.transpose h*ph_t+r s.determinant tmp s.inverse k p*h*tmp //std k std :endl //std k std :endl x_updated i-k*h *x x_updated x_updated x_updated.norm p_updated i-k*h *p x_updated x std error-tmp inversible std :endl x_prev x_updated p_updated void rotation_matrix vector4f q matrix3f rot_matrix int i=1 i++ q q -1 matrix3f matrix matrix pow float ,2 +pow float ,2 -pow float ,2 -pow float ,2 matrix q *q -q *q matrix q *q +q *q matrix q *q +q *q matrix pow float ,2 -pow float ,2 +pow float ,2 -pow float ,2 matrix q *q -q *q matrix q *q -q *q matrix q *q +q *q matrix pow float ,2 -pow float ,2 -pow float ,2 +pow float ,2 rot_matrix matrix vector3f generate_akf_random_measurement vector4f state int //compute quaternion rotation matrix matrix3f rot_matrix rotation_matrix state rot_matrix //rot_matrix*acceleration ned acceleration body-fixed frame vector3f true_value rot_matrix*g std true value std :endl std true_value std :endl i=0 i++ noisy_value true_value -1 float rand float rand_max/2 return noisy_value int main float gx gy gz dt gx =60 gy=0 gz =0 //for testing let rotate x axis degree myakf.state_transition_matrix dt gx gy gz // dt elapsed time myakf.predict_state vector4f state myakf.get_predicted_state vector3f meas generate_akf_random_measurement state myakf.observation_model_matrix meas myakf.measurement_noise myakf.update_state q myakf.get_updated_state problem face code work.the prediction stage works fine updated quaternion state correct first iterations starts drift correct value checked code research paper multiple times ensured accordance algorithm proposed research paper test rotating x axis degree iterations number started angle rotation state updated state predicted updated quaternion respectivly true value meas result acceleration due gravity body frame.as test result indicates everything way rotating degrees following test result started state true value meas updated state -2.36755e-005 1.56256e-005 result started state -2.83164e-005 1.69446e-006 true value -4.90329 meas -0.532868 -4.80453 updated state -0.129439 -0.064549 result -5.10594 started state -0.0107786 -0.0798226 -0.12062 true value -2.35843 -0.0203349 -9.52226 meas -1.39627 -0.889284 -8.74243 updated state -0.0195091 -0.151695 -0.110965 result -2.19598 -0.0456112 -9.56095 started state -0.507888 -0.0758893 -0.171946 true value -3.59229 -8.12105 -4.16894 meas -4.52356 -7.73113 -4.98735 updated state -0.53758 -0.212643 -0.0889171 result -3.65783 -8.18397 -3.98485 started state -0.871108 -0.139696 -0.183326 true value -3.94732 -6.909 meas -4.36385 -6.98853 updated state -0.86404 -0.102296 -0.228487 result -3.69216 -6.94565 started state -0.966663 -0.0537713 -0.249024 true value meas -0.194541 updated state -0.78986 -0.0594022 -0.609607 result started state -0.654338 -0.446374 -0.512351 true value meas updated state -0.52697 -0.512048 -0.64101 result someone help confirm understanding theory quaternion kalman filter pseudo code correct anyone implemented attitude estimation using different version quaternion kalman filter appreciate provide code little explanation thank guys much",quadcopter kalman-filter,quadcopter filter kalman
2152,accurate rotation representation small angles,assume rigid body know rotate respect global reference frame considered fixed given degrees angle describe rotation using small angle approximation system like know rotation representation offers compared representation methods main representation methods considered euler angles pitch-yaw-roll transformation perception think pitch-yaw-roll representation expected accurate angles expressed respect initial coordinate frame hand euler angles defined different frames sure resulting angles small sum know body rotate degrees like know coordinate representation probable deliver smallest angles small angle approximation valid case general answer depends specific configuration found anything topic related literature example small angle approx used assume coordinate frame describes point space following vector p2=\begin bmatrix \\ \\ \end bmatrix given coordinate frame rotated respect previous description point given p1=\begin bmatrix \\ \\ -0.0630 \end bmatrix using euler angles find rotation matrix r_ euler characterized angles rads correspond angle rotation z axis rotation resulting axis rotation resulting z axis basic stuff explained many books. p1=r_ p2 want find corresponding rotation matrix pitch-yaw-roll representation solve optimization problem solution get maximum error p1 estimated p1 \times -8 delivers following angles \begin bmatrix -0.0103 \\ \\ bmatrix correspond rotation x z axis initial coordinate frame,inverse-kinematics geometry rotation,geometry rotation inverse kinematics
2153,orientation error free rotations,working inverse kinematics arm tool symmetric z-axis card rotations solution care direction words goal states orientation r n_d~ s_d ~a_d care a_d calculate orientation error adjust normal inverse kinematics account setting n_d s_d value forces particular orientation reachable full situations used following equation orientation error e_o \frac n_e q \times n_d s_e q \times s_d a_e q \times a_d n_e ~s_e ~a_e rotation matrix current guess n_d~ s_d ~a_d desired rotation matrix sufficient remove n equation giving e_o \frac a_e q \times a_d handle situation,robotic-arm inverse-kinematics,inverse kinematics arm robotic
2154,motor upgrade higher torque,assembled car using kits bought motors similar description says operating voltage recommended operating voltage maximum torque cm min no-load speed time load current max motor emc anti-interference ability microcontroller interference size approx fond max speed reach able provide power battery onboard used seemed safer voltage choice anybody tried higher voltages wearing motor hours read happen someone recommend replacement motors tolerate higher power envelope like preserve gearbox replace motor possible think fit motor 2-4 mm longer replacing transparent strap bonds gearbox makes difference btw making assumption higher_voltage higher_torque higher_speed sure overall correct expect least produce higher acceleration transients,brushless-motor,brushless motor
2155,extracting many possible end configurations possible,trying implement path planner generate path moves robot q_start q_goal q_goal extracted stereo camera mounted tool extract x z coordinates desired position rotation arbitrary robot using industrial ur5 robot arm software use capable performing jacobian based inverse kinematics given transformation matrix rotation translation inverse kinematics provide solution ok provide flexibility path planning ... using inverse kinematics determine possible q-configurations fulfills criteria desired x z coordinates,robotic-arm inverse-kinematics,inverse kinematics arm robotic
2156,mobile robot path following using model predictive control mpc,i'am trying implement path following algorithm based mpc model predictive control found paper path following mobile robot presence velocity constraints principle using robot model path algorithm predict behavior robot n future steps compute sequence commands v \omega allow robot follow path overshooting trajectory allowing slow sharp turn etc v linear velocity \omega angular velocity robot non-holonomic robot image extracted paper problem implementing mobile robot i'am trying compute needed matrices using matlab test efficiency algorithm end matrices computation dimension mismatch interested calculation §4 p6-7 paper model z_ k+1 az_k b_\phi\phi_k b_rr_k \begin bmatrix tv \\ \end bmatrix b_\phi \begin bmatrix t^2\over2 v^2\\ tv \end bmatrix b_r \begin bmatrix -tv \\ \end bmatrix sampling period v linear velocity k sampling index i.e t= kt z_k state vector z_k d_k \theta_k ^t position angle difference reference path r_k reference vector r_k \psi_k ^t \psi_k reference angle path step k criterion predictive receding horizon controller based minimization criterion j= \sigma^n_ n=0 \hat z k+n r_ k+n ^t q \hat z k+n r_ k+n \lambda\phi^2_ k+n subject inequality constraint p\begin bmatrix v_n \\ v_n\phi_n \end bmatrix \leq q n=0 ... z predicted output q weight matric \lambda scalar weight n prediction horizon predictor n-step predictor z k+n|k found iterating stacking predictions z k+n|k n n ... n vector z yields z \begin bmatrix \hat z k|k \\ \vdots \\ \hat z k+n|k \end bmatrix fz_k g_\phi\phi_k g_rr_k \phi_k \begin bmatrix \phi_k \ldots \phi_ k+n \end bmatrix ^t r_k \begin bmatrix r_k \ldots r_ k+n \end bmatrix ^t f \begin bmatrix \ldots a^n \end bmatrix ^t g_i \begin bmatrix \ldots \\ b_i \ldots \\ ab_i b_i \ddots \vdots \vdots \\ \vdots \ddots \ddots \\ a^ n-1 b_i \ldots ab_i \end bmatrix index substituted \phi r controller using n-step predictor simplifies criterion j_k \hat z _k r_k ^t i_q \hat z _k r_k \lambda\phi^t_k\phi_k i_q diagonal matrix appropriate dimension instances q diagonal unconstrained controller found minimizing respect \phi \phi_k -l_zz_k l_rr_k l_z lambda g^t_wi_qg_w -1 g^t_wi_qf l_r lambda g^t_wi_qg_w -1 g^t_wi_q gr i'am trying compute \phi_k -l_zz_k l_rr_k dimension l_r r_k match matrix multiplication parameters t=0.1s n=10 \lambda=0.0001 q=\begin bmatrix \\ \delta \end bmatrix \delta=0.02 get r_k matrix n+1 elements size transposed g_w matrix g^t_w matrix i_q matrix f matrix g_r matrix lz computation gives according matrix sizes l_z= scalar -1 matrix z_k matrix l_zz_k fine lr computation gives according matrix sizes l_r= scalar -1 matrix r_k matrix l_rr_k possible matrix multiplicated matrix sure missing something big unable see appreciated thanks,mobile-robot navigation,mobile navigation robot
2157,electric vs. internal combustion engine propulsion,main differences electric motor internal combustion engine atv-sized mobile robot platform terms functionality implementation difficulty rc conversion electronic operation durability maintenance used autonomous platform full sized atv/utv polaris ranger ev question advantages/disadvantages differences electric nitro rc cars bigger scale adds something important game think main differences bigger range faster refueling ic less maintenance electric interested detailed comparison transmission ic engine considered automatic edit fuel injection ic considered electronic efi know means electronic throttle mechanical wire carburetor throttle see lag actuation engine running higher rpm giving power/speed main disadvantage ic control quite easy dealt software adding checking desired rpm,mobile-robot electronics engine electric propulsion,engine electric mobile propulsion robot electronics
2158,inverse kinematics jointed robots,uncertain compute homogeneous transformation matrix compute inverse kinematic q-configuration looking robot end robot camera mounted purpose application make robot follow object tracking camera provide x z coordinate position want place robot arm first question set desired homogenous transformation matrix way see transformation matrices t_tool_base t_world_tool become t_world_base t_tool_base t_world_tool question compute desired transformation matrix think know setup transformation matrix camera like t_world_tool x z second question regarding rotation matrix prescribe rotation arbitrary endpoint desired position world frame t_tool_base entail entail transformation current state desired transformation extract desired t_tool_base transformation ...,robotic-arm kinematics inverse-kinematics,inverse kinematics arm robotic
2159,bayesian filter 2-d grid localizaton,data obtained experiment terms movements observations odometry sensor data task find probability mass grid cells set motion observation bit lost figuring compute probability mass grid cell odometry information terms rotation translation rotation sensor information terms range bearing angle calculate probability robot present grid cell formula belief motion summation p x|u x xbel x compute motion model noise,localization filter,filter localization
2160,quadcopter refuses fly pid component added,good day like ask add yaw control pid controller motor quadcopter refuses take maintain altitude using cascaded pid controller attitude hold using accelerometer magnetometer gyroscope ultrasonic sensor altitude hold scope indoor done barometer due +-12m error resulting response yaw control plot shows response quadrotor yaw control plot shows response quadrotor debugging found outputs pid give high value summed goes way pwm limit full throttle yawpid contribution limiter kicks damaging desired response system able fly oscillatory motion z axis height yawpid contribution added yaw components increases sum pid way limit compesates excess resulting lower pwm output motors leaves ground //motor front left float motorpwm1 pitchpid rollpid yawpid basethrottle basecompensation //motor front right float motorpwm2 pitchpid rollpid yawpid basethrottle basecompensation //motor left float motorpwm3 -pitchpid rollpid yawpid basethrottle basecompensation //motor right float motorpwm4 -pitchpid rollpid yawpid basethrottle basecompensation background pid parameters pitch roll tuned meaning base throttle set minimum value required quadcopter able lift pid parameters altitude sensor tuned controllers active pitch roll possible problem limiter algorithm possible problem algorithm used limit maximum minimum throttle value caused problem following code used maintain ratio motor values limiting code used stage limiter stage motorpwm set basethrottle algorithm increases motor pwm value none stage motorpwm set maxthrottle algorithm decreases motor value none //check pwm saturating method used trim outputs pwm gets fed gpiopwm function avoid exceeding earlier set maximum throttle maintaining ratios motor throttles float motorpwm1 motorpwm2 motorpwm3 motorpwm4 float minpwm motorpwm int i=0 i++ // get minimum pwm filling motorpwm minpwm minpwm=motorpwm cout minpwm minpwm endl minpwm basethrottle float fillpwm=basethrottle-minpwm //get deficiency use fill motors cout fill fillpwm endl motorpwm1=motorpwm1+fillpwm motorpwm2=motorpwm2+fillpwm motorpwm3=motorpwm3+fillpwm motorpwm4=motorpwm4+fillpwm float motorpwm2 motorpwm1 motorpwm2 motorpwm3 motorpwm4 float maxpwm motorpwm2 i=0 i++ // get max pwm trimming motorpwm2 maxpwm maxpwm=motorpwm2 cout maxpwm maxpwm endl maxpwm maxthrottle float trimpwm=maxpwm-maxthrottle //get excess use trim motors cout trim trimpwm endl motorpwm1=motorpwm1-trimpwm motorpwm2=motorpwm2-trimpwm motorpwm3=motorpwm3-trimpwm motorpwm4=motorpwm4-trimpwm obtained difference employ upper bound compensation limiting mine performs lower bound compensation limiting cause saturation reaches second stage https //pixhawk.org/dev/mixing gains set possible set p gains high exceeding max rpm limit motors causing limiter algorithm overcompensate current pid settings minimum motor value quad lift maximum limit pwm time high pitch cascaded p-pid controller rate p rate rate stabilize p roll cascaded p-pid controller rate p rate rate stabilize p yaw cascaded p-pid controller rate p rate rate stabilize p hover single loop pd controller p possible solution think set pid parameters p gain high computed sum outputs controller limit retuning help like ask anyone encountered problem suggestions thank edit added plots response control loop slow fly flies,quadcopter control pid raspberry-pi stability,quadcopter control pi pid stability raspberry
2161,write stop continuous servo,using processing send strings arduino using functions int u=90 port.write u+ z processing side arduino side using calls case z.write v v break case z.write //v break get servo stop make shut regular servo ask easy write low nothing keeps spinning direction meets conditions statements switches polarity/direction good want made function make stop anyone ideas using continuous rotation servo,arduino,arduino
2162,steadier wheels pin lock springs,running hard surface create shake turns acceleration anyone removed springs pinned wheels place move,irobot-create roomba,create roomba irobot
2163,difference holonomic nonholonomic system,wondering point mass mass move line accelerated external time-varying force see double integrator holonomic nonholonomic system think nonholonomic move direction configuration space x axis e.g point mass moving x=10 velocity m/s positive x -direction go x=9.9 due inertia feeling thoughts wrong ... background following trying understand holonomic nonholonomic systems found holonomic system systems constraints integrable positional constraints nonholonomic systems systems constraints nonintegrable positional constraints holonomic system robot move direction configuration space nonholonomic systems systems velocities magnitude direction derivatives position constraint,dynamics movement,dynamics movement
2164,kinematics dh parameters,started learning robotics school problems solve kinematics dh parameters understand get image appreciate somebody help,forward-kinematics dh-parameters,kinematics parameters dh
2165,rating li-po battery get configuration,configuration a2212 brushless motor ecs electronic speed control esc propeller propeller cw ccw pair inch pitch arduino mega board raspberry pi open pilot cc3d flight controller want know rating li-po battery get configuration reason asking simple google search able satisfy explanation ... weight kg quadcopter need stable current discharge computer science guy little knowledge electronics learning need help ...,quadcopter arduino raspberry-pi battery,quadcopter pi raspberry battery arduino
2166,smart home model raspberry pi,new rpi trying smart home model planned rpi control servos controlling open/close doors setting angle leds need use external circuit supply power servos fine connect rpi,raspberry-pi rcservo,pi raspberry rcservo
2167,dynamic model manipulator,stuck equation page http //www.cds.caltech.edu/~murray/books/mls/pdf/mls94-complete.pdf equation \frac \partial m_ ij \partial \theta_k \sum_ l=\max j ^n \bigl a_ ki \xi_i \xi_k ^t a_ lk ^t \cal _l a_ lj \xi_j \xi_i^t a_ li ^t \cal _l a_ lk a_ kj \xi_j \xi_k \bigr seems impossible process requires adding matrix going rowsxcolumns notation matrices \xi addition statement fit rules matrix addition mistake see,dynamics matlab,dynamics matlab
2168,find maximum force robot joint,want know equation calculates maximum force robot joint force exceed example human leg big external force knee break find necessary force make leg move breaking knee programme generates robot morphologies different sizes know force exceed joint think depend weight mass inertia robot part trial error hundreds different morphologies video shows behaviour robot apply big force gazebo robotic simulator thanks advance,simulation joint force,joint force simulation
2169,implementing analytic version inverse kinematic,people recommended implement analytic version inverse jacobian solver forced least square solution local area solution desire seem implement mean much differ least square inverse kinematics implemented eigen :matrixxd jq device_.get basejend state .e .cols device_.get basejend state .e .rows jq device_.get basejend state .e //extract j q robot //least square solver ata ⁻1atb eigen :matrixxd jq.transpose jq*jq.transpose .inverse eigen :vectorxd du du t_tool_base.p .e du t_tool_base.p .e du t_tool_base.p .e du // set something want tool position rotate du du ros_error want eigen :vectorxd q q a*du cout q endl least square solution want vector solutions want vector solution get related construct transformation matrix given x z tool position robot used ur5 https //smartech.gatech.edu/bitstream/handle/1853/50782/ur_kin_tech_report_1.pdf,robotic-arm inverse-kinematics industrial-robot c++,c industrial robot inverse kinematics robotic arm
2170,observing lidar laser rays,working sick lidars mount/unmount robot mounting process tedious comes making sure lidars horizontal thought using ir goggles night vision ones fog machine nightclubs order see surface covered rotating laser ray result expect see something planar thinking trying get hands hardware wanted ask sick laser enough intensity observed goggles anybody tried approach,laser lidar,laser lidar
2171,type actuator use,need find way get least hz linear motion least mm stroke intend make linear persistence vision device rotating small light possible mm long 10-15 mm diameter less grams load grams voice coils expensive use solenoids instance recommend thanks,actuator motion,motion actuator
2172,follow roomba/create works beambot,diagram shows old beambot strategy code example using method avoid opencv ultrasonic gps etc want roomba wheels react go straight turn left right add front wheel servo try roomba turn anybody added big terrain wheels roomba replace originals,control irobot-create roomba,control create roomba irobot
2173,suitable uc atonomous robot,going autonomous robot kalman-filter localization integrated lidar encoder imu gps add obstacle avoidance moving required position 8-bit suitable arduino mega use avr32 arm pic32 better,mobile-robot arduino localization microcontroller,mobile microcontroller localization robot arduino
2174,kuka kr16l-2 robot simulation base wrist rotation inconsistent original robot,issue regarding simulation kuka robot kr16l6-2 matlab using robotics toolkit peter corke wish simulate kinematic passing command real robot motion attached dh-parameters tried many combination orientations useful effect problems robot base rotates counter-clockwise default positive increases joint1 original robot moves opposite direction wrist roll i.e joint direction simulation reversed order confirm mistake searched similar ready made simulation software include kuka robot similar variant kuka_kr_5_sixx_r650 available hence kuka_kr_5_sixx_r650 set motions base wrist rokisim v1.7 positive increases joint angle reverse motion roboanalyzerv7 note rotation j1 base j4 wrist roll reversed want recreate results rokisim v1.7 matlab rotations similar real world robot spec provided kuka,matlab industrial-robot simulation kuka,kuka simulation industrial matlab robot
2175,getting “rospack package found ros,created package catkin workspace put publisher.py node src directory package worked fine added node subscriber.py node used catkin_make build try run nodes find package getting error missing step thanks,ros,ros
2176,supported dynamixel xl-320 ollo,looking purchasing dynamixel ax-12a xl-320 xl seems use ollo frames seem available toy-like set wondering frames available get ax-12,servos walking-robot dynamixel,dynamixel walking servos robot
2177,choosing right mecanum wheel,part college robotics team preparing robocon used mecanum wheels last robocon competition faced huge slip vibration looked kinematic dynamic formulas stuff mecanum wheels get conclusion problem video problem robot kg mecanum wheel cm rollers single type please help happened suggest design new mecanum wheel bring market design parameters consider please help design cad software solidworks give printing buy market buy,design wheel,wheel design
2178,performing inverse kinematics based displacement end effector,think simple problem head resolve ... setup looks grey box end effector supposed camera measures dx dy dz object camera used position camera dz object camera equal dx dy know using inverse kinematics determine q positions according given rotation position position extract q make dx dy dz keeping object sight time example object placed base see second image find possible configurations case consist arm rotating object camera keeps object sight ... update realized possible solution create sphere object centrum radius dz use sphere extract pairs rotations position ... come solution,robotic-arm inverse-kinematics stereo-vision,stereo inverse kinematics robotic arm vision
2179,generate transformation matrices rotating object,compute transformation matrices places robot endeffector shell sphere end effector pointing object center know time object relative endeffector radius desired distance want object endeffector want using inverse kinematics pan object shaped trajectory transformation matrix contain different positions sphere rotation oriented arm looks object position relative easy compute know distance object radius sphere rotation matrix position mystery,robotic-arm rotation,rotation arm robotic
2180,vector field histogram possible generate occupancy grid position feedback,working autonomous quadcopter project using stereo vision obstacle detection planning use vfh+ trajectory planning meaning movements quadcopter available x axes movement permitted z axis altitude methods implemented position tracking accelerometers known generate lot errors integration tried look optical flow sensors low computation needed found stock due company change pixart understand certainty/occupancy grid constructed reduced polar coordinate system robot heading aligned computed unblocked sector possible generate occupancy grid position feedback planning run slow constant velocity due data throughput raspberry pi stereo vision system plan use obtained angle direction vfh algorithm align quadcopter heading motor control scheme used yaw pitch based heading control pitch control raspberry pi b+ used motor control running pid control loop stereo vision running,quadcopter motion-planning stereo-vision vector-field-histogram vfh,quadcopter stereo vector vfh histogram motion field planning vision
2181,determine angles uav,uav modeled dimensions let say position coordinates p_ uav x_1 y_1 z_1 moving direction d_x d_y d_z moving obstacle modeled known centre coordinates p_ sph x_2 y_2 z_2 radius r_ sph plane p direction movement uav intersects want able calculate angles respect vehicle movement formed tangents sphere plane p figure like know calculate angles α_1 α_2 helps looking extension dimensions vehicle dimensions easier problem requires centre circle sure make work plane intersect points centre thanks advance help,localization kinematics geometry,geometry kinematics localization
2182,implementation inverse kinematics solution c++,issue implementing least square solution inverse kinematics problem q configuration get large makes sense hoping someone help find error program rw :math :q pathplanning :invkin double dx double dy double dz rw :kinematics :state state this- state rw :math :transform3d t_tool_base this- device.get basetend state cout t_tool_base.r .e endl cout endl cout t_tool_base.p .e endl cout endl eigen :matrixxd jq this- device.get basejend state .e .cols this- device.get basejend state .e .rows jq this- device.get basejend state .e //least square solver dq j q j q j q ⁻1 du dq a*du eigen :matrixxd //a jq.transpose jq*jq.transpose .inverse jq*jq.transpose .inverse *jq.transpose std :vector rw :math :transform3d dx dy dz std :ofstream outfile.open q_conf.txt std :ios_base :app unsigned int out.size ++i rw :math :vector3d dif_p .p -t_tool_base.p eigen :matrix3d dif .r .e t_tool_base.r .e rw :math :rotation3d dif_r dif rw :math :rpy dif_rot dif_r eigen :vectorxd du du dif_p du dif_p du dif_p du dif_rot du dif_rot du dif_rot eigen :vectorxd q q a*du rw :math :q q_current q_current this- device- getq this- state rw :math :q dq q rw :math :q q_new q_current+ dq jq endl endl //std :string text setq to_string to_string to_string to_string to_string to_string text endl //outfile text endl rw :math :q bla //just used text file debugging purposes return random q config return bla rw :math :transform3d pathplanning :transform double obj_x double obj_y double obj_z double sphere_x double sphere_y double sphere_z // z-axis oriented towards object // rot consist direction vector x z describes oriented world space // looking simulation z-axis camera x describes orientation camera // vector direction purposes normalized ... // todo case -1 ... happening done undo rw :math :vector3d dir_z obj_x sphere_x obj_y sphere_y obj_z sphere_z dir_z normalize dir_z rw :math :vector3d downplane -1.0 rw :math :vector3d dir_x cross downplane dir_z dir_x normalize dir_x rw :math :vector3d dir_y cross dir_z dir_x dir_y normalize dir_y rw :math :rotation3d rot_out dir_x dir_y dir_z rw :math :vector3d sphere_x sphere_y sphere_z rw :math :transform3d rot_out return std :vector rw :math :transform3d pathplanning dx double dy double dz double r // radius set cm todo checked accurate cout create sphere double current_x this- device- basetend this- state .p double current_y this- device- basetend this- state .p double current_z this- device- basetend this- state .p rw :math :vector3d center current_x dx current_y dy current_z dz // formula x-x0 y-y0 z-z0 // x x x_0 rcos theta sin phi // y_0 rsin theta sin phi // z z z_0 rcos phi // angle range theta phi m_pi double obj_x current_x dx double obj_y current_y dy double obj_z current_z dz ofstream positions ofstream rotations_z ofstream rotations_y ofstream rotations_x positions.open sphere_positions.csv rotations_z.open z_dir.csv rotations_y.open y_dir.csv rotations_x.open x_dir.csv std :vector rw :math :transform3d int count double theta theta theta+=0.1 double phi phi m_pi phi+=0.1 double sphere_x obj_x r*cos theta *sin phi double sphere_y obj_y r*sin theta *sin phi double sphere_z obj_z r*cos phi string text to_string sphere_x to_string sphere_y to_string sphere_z positions text endl rw :math :transform3d transformation_matrix transform obj_x obj_y obj_z sphere_x sphere_y sphere_z string text2 to_string transformation_matrix.r .e to_string transformation_matrix.r .e to_string transformation_matrix.r .e string text1 to_string transformation_matrix.r .e to_string transformation_matrix.r .e to_string transformation_matrix.r .e string text0 to_string transformation_matrix.r .e to_string transformation_matrix.r .e to_string transformation_matrix.r .e rotations_z text2 endl rotations_y text1 endl rotations_x text0 endl count == //todo ... ... occuring theta theta phi phi endl sphere_x sphere_y sphere_z endl count count++ out.push_back transformation_matrix positions.close rotations_z.close rotations_y.close rotations_x.close cout endl cout object obj_x obj_y obj_z endl cout done endl return trying trying orbit robot endeffector object center trajectory endeffector sphere endeffector point object sphere function compute transformation matrices move arm different position given rotation inverse kinematics compute different q-states given x z actual displacement object sure error think transform function generate desired transformation matrix invkin create du think made mistake creating du du du libraries using eigen robwork rw anyone want look syntax update based ghanimmukhtar began checking singularities jacobian.. seems general low computed list random q configurations resulted ... determinant -0.0577779 determinant -0.0582286 determinant determinant -0.0498886 determinant determinant determinant determinant determinant -0.0799746 determinant determinant determinant determinant -0.0339612 determinant -0.00365521 determinant -0.030022 determinant determinant determinant determinant -0.0151192 determinant determinant -0.0657176 determinant determinant -0.00516008 determinant -0.0394664 determinant -0.00469664 determinant determinant -0.00156804 determinant -0.0402393 determinant -0.0141511 determinant determinant -0.0368337 determinant -0.0313431 determinant -0.0566811 determinant -0.00766113 determinant -0.051767 determinant -0.00815555 determinant determinant determinant -0.0501299 determinant -0.00056537 determinant -0.0308103 determinant -0.0091592 determinant determinant -0.0051255 determinant determinant -0.0850566 determinant -0.0353419 determinant determinant -0.0103023 determinant -0.0123843 determinant -0.00160566 determinant determinant determinant determinant determinant -0.000788464 determinant determinant determinant determinant determinant -0.0978426 determinant -0.0585773 determinant determinant -0.00489957 determinant -0.0460029 determinant determinant determinant -0.0408527 determinant -0.00115296 determinant determinant determinant determinant -0.042201 determinant -0.036663 determinant -0.103452 determinant -0.0119054 determinant determinant -0.00717832 determinant determinant determinant -0.00515246 determinant -0.0556505 determinant determinant -0.0545629 determinant determinant determinant determinant -0.00101032 determinant determinant determinant -0.0439223 determinant -0.0113453 determinant -0.0193872 determinant determinant -0.00184695 determinant -0.106904 determinant determinant -0.00883772 determinant determinant determinant determinant -0.000663089 determinant -0.00392395 determinant determinant determinant -0.0464579 determinant determinant -0.0193227 determinant determinant -0.02003 determinant determinant -0.00159198 determinant -0.0702308 determinant -0.0242876 determinant -0.00934638 determinant -0.00221986 determinant -0.0268925 determinant determinant -0.00925273 determinant -0.0167357 determinant determinant -0.00515798 determinant -0.00324081 determinant -0.00321565 determinant determinant -0.0342913 determinant -0.000342155 determinant -0.0104422 determinant -0.0410489 determinant -0.0246036 determinant determinant -0.0692963 determinant determinant -0.049308 determinant -0.0349338 determinant determinant -0.00214381 determinant -0.0332965 determinant determinant -0.0748581 determinant -0.00864737 determinant -0.0638044 determinant -0.00103911 determinant -0.00690918 determinant determinant determinant determinant -0.0063201 determinant -0.00677609 determinant -0.00686829 determinant determinant determinant determinant -0.0146124 determinant -0.0133718 determinant -0.0203801 determinant -0.0150386 determinant -0.102603 determinant -0.077111 determinant determinant determinant -0.0532867 determinant -0.0620632 determinant -0.0165414 determinant -0.0461426 determinant determinant determinant determinant -0.0814478 determinant -0.0890507 determinant -0.0472091 determinant determinant -0.00224087 determinant -0.0242662 determinant -0.00195303 determinant determinant determinant -0.0354357 determinant -0.0427957 determinant -0.0380409 determinant determinant determinant determinant determinant determinant -0.0240826 determinant -0.0866264 determinant determinant determinant -0.0303611 determinant -0.0337029 determinant -0.0202875 determinant determinant -0.0475265 determinant -0.00928736 determinant -0.00373402 determinant determinant determinant determinant -0.0563998 determinant -0.0778303 determinant determinant determinant determinant -0.0897675 determinant determinant -0.0734512 determinant determinant -0.0238522 determinant -0.0849523 determinant determinant -0.0715147 determinant determinant -0.0142186 determinant -0.101503 determinant determinant 4.69111e-05 determinant determinant determinant 8.90995e-05 determinant -0.00841189 determinant -0.0671323 determinant determinant -0.00292435 determinant determinant determinant determinant -0.0428982 determinant -0.0446924 determinant determinant determinant -0.0463321 determinant -0.00247224 determinant -0.0199861 determinant determinant determinant determinant determinant -0.0857382 determinant -0.0477216 determinant determinant determinant determinant -0.0964 determinant determinant -0.0676327 determinant determinant determinant determinant determinant -0.0568753 determinant -0.00953039 determinant -0.0534666 determinant determinant determinant determinant determinant -0.00847695 determinant determinant -0.0648035 determinant determinant determinant -0.0195397 determinant determinant -0.0137401 determinant determinant determinant -0.0588661 determinant -0.0923883 determinant -0.00726003 determinant -0.0411533 determinant determinant determinant determinant -0.0590416 determinant -0.0377112 determinant -0.0150455 determinant determinant determinant -0.040728 determinant -0.0376792 determinant -0.0387703 determinant -0.0232208 determinant determinant -0.0284409 determinant determinant -0.0289103 determinant -0.00586449 determinant -0.0805586 determinant determinant -0.00311773 determinant determinant -0.00981978 determinant -0.0491601 determinant determinant determinant -0.0515142 determinant determinant determinant -0.0126048 determinant -0.0412662 determinant determinant -0.0726478 determinant determinant -0.0256477 determinant determinant -0.0052493 determinant determinant determinant determinant determinant determinant -0.00388679 determinant -0.0193821 determinant -0.00718189 determinant -0.0864566 determinant determinant -0.0398232 determinant -0.00224801 determinant determinant -0.0212002 determinant determinant determinant -0.0811845 determinant determinant determinant determinant -0.00103575 determinant determinant determinant -0.0248252 determinant -0.106768 determinant -0.0192333 determinant -0.026543 determinant -0.0222608 determinant -0.0487862 determinant determinant -0.0329469 determinant determinant determinant determinant -0.0190175 determinant -0.0338969 determinant -0.0631867 determinant -0.0238901 determinant determinant -7.74935e-05 determinant -0.0468996 determinant determinant determinant determinant -0.000279933 determinant determinant -0.00458034 determinant determinant -0.00543503 determinant -0.0520309 determinant -0.0234638 determinant determinant -0.00036774 determinant determinant -0.00685314 determinant -0.000176925 determinant determinant -0.0337003 determinant -0.0534818 determinant determinant -0.0728077 determinant determinant -0.0660952 determinant -0.0466 determinant determinant -0.00340539 determinant determinant -0.0751806 determinant -0.00617677 determinant determinant -0.0016673 determinant determinant determinant -0.00664964 determinant determinant -0.019015 determinant determinant determinant determinant determinant -0.0684746 determinant -0.0234524 determinant -0.0197933 determinant determinant -0.0192703 determinant determinant determinant -0.0599305 determinant -0.0626148 determinant determinant -0.0341273 determinant determinant -0.0306585 determinant determinant determinant -0.00368989 determinant -0.0951982 determinant determinant determinant -0.0225219 determinant determinant -0.0244409 determinant -0.0425728 determinant determinant -0.0413427 determinant -0.00556264 determinant -0.0894398 determinant -0.0193197 determinant -0.00788038 determinant -0.00455421 determinant -0.0788177 determinant determinant -0.0346766 determinant -0.0748027 determinant determinant -0.0968796 determinant determinant -0.00996678 determinant determinant -0.0914706 determinant determinant determinant determinant -0.0299529 determinant -0.0096473 determinant -0.0142643 determinant -0.0684794 determinant determinant -0.03252 determinant -0.0144637 determinant determinant determinant -0.019569 determinant determinant -0.0526394 determinant -0.000870143 determinant -0.0180984 determinant -0.0144104 determinant determinant -0.0113433 determinant determinant -0.0775854 determinant -0.0336789 determinant -0.0744995 determinant -0.0427397 determinant determinant -0.0326518 determinant -0.0333735 determinant -0.0284057 determinant -0.00999835 determinant -0.0380404 determinant determinant determinant determinant -0.0230653 determinant -0.00934067 determinant -0.0175326 determinant -0.0799447 determinant determinant -0.00670324 determinant -0.0841748 determinant determinant determinant -0.0239495 determinant determinant -0.00997484 determinant determinant -0.0654046 determinant determinant determinant -0.105119 determinant determinant -0.105149 determinant -0.0465851 determinant determinant -0.0456927 determinant determinant -0.0914691 determinant -0.0157904 determinant -0.00170804 determinant -0.014797 determinant determinant -0.035118 determinant -0.0242306 determinant determinant determinant -0.0860252 determinant -0.0511219 determinant -0.0925647 determinant determinant -0.0515914 determinant -0.044318 determinant determinant determinant determinant determinant determinant dx dy dz distance tcp object want keep sight safety zone used compute orientation tool,inverse-kinematics c++,c inverse kinematics
2183,designing ackerman steering principle autonomous robot,working high speed autonomous robot 6-7 m/s obstacle detection senses traffic lights used raspberry pi arduino uno steering mechanism wanted implement ackerman steering read principle understood basics make design using switchboards sold strong lightweight waterproof switchboards cheap got big axle small axle cut l-shaped pieces join axles ... confused connect wheels axle make rotate side site let upload pics right try asap electric drill anything make happen p access printer help appreciated ... p.s- suggestions robot feel free share looking good steering method robot,arduino raspberry-pi navigation steering,pi raspberry navigation steering arduino
2184,motor inertia tensor,modeling dynamics robot servo motor adjusted link need find inertia tensor motor right needed get inertia tensor motor find solid works model internal components mean gears related specified materials,servomotor dynamics,servomotor dynamics
2185,servo fried,got new servo days rc servo futaba fp-s148 tested sweep sketch arduino powering arduino gnd pins working fine today trying use robot tried powering lipo batteries samsung old laptop battery connected series giving connected servo started rotating connected arduino took next used l7805 get regulated supply batteries used connected batteries servo servo arduino uploaded sketch servo started behaving first complete turn stopped humming sound came servo strange thing connect multimeter leads power cables servo turned opposite direction lead contact positive negative wire servo gives humming sound fried servo issue update stripped servo checked motor working fine seems gear problem,arduino battery rcservo,battery rcservo arduino
2186,testbed testing navigation algorithms,looking testbed simulator web-based interface lets control robot testing different routing navigation algorithms system web,navigation routing,navigation routing
2187,quality check robot,develop robot based system monitor check products defeat moving conveyer belt using sensors kick defect product queue,microcontroller,microcontroller
2188,wheeled vehicle model,want dynamic model wheeled robot expected find wheeled bicycle model effort rotation feedback calculate steering angle messy manage need model controlling,wheeled-robot dynamics motion robotc,motion dynamics wheeled robotc robot
2189,bang-bang signal amplitude n width input force reproduce certain results matlab,"working dynamic modeling simulation mechanical system overhead crane obtained equation motion form q \ddot q +c q \dot q \dot q +g q =q matrices know inertia q coriolis-centrifugal matrix c q \dot q gravity g q functions generalized coordinates q derivatives \dot q want solve q using matlab ode m-file got response initial conditions zero input want find response aforementioned control signal bang-bang signal amplitude n width trying regenerate results literature authors work said regrading input signal following bang-bang signal amplitude n width used input force applied cart gantry crane bang-bang force positive acceleration negative deceleration period allowing cart accelerate decelerate stop target location grasp mean bang-bang signal know matlab step ... etc bang-bang signal familiar according site bang bang controller anyone suggest figure issue implement input signal m-file code using given bellows parts function xdot alfagera x spec xdot zeros xdot zeros include input torque crane specifications mp spec mc spec mr spec l spec j spec g accelatrion gravity m/s^ matix equations m11 mr+mc+mp m12 m13 mp*l*cos x *sin x m14 mp*l*sin x *cos x m21 m22 mp+mc m23 mp*l*cos x *cos x m24 -mp*l*sin x *sin x m31 m13 m32 m23 m33 mp*l^2+j m34 m41 m14 m42 m24 m43 m44 mp*l^2* sin x ^2+j m11 m12 m13 m14 m21 m22 m23 m24 m31 m32 m33 m34 m41 m42 m43 m44 c11 c12 c13 -mp*l*sin x *sin x *x +mp*l*cos x *cos x *x c14 mp*l*cos x *cos x *x -mp*l*sin x *sin x *x c21 c22 c23 -mp*l*sin x *cos x *x -mp*l*cos x *sin x *x c24 -mp*l*cos x *sin x *x -mp*l*sin x *cos x *x c31 c32 c33 c34 -mp*l^2*sin x *cos x *x c41 c42 c43 -c34 c44 mp*l^2*sin x *cos x *x c c11 c12 c13 c14 c21 c22 c23 c24 c31 c32 c33 c34 c41 c42 c43 c44 cf c* x x x x g mp*g*l*sin x fx =1 =2 fy *square t*pi*2 fy end f fx fy input torque vector xdot x xdot m\ f-g-cf xdot f clear clc t0 tf x0 initional conditions spectifications mp variable mass payload figure plotstyle mp mp mc mr mass kg l j kg-m^2 respe spec mp mc mr l j call function x ode45 x alfagera x spec t0 :0.001 tf x0 legendinfo num2str mp fx diff x ,9 ./diff fy diff x ,10 ./diff tt=0 end length fx -1 end time vector plot cart positions x direcitons subplot plot x ,1 plotstyle grid xlabel ylabel position x direction hold legend legendinfo subplot plot x ,2 plotstyle grid xlabel ylabel position direction hold legend legendinfo end plot input bagn-bang signal sample figure plot tt fy grid set gca xlabel ylabel signal f_y results getting supposed get shown major difficulties initial conditions stated paper input force direction different direction appreciate help paper trying recreate r. m. t. raja ismail m. a. ahmad m. s. ramli f. r. m. rashidi “nonlinear dynamic modelling analysis 3-d overhead gantry crane system system parameters variation. ” international journal simulation–systems science technology vol http //ijssst.info/vol-11/no-2/paper2.pdf",control robotic-arm dynamics matlab input,control matlab robotic input dynamics arm
2190,robot find position given map gps including initial point given,consider map contest shown figure consists sub arenas sides identical scientists safe locations similar sub arena different colored rooms fourth shared room robot placed identical start locations respective arena locations random map room shared room entry exit gates gates open times robot enter exit gate chooses,localization,localization
2191,check sharp angle line follower,mbot robot want program follow line pass kind line want able pass 90°-ish angles problem mbot robot line following sensors mm line cm wide use sensors times goes line supposed turn misses line goes white goes get track black line tries go goes white taking turn happens sometimes passes angle going turning workaround let alone solution test course round competition robot pass problem gets stuck edited sorry course pass block robot enters block gets stuck coming angle hits degree turn sensor value read depending robot sees line right line left line line pseudo code current program loop line turn_left left line turn_right line go_forward line go_backwards go taking sharp turns,arduino motor line-following,following line motor arduino
2192,diffrence degrees freedom dof degrees motion dom,anyone expain diffrence degrees freedom dof degrees motion dom know dof number independent movements manipulation arm make robot system max independent dof unlimited number dom distinguish,manipulator theory,manipulator theory
2193,quadcopter made hover,need get drone flying rest glass water tried kk boards apm software balanced props set pid settings auto-trim autotune drone tends drift little way plausible way isolate drift,quadcopter,quadcopter
2194,quadcopter flight controller using gyroscope data give better results,succeeded making first quadcopter scratch readymade frame designed flight controller help ymfc-3d youtube series videos https //www.youtube.com/watch v=2phdo8m6t7c process discovered using euler angles values mpu6050 pid loop makes super difficult tune fly great whereas intuitive using gyroscope values complementary filter made quad respond better tuning difficult let define response cases using ypr values +always keeps overshooting small range values let quad fly stable +drastic reactions extreme values p kp values using gyro values +reaction stable +tuning pid simple high values p kp crash due oscillations flip react portion pid loop //gyrox_temp current gyroscope output gyro_x_input= gyro_x_input*.8 gyrox_temp*0.2 //complementary filter pidrate_error_temp =gyro_x_input setpoint //error value pid loop pidrate_i_mem_roll += pidrate_i_gain_roll //integral portion pidrate_output_roll pidrate_p_gain_roll pidrate_error_temp pidrate_i_mem_roll pidrate_d_gain_roll pidrate_error_temp pidrate_last_roll_d_error //output pid loop /pidrate_p_gain_roll-kp //pidrate_i_gain_roll-ki //pidrate_d_gain_roll-kd //this output given pwm signal quad throttle,quadcopter pid gyroscope,quadcopter pid gyroscope
2195,principle virtual force general help understanding explanation,electronics student taking module robotics example understand line jacobian found time derivative kinematics equation relates joint angles velocity understand taken line line produced,kinematics jacobian,kinematics jacobian
2196,measuring vehicle lateral acceleration using smartphone,want measure acceleration lateral using android smartphone device order able analyse driving behavior approach follows aligning coordinate systems calibration motion motion car stationary calculate magnitude gravity using sensor.type_gravity rotate straight pointing downwards assuming flat surface way pitch roll angles equal angles car relativ world start moving car get first motion indication using sensor.type_accelerometer rotate magnitude straight x-axis pointing forward way yaw angle equal vehicle heading relativ world update orientation driving able keep coordinate systems aligned driving going use sensor.type_gravity maintain roll pitch system a_x acceleration gravity yaw angle maintained sensor.rotation_vector sensor.magnetic_field reason using going use application electrical vehicles high amounts volts produced engine make accuracy sensor values suffer alternative know optimal using gps course maintain yaw angle getting measurements applying aforementioned rotations possible maintain alignment smartphone vehicle coordinate systems giving pure lateral acceleration values x-axis y-axis questions approach applicable miss something crucial easier/alternative approach,sensors accelerometer gps,sensors accelerometer gps
2197,e unable locate package ros-jade-desktop-full,want install ros xubuntu xenial xerus followed ros site instruction http //wiki.ros.org/jade/installation/ubuntu following first setup sources.list sudo sh -c deb http //packages.ros.org/ros/ubuntu lsb_release -sc main /etc/apt/sources.list.d/ros-latest.list' second set keys sudo apt-key adv -- keyserver hkp //ha.pool.sks-keyservers.net:80 -- recv-key make sure package up-to-date sudo apt-get update last try install ros jade sudo apt-get install ros-jade-desktop-full get error e unable locate package ros-jade-desktop-full go wrong get ros version running xubuntu,ros,ros
2198,flight controllers remote controls using protocol,start project sniffing data remote controls flight controllers rc copters stuff information flight controllers use protocol communicate remote controls vary based buy testing drones phantom real question want write something read data need buy different flight controller protocol used use protocol buy flight controller info get types flight controllers protocols spoken ground remote control flight controller receiver care protocol used middle man,quadcopter radio-control research,quadcopter control radio research
2199,dead reckoning obtaining position estimation accelerometer acceleration integration,good day reading papers position integration accelerometer readings consulted paper freescale achievable article regarding leaky integrators help preventing accumulation errors integration testing algorithm moving imu meter algorithm get right instant arrives meter left position integrated position goes turns velocity readings become negative certain period reaching meters anyone suggestions dealing error plots red position velocity imu accelerometer moved alternating positions meters meters stop 3-5 seconds moving next position actual data desired data output green desired position integration code // get acceleration axis float accx accelmaganglearray.accx float accy accelmaganglearray.accy float accz accelmaganglearray.accz accx -= dc_offsetx accy -= dc_offsety accz -= dc_offsetz //calculate current velocity m/s float leakrateacc velcurrx velcurrx*leakrateacc accx-prevaccx /2 deltatime2 velcurry velcurry*leakrateacc prevaccy accy-prevaccy /2 deltatime2 velcurrz prevaccz accz-prevaccz /2 deltatime2 prevaccx accx prevaccy accy prevaccz accz //discrimination window acceleration accx accx -0.12 accx accy accy -0.12 accy //count number times acceleration equal drive velocity acceleration //x-axis -- -- -- -- -- -- -- accx == //increment times accx counteraccx++ //reset counter counteraccx counteraccx //drive velocity velcurrx prevvelx counteraccx //y-axis -- -- -- -- -- -- -- accy == //increment times accy counteraccy++ //reset counter counteraccy counteraccy //drive velocity zero velcurry counteraccy //print acceleration velocity cout accx accx // endl cout accy accy // endl cout accz accz endl cout velcurrx velcurrx // endl cout velcurry velcurry // endl cout velcurrz velcurrz endl //calculate current position meters float poscurrx poscurrx*leakratevel prevvelx velcurrx-prevvelx /2 deltatime2 poscurry poscurry*leakratevel velcurry-prevvely /2 deltatime2 poscurrz poscurrz*0.99000 velcurrz-prevvelz /2 deltatime2 prevvelx velcurrx velcurry prevvelz velcurrz //print x position meters cout poscurrx poscurrx // endl cout poscurry poscurry // endl cout poscurrz poscurrz endl,quadcopter sensors localization integration dead-reckoning,quadcopter localization integration dead sensors reckoning
2200,step size numerical differentiation,get position information corresponding timestamp motion tracking system rigid body hz position sub-millimeter precision sure time stamp get floating point number seconds motion tracking software get velocity use difference samples divided samples \dot \mathbf x \dfrac \mathbf x k \mathbf x k-1 k -t k-1 result looks fine bit noisy times realized get much smoother results choose differentiation step larger e.g h=10 \dot \mathbf x \dfrac \mathbf x k \mathbf x k-h k -t k-h hand peaks velocity signal begin fade choose h large figure get smoother signal bigger step h someone hint general rule differentiation step size optimal respect smoothness vs. accuracy sample plot velocity component blue step size red step size,motion pose,motion pose
2201,mobile robot algorithm implementation error,working reproducing robotics paper simulating matlab order implement real robot afterwards robot model \dot x =v cos\theta \dot =v sin\theta \dot \theta =u idea algorithm avoid obstacles reach determines target algorithm uses cone vision measure obstacle properties information required apply system minimum distance robot obstacle obstacle modelled circle know radius r obstacle speed v_ obs angles \alpha_ form robot cone vision heading h robot target safe distance d_ safe robot obstacle defined robot reach target closer d_ safe obstacle extended angle \alpha_ \ge arccos\left \frac r r+d_ safe \right defined \le \alpha_ \le \pi following auxiliary angles calculated \beta_ =\alpha_ -\alpha_ \beta_ =\alpha_ +\alpha_ following vectors defined l_ v_ max -v cos \beta_ sin \beta_ l_ v_ max -v cos \beta_ sin \beta_ v_ max maximum robot speed v constant fulfills \|v_ obs \| \le v \le v_ max vectors represent boundaries cone vision vehicle given vectors l_ l_ angle \alpha l_1 l_2 angle l_ l_ measured counterclockwise direction \alpha \in -\pi \pi function f evasion maneuver starts time t_0 robot find index h h min|\alpha v_ t_0 +l_j t_0 v_r t_0 j= v_r robot velocity vector vectors v_ obs t_0 +l_j t_0 choose forms smallest angle robot velocity vector h determinded control law applied u =-u_ max f v_ +l_h v_r v =\|v_ obs +l_h \| \quad \quad sliding mode type control law steers robot velocity v_r switching surface equal vector v_ +l_h robot avoids obstacle surrounding robot avoiding obstacle follows control law u =0 v =v_ max \quad \quad hence rules switch laws r10 switching occurs whenthe distance obstacle equal constant c means t_0 =c distance becoming smaller time i.e r11 switching occurs vehicle pointing towards obstacle i.e \theta t_* =h t_* a_*=\frac r cos\alpha_0 -r result similar getting understand theory flaw implementation able solve opinion robot manages avoid obstacle certain point red circle robot turns wrong side making impossible condition h \theta achieved feel measuring angle alpha v_ +l_h v_ r debugging see certain point stops switching negative positive values become positive leading robot wrong side seems related problem angle circle tangent line,mobile-robot kinematics matlab geometry,mobile geometry kinematics robot matlab
2202,singularity incorrect implementation inverse kinematics,moment trying compute q configuration moves robot current state described transformation matrix rotation -0.539429 -0.00362229 -0.539445 -0.842019 position -0.0882761 -0.255069 rotatation -0.333487 -0.333487 -0.942755 position due drastic change z direction thought split start end small chunks creating data inbetween interpolating compute inverse kinematics small position problem output getting pretty large.. making suspect output wrong simulation using constrains rotation degrees.. think something goes wrong.. reason think jacobian using singularities ... assumed running singualarity issue.. setq -228.989836 -295.921218 -336.808799 setq -232.346755 -299.935844 -334.929518 setq -234.017882 -303.852583 -335.063821 setq -232.319554 -299.899932 -334.928688 setq -228.913831 -291.982659 -334.658147 setq -227.206436 -288.018036 -334.522738 setq -225.496018 -284.049424 -334.387237 setq -6.134091 -2538.260148 -1283.375216 -96.331289 -324.531125 setq -6.261661 -2577.946595 -1301.730132 -94.403263 -324.388990 setq -6.634286 -2697.165915 -1356.762411 -88.601053 -323.962029 setq -6.991781 -2816.625206 -1411.745985 -82.771641 -323.534239 setq -7.334148 -2936.324468 -1466.680853 -76.915029 -323.105620 setq -7.661386 -3056.263702 -1521.567017 -71.031215 -322.676171 setq -8.642914 -3457.794271 -1704.169136 -51.222052 -321.238686 setq -8.988457 -3619.153075 -1777.058457 -43.213761 -320.661112 setq -9.382564 -3821.451508 -1868.048346 -33.135395 -319.937071 setq -9.528439 -3902.557525 -1904.406419 -29.082892 -319.646810 setq -9.667591 -3983.770196 -1940.742846 -25.018300 -319.356179 setq -9.734645 -4024.416527 -1958.902942 -22.981471 -319.210726 setq -9.986053 -4187.268484 -2031.489209 -14.803929 -318.627992 setq -10.210564 -4350.547057 -2103.988889 -6.578030 -318.043783 setq -10.312734 -4432.346324 -2140.206259 -2.446947 -317.751125 setq -10.453381 -4555.245201 -2194.491727 -317.311448 setq -10.496902 -4596.264820 -2212.576060 -317.164705 setq -10.538741 -4637.311102 -2230.654980 -317.017869 setq -10.617377 -4719.483658 -2266.796587 -316.723922 setq -10.812941 -4966.641247 -2375.091527 -315.839868 setq -10.839651 -5007.927501 -2393.121742 -315.692203 setq -10.888029 -5090.579998 -2429.165939 -315.396596 setq function simulation numbers actual q values starting using jointed robot ur5 update using sphere compute desired transformation matrix.. idea want arm sphere point inward center std :vector transform3d pathplanning dx double dy double dz double r // radius set cm todo checked accurate cout create sphere double current_x this- device- basetframe this- toolframe this- state .p double current_y this- device- basetframe this- toolframe this- state .p double current_z this- device- basetframe this- toolframe this- state .p // formula x-x0 y-y0 z-z0 // x x x_0 rcos theta sin phi // y_0 rsin theta sin phi // z z z_0 rcos phi // angle range theta phi m_pi double obj_x current_x dx double obj_y current_y dy double obj_z current_z dz std :vector transform3d int count double azimuthal azimuthal m_pi azimuthal+=0.01 double polar polar m_pi-0.35 polar+=0.01 double sphere_x obj_x r*cos azimuthal *sin polar double sphere_y obj_y r*sin azimuthal *sin polar double sphere_z obj_z r*cos polar //string text to_string sphere_x to_string sphere_y to_string sphere_z //positions endl transform3d transformation_matrix transform obj_x obj_y obj_z sphere_x sphere_y sphere_z transformation_matrix.p current_x || transformation_matrix.p current_y || transformation_matrix.p current_z cout interpolate endl std :vector transform3d transformation_i invkin_largedisplacement transformation_matrix out.insert out.end transformation_i.begin transformation_i.end cout out.size endl cout returning interpolation sphere endl return transformation_i ok endl out.push_back transformation_matrix count == //todo ... ... occuring theta theta phi phi endl sphere_x sphere_y sphere_z endl count else count++ return function provides point use create rotation matrix using transform transform3d pathplanning :transform double obj_x double obj_y double obj_z double sphere_x double sphere_y double sphere_z // z-axis oriented towards object // rot consist direction vector x z describes oriented world space // looking simulation z-axis camera x describes orientation camera // vector direction purposes normalized ... // todo case -1 ... happening done undo cout transform endl cout obj_x sphere_x obj_y sphere_y obj_z sphere_z endl vector3d dir_z obj_x sphere_x obj_y sphere_y obj_z sphere_z //vector3d dir_z sphere_x-obj_x sphere_y sphere_z-obj_z dir_z normalize dir_z vector3d downplane -1.0 vector3d dir_x cross downplane dir_z dir_x normalize dir_x vector3d dir_y cross dir_z dir_x dir_y normalize dir_y rotation3d rot_out dir_x dir_y dir_z // x z vector3d pos_out sphere_x sphere_y sphere_z transform3d pos_out rot_out cout desired endl return transform computes rotation matrix math based post ben answer similar problem having.. update error rotation matrix due polar coordinate sin made plot displaying determinant jacobian compute inverse kinematics large displacement inverse kinematics iteration set robot new q_i use current continue computing reach end configuration seems alot goes singularity general low number.. update think singularities culprit here.. determinant q -46.6613 -18.9411 -4.53456 determinant -0.0150253 q -0.790356 -2.725 -1.66168 determinant -0.0368926 q -2.74134 -5.32446 determinant -0.0596228 q -14.9721 -12.9577 determinant -0.000910399 q -524.078 -316.499 -67.3459 determinant -0.0897656 q -37.4239 -34.0747 -16.5337 -3.95636 -7.31064 determinant -0.00719097 q -1377.14 -125.883 -10.4689 determinant q -10.1491 -15.0894 -4.41318 -2.07675 -3.48763 determinant -0.0430843 q -39.02 -24.5518 -14.0956 determinant -0.0137243 q -9.65443 -52.4964 compute new q set robot state perform inverse kinematics state.. q joint angles joints update interpolation done lineary dividing path start end specified amount data points plot shows tranformation matrices generated interpolation position part plotted red dots path position blue ball object want track green dots represents sphere.. point hits point top point plot shows rotation show much change makes sense based difference current desired rotations update invkin implementation largedisplacements std :vector q pathplanning :invkin_largedisplacement std :vector transform3d t_tool_base_desired_i device :ptr device_backup this- device //read device parameter workcell :ptr workcell_backup this- workcell //read workcell parameter state state_backup this- state std :vector q output unsigned int t_tool_base_desired_i.size ++i transform3d t_tool_base_current_i device_backup- basetframe this- toolframe state_backup //read current transformation matrix eigen :matrixxd jq device_backup- basejframe this- toolframe state_backup .e .cols this- device.get basejframe this- toolframe state_backup .e .rows jq this- device.get basejframe this- toolframe state_backup .e // get jacobian current_configuration //least square solver dq j q j q j q ⁻1 du dq a*du eigen :matrixxd //a jq.transpose jq*jq.transpose .inverse jq*jq.transpose .inverse *jq.transpose vector3d dif_p t_tool_base_desired_i .p -t_tool_base_current_i.p //difference position eigen :matrix3d dif t_tool_base_desired_i .r .e t_tool_base_current_i.r .e //differene rotation rotation3d dif_r dif //making rotation matrix difference rotation rpy dif_rot dif_r //rpy rotation matrix eigen :vectorxd du //creating du du dif_p du dif_p du dif_p du dif_rot du dif_rot du dif_rot eigen :vectorxd q q a*du // computing dq q q_current q_current this- device- getq this- state q dq q q q_new q_current+ dq // computing new q angles q_new store output vector device_backup- setq q_new state_backup //set robot calculated state. return output sure interpolation works plot shows inverse kinematics hand sure.. update chuck mentions answer good idea check core functionality shed light going wrong tried inv.kin function know work return result make doubt transformation function create accurate robot simulation shown above.. transform function shown function use compute desired provide inverse kinematics.. something setup update chuck came different approach problem dof position choose change track peform simple inverse kinematics given distance dx dy dz.. reason working good small differences ... code std :vector q pathplanning :invkin double dx double dy double dz kinematics :state state this- state transform3d t_tool_base_current this- device.get basetframe this- toolframe state cout current t_tool_base_current.p .e endl vector3d p_desired .e t_tool_base_current.p .e t_tool_base_current.p .e cout desired p_desired endl transform3d t_tool_base_desired p_desired t_tool_base_current.r eigen :matrixxd jq this- device.get basejframe this- toolframe state .e .cols this- device.get basejframe this- toolframe state .e .rows jq this- device.get basejframe this- toolframe state .e //least square solver dq j q j q j q ⁻1 du dq a*du eigen :matrixxd //a jq.transpose jq*jq.transpose .inverse jq*jq.transpose .inverse *jq.transpose vector3d dif_p t_tool_base_desired.p -t_tool_base_current.p cout difference dif_p endl eigen :vectorxd du du dif_p du dif_p du dif_p du du du eigen :vectorxd q q a*du q q_current q_current this- device- getq this- state q dq q q q_new q_current+ dq std :vector rw :math :q output collision q_new q_new cout endl cout q_new endl return output outputs current -0.000799058 -0.282 desired vector3d -0.000789058 -0.282 difference vector3d 1e-05 setq -1834.776226 setq state moves robot desires state.. something wrong implementation singularity.. moving much updates think solved mystery.. sphere function creates points reach robot.,robotic-arm inverse-kinematics,inverse kinematics arm robotic
2203,compute inverse kinematics given desired transformation matrix,moment trying implement inverse kinematics function function take desired transformation matrix current transformation matrix compute q states needed move robot arm current state end state written code simulation showing right path expect makes unsure implementation correct someone comment implementation spot error std :vector q pathplanning :invkin_largedisplacement std :vector transform3d t_tool_base_desired_i unsigned int t_tool_base_desired_i.size ++i transform3d t_tool_base_current_i device_backup- basetframe this- toolframe state_backup eigen :matrixxd jq device_backup- basejframe this- toolframe state_backup .e .cols this- device.get basejframe this- toolframe state_backup .e .rows jq this- device.get basejframe this- toolframe state_backup .e //least square solver dq j q j q j q ⁻1 du dq a*du eigen :matrixxd //a jq.transpose jq*jq.transpose .inverse jq*jq.transpose .inverse *jq.transpose vector3d dif_p t_tool_base_desired_i .p -t_tool_base_current_i.p // difference position current_i desired_i eigen :matrix3d dif t_tool_base_desired_i .r .e t_tool_base_current_i.r .e // difference rotation current_i desired_i rotation3d dif_r dif //construct rotation matrix rpy dif_rot dif_r // compute rpy rotation matrix //jq*dq du eigen :vectorxd du du dif_p du dif_p du dif_p du dif_rot du dif_rot du dif_rot eigen :vectorxd q q a*du // compute change dq q q_current q_current this- device- getq this- state // get current q q dq q q q_new q_current+ dq // compute new q adding dq output.push_back q_new // pushback output vector device_backup- setq q_new state_backup //set current state calculated q. return output example output -1.994910 -94.421754 -123.448429 -13.742988 -2048.863588 -51.340574 q -536.870516 -294.362593 -2145.963577 -31133.660814 -4742.343433 q -14.220020 -14.312226 -12.444921 -24.393637 q -55.646716 -20.945348 -2.656717 q -107.455064 -17.009190 -15.245588 -0.960273 -2.010570 q -3.010934 -4.882207 -1.369533 q -28.443465 -64.413952 -3.129896 -6.042187 q -73.706483 -20.381540 -5.306434 -1.204419 -4.035149 q -6.491445 -1.711469 q -72.265307 -94.886507 -4.425786 q -0.111033 -20.434697 q -88.627757 -77.267367 q -30.672145 -53.496243 -18.170871 -28.015005 q -36.677982 -15.908633 -0.500259 q -10664.813432 -75.904830 -18484.319327 q -75.899321 -38.576446 q -119.682661 -774.773093 -251.969174 -42.662580 q -28.013383 -14.627180 q -11519.051453 -364.916044 -1188.567128 -2582.813750 -462.784007 q -654.963987 -244.277958 -8618.970216 q -21.334047 -14.314134,robotic-arm inverse-kinematics c++,c inverse kinematics arm robotic
2204,perspective n point rpnp algorithm,need caculate pose camera using image artificial landmkark trying use perspective n point approach calculate using intrinsic camera matrix world coordinates landmark using points projection image algorithms solve pnp epnp rpnp etc trying use rpnp found implementation http //xuchi.weebly.com/rpnp.html used code problems obtain correct pose using p.corke robotics toolbox matlab create centracamera known pose calculating projection landmark camera rotation translation rpnp returns defined anyone used rpnp algorithm solve kind problems,computer-vision cameras 3d-reconstruction,computer cameras vision reconstruction
2205,pid parameters kp ki kd affect heading differential driving robot increased,question pid controller parameters kp ki kd affect output performance differential driving robot controlled pid controller heading information sensed compass sensor moving speed kept constant pid controller able control heading information follow given direction explain outcome differential driving robot performance parameters increased question come past paper show year worries question thinking quite time love simple terms stuff read internet make much sense goes heavy detail topic case take know proportional term kp based error let say double error mean doubling kp applying proportional force therefore implies increasing kp result robot heading wrong direction kp increased ensure robot goes right direction least tries reduce error time passes increase kp affect robot way heading robot stays path derivative term kd based rate change error increase kd implies rate change error increased time double error result double force increase double change robot heading take place robot heading doubled previous feedback result kd causes robot react faster error increases increase integral term ki means error increased time integral accounts sum error time small increase error increase integral robot head right direction equal amount time integral balance zero appreciate better answer great confident similar upcoming question finals,pid wheeled-robot differential-drive,drive differential pid wheeled robot
2206,wheel base distance create2,wheel base distance used create2 calculate angle seen code samples manual seems indicate mm,irobot-create roomba,create roomba irobot
2207,compensate brushless dc motor voltage drop,working quadcopter project based board system powered lipo battery motors behave battery voltage drops discharging way make motors behave minimum value say volts current system works fine range volts hover,quadcopter,quadcopter
2208,all-in-one gnss localization solution hardware+software,something all-in-one satellite based localization solution contain hardware software gnss localization robotics mean package contain imu fuse gps filter result provide software api query location/speed etc interested affordable solution professional hardware trying implement mobile robot realize smartphone-grade gps samsung j5 gives better preliminary results u-blox eval board neo-m8t integrated antenna ground plane wonder guess android fuse imu better readings worse antenna,localization software gps gnss hardware,hardware gps gnss software localization
2209,tcp communication pcduino,working robot controlled xbox controller connected windows computer commands sent pcduino tcp connection working sending string tell pcduino motors turn trying sending int using bit masks make decisions pcduino get pcduino receive int tested windows function sending command sokit sending correct values pcduino receiving number commands changing windows pcduino command sendbuff cmdstring n command sendbuff cmdstring n windows functions bool client :send char smsg int iresult send connectsocket smsg strlen smsg iresult == socket_error std sending message failed wsagetlasterror \n stop return false return true bool sendcommand cmdbuffer command cmdstring cmdbuffer.str client- send char cmdstring.c_str std disconnected server press enter exit std std :cin.get return false return true pcduino loop function void loop recbuff deviceflag //read socket /******************************************************************************/ read connfd sendbuff strlen sendbuff recbuff atoi sendbuff /******************************************************************************/ //set current device receive instructions checkauto recbuff currdevice //find current device command deviceflag checkdevice recbuff //if current device set device parse command deviceflag == currdevice parsehex recbuff usleep printf read call getting number think everything guys need anything add let know stumped ... know casting problem update everything setup loop functions pcduino run int listenfd connfd int n struct sockaddr_in serv_addr char sendbuff time_t ticks,communication c++ c,communication c
2210,dji wookong-m unstable take,built quadcopter using dji wookong-m. couple weeks able get everything work small thing throttle drone tends flip side tested motors know spinning right direction right motors tested grass concrete times flipped starts flip throttle know catching something balance think problem quadcopter tips different directions time tell appreciate lot project due weeks thanks advance,quadcopter,quadcopter
2211,intropection ros objects using python client library,see attributes methods ros objects use inspect module python python use dir type commands,ros python,python ros
2212,stability pid values update function quadrotor,reviewer last paper sent replied dangerous update pid next kind formula paper quadrotor control k_p k_p +e μ_1 pe μ_4 pe pe relationship desired angles real angles e difference angles μ_1 μ_4 membership functions fuzzy function think reviewer talking time increment update fuzzy usage specific formula stability formula tested please edit membership functions represented following graph e absolute difference angles difference negative,quadcopter control pid,quadcopter control pid
2213,angular momentum rimless wheel passive dynamic walking,tad mcgeer work passive dynamic walking mentions rimless wheel model used approximate bipedal locomotion understand angular momentum written follows h^-= \cos gyr ml^2\omega^- following questions angular momentum i*\omega m^2l\omega paper notation \alpha_0 \frac \pi r_ gyr approaches angular momentum impact h^- negative conservation goes,wheel walking-robot,wheel walking robot
2214,brushless motor rc car spin small resistance,bought rc car kit minutes stopped going throttle see motor trying spin grind get hot fast motor move disconnect big gear fast new get hot stop fingers slight touch know anything motors escs sure problem motor esc burn,brushless-motor esc radio-control,control radio brushless esc motor
2215,mechanical device present id tag card-reader,trying build test-automation robotic arm present id-tag rfid nfc card fob card reader suspect reader fails hundreds presentations due fast presentations b specific moment reader duty cycle tag needs move well-controlled manner present card pause mark remove card space repeat calling present/remove sequence mark-space ratio simplicity tests want perform involve varying frequency b mark-space ratio stress-test b boundary-test re-presentation guard times built reader debounce presentations guard times response need something move 5-10cm range repeat sorts timescales card needs move depends reader model different field ranges want get edge field avoid inconsistencies testing able programming professional simple electromechanical design build ex-professional hobbyist build robust need accurate regard timings second test done built version using raspberry pi gpio stepper motor aluminium arm screwed wheel works bit jerky slow arm amplify motion repeat test time-accurate enough timing tests design ideas servo slow solenoid limited range cause em motor uncontrollable require much mechanical work rotating drum stable control mark-space ratio electro-mechanical design expert wondering missing electrical device mechanical design,robotic-arm raspberry-pi stepper-motor industrial-robot automation,raspberry stepper robot automation industrial motor robotic pi arm
2216,generalized voronoi diagram,compute voronoi diagram map obstacles find pseudo-code example matlab voronoi function matlab works points case obstacles polygons convex non-convex see map attached image obstacles polygons found needed gvd generalized voronoi diagram anyone help code examples internet explaining compute gvd,mobile-robot motion-planning geometry,mobile motion planning geometry robot
2217,path planning vs. linear interpolation,moment trying convince need simple path planning algorithm interpolating current desired state moment working robot arm ur camera mounted tcp application trying create simple ball tracking application tracks movement ball keeping object sight meant needed form path planning algorithm plans path current state desired state path ball kept focus arm moves desired state began question bit simple straight line interpolation suffice .. actual sure form benefit choosing simple interpolation.. interpolation generate path desire choose pathplanner someone elaborate noted obstacle avoidance part task cause trouble straight line interpolating,robotic-arm,arm robotic
2218,path planning visual servoing,moment trying implement visual servoing application robot using ur5 tcp stereo camera mounted idea move end effector according object tracked path-planning algorithm system comply rules path creates collision free keep object tracked sight time path keeps object sight bit problem end effector rotate messing measurements taken tracking able maneuver static obstacles possible solution thought possible solution current state desired state defined different possible solution create straight line center current position desired position path computed keeps oriented object problems sure handle collision update use heuristic heuristic based path planning,robotic-arm motion-planning algorithm,motion planning arm algorithm robotic
2219,holonomic non-holonomic uav gliders vs quadcopters,good day like ask fixed wing aircraft glider thrust capability needs external forces air flow move constraining movement considered non-holonomic system considering fact move compared quadcopter holonomic found information difference holonomic nonholonomic system holonomic system systems constraints integrable positional constraints nonholonomic systems systems constraints nonintegrable positional constraints holonomic system robot move direction configuration space nonholonomic systems systems velocities magnitude direction derivatives position constraint,quadcopter control uav glider,quadcopter control glider uav
2220,evaluate minimum requirements processor camera visual slam robot,like build visual slam robot self-learning purpose get frustrated know processor camera used visual slam processor seen articles shows different systems used implementing slam algorithm implementing slam algorithm uses ultrasonic sensor visual sensor raspberry pi processing power mhz implementing odometry slam algorithms raspberry pi drive rover seen boston dynamics use pentium cpu pc104 stack qnx os big dog project bigdog november found project uses modern xilinx zynq-7020 system-on-chip device combines fpga resources dual arm cortex-a9 single chip synchronized visual-inertial sensor system synchronized visual-inertial sensor system fpga pre-processing accurate real-time slam reading clue end decisions use kinds processors stacks oses project mathematical way general practice evaluate minimum requirement system cheap power efficient possible algorithm run know processor system prepare visual slam robot simple answer cool recommend something read good start find clear information camera use visual slam robot idea evaluate minimum requirement camera found lot papers saying rgb-d camera google find available found xtion pro live asus global affordable stock practice choose suitable camera system visual slam sorry question feel choosing system camera looks thing requires lot experience background knowledge direct suggestions cool ideas/recommended resources learn general ways people make decisions general similar projects,slam,slam
2221,vector field histogram vfh certainty value,good day trying implement vector field histogram algorithm ask anyone knows certainty value pertains understanding point system cell increment certainty sensor read right thank,quadcopter motion-planning vfh,quadcopter motion planning vfh
2222,maximum distance robotic arm throwing,robotic arm using throw joint achieve maximum velocity rpm deg/s trying generate joint angles feeding see throw shown less meters feel combining motions various motors order get better throwing distance wanted know simple way determining maximum distance throw read papers appear complicated need accurate value estimate move different arm,robotic-arm,arm robotic
2223,cosine interpolation transformation matrices,possible perform cosine interpolation transformation matrices make sense translation part rotational part,robotic-arm stereo-vision,stereo arm vision robotic
2224,configuration space obstacle calculating collision,"need calculate configuration space obstacle planning path mobile robot idea divide obstacles robot triangles test triangle robot colliding triangle obstacles approach solve test triangles time need look edges triangle divide triangles vertex lie side vertex lie side line wrote code calculate line equation m*x b think correct problems line vertical means -inf matlab gives nan calculate equation sure handle see snippet code test edges robot triangle vertex_x p1 edge ,1 vertex_y p1 edge ,2 vertex_y vertex_y vertex_x vertex_x b -m*vertex_x vertex_y j vertex ... pto listavertices j m*pto b pto vertex lies edge ... cont1 cont1 elseif m*pto b pto vertex lies edge ... cont2 cont2 else vertex lie edge ... nothing end end vertex side others means collide vertex lie inside line vertex edge cont1 == cont2 == || cont1 == cont2 == flag_aux false collide ... end reset counters next edges ... cont1 cont2 end anyone help issue",mobile-robot motion-planning matlab,mobile motion planning robot matlab
2225,quadcopter starts max speed,new quadcopters started motors esc hz got found software cc3d openpilot librepilot flysky fs-t6 channel problem configure calibrate librepilot software motors run fine radio slow min max remove usb cable runs radio min go max speed calibrated esc cable receiver radio works process cable move cc3d runs shows behaviour calibrated motors using librepilot configuration software works fine connected usb cable,quadcopter calibration,quadcopter calibration
2226,convert toolframe coordinate world frame coordinates,sure explain looking way plot trajectory robot arm object seen toolframe frame plot position joint frame uses way use world frame reference plot position related world frame,kinematics matlab visualization,visualization kinematics matlab
2227,connect li-po battery esc,esc male xt60 connector battery male jst connectors want connect esc battery following connectors xt60 male xt60 female jst female connect esc battery connect esc battery know last option soldering want avoid cse guy,quadcopter battery esc connector,quadcopter battery esc connector
2228,madgwick sensor function issues,studying popular madgwick algorithm imu stumbled issues magnetic distortion compensation used following hx mx q0q0 _2q0my q3 _2q0mz q2 mx q1q1 _2q1 q2 _2q1 mz q3 mx q2q2 mx q3q3 hy _2q0mx q3 q0q0 _2q0mz q1 _2q1mx q2 q1q1 q2q2 _2q2 mz q3 q3q3 _2bx sqrt hx hx hy hy assigned _2bx _bx formula article _bx understanding correct raw gyro information used -q1 gx q2 gy q3 gz qdot2 q0 gx q2 gz q3 gy qdot3 q0 gy q1 gz q3 gx qdot4 q0 gz q1 gy q2 gx bias drift compensation done step assuming track bias formula bias value applied gx gx gyro_bias_x gy gy gyro_bias_y gz gz gyro_bias_z qdot1 -q1 gx q2 gy q3 gz qdot2 q0 gx q2 gz q3 gy qdot3 q0 gy q1 gz q3 gx qdot4 q0 gz q1 gy q2 gx understanding correct,sensors imu calibration,sensors imu calibration
2229,irobot create anyone used irobot create framework control create,trouble using emss interface connect irobot create use framework create made create sorry advance new robotics field http //emssframework.sourceforge.net/emssframework_main_page,irobot-create software roomba,create roomba irobot software
2230,issues running multiple instructions sequence,tried use microsoft robotics dev studio sample write code able robot go square path clicked problem try put drivedistancerequest rotatedegreesrequest loop execute last request problem arbiter.choice drivedistance activated drive operation starts anyone kind problem solve able fix problem thanks // -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- // file part microsoft robotics developer studio code samples // // copyright c microsoft corporation rights reserved // // file roboticstutorial4.cs revision // -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- using using microsoft.ccr.adapters.winforms using microsoft.dss.core using microsoft.dss.core.attributes using microsoft.dss.servicemodel.dssp using microsoft.dss.servicemodel.dsspservicebase using system using system.collections.generic using system.security.permissions using xml system.xml using drive microsoft.robotics.services.drive.proxy using w3c.soap using microsoft.robotics.services.roboticstutorial4.properties using microsoft.robotics.services.drive.proxy using system.componentmodel namespace microsoft.robotics.services.roboticstutorial4 displayname user robotics tutorial c drive-by-wire description tutorial demonstrates create service partners abstract base definitions hardware services dssservicedescription http //msdn.microsoft.com/library/bb483053.aspx contract contract.identifier public class roboticstutorial4 dsspservicebase servicestate private roboticstutorial4state _state new roboticstutorial4state serviceport /roboticstutorial4 private roboticstutorial4operations _mainport new roboticstutorial4operations partner drive contract drive.contract.identifier creationpolicy partnercreationpolicy.useexisting private drive.driveoperations _driveport new drive.driveoperations private drive.driveoperations _drivenotify new drive.driveoperations public roboticstutorial4 dsspservicecreationport creationport base creationport region codeclip 02-1 protected override void start base.start winformsserviceport.post new runform startform region codeclip 01-5 _driveport.subscribe _drivenotify activate arbiter.receive drive.update true _drivenotify notifydriveupdate endregion endregion region codeclip 02-2 private system.windows.forms.form startform roboticstutorial4form form new roboticstutorial4form _mainport invoke delegate partnertype partner findpartner drive uri uri new uri partner.service form.text string.format resources.culture resources.title uri.absolutepath return form endregion region codeclip 02-3 private void invoke system.windows.forms.methodinvoker mi new forminvoke mi endregion /// summary /// replace handler /// /summary servicehandler servicehandlerbehavior.exclusive public virtual ienumerator itask replacehandler replace replace _state replace.body replace.responseport.post defaultreplaceresponsetype.instance yield break servicehandler servicehandlerbehavior.concurrent //stop public virtual ienumerator itask stophandler stop stop drive.setdrivepowerrequest request new drive.setdrivepowerrequest request.leftwheelpower request.rightwheelpower yield return arbiter.choice _driveport.setdrivepower request delegate defaultupdateresponsetype response delegate fault fault logerror null unable stop fault //forward region codeclip 01-3 servicehandler servicehandlerbehavior.concurrent //forward public virtual ienumerator itask forwardhandler _state.motorenabled yield return enablemotor // movement speed // sample sets power // depending robotic hardware // wish change values drive.setdrivepowerrequest request new drive.setdrivepowerrequest request.leftwheelpower request.rightwheelpower yield return arbiter.choice _driveport.setdrivepower request delegate defaultupdateresponsetype response delegate fault fault logerror null unable drive forwards fault endregion servicehandler servicehandlerbehavior.concurrent // backup speed public virtual ienumerator itask backwardhandler _state.motorenabled yield return enablemotor drive.setdrivepowerrequest request new drive.setdrivepowerrequest request.leftwheelpower -0.6 request.rightwheelpower -0.6 yield return arbiter.choice _driveport.setdrivepower request delegate defaultupdateresponsetype response delegate fault fault logerror null unable drive backwards fault servicehandler servicehandlerbehavior.concurrent // left turn speed public virtual ienumerator itask turnlefthandler turnleft turnleft _state.motorenabled yield return enablemotor drive.setdrivepowerrequest request new drive.setdrivepowerrequest request.leftwheelpower -0.5 request.rightwheelpower yield return arbiter.choice _driveport.setdrivepower request delegate defaultupdateresponsetype response delegate fault fault logerror unable turn left fault servicehandler servicehandlerbehavior.concurrent // right turn speed public virtual ienumerator itask turnrighthandler turnright _state.motorenabled yield return enablemotor drive.setdrivepowerrequest request new drive.setdrivepowerrequest request.leftwheelpower request.rightwheelpower -0.5 yield return arbiter.choice _driveport.setdrivepower request delegate defaultupdateresponsetype response delegate fault fault logerror unable turn right fault region codeclip 01-4 private choice enablemotor drive.enabledriverequest request new drive.enabledriverequest request.enable true return arbiter.choice _driveport.enabledrive request delegate defaultupdateresponsetype response delegate fault fault logerror null unable enable motor fault endregion region codeclip 01-6 private void notifydriveupdate drive.update update roboticstutorial4state state new roboticstutorial4state state.motorenabled update.body.isenabled _mainport.post new replace state endregion // change code region test code creating path servicehandler servicehandlerbehavior.concurrent public virtual ienumerator itask pathhandler startpath path _state.motorenabled yield return enablemotor int i=1 i++ == drive.drivedistancerequest distance new drive.drivedistancerequest distance.power distance.distance yield return arbiter.choice _driveport.drivedistance distance delegate defaultupdateresponsetype response delegate fault fault logerror unable turn left fault == drive.rotatedegreesrequest rotate new drive.rotatedegreesrequest rotate.power rotate.degrees yield return arbiter.choice _driveport.rotatedegrees rotate delegate defaultupdateresponsetype response delegate fault fault logerror unable turn left fault endregion,mobile-robot control irobot-create mrds,control mrds mobile create robot irobot
2231,computing jacobian matrix -- chain rule,learning robot kinematics jacobian matrix trying understand compute jacobian matrix given kinematic chain robot arm understand theory jacobian matrix sure calculated practice let say dof robot arm joints links joints know compute transformation matrix joint applying kinematics know pose end effector configuration joint angles calculate written code stores transformation matrix multiplies series create transformation matrix joint end effector go computing jacobian matrix solution write transformation matrix hand multiply hand yield overall transformation matrix respect joint angles differentiate create jacobian matrix problem maths becomes complicated move kinematic chain end many terms result multiple matrix multiplications becomes tedious hand better way case calculating kinematics hand wrote code multiply individual matrices want jacobian matrix seems need compute derivative overall transformation matrix computed need hand standard solution something chain rule differentiation ... applies ... thank,robotic-arm kinematics inverse-kinematics jacobian manipulator,manipulator robotic inverse kinematics jacobian arm
2232,using accelerometer gyroscope sensor track speed position,problem working reverse engineering application zepp.com/baseball wearable device track users speed positional tracking object makes contact 3-d rendering using gyroscope get yaw pitch roll orientation device know use information calculate speed device collided object,imu accelerometer precise-positioning,precise positioning imu accelerometer
2233,estimating displacement drone dimensions,assuming drone dimension future position calculating future displacement real quad-rotor estimate displacement robot dimensions change orientation robot linear velocity angular velocity,quadcopter motion-planning uav,quadcopter motion planning uav
2234,vfh+ vector field histogram+ possible choose candidate sector set goal point,good day implementing vfh algorithm possible configure algorithm reactionary motion generated presence obstacle able generate obstacle map primary polar histogram binary polar histogram prioritize sector pass seen implementation labview possible implement simple vector field histogram path planning goal points,mobile-robot motion-planning mapping c++ vfh,c vfh mobile robot mapping motion planning
2235,solving inverse kinematics gradient descent,trying implement inverse kinematics solver robot arm solution standard iterative step compute jacobian pseudo-inverse jacobian compute euclidean distance end effector target compute next joint angles following gradient respect end effector distance achieves reasonable smooth path towards solution reading learned fact multiple solutions many degrees freedom gradient descent solution implemented reaches solution questions follows compute solutions write full forward kinematics equation set equal desired end effector position solve linear equations better way anything interest particular solution achieved using gradient descent method example guaranteed solution reached fastest robot cases gradient descent method fail example possible fall local minimum function convex hence single global minimum,robotic-arm kinematics inverse-kinematics jacobian,inverse kinematics arm jacobian robotic
2236,difference term pose estimation visual odometry,reading paper choi c trevor j b christensen h i. rgb-d edge detection edge-based registration c //intelligent robots systems iros ieee/rsj international conference ieee 1568-1575. refers visual features corners keypoints edges color used computer vision robotic perception applications object recognition pose estimation visual odometry slam assume pose estimation equal visual odometry text seems deny difference find much info google imho seems pose estimation estimating pose moving object camera static visual odometry estimating pose camera static scene precise,slam odometry pose,odometry slam pose
2237,tring run v dc geared motor using samsung li ion icr16850 batteries,trying run motor using batteries stated title motor requires v supplying motor motor driver motor keeps slowing battery voltage drops 5-6 v remove battery motor driver shows battery capable enough run motors need new,motor battery,battery motor
2238,change message interval ardupilot,using mavlink protocol c++ communicate ardupilotmega able read messages attitude example getting message rate like increase found message_interval order change use command mav_cmd_set_message_interval set question send command using mavlink c++ tried code work guess use command mentioned know mavlink_message_t command mavlink_message_interval_t interval interval.interval_us interval.message_id mavlink_msg_message_interval_encode command interval p_sensorsport- write_message command update tried code giving right system id component id mavlink_message_t command mavlink_command_long_t interval interval.param1 mavlink_msg_id_attitude interval.param2 interval.command mav_cmd_set_message_interval interval.target_system interval.target_component mavlink_msg_command_long_encode command interval p_sensorsport- write_message command missing something difference target_system target_component sysid compid tried values nothing worked able tell got command,quadcopter c++ ardupilot mavlink,quadcopter c ardupilot mavlink
2239,vfh vector field histogram+ obtaining primary polar histogram,good day note found code works placed minor explanation expounded trouble obtaining right directional output implementation noticed time put right gives left gives right steering direction problem presence left obstacle tends steer towards obstacle checked occupancy map generated using matlab found correct pinpoint wrong code debugging week hoping someone see error code implementation //1st create occupancy grid data -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- // cell size/grid resolution cells // grid dimension 5meters cells //field view robot degrees //or meters horizontal subject meters // robot width // focal length lens width sensor // easy remember field view x meters see x meters // assuming stills mode horizontal field view video mode // h x v sensor crop pixels //converting position angle -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- // a. https //decibel.ni.com/content/docs/doc-17771 // b using sensor kinect landmark andres felipe echeverri guevara //1 get angle // pixel image represents angle // angle ith pixel row field view degrees/number pixels row // field view pi camera degrees horizontal //2 convert polar cartesian // x z*cos angle // z*sin angle int float matdepthz int robotposx int robotposy int xcoor=0 //coordinates map int int xposrobot=0 //present cordinates robot int yposrobot=0 float fov // degrees field view degrees converted radians float //number pixels row int mapdimension // array grid int mapresolution //cm //limit max distance measured /* i=0 nop i++ arrdepthz.at arrdepthz.at */ i=0 nop i++ //process data/get coordinates mapping //get angle int angle float i-160.0f float fov/ float //if robot centered add arrdepthz arrdepthz.at endl endl fov fov endl nop nop endl angle fov/nop endl arrangle.push_back angle //get position x use floor output integer //get x -- -- -- -- xcoor arrdepthz.at mapresolution cos angle*pi/180.0f //angle radians cpp xcoor xcoor endl arrcoorx.push_back xcoor //get -- -- -- -- ycoor arrdepthz.at mapresolution sin angle*pi/180.0f //angle radians cpp ycoor ycoor endl arrcoory.push_back ycoor //populate occupancy map cartesian histogram grid xcoor ycoor //condition check obtained x coordinates dimesion grid arroccupancygrid xcoor ycoor // increment equate obstacle certainty value cell matdepthz xcoor ycoor arrdepthz.at arrcoorx.size arrcoorx.size endl arrcoory.size arrcoory.size endl i=0 arrcoorx.size i++ file43 arrcoorx.at endl i=0 arrcoory.size i++ file44 arrcoory.at endl i=0 arrdepthz.size i++ file45 arrdepthz.at endl // -- -- -- -- -- -- -- -- -- -- -- -- end create occupancy grid -- -- -- -- -- -- -- -- -- -- -- -- //2nd create polar histogram -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- //1 define angular resolution alpha // // set degrees resulting sectors ///// change //2 define number sectors k sector index sector array eg kth sector // k=int beta/alpha beta direction active cell //to vehicle center point vcp xposrobot yposrobot note int asserts k integer cout create polar histogram endl //put start code loop -- -- -- -- -- -- -- -- int j=0 int sectorresolution //degrees sectors alpha int sectortotal // //// change int k=0 //sector index kth int maxdistance //max distance limit cm //vector int arralpha //already initiated float matmagnitude //m j float matdirection //beta j float matangleenlarge //gamma j int mathconst //h j float robotradius //cm float robotsafedist //cm float robotsize4sector robotradius robotsafedist i=0 sectortotal i++ arralpha.push_back i*sectorresolution // -- -- -- -- -end initiating sectors -- -- -- -- -- //determine magnitude matmagnitude direction beta matdirection obstacle vector //modify j c j a-bd j j c j dmax-d j sir lounell gueta work ral ms //compute beta beta j arctan yi-yo xi-xo //enlarge robot compute enlargment angle gamma matangleenlarge int wew =0 int firstfillprimaryh //flag arrayprimaryh storage k=0 k sectortotal k++ i=0 mapdimension i++ j=0 j mapdimension j++ j j k k endl mapdimension mapdimension endl sectortotal sectortotal endl //compute magnitude direction beta enlargment angle gamma matmagnitude j arroccupancygrid j maxdistance-matdepthz j //m j //cout matmagnitude j arroccupancygrid j maxdistance-matdepthz j endl matdirection j float atan2f float i-yposrobot float j-xposrobot *180.0f/pi //beta j //cout matdirection j float atan2f float i-yposrobot float j-xposrobot *180.000/pi endl matdepthz j matdepthz j endl matdepthz j == //if matdepthz j == obstable path free enlargement angle matangleenlarge j //gamma j //cout matangleenlarge j endl //if matdepthz j obstacle compute enlargement angle matangleenlarge j asin robotsize4sector matdepthz j *180/pi //gamma j //cout matangleenlarge j asin robotsize4sector matdepthz j *180.0f/pi endl wew k*sectorresolution //k*alpha wew k*sectorresolution endl //check magnitude part sector matdirection j -matangleenlarge j wew wew matdirection j +matangleenlarge j mathconst j =1 //part sector part sector -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- endl mathconst j =1 mathconst j endl mathconst j =0 //not part sector part sector endl mathconst j =0 mathconst j endl //compute primary polar histogram hp k //cout firstfillprimaryh firstfillprimaryh endl firstfillprimaryh==0 //if fill sector matmagnitude j matmagnitude j endl mathconst j mathconst j endl float temp matmagnitude j *mathconst j //cout matmagnitude j *mathconst j temp endl arrprimaryh.push_back temp firstfillprimaryh=1 //trigger flag arrprimaryh kth arrprimaryh.at k endl //if sector filled arrprimaryh.at k arrprimaryh.at k matmagnitude j *mathconst j //cout arrprimaryh kth arrprimaryh.at k endl firstfillprimaryh=0 //reset flag,mobile-robot motion-planning vfh path-planning,vfh mobile robot motion planning path
2240,calculate uncertainty 6-dof pose graph-based slam,question related question estimating 6-dof poses x_ trajectory using graph-based slam approach estimation based 6-dof transformation measurements z_ ij uncertainty \sigma_ ij connect poses avoid singularities represent poses transforms vector consisting 3d-vector unit-quaternion x_ \left \begin matrix \\ q \end matrix \right optimization yields manifold increment vectors \delta \tilde x _i \left \begin matrix \\ log q \end matrix \right applied pose estimates optimization iteration x_i \leftarrow x_i \boxplus \delta \tilde x _i uncertainty gets involved hessian update optimization step \tilde h ii += \tilde ij ^t \sigma_ ij -1 \tilde ij \tilde ij \leftarrow a_ ij m_ \frac \partial e_ ij x \partial x_i \frac \partial x_i \boxplus \delta \tilde x _i \partial \delta x_i |_ \delta \tilde x _i e_ ij log \left x_ j \ominus x_ \ominus z_ ij \right error function measurement z_ ij estimate z ij x_j \ominus x_i \tilde ij matrix optimizing 6-dof \sigma_ ij matrix based imu measurements acceleration rotational velocity \omega build sensor noise matrix \sigma_ sensor \left \begin matrix \sigma_ ^2 \\ \sigma_ \omega ^2 \end matrix \right process model integrates acceleration rotational velocity obtain pose measurement model uncertainty sensor noise integration noise considered anything want calculate uncertainty \sigma_ ij j_ iterate \sigma_ ij t-1 j_ iterate ^t j_ process \sigma_ sensor j_ process ^t j_ iterate \frac \partial x_ \partial x_ t-1 j_ process \frac \partial x_ \partial \xi_ current measurement \xi \omega according formula \sigma_ ij matrix need matrix think include manifold projection details take look following publication algorithm g. grisetti r. kümmerle c. stachniss w. burgard “a tutorial graph-based slam ” ieee intelligent transportation systems maga- zine vol pp similar calculation uncertainty take look end section iii a. corominas murtra andreu josep m. mirats tur imu cable encoder data fusion in-pipe mobile robot localization technologies practical robot applications tepra ieee international conference ieee .. section iii a. iv a. ila viorela josep m. porta juan andrade-cetto information-based compact pose slam robotics ieee transactions 78-93,slam ekf jacobian,ekf slam jacobian
2241,graph-based slam optimization fails numeric error,implementing graph-based slam system works fine i.e converges assume constant covariance matrix \sigma_ ij constraints model \sigma_ ij i.e increasing entries progress time see question fails successful iteration i.e solving system applying pose increments \delta \tilde x ij poses x_ first time use cholesky based sparse solver implementation eigen fails numeric error course failure occur due implementation problem representing math computers e.g overflow double representation something similar anybody comment assumption please implementation makes use manifolds based g. grisetti r. kümmerle c. stachniss w. burgard “a tutorial graph-based slam ” ieee intelligent transportation systems maga- zine vol pp,slam,slam
2242,split tasks interrupts main loop bare metal controller,working robotics project services running sensor daq logic isr motor controller ethercat slave controller daq ethercat run idle logic runs interrupt logic calculations controls motor ethercat service kinda canbus runs daq idle loop run daq interrupt leaves less ethercat service run sure right way considering scary things read regarding data corruption using interrupts anyone nice ideas handle services running code zynq arm cortex written c++ example code /** get sensor data */ void supervisor :communication void // get sensors data dispatchcomm.getdata motorangle motorvelocity jointangle springangle tuningparameter /** run logic */ void supervisor :logic void dispatchlogic.calculate tuningparameter motorangle motorvelocity jointangle springangle dispatchlogic.getdata angle magnitude // dispatch values motor drive dispatchcomm.setmotordrivesetpoint angle magnitude dispatchcomm.writetopiggyback uint32_t tuningparameter motorangle motorvelocity,c++ interrupts,c interrupts
2243,find friction viscous force b nmsec dc motor,please guide find friction viscous force b nmsec dc motor particlar speed motor connected gear ration want find rpm motor load speed please guide,quadcopter wheeled-robot brushless-motor stepper-motor,quadcopter stepper robot motor brushless wheeled
2244,path planning quadtree decomposition cell decomposition,need solve path planning problem using cell decomposition method quadtree decomposition need matlab like know exmaple code make tests read qtdecomp matlab function anything useful addition need decompose cells path found previous function anyone knows program decomposition,mobile-robot matlab path-planning,mobile path planning robot matlab
2245,stop switching direction encoding readings,encoder square wave quadrature stop changing directions proper measurements words commanding direction low speed want change direction -50mm/s need command wait encoder read speed command reverse direction order get accurate possible encoder readings,irobot-create roomba,create roomba irobot
2246,suggestion correct battery pack,trying run geared dc motors no-load current max load current upto max runtime 3-4 hours motor takes 10-12 v operation need proper battery pack determine specs go,motor battery,battery motor
2247,x-y velocity pid controller,good day introduction working autonomous quadcopter project implemented cascaded pid controller consisting loops inner rate loop takes angular velocity gyroscope measurements outer stabilize/angle loop takes angle measurements complementary filter gyroscope accelerometer angles question like ask effective cascade lateral velocity x axis pid controller angle controller roll pitch control drift x-y plane outermost pid controller setpoint m/s measured velocities obtained integrating linear accelerations accelerometer controls pid controller responsible pitch velocity pid roll x velocity pid,quadcopter control pid raspberry-pi stability,quadcopter control pi pid stability raspberry
2248,starting dissertation project using computer controlled drone,final year computer science university dissertation includes controlling drone computer communication camera computer vision first step obtaining drone suits needs clue go needed drone able communicate computer movement stream video computer analysis go bought drone rasperry pi microcontroller based etc take consideration etc p.s project going based indoors need crazy range powerf,quadcopter control microcontroller computer-vision,quadcopter control microcontroller computer vision
2249,series elastic actuators accurate stable force control,day somebody telling robot lab mentioned series elastic actuators bit googling sure means unable simple explanation seems something link actuator load spring-like quality vague ... case interested advantages disadvantages series elastic actuators read advantages allows accurate stable force control appears counter-intuitive thought link actuator load springy lower ability accurate control force send load force stored dissipated spring less transferred load series elastic actuators accurate stable force control,robotic-arm actuator dynamics torque,actuator dynamics torque arm robotic
2250,looking hands-on experience different types leg hip designs walking robots,looking find human-like legs compare chicken legs four-leg systems terms cost performance speed strength accuracy interested things speed agility turning radius complexity cost design large person ride rider fatigue important -- compare terms achievable ride smoothness vibration quantitative benefits dof hip joints compared dof realize factors come actuators joint designs control systems interest moment basic leg designs compare edit looking someone used mechanisms first hand,kinematics walking-robot,walking kinematics robot
2251,need help implementing ekf based slam,started learning slam trying simulate robot moving set landmarks days known correspondences problem add motion noise covariance matrix prediction step robot starts behave add motion noise prediction step robot move trying figure happening days find anything wrong code attached link github files pertaining project folder named file contains code prediction correction steps ekf_slam file main loop calls functions github repository contains videos correspond robot motion noise robot motion noise video shows robot go please help figuring wrong code link github repository please click,slam ekf,ekf slam
2252,linearize non linear system,linearize following system using taylor series expansion \dot x v cos\theta \\ \dot v sin\theta \\ \dot \theta u \theta heading direction robot measured counter clockwise respect x axis v linear velocity robot u angular velocity robot,mobile-robot localization,mobile robot localization
2253,distance calculation robots obstacles,problem robots obstacles space robot communicate measurements measure angles distances obstacles environment identical robot see obstacles angle theta combined distance distance robots calculated placed circles radius measured distance landmark triangles workings provides possible positions robot red black circles correspond robot blue green robot using relative size angle measurements discount positions robot leaves possible positions robot shown filled hashed circles possible calculate side robot landmarks distance robot measurements angle distance assign id obstacle information transmitted robot robot know obstacle designated id,localization kinematics,kinematics localization
2254,get manufactured part cad file,working book learning robotics using python python programmers want learn robotics chapter shows use librecad design plates poles form chassis turtlebot-like robot instance base plate looks nothing chapter picture manufactured plates assembled chassis author acts something know cad drawings plates manufactured magical process book discusses gives things tolerances material supposed made etc. kinds things discussed http //www.omwcorp.com/how-to-design-machined-parts.html know nothing stuff terms go cad design specs getting actual part manufactured kinds companies use reasonable price expect process general go cad design manufactured item find local machine shop specializes robotics bring cad drawings work try build parts noob hope question http //blog.stackoverflow.com/2010/11/qa-is-hard-lets-go-shopping/,design software manufacturing chassis hardware,hardware manufacturing design chassis software
2255,computed torque model controller,following controller q_ des q_ act stand general principle controller thanks,control microcontroller torque,control microcontroller torque
2256,augmenting room magnetic field smartphone sensors,possible enhance redirect earth magnetic field room house small program makes smartphones hall-effect sensors detect direction pointing presume fridge magnet job ...,sensors hall-sensor,sensors sensor hall
2257,software use send oi commands create using windows laptop supplied create cable,read irobot create open interface oi says send serial commands create get described action suggestion software use send serial commands usb interface install ftdi drivers enable usb serial connection question serial software use communicate create tool verify supplied usb serial cable supplied create functioning create functioning reset create using spot dock buttons,irobot-create serial,create irobot serial
2258,much input current destroy motor driver,v rated using drive v dc gear motors using arduino bought new battery pack rated mah making total current input a. rated v min v max current rating given motors max current load a. sure using battery destroy motor driver datasheet,motor battery current,battery current motor
2259,algorithm using kinect depth image point cloud registration,know given intrinsics fx fy cx cy fx fy horizontal vertical focal length cx cy location principal point camera pinhole camera model assumed kinect depth camera range sensor depth pixel px= u v u v pixel coordinate depth value converted point p p= x z x= u-cx /fx*d y= v-cy /fy*d z=d depth image converted point cloud depth image represents unique point cloud slam systems e.g kinectfusion use point clouds icp based registration obtain camera pose time fuse new point cloud reconstructed model mentor told depth image converted point cloud 2d- mapping ambiguity disagree claims use depth image time i-1 registration derived point cloud （if obey mentor order reading papers found using gradient descent solve camera pose tx ty tz qw qx qy qz prisacariu v reid d. real-time segmentation tracking objects j international journal computer vision 335-354. uses rgb images known model pose estimation found paper e.g. kinectfusion rgb-d slam algorithms deals depth data plane image point cloud registration someone give hint papers opensource code depth image registration converting point clouds,localization slam kinect,kinect slam localization
2260,need help motors high load,need select motors wheeled robot planning build requirements robot able carry kg platform size cm x 35-40 cm speed mph planning use driven wheels increase enough parameters diameter wheels acceleration fixed please help calculate required torque rpm motors great provide equations post lessons related problem,motor design wheeled-robot torque,torque design wheeled motor robot
2261,compile arm compatible binary x86 precompiled library pc host run arm target,using library precompiled x86 pc x86_64 exist toolchain compile x86 library end generate executable armv7l ubuntu,arm linux,arm linux
2262,instantaneous velocity calculation accelerometer,trying derive velocity accelerometer mpu9250 sensor-tag board saw blogs talk noise exact estimation problems started seeing velocity derivation integration accelerometer data time yielding towards ramp presence mpu9250 velocity estimated need assistance sensor gps gyroscope please let know see velocity calculations converge limitation compute power kalman filter kind estimation techniques difficult implement please suggest right direction,sensors accelerometer,sensors accelerometer
2263,robot stop,working arduino based robot engages braking mechanism detecting anything front using ultrasonic sensor detect obstacles worked robot table i.e construction ran ground stops crashes robot programmed anything detected cm robot braking mechanism stops wheels testing robot stop robot running average thinking doppler effect rendered sensor useless tried little ir sensor lying range cm approx work wrong,arduino motor ultrasonic-sensors,sensors ultrasonic motor arduino
2264,control wmr wheeled mobile robot,implemented smc sliding mode controller x-y x-z plane want combine control wmr purpose trying use resultant vector simulation xy plane track resultant vector xz plane value x designed code tracking control resultant vector shown figure vector sum decomposed rectangular coordinates simulation shown figure going wrong tecniques apply control vehicle using sliding mode controller reduce time delay implemented right equations smc tracking controller equations simulation gives exact results.these equations work control vehicle dimensions x-z plane,wheeled-robot matlab simulation,matlab simulation wheeled robot
2265,go circle,mbot robot trying get go cylindral obstacle something know radius cylinder r robot distance cylinder wheel thickness cm distance middle wheel cm achieve path thing saw question says distance left right wheel robot inches left travel distance pi radius+6 right wheel travel distance pi radius-6 problem robot tell go tell turn degrees set motor speed 0-255 way put formula disatance time x speed assume set motor speed different value go circle radius x exit half circle shown picture,arduino wheeled-robot,robot wheeled arduino
2266,solving inverse kinematics non-linear least squares,want write inverse kinematics recommended use google ceres help according documentation ceres solver used non-linear least squares problems http //ceres-solver.org/nnls_tutorial.html minimises sum squared differences measured target values data confused relates inverse kinematics inverse kinematics example robot arm goal determine joint angles robot positioned order reach target end effector pose exists single equation determines end effector pose given set joint angles want determine parameters equation joint angles relate least-squares problem multiple measurements problem trying solve number measurements case using ceres non-linear least squares solver necessary thanks,robotic-arm inverse-kinematics,inverse kinematics arm robotic
2267,simple robot learn ros,beginner ros wanted know build simple robot learn ros following components available arduino uno simple wheeled robot chassis motors l293d motor driver ultrasonic sensors infrared sensors,arduino slam ros beginner ultrasonic-sensors,beginner arduino slam ultrasonic sensors ros
2268,continuous variation discontinuous function,differential equation connects velocity point fov camera velocities robot joints \dot s=j \dot q vector x coordinates point fov j interaction matrix q vector joint positions certain point whose velocity tracking point remains fov \dot defined change point online time instant point s_t time instant t+dt point s_ t+dt \dot defined create filter produce continuous variation \dot want perform occlusion avoidance order want compute minimum distance feature point target object occluding object discontinuous due fact occluding object appear fov nearer target measured,cameras visual-servoing filter,filter visual cameras servoing
2269,stabilising inverted pendulum,problem stabilising inverted pendulum cart clear cart needs move side pendulum leans given \theta much cart move theory determining distance speed cart trial error seen videos inverted pendulum clear distance speed determined,mobile-robot sensors accelerometer gyroscope,mobile sensors robot accelerometer gyroscope
2270,design robotics world,apologies right place asking wondering third party design firms contracted design industrial consumer robots something done house org take care process thanks,design,design
2271,sensor equation odometry kalman filter,like use extended kalman filter localization wheeled robot filter like sensor fusion encoder sensors imu gyro accelero sensors method find odometry data blend filter add input uk system xk f xk-1 uk like add data normal measurement data zk vector need measurement equations g xt nkleft t*n0 sqrt xv²+yv² tn0*b tauv n nkright tn0 sqrt xv²+yv² tn0*b *tauv n nkleft/nkright number odometry pulses sample period sample time n0 total pulses wheelspeed sensor r wheel radius xv speed x-direction yv speed y-direction tauv angular velocity n sensor noise test implementation get results expect think something wrong equations anyone know example odometry inserted sensor measurement system equation,kalman-filter odometry,filter odometry kalman
2272,use gyro encoders robot moving line,succeeded building collision-avoidance arduino robot dc motors works move line studying method implement make robot go using imu encoders feedback control much understand use encoders sure gyro use combination,mobile-robot arduino control gyroscope,mobile control robot gyroscope arduino
2273,realistic grasping simulator,looking physics simulator model robot hand picking object main requirement accuracy realism speed needs able model soft bodies rubber skin robotic finger tips needs dynamics engine object moved hand modelling effects slippage research done good candidates graspit http //graspit-simulator.github.io/ open-source designed grasping physics simulation general second mujoco http //www.mujoco.org/ general simulator commercial product adopted big names deepmind tried using bullet physics engine robot grasping simulation realised going strong bullet designed games sacrifices realism speed interested something realistic possible computation slow anyone suggestions proceed anybody experience graspit mujoco thanks,robotic-arm simulator simulation,simulation simulator arm robotic
2274,raspberry pi location set field gps,developing project involves raspberry pi remote control rover need know exact location raspberry pi rover set field let say logs corner square field goal right extend shape field number corners equipped kind wave technology allows triangulate position based signal intensity raspberry pi rover distance logs bigger ~100feet line sight guaranted question kind technology use infrared wifi bluetooth radio ultrasound etc better approach problem,wireless,wireless
2275,damping vs friction,using physics simulator simulate robot arm revolute joint arm parameters need specified damping friction torque applied joint damping friction seem reduce resultant force torque difference damping friction,robotic-arm dynamics,dynamics arm robotic
2276,build quadcopter need help deciding hardware connections,building objective need control drone wifi phone laptop using ground station software openpilot arduino cc3d openpilot flight controller raspberry pi wifi bluetooth built ... able understand go connect arduino openpilot cc3d flight controller raspberry pi directory cc3d flight controller ... need arduino connect r pi cc3d flight controller mock pwm signals,quadcopter arduino raspberry-pi,quadcopter pi raspberry arduino
2277,rotate vector value single axis using rotation quaternion,want rotate whole value vector axis using quaternion rotations reason want align x axis smartphone x axis vehicle order detect lateral longitudinal acceleration separated axis want detect straight acceleration car rotate whole acceleration value heading axis x-axis phone assuming straight forward motion achieve,sensors accelerometer rotation,sensors rotation accelerometer
2278,information imu gives drone,inertial measurement unit imu important sensor used aerial robotics typical imu contain accelerometer rate gyroscope following information robot get imu position orientation linear velocity angular velocity linear acceleration angular acceleration think gets orientation information imu last time took test said first true failed,imu,imu
2279,double/triple inverted pendulum cart,examples keeping double/triple inverted pendulum balanced using pid controller seen seem https //www.youtube.com/watch v=cyn-crnrb3e come pid controller controls cart servo holds pendulum second/third pendulum connected first pendulum pid controller controls pendulum servos tend slow reasons,motor mechanism servos,servos mechanism motor
2280,question sampling proposal distribution gmapping algorithm,trying reimplement gmapping algorithm based paper grisetti et al purposes like understand detail algorithm default parameter values people use understanding gmapping uses proposal distribution particle whose moments determined sampling scan-matching estimate questions many samples k standard gmapping implementation use estimate mean covariance proposal distribution samples x_k\ k=1 ^k drawn x_k \sim x_j|x_j \hat x \delta\ \hat x scan-matching estimate particle \delta determined parameter matter find values used paper implementation gmapping openslam.org pointers regarding practical significance parameters appreciated,slam particle-filter,filter slam particle
2281,simultaneous localization mapping slam software,took course better understanding drones design end course test question got like understand supposed select choices best describe slam possible answers estimates location features environment controls robot flight environment causes robot avoid obstacles environment cluttered environment estimates position orientation robot respect environment knew least watched drone things thought last answer linked said yes thought thing controlled flight ... failed ... simultaneous localization mapping slam software,slam,slam
2282,position control vs velocity control vs torque control,please somebody explain difference position control velocity control torque control thinking terms robot arm understand position control tries control position actuators error signal difference current position desired position velocity control trying control velocity actuator torque control trying control torque actuator understand thing want send robot arm certain position use position control order move actuator certain position need give velocity order give velocity need give torque error position velocity torque seems come error torque missing,control kinematics dynamics roboti-arm,control dynamics kinematics arm roboti
2283,load pre-built occupancy map gazebo,built occupancy map using gmapping package ros real want use map gazebo simulate robot environment seems gazebo support map built models external occupancy map way use occupancy map gazebo simulators easier obtain occupancy map real world building physical world simulator ...,mapping gazebo occupancygrid,gazebo mapping occupancygrid
2284,choice motor robotic arm,post hello hope learn lot guys trying build robotic arm carry object put different boxes placed different fixed locations found robotic arms trying find right motor job read on-line different motors sure pick boxes located fixed places motors move precise way according research servo motors ones low budget project college student sure motor choose lot servo motors found several servo motors on-line example analog feedback servo wondering best servo motor buy low cost project think spend 10-20 motor need motors rpi know pwm pin controls motor precision movement purchase pwm controller additional motors need run testing precise motor way calculate amount weight motor handle ideas information appreciated thank,robotic-arm raspberry-pi servomotor python,raspberry python servomotor robotic pi arm
2285,motor choice given size constraint load requirement,good day everyone undergraduate student working project involving high torque small-sized dc motors use designing person following trolley bag problem use small sized motors maintain usability efficiency carrying loaded luggages looking motors local stores rs components element sure choices right fit loss specifications look selecting particular motor application tried look motors used current products used application todays electric skate boards luck finding suppliers question like ask specifications calculations perform select motors given size constraints weight carrying requirments anyone suggestions common motors used application target maximum load capacity thank,mobile-robot motor gearing,mobile gearing robot motor
2286,rostock delta robot printer degrees freedom dof,degrees freedom dof rostock delta robot printer delta mechanism consists prismatic joints link delta mechanism referring https //www.youtube.com/watch v=ays6jasd_ww thanks advance help,kinematics inverse-kinematics actuator manipulator 3d-printing,actuator printing inverse kinematics manipulator
2287,tracked robots dimensioning,designing tank tracked like know calculate minimum height difference sprocket wheel boogie wheel maximum height obstacle cm,design mechanism tracks,tracks design mechanism
2288,make robot,instance hook electric pump communicate motherboard let say buy electric pump hook sort metal structure pump turned moves metal structure hook pump motherboard program,control motor robotic-arm microcontroller machine-learning,control learning microcontroller machine motor robotic arm
2289,task space joint motion space conversion,moment trying read understand paper task constrained motion planning robot joint space seem hard time understanding math paper describes perform task constrained motion planning cases frame constrained specific task problem paper tackles sampling joint space randomized planners produce samples lie outside constraint manifold method proposed methods use specified motion constrain vector formulate distance metric task space project samples tolerance distance constrain given seem confused simple terms define paper examples task space coordinate defined information compute \delta x t_e^t q_s transformation matrix end effector respect task frame get end effector end effector respect task frame paper write expression relates task space joint space motion using jacobian seem miss explaining opinion e q_s j q_s e q_s j^t q_s said paper given configuration instantaneous velocities linear relationship e q_s need instaneous definition instantaneous component differ information given jacobian understand mapping ..,robotic-arm motion-planning jacobian,motion planning arm jacobian robotic
2290,send quad copter control signals arduino raspberry pi receiver open pilot cc3d,open pilot cc3d attached accept signals rc transmitter configuration gcs .. objective send control signals yaw/throttle/roll/pitch r pi arduino best transmit signals using simple radio transmitter mhz tx want use usb based game controller connected raspberry pi transmit signals radio receiver ... feasible need scrapped ...,quadcopter arduino raspberry-pi radio-control,quadcopter control raspberry arduino radio pi
2291,locking yaw direction laser pointer,laser pointer handle grip trying keep laser pointer yaw direction rotate laser pointer stepper motor handle good way maintaining yaw direction turn shaft according accelerometer/gyro yaw readings control theory pid needed stepper makes steps/rev gives deg handle turned say deg turn steps reverse jerky pid needed thought appreciated,sensors stability,stability sensors
2292,arduino raspberry pi,want make object tracking quadcopter project using arduino mega flight controller thinking using additional offboard microcontroller/board getting data camera send appropriate command onboard arduino hoping someone provide clarification advantages/disadvantages object tracking choice thanks,quadcopter arduino raspberry-pi,quadcopter pi raspberry arduino
2293,charge volt lipo akku,found modules charge volt lipo akku volt volt power supply handle micro-usb connector robotplatform,arduino power lithium-polymer,polymer lithium power arduino
2294,storing map,trying build map using cameras found coordinates objects best way store data.i like display map range 5-6 meters 500-600 cms accuracy managed cm used opencv python laptop.i like shift raspberry pi pi perform main issue store map,cameras mapping 3d-reconstruction opencv,opencv cameras mapping reconstruction
2295,hubsan x4 drone camera recording black,unsure correct community ask question vs stackexchange electronics aviation example purchased hubsan x4 hd video drone amazon second hubsan drone familiar using recording feature recording recordings correct length correct audio image black tried formatting micro sd using different micro sds reading forums nothing seems trick mine defective someone issue able solve thanks,quadcopter cameras,quadcopter cameras
2296,ultrasonic sensor column,trying measure height water column column dia mounted sensor column measure accuracy sensor filled column known value got average sensor reading b a+b give height sensor base column repeating different values got different values a+b see attached chart question sensor expected error order setup confining sensor column producing errors ideas get water column height please note actual test water oscillating .i thinking making capacitive sensor using aluminium foil water work dielectric level water determine capacitance p.s open tests column get distance fixed object accurate help appreciated arduino code include newping.h define trigger_pin // arduino pin tied trigger pin ultrasonic sensor define echo_pin // arduino pin tied echo pin ultrasonic sensor define max_distance // maximum distance want ping centimeters maximum sensor distance rated 400-500cm double db_roundtrip_cm newping sonar trigger_pin echo_pin max_distance // newping setup pins maximum distance void setup serial.begin // open serial monitor baud see ping results. void loop delay unsigned int sonar.ping double db_roundtrip_cm serial.println,arduino ultrasonic-sensors,sensors ultrasonic arduino
2297,visualizing raw accelerometer gyro data,arduino wired mpu6050 board arduino collects accelerometer gyroscope data mpu6050 calculates angle velocity plotting vector components x z data allow reason motion sensor robot possible easy sanity checks sensor oriented expected gravity working difficult look x z plot accelerometer log data imagine robot instance wondering sort tool python library visualise accelerometer gyro imu data looking something this- https //youtu.be/6ijarke8vku,arduino accelerometer gyroscope visualization,visualization gyroscope accelerometer arduino
2298,slam odometry motion model,making project wheeled differential robot make visual slam using stereo rig encoders measure de displacement steering angle robot want use odometry motion model fastslam algorithm use odometry motion model need calculate values needs odometry reading incremental encoders u_t= \bar x t-1 \bar x_t \bar x t-1 \bar x \bar \bar \theta \bar x _t= \bar x \bar \bar \theta previous current pose extracted odometry vehicle question obtain values encoders guess case need obtain equations geometric model differential robot d_l=\frac \cdot r_l n_c \cdot n_l d_r=\frac \cdot r_r n_c \cdot d_t=\frac d_l+d_r \delta\theta=\frac d_l-d_r l d_l advance left wheel d_r right wheel r_l lecture left encoder r_r lecture right encoder n_c total number pulses encoder type total distance achieved robot \theta angle steered l distance wheels using equations possible obtain pose time step \bar x =\bar x t-1 +d\cos \theta_ t-1 \bar =\bar t-1 +d\sin \theta_ t-1 \bar \theta =\bar \theta t-1 +\delta\theta last values need inject modometry motion model add gaussian noise way computing pose odometry differential 4-wheel robot,mobile-robot slam odometry movement,mobile odometry slam robot movement
2299,decide torque motor gearbox ratio robotic arm,decide torque motor gearbox ratio say dof robotic arm kg payload capacity instance concerned inertial mismatch calculate factors consider,motor robotic-arm torque manipulator,manipulator torque arm motor robotic
2300,create model temperature control,heated compartment object heated independent heater want control temperatures chamber object achieve simple pid pi controllers chamber object like try thoughtful approach temperature sensors pwm outputs heaters identify model object want control,control pid automation,control pid automation
2301,kind torque needed small 5-6 axis robotic arm,new robotics looking make 5-6 axis robotic arm stepper motors dont know much part described detail current plan sure much spending joints general plan project make arm extended 40-50 max cm consisted light weight aluminum hoping weigh couple pounds done current list actuators joints bottom top joint cant link rep called amazon cnc stepper motor joints joints real questions overkill enough trying make need able pick lot weight kilos doubt picking anything wanted see sufficient project ... know best place ask need help new want throw money need thanks advanced,robotic-arm stepper-motor actuator,actuator stepper arm motor robotic
2302,pid position velocity goal,trying design control system robot tracks moving object want robot match position velocity state object want robot arrive position want arrive position velocity object object velocity position data provided sure traditional pid controller velocity controls position based error position state goal result tracking lagging pid want looking something trajectory controls,pid,pid
2303,disable mavlink heartbeat using telemetry,using apm connected odroid usb telemetry port uart usb trying get mavlink messages need keep sending heartbeat message switch usb connection telemetry get mavlink messages sending heartbeat messages apm want able using telemetry port place firmware arducopter code change parameter using baud-rate tried usb cable connected,quadcopter ardupilot mavlink,quadcopter ardupilot mavlink
2304,detect physical touch/hit,making target outdoor robot competition target detect robot got touched got hit target get hit degree searching perfect sensor detect hit get false positive wind option 1- ultrasonic sensor bad coverage 2- tilt sensor bad fp rate 3- wooden conductive like know someone ideas affordable less dollar target o.k edit target static waiting robot touch edit specs 1- target dimension meter height meter width depth 2- trigger target robot centimeter point target surface 3-to trigger target robot needs get close centimeter press newton force robot throw object satisfy previous condition 4-detection intentional touch 5-wooden conductive trigger human conductive option throw object 6- target placed outdoor sensor need wind-resistance extreme condition- 20-25 km/h 7- prefer sensor detect touch proximity make solution cheap reliable factor amount sensors estimate thanks guy,arduino sensors force-sensor,sensor sensors force arduino
2305,best way plug stepper motors arduino uno board,developing axis robotic arm stepper motors getting ordering parts plan using easydriver shields drive motors planning using basic arduino uno board go questions alternative buying ton easy drivers connecting single board setup look stepper motors useful picture found shows know plug unsure plug,stepper-motor,stepper motor
2306,irobot create2 granularity drive control,irobot create2 planning implement control algorithm playing different drive commands noticed changing desired velocity values marginally seem anything drive pwm command ranges -255 seems internal granularity bigger video create seems change driving direction able reproduce described behavior anyone suggestions,control motor irobot-create,control create irobot motor
2307,ode determine contact points gazebo,looking contact points atlas drcsim package foot contact points vertex rectangle know points determined tried looking ode code c++ strong suit difficulty figuring going understand ode compares geometries possible compare points compare select points trying understand basis particular points selected contacts set way additional points heel add thanks,gazebo,gazebo
2308,response request_data_stream,trying get mavlink messages apm telemetry connected ordoid u3 usb port able read messages send request_data_stream message sends want able get needing send request ways solve,quadcopter communication ardupilot mavlink,quadcopter communication ardupilot mavlink
2309,bldc motors erratic behavior arduino program,"making quadcopter flight controller using arduino mega sample code wrote order test esc timers motors byte channelcount_1 channelcount_2 channelcount_3 channelcount_4 int receiverinput_channel_1 receiverinput_channel_2 receiverinput_channel_3 receiverinput_channel_4 start unsigned long channel_timer_1 channel_timer_2 channel_timer_3 channel_timer_4 current_time esc_looptimer unsigned long zero_timer timer_1 timer_2 timer_3 timer_4 void setup // put setup code run |= b11110000 //setting digital pins output ddrb |= //setting led pin output //enabling pin change interrupts pcicr |= pcie0 pcmsk0 |= pcint0 //channel pin pcmsk0 |= pcint1 //channel pin pcmsk0 |= pcint2 //channel pin pcmsk0 |= pcint3 //channel pin //wait till connected receiverinput_channel_3 || receiverinput_channel_3 || receiverinput_channel_4 start++ portc |= b11110000 delaymicroseconds // pulse esc portc b00001111 delay //wait ms next loop start == // loops digitalwrite digitalread //change led status start //loop start low //turn led zero_timer micros void loop // put main code run zero_timer micros zero_timer micros portc |= b11110000 channel_timer_1 receiverinput_channel_3 zero_timer //time calculation pin channel_timer_2 receiverinput_channel_3 zero_timer //time calculation pin channel_timer_3 receiverinput_channel_3 zero_timer //time calculation pin channel_timer_4 receiverinput_channel_3 zero_timer //time calculation pin portc //execute till pins set low esc_looptimer micros esc_looptimer channel_timer_1 portc b11101111 //when delay time expires set low esc_looptimer channel_timer_2 portc b11011111 //when delay time expires set low esc_looptimer channel_timer_3 portc b10111111 //when delay time expires set low esc_looptimer channel_timer_4 portc b01111111 //when delay time expires set low //interrupt routine pci0 receiver isr pcint0_vect current_time micros //channel pinb b00001000 channelcount_1 == channelcount_1 channel_timer_1 current_time channelcount_1 == channelcount_1 receiverinput_channel_1 current_time channel_timer_1 //channel pinb b00000100 channelcount_2 == channelcount_2 channel_timer_2 current_time channelcount_2 == channelcount_2 receiverinput_channel_2 current_time channel_timer_2 //channel pinb b00000010 channelcount_3 == pinb b00000010 channelcount_3 channel_timer_3 current_time channelcount_3 == channelcount_3 receiverinput_channel_3 current_time channel_timer_3 //channel pinb b00000001 channelcount_4 == channelcount_4 channel_timer_4 current_time channelcount_4 == channelcount_4 receiverinput_channel_4 current_time channel_timer_4 issue bldc motors using work connected arduino stop change direction rotation throttle input tested connecting transmitter work fine perfect rotation speed someone please help tell going wrong edit realize posting entire arduino code overkill trying solve problem days june,16 hope someone point improvements/corrections code",quadcopter arduino brushless-motor esc,quadcopter brushless esc motor arduino
2310,icreate arduino getting going,new irobot create know thing arduino assume much case stumped sure something simple obvious people confirmed wiring create arduino correct code looks similar many examples seen forum get create anything sure wrong starting wonder robot receiving commands let anything anything wrong code anybody suggest way verify robot receiving data beep provide return messages thank updated code notes include softwareserial.h include spi.h int baudpin int int ledpin int rxpin int txpin unsigned // minutes unsigned long thistimer unsigned softwareserial roomba rxpin txpin void setup pinmode baudpin output pinmode ledpin output pinmode rxpin input pinmode txpin output tired communicating baud rates // trying baud set =0 loop // need sent roomba.begin serial.begin delay // hooked led series baudpin turn // low giving kind visual confirmation // pulse sent see additional note loop i++ digitalwrite baudpin high delay digitalwrite baudpin low delay digitalwrite baudpin high // know right way send data robot // fiddling trying figure separate // problem regarding tx/rx lines putting // get baud issue straightened /* int sentbytes roomba.write serial.print sentbytes serial.print \n */ void loop thistimer millis // led hooked series baudpin blinks // low indicating pulse sent // seems wake robot asleep // robot awake pulse sent affect // robot fall minute thistimer prevtimer baudtimer prevtimer thistimer serial.print sending pulse ... \n digitalwrite baudpin low delay digitalwrite baudpin high /* i++ serial.print prevtimer serial.print -- serial.print thistimer serial.print -- serial.print serial.print \n delay */,arduino irobot-create,create irobot arduino
2311,getting i2c sensor output ardupilot arduino,trying get airspeed arduplane erle brain ardupilot i2c port send arduino discovered exists i2c_driver.cpp use send data using functions arduplane.cpp lost implement sending part use functions functions write accept arguments address length data know send data binary help appreciated thanks,arduino ardupilot i2c,i2c ardupilot arduino
2312,prerequisites learning ros,helpful robotics learn linux kernel development device driver development linux start learning ros know c java brief want know prerequisites essential understand ros better,ros linux,ros linux
2313,covering ultrasonic sensor,using basic trig/echo ultrasonic sensor arduino uno get accurate readings cover sensor point receive large numbers program int trigpin int echopin float pingtime float targetdistance const float speedofsound // mph void setup serial.begin pinmode trigpin output pinmode echopin input void loop digitalwrite trigpin low delaymicroseconds digitalwrite trigpin high delaymicroseconds digitalwrite trigpin low delaymicroseconds pingtime pulsein echopin high pingtime /= // microseconds seconds pingtime /= // hours targetdistance speedofsound pingtime // miles /= // target averaging distance targetdistance *= // miles inches serial.print distance serial.print targetdistance serial.println delay example output moved hand cover sensor distance // hand sensor distance distance distance distance distance distance distance distance distance distance distance // hand pressed sensor distance distance distance distance distance edit changed amounts inches milimeters get precise reading held sensor ~100mm granite counter-top lowered tabletop covered front sensor distance // tabletop distance distance distance distance distance distance distance distance distance distance distance distance distance distance distance // sensor continues table values start increase decrease distance distance distance distance distance // sensor flush tabletop distance distance distance distance distance distance distance distance distance // extreme high low values sensor place tabletop distance distance distance distance distance,arduino ultrasonic-sensors,sensors ultrasonic arduino
2314,switch activated microcontroller,working project using voltage higher microcontrollers handle looking kind switch connect power source electromagnet controlled microcontroller thought using potentiometer control speed high voltage dc motors microcontroller please tell good idea thanks time zakary,arduino microcontroller,microcontroller arduino
2315,proper naming pid regulators,wondering special naming regulators outputs unit inputs ie velocity m/s input velocity output m/s outputs unit different inputs ie position input velocity output /m/s appreciate help,pid,pid
2316,create2 incremental encoder rollover method,create2 incremental encoder rollover want write code prepared happen test encoder rolls rollover -32768 count start count odd thing big deal reset create2 value,irobot-create roomba,create roomba irobot
2317,starting arduino vs raspberry pi drone,dissertation project drone look object closed space need camera sensors avoid collision pc communication stream video receive directions pc control drone give directions etc wondering best platform build considering requirements idea going microcontroller world know shields suitable needs,quadcopter arduino raspberry-pi,quadcopter pi raspberry arduino
2318,using quaternions feed pid stabilizing controller avoid gimbal lock,trying control f450 dji quadcopter using pid controller imu getting quaternions convert euler angles causing gimbal lock issue way use quaternions generate control commands converting euler angle conversation discusses similar issue mentioning clear answer problem errors trying drive double erroralpha rollmaster rollslave double errortheta pitchmaster pitchslave double errorpsi yawmaster yawslave master generates desired rotation slave imu update pieces code getting current reference quaternions bot master slave rotation_vector /** master current quaternion */ double x measurements.get double measurements.get double z measurements.get double w measurements.get /** slave current quaternion */ double xs measurements.get double ys measurements.get double zs measurements.get double ws measurements.get /** master reference quaternion */ double x0 measurements.get double y0 measurements.get double z0 measurements.get double w0 measurements.get /** slave reference quaternion code initialized save current quaternion slave slave reference orientation orientation slave henceforth computed relative initial orientation */ initialized x0s xs y0s ys z0s zs w0s ws initialized true want know orientation current quaternion relative reference quaternion master slave /** compute orientation current quaternion relative reference quaternion relative quaternion given quaternion product q0 conj q w0 x0*i y0*j z0*k w x*i y*j z*k pre see http //gamedev.stackexchange.com/questions/68162/how-can-obtain-the-relative-orientation-between-two-quaternions http //www.mathworks.com/help/aerotbx/ug/quatmultiply.html /pre */ // master double wr w w0 x x0 y0 z z0 double xr w x0 x w0 z0 z y0 double yr w y0 x z0 w0 z x0 double zr w z0 x y0 x0 z w0 // slave double wrs ws w0s xs x0s ys y0s zs z0s double xrs ws x0s xs w0s ys z0s zs y0s double yrs ws y0s xs z0s ys w0s zs x0s double zrs ws z0s xs y0s ys x0s zs w0s calculate euler angles /** compute roll pitch adopting tait–bryan angles z-y'-x sequence pre see https //en.wikipedia.org/wiki/rotation_formalisms_in_three_dimensions quaternion_.e2.86.92_euler_angles_.28z-y.e2.80.99-x.e2.80.b3_intrinsic.29 http //nghiaho.com/ page_id=846 /pre */ double rollmaster math.atan2 wr xr yr zr xr xr yr yr double pitchmaster math.asin wr yr zr xr double yawmaster math.atan2 wr zr xr yr yr yr zr zr thing slave beginning reference quaternion equal current quaternion slave master relative roll pitch yaw zeros,quadcopter pid stability,quadcopter stability pid
2319,create reading sensor values,trying solve create sensor reading problem came nbckly posts part part believe looking copied code original post project updated code second post best interpret ... something going according plan example printing angle serial monitor getting value nbckly anybody please check code tell appreciate thank much int baudpin int data bool flag int int ledpin int rxpin signed char sensordata int txpin unsigned unsigned unsigned void drive signed short left signed short right serial.write serial.write serial.write serial.write left serial.write left void updatesensors serial.write serial.write serial.write // left encoder serial.write // right encoder delay serial.available sensordata i++ serial.read int leftencoder int sensordata int sensordata int rightencoder int sensordata int sensordata int angle rightencoder leftencoder serial.print \nangle serial.print angle serial.print \n void setup pinmode baudpin output pinmode ledpin output pinmode rxpin input pinmode txpin output delay serial.begin digitalwrite baudpin low delay digitalwrite baudpin high delay serial.write serial.write updatesensors drive -50 void loop thistimer millis thistimer prevtimer baudtimer prevtimer thistimer digitalwrite baudpin low delay digitalwrite baudpin high serial.print pulse sent ... \n updatesensors asking get angle rotation degrees robot moving circle angle incrementing robot moving output getting serial monitor shows line looks garble assume supposed bytes sent create followed angle expecting see increasing angle value ...,arduino sensors irobot-create,sensors create irobot arduino
2320,key components robot controller servo reducer someone give official explanation,googled lot able find official definitions parts explanations servo controller good trying look official ideas thanks snakeninny,microcontroller servos,microcontroller servos
2321,right way motor mixing pid outputs quadcopter,motor mixing formulas written flight controller arduino-mega wondering right use roll-pitch-yaw esc signals esc1 throttle pid_output_pitch pid_output_roll pid_output_yaw esc2 throttle pid_output_pitch pid_output_roll pid_output_yaw esc3 throttle pid_output_pitch pid_output_roll pid_output_yaw esc4 throttle pid_output_pitch pid_output_roll pid_output_yaw,quadcopter arduino pid esc,quadcopter esc pid arduino
2322,triangulation calibrated stereo rig,using stereo rig slam calibrated using matlab calibration tool need compute coordinates landmark using observation model obtained triangulation images rectified equations obtained triangulation ones presented blue box slam coordinates need use z_p x_p parameters needed compute values f disparity x_l x_r calibration intrinsics matrices k_l k_r obtained common intrinsic matrix stereo rig calculated k k_l +k_r get parameters needed triangulation common matrix focal length supplied manufacturer logitech c170 baseline calibration mm compute disparity obtaining surf points using ransac discard outliers get x coordinates rectified images problem values obtain correct values z_p x_p sure wrong step anyone help correct steps triangulation rectified stereo images edit stereo rig looks figure attach compare coordinates system used link easy see x_r corresponds z_p link y_r corresponds x_p equations calculate distance using triangulation coordinate system figure x_r=\frac fb x_l-x_r y_r \frac x_l-p_x b x_l-x_r -\frac b f focal length b baseline p_x x coordinate central point x_l-x_r disparity x_r y_r coordinate system situated cameras meaning \frac b displacement equations calibration obtain cameras calibration using stereo camera calibrator toolbox chessboard pattern calibration made tests using matlab functions triangulate reconstructscene know parameteres calculated distances obtained using functions use stereoparams object created calibrator works obtain distances similar actual ones suposse calibration works problem explained try calculate distances using equations x_r y_r sure obtain common matrix k stereo rig calibrator gives intrinsic matrix camera matrices value baseline given calibration make sense made measurement ruler gives mm f value assume pixels calibration gives f_x f_y value sure use intrinsic matrices obtain left \begin pmatrix -0.7752 \end pmatrix \begin pmatrix pmatrix parameters k \begin pmatrix f_x p_x\\0 f_y p_y\\0 pmatrix,mobile-robot slam computer-vision stereo-vision,stereo computer mobile robot slam vision
2323,piezo sensors multiplexers,got asked make sort trigger pads foot section working midi electric piano friend wants pressure sensitive program note velocity using organ sound https //www.youtube.com/watch v=duariihwjqg try achive want pads able control velocity midi note im planning use adruino uno mux shield ii mayhew labs get analog inputs sure wiring looked guides videos google get feel made piezo- sensors planned hard push pedals send midi signal specific note correspondig pedal velocity electric piano control low notes feet http //www.thomann.de/se/clavia_nord_pedal_key_27.htm pedals lot cheaper arduino able read analog output piezo sensor going multiplexer,control electronics,control electronics
2324,quadcopter carry heavy things,drinking couple friends said something like cool beer came got thinking seen crazy things people quadcopters polycopters possible expensive build quadcopter carry say crate beer 16-20kg bit tinkerer built minor things rasp tried quadcopter big piece work able fly crate beer right front pretty awesome aside strong quadcopter terms motors propellers battery frame complete noob comes rpm know begin course read available tutorials internet answer question look want quadcopter able carry something specific,quadcopter raspberry-pi,quadcopter pi raspberry
2325,use ekf baro-acc altitude estimation,implemented kalman filter estimate altitude small robot imu+baro sensor mounted objective get max precision using sensor small computing power mcu provide tuned filter seems work obtain significant improvement using extended kalman filter normal kalman filter worth time implement detail request specific application model function use baro accel states linearized used improve data reliability compared kf,kalman-filter accelerometer ekf,filter ekf accelerometer kalman
2326,landmark extraction algorithm,hi landmark used slam algorithme used extract robot diferentiate landmark detecte point xt xt+1 robot know bad english,slam ekf lidar ransac,ransac ekf slam lidar
2327,others alternatives pid controllers line following robots,better/ advanced ways steering line following robot pid controller,pid line-following steering,following line pid steering
2328,select dc motors line following robot,criteria consider ordering dc motors line following robot way calculate torque required,motor line-following,following line motor
2329,generate synthetic accelerometer data based x coordinate,like create simulation model signal generator allow generate output signals accelerometer based location input signals x z like realistic model data produced accelerometer noise bias offsets convert series points simulated accelerometer output series positions describe trajectory space ... moving trajectory described series positions interested knowing simulating data produce result moving described trajectory calculate derivative trajectory ideal looking model realistic,accelerometer simulation,accelerometer simulation
2330,internal sparking motor mean,arduino raspberry pi robot working fine morning tested ran switched evening trying run batteries everything move stripped motor compartment found try run main motor see sparks translucent plastic mean motor gone,arduino motor raspberry-pi battery,battery pi raspberry motor arduino
2331,pitfalls ultrasonic sensor,using hc-sr04 sensor detect obstacles pitfalls ultrasonic sensor couple found testing signal bounce wall get picked distorting latency absorbent materials sometimes bounce signal check datasheet supported range min/max,ultrasonic-sensors,sensors ultrasonic
2332,cc3d pwm control signal characteristic simulated raspberry pi,goal control drone raspberry pi raspberry pi uses camera opencv sends control commands avr microcontroller generate pwm control signal meaning simulate pilot transmitter-receiver setup words make clear raspberry tells atmega8 drone needs go generates custom pwm signals pins signals sent cc3d pins responsible roll pitch etc atmega8 replaces controller receiver setup generates signal based user input raspberry tells order need parameters period voltage etc pwm signal cc3d accepts simulate found cc3d replacing rc emitter rpi problem found solution send pm comment new site ... way contact help appreciated,quadcopter arduino raspberry-pi uav avr,quadcopter raspberry arduino avr uav pi
2333,doosan lynx find inputs outputs,want add robot machine doosan lynx lsy need inputs output inputs cycle start chuck1 open chuck1 close chuck2 open chuck3 close outputs cycle finished check chuck1 opend check chuck1 closed check chuck2 opend check chuck2 closed found book found inputs outputs justs says example cycle start sb373 cant find number i/o board someone help find listed outputs,cnc,cnc
2334,compass sensor robot,appropriate compass sensor use robot ton cheap digital compass sensors thinking using mpu9250 combined compass finding unreliable need constant calibration wave figure pattern method gets electronics small magnets robot able digital compass technology mimics traditional compasses requires little calibration appropriate installation robot,magnetometer compass,magnetometer compass
2335,fence avoidance controlled robot,trying find known techniques keeping controlled robot known polygon fence pilot controls robot issuing desired velocity vectors autopilot adjusts velocity distance boundary least stopping distance robot goal implement system tries follow pilot desired velocity possible robust changes position desired velocity minimum want velocity change respect position robot desired velocity pilot means small changes position desired velocity pilot induce small changes velocity second point important suppose policy find intersection boundary direction desired velocity slow point figure depicts couple scenarios continuous figure black lines represent fence boundary red dot position robot blue line desired velocity pilot figure small perturbation position left cause large increase allowed velocity desired velocity intersect edge edge figure b small clockwise rotation velocity vector result large decrease allowed velocity desired velocity intersect edge edge searched relevant papers papers seen dealt autonomous obstacle avoidance moreover seen papers address robustness/continuity system edit robot knows location location boundary times equations maximum velocity ramp-down single line boundary interested seeing better like velocity limits continuous position desired velocity pilot want throttle user input minimum safe distance robot boundary maintained see figure added question hard part think make sure small changes position e.g due sensor noise small changes desired velocity e.g due pilot noise cause huge changes autopilot allows want continuity think much nicer experience pilot enforcing fence boundary trade-off think worth physical world smoothes discontinuities velocity big changes cause large jerk disturbing pilot goal autopilot introduce large oscillations intended pilot implemented physical system sensors provide estimation position boundary shape known unchanging actual system targeting quadcopter,control geometry reference-request,control geometry request reference
2336,obstacle avoidance navigating,need ideas strategies algorithms apply strategies perform obstacle avoidance navigating moment offline path planning obstacle avoidance known obstacles occupancy grid running a* algorithm created matrix robot follows resulting trajectory done splitting whole trajectory sub-path robot adjust heading new target follows straight line robot controlled fuzzy logic controller correct deviations ideal line steering adjusting velocity according steering action distance target good working sensor system use google project tango motion tracking area learning proper path following want use depth perception capability device getting appropriate depth information extracting possible obstacle done simple strategy robot analyses depth information front robot object robot target point sub-path obstacle wondering bypass obstacle robot aware height width obstacle clue depth front obstacle scanned feeding occupancy grid new obstacle running a* algorithm effective missing depth possible strategy imagine estimating depth length grid cell re-plan continue navigation robot faces depth increased size additional grid cell length think ineffective requirement use google project tango additional sensors ultrasonic sense sides update first picture illustrates given trajectory path planning orange gray blue data points sensed obstacles front robot notch blue obstacle wall shadowed blue obstacle image shows scene different perspective issue treat bypass blue obstacle know deep driving left right capture better data points generate model possible update yes using depth sensor integrated google project tango visual measurement infra-red laser beams grid objects rgb-ir camera capture information evaluates appropriate depth information,control motion-planning algorithm,control motion planning algorithm
2337,steering using different speeds dc motors using servo,trying assess pros cons steering robot car using different speeds dc motors versus using servo steering mechanism experience better terms steering accuracy e.g prompt responsiveness skidding higher speeds efficiency electrical power consumption durability maintenance control complexity coding electronics researched understood approaches work practical insight select suitable approach hint research direction appreciated,motor servos steering,servos steering motor
2338,dynamic torque simulation dof robotic arm,working dof robotic arm industrial manipulator basic structural specs dimensions weights etc links joints want simulate static torque due weight arm dynamic torque due accelerating joint motion torque joints need bear given set motions looked web found tools ros-moveit visualiser gazebo v-rep let see robotic arm simulate position logic external factors collisions etc unable simulate/calculate dynamic torque values tools want define fixed motion end effector i.e move robot positions measure torque static dynamic particular move torque values essential selecting optimum motors gearboxes design payload,robotic-arm dynamics torque simulation manipulator,manipulator torque simulation robotic dynamics arm
2339,quadcopter startup work tune copter releasing market,know quadcopter needs tuned perfect pid values minimise pitch roll yaw errors etc. releasing market tune unit ship different algorithm used doesn’t require tuning motor/esc chassis add noise,quadcopter,quadcopter
2340,path planning arm robot,working path planning arm dof arm robot using centralised planning methodology considering robot system single higher dof case a* algorithm find shortest path problem high computation time.is way reduce computation time obtaining shortest route note decentralised path planning good case,robotic-arm motion-planning path-planning,motion path planning arm robotic
2341,stereo vision using compute module pi camera synchronization,good day working avoiding uav using stereo vision obtain depth maps noticed steer correct direction using raspberry pi compute module io board comes csi ports used v1 pi cameras issue found due latency cameras left right images sync errors depth map result steps taken noticed image blur moving cameras adjusted shutter speed setting uv4l/raspicam driver shutter speed tried increase framerate read improves latency issue code uses opencv library used grab retrieve commands replace read command frames cameras grabbed nearest time possible help anyone know possible solutions,computer-vision stereo-vision c++ opencv,opencv stereo computer c vision
2342,mounting gimbal bldc motor,trying build motorised camera gimbal using bldc shaft hollow anyone know camera platform mounted shaft somehow pressed hole thought appreciated,brushless-motor,brushless motor
2343,using wire stepper motor l298n,using l298n ic driver shield arduino like know use ic arduino run wire stepper motor new electronics.can detailed explaination wiring ic connections arduino thanks,stepper-motor,stepper motor
2344,question motor use opening window,transparent total newbie comes dc motors much anything robotic got couch right window type openings anderson windows couch clearance turn lever open given replaced house switches/outlets home automatable ones figured see build small motor automate open honest got clue start problem coding automation part know kind motors look able turn knob actuate thing knob connects ... help thanks,motor,motor
2345,lidar problems multi-robot setup,consider multiple mobile bases driving area order get meaningful data lidar base sensors mounted horizontal possible due safety regulations lidars mounted height cm floor checked data sheet sick lidars shows models use wavelength nm mean mobile bases equipped lidars coplanar scan lines end blinding case problem solved consider tilting lidars solution defeats purpose lidars tilting known lidar observes dependent robot pose distance eventual obstacles,sensors lidar rangefinder,sensors rangefinder lidar
2346,compressedimage image node,"update hey following subscriber nvidia tx1 board running agricultural robot following issue subscribing sensor_msgs :compressed ros :nodehandle n n_ n it_ n_ image_pub_ it_.advertise /output_img ,1 cv :namedwindow opencv_window image_transport :transporthints th compressed image_sub_compressed.subscribe n /logitech_webcam/image_raw/compressed ,5 imageconverter :imagecallback ros :voidptr th callback function void imagecallback const sensor_msgs :compressedimageconstptr msg compile get error /home/johann/catkin_ws/src/uncompressimage/src/publisher_uncompressed_images.cpp:1 /usr/include/boost/function/function_template.hpp instantiation ‘static void boost :detail :function :function_void_mem_invoker1 memberptr r t0 :invoke :detail :function :function_buffer t0 memberptr void imageconverter :* const boost :shared_ptr const sensor_msgs :compressedimage_ std :allocator void r void t0 const boost :shared_ptr const sensor_msgs :image_ std :allocator void ’ /usr/include/boost/function/function_template.hpp:934:38 required ‘void boost :function1 r t1 :assign_to functor functor void imageconverter :* const boost :shared_ptr const sensor_msgs :compressedimage_ std :allocator void r void t0 const boost :shared_ptr const sensor_msgs :image_ std :allocator void ’ /usr/include/boost/function/function_template.hpp:722:7 required ‘boost :function1 r t1 :function1 functor typename boost :enable_if_c boost :type_traits :ice_not boost :is_integral functor :value :value int :type functor void imageconverter :* const boost :shared_ptr const sensor_msgs :compressedimage_ std :allocator void r void t0 const boost :shared_ptr const sensor_msgs :image_ std :allocator void typename boost :enable_if_c boost :type_traits :ice_not boost :is_integral functor :value :value int :type int ’ /usr/include/boost/function/function_template.hpp:1069:16 required ‘boost :function r t0 :function functor typename boost :enable_if_c boost :type_traits :ice_not boost :is_integral functor :value :value int :type functor void imageconverter :* const boost :shared_ptr const sensor_msgs :compressedimage_ std :allocator void r void t0 const boost :shared_ptr const sensor_msgs :image_ std :allocator void typename boost :enable_if_c boost :type_traits :ice_not boost :is_integral functor :value :value int :type int ’ /home/johann/catkin_ws/src/uncompressimage/src/publisher_uncompressed_images.cpp:27:126 required red error statement /usr/include/boost/function/function_template.hpp:225:11 error match call ‘ :_mfi :mf1 void imageconverter const boost :shared_ptr const sensor_msgs :compressedimage_ std :allocator void const boost :shared_ptr const sensor_msgs :image_ std :allocator void ’ boost_function_return boost :mem_fn *f boost_function_args using boost searching helped solve",ros c++ opencv,opencv c ros
2347,rviz transform error base_link camera_link,working differential drive robot motor wheels encoders caster wheels robot intel realsense depth camera launch rviz thee global option fixed frame set base_link shows transforms differential driver nodes error appears depth camera nodes message saying transform camera_depth_frame baselink transform camera_depth_optical_frame baselink transform camera_link baselink transform camera_rgb_frame baselink change global option fixed frame camera_link see transforms depth camera differential drive transforms available hope help,ros,ros
2348,volt input volt ouput arduino,ended supplying v arduino output pin vin pin mean use output pin i.e fried,arduino,arduino
2349,difference camera using ir projection stereo camera,busy final year project requires track people walking thought possible using normal camera using motion detection functions given come conclusion camera mounted low work height shown image looking using camera stereo camera try get problem seen similar examples kinect xbox used generate depth map processed used tracking done higher vantage point found minimum operating range kinect found kinect uses ir projector receiver generate depth map looking orbbec astra uses similar system minimum working distance question difference depth maps produced camera uses ir projector receiver stereo camera duo/zed type options looking insight people used types cameras side note going right way looking time flight cameras -- -- edit -- -- goal count people moving began using opencv background subtraction blob detection method worked person time test video filmed higher vantage point blob-merging problem encountered shown left image next method tested involved optical flow method using motion vectors obtained dense optical flow algorithm able obtain motion vectors higher test videos track shown middle image packed detected motion vectors simple cluster system attempted footage taken train lower height unable give consistant output thoughts reasons low height camera single camera tracking able function sufficient space camera top person distance minimized area frame moving person takes becomes larger larger space person compared reduced atleast understand right see image color persons clothing uniform optical flow unable detect motion cases started working computer vision months please forgive missed crucial aspects seen research commercial systems make used cameras stereo cameras time-of-flight cameras unsure specifics suited application,computer-vision cameras stereo-vision,stereo computer cameras vision
2350,openrave output torques simulation timestep,using openrave simulate quadruped order get idea torque requirements get started made single dof single link pendulum test controllers etc whipped inverse dynamics based controller using computeinversedynamics set outputs using setdoftorques set desired position desired velocity appears work start simulation pendulum driving desired position settling concern value output torques pendulum modeled simple box length mass set com run simulation output gravity component computeinversedynamics gives matches hand calculated torques expect pendulum eg static case desired position horizontal output torques setdoftorques higher vary depending set simulation timestep maintain controller update rate seconds simulation update seconds output torque alter simulation timestep seconds keeping controller rate output torques drop experiment removed inverse dynamics controller replaced plain pd controller see large output torques anyone shed light possible missing something thanks much edits adding main section code trajectory generation trying get fixed static position code keep dt fixed alter env.startsimulation timestep=0.0001 get issues popping env robot env.getrobots robot.getlinks .setstatic true env.stopsimulation env.startsimulation timestep=0.0001 dt w eta kp w*w kv desired pos vel acc cmd_p cmd_v cmd_a true env torqueconfiguration torquecoriolis torquegravity robot.computeinversedynamics none returncomponents=true err_p cmd_p robot.getdofvalues err_v cmd_v robot.getdofvelocities id controller compute_inertia_matrix robot robot.getdofvalues a_cmd kp*err_p kv*err_v cmd_a taus torquegravity torquecoriolis m.dot a_cmd.transpose .transpose pd ish controller taus kp*err_p kv*robot.getdofvelocities robot robot.setdoftorques taus false true use limits print taus torquegravity+torquecoriolis a_cmd m.dot a_cmd.transpose .transpose time.sleep dt https //scaron.info/teaching/equations-of-motion.html def compute_inertia_matrix robot q external_torque=none n len q np.zeros n n robot robot.setdofvalues q e_i enumerate np.eye n c g robot.computeinversedynamics e_i external_torque returncomponents=true return xml version= encoding= utf-8 robot name= pendulum rotationaxis /rotationaxis -- makes pendulum vertical -- kinbody -- mass type= mimicgeom density /density /mass -- body name= base type= dynamic translation /translation geom type= cylinder rotationaxis /rotationaxis radius /radius height /height ambientcolor /ambientcolor diffusecolor /diffusecolor /geom mass type= custom -- specify total mass -- total /total -- specify inertia matrix -- -- inertia /inertia -- -- specify center mass using ode physics engine -- com /com /mass /body body name= arm0 type= dynamic offsetfrom base /offsetfrom -- translation rotation relative base -- translation /translation geom type= box translation /translation extents /extents ambientcolor /ambientcolor diffusecolor /diffusecolor /geom mass type= custom -- specify total mass -- total /total -- specify inertia matrix -- -- inertia /inertia -- -- specify center mass using ode physics engine -- com /com /mass /body joint circular= true joint0 type= hinge body base /body body /body arm0 /offsetfrom weight /weight axis /axis maxvel /maxvel resolution /resolution /joint /kinbody /robot data env.startsimulation timestep=0.0001 data taus torque command simulation torquegravity+torquecoriolis returned inverse dynamics a_cmd controller command m*a_cmd command multiplied mass matrix gravity coriolis parts appear correct steady state taus torquegravity+torquecoriolis a_cmd m*a_cmd -785.91806527 -1212.88211601 -788.37337541 -1065.4689484 -1644.16151823 -1068.70498685 -1027.47479809 -1586.58063974 -1031.27741583 -877.83110127 -1356.94993433 -882.01745731 -707.25108627 -1094.9050118 -711.68825767 -554.34483533 -859.91608481 -558.94545512 -432.22314217 -672.20204828 -436.93133138 -327.797496 -511.65288492 -332.5743752 -240.77203429 -377.83422228 -245.59224448 -172.18942128 -272.3653721 -177.03749186 -117.58895761 -188.39210657 -122.45486927 -74.51920719 -122.14867828 -79.39664088 -39.91183436 -68.91779816 -44.7965688 -12.82321495 -27.25066043 -17.71292928 data env.startsimulation timestep=0.0005 taus torquegravity+torquecoriolis a_cmd m*a_cmd -313.62240349 -484.01796324 -314.61167611 -242.03525463 -375.45249938 -244.0441246 -199.82226305 -311.71516928 -202.61486003 -190.02605484 -297.56881625 -193.41973056 -162.08293067 -255.28537288 -165.93549237 -125.84847045 -200.03702174 -130.02406413 -103.89936813 -166.61547326 -108.30005762 -82.32305905 -133.66103347 -86.87967175 -64.56801352 -106.51102404 -69.23216563 -49.68124446 -83.72210081 -54.41936553 -37.91265825 -65.6947152 -42.70156488 -27.99189838 -50.48560071 -32.81564046 -19.81225948 -37.9382825 -24.65988362 -12.55978349 -26.80524414 -17.42340869 -6.89165107 -18.10209369 -11.7663609 -3.13313345 -12.33184754 -8.0157009 -6.44560793 -4.18964516 -1.58290594 -1.02888886 differences torque command a_cmd get similar performance arm drives right position experiment set initial position pi/2 fed gravity term torque output understanding arm float ala gravity compensation sort thing drops small torque applied thanks,robotic-arm torque,torque arm robotic
2351,possible get possible solutions inverse kinematics dof arm,like know way get possible solutions inverse kinematics dof robotic arm found good matlab codes gives solution peter corke book thank advance,inverse-kinematics,inverse kinematics
2352,horsepower related torque electric motors,torque related size power electric motors gas motors go x x size see online .21 cubic inch gas motors r/c cars difference r/c motor spins rpm go-kart motor spins rpm put gear reduction r/c motor preform less go kart motor size difference electric motors buy rc car electric motor size pop cnc machine work motor size gal bucket difference rpm reduce setups spun rpm preform reasons think cooling rpm control pid loops sensors,motor power torque engine,engine torque power motor
2353,slam irobot create,irobot create working gotten point control great want able autonomous navigate room room example slam irobot tutorials materials recommend autonomous navigation,mobile-robot slam irobot-create,mobile create slam robot irobot
2354,localising robot placed unknown position known environment,third-year electrical engineering student working intelligent autonomous robot summer vacations robot trying make supposed used rescue operations information know position person coordinates person json file rescued building fire know rooms building map know robot placed building start rescue operation means localise robot placed unknown position known environment robot plan person rescued domain like guide best method localising given use imu gyro accelerometer magnetometer ultrasonic sensors localising job use gps module camera purpose know path planning research internet concerned found method called kalman filtering localising job think filtering methods use simpler/better method know attaching map building known edit terrain flat like know robot map coordinate etc,mobile-robot localization imu accelerometer gyroscope,accelerometer localization mobile robot imu gyroscope
2355,typical laser scanner noise values,building application executes graphslam using datasets recorded simulated environment dataset produced mrpt using gridmapnavsimul application simulate laserscans issue bearing range error standard deviation range finder using dataset recorded range_noise bearing_noise exaggerating values somebody provide typical values quantities laser scanner manufacturers provide values thanks advance,slam laser rangefinder,rangefinder slam laser
2356,pid gains drop control loop rate need retune,good day working autonomous quadcopter ask significant difference control loop dropped due added lines code require retuning pid gains retuning required correct assume gains retweaked constants time dependent thank,quadcopter mobile-robot control pid stability,quadcopter control mobile pid robot stability
2357,battery damaged,please see attached battery images tell safe continue using battery discard,battery lithium-polymer,battery polymer lithium
2358,specifications digital compass used iphone,specifications digital compass used trying measure yaw angle using magnetometer observed magnetometer/digital compass iphone stable north direction magnetometer using magnetometer used nexus needs calibrated function found digital compass ak8963c used needs calibration sure iphone works calibration procedure,imu sensor-fusion magnetometer,magnetometer sensor fusion imu
2359,understanding correct drift using breezyslam aka tinyslam coreslam,looking python implementation slam stumbled breezyslam implements tinyslam aka coreslam robot equipped hokuyo urg-04lx-ug01 odometry hence passing updater self.slam.update ls_array dxy_mm dtheta_deg dt start moving robot starts discovering room room b c seems rotated come room return initial pose end=start using path noticed room rotated relation room map correct path travelled robot slam supposed keep boundaries first room discovered rotation happening try troubleshoot issue data collected odometry calculated position lidar scans tune better job robot slam new please bear pointers literature clarify moderate expectations slam extra ... best video found understand particle filter,localization slam mapping,slam mapping localization
2360,need help regarding odometry using encoder motor raspberry pi,project odometry using raspberry pi know encoder motor tell much distance robot covered idea ho implement need guideline steps follow till interfaced motor raspberry pi counted number rotation questions follow plot map odometry using language library know anything give guideline steps follow,motor raspberry-pi odometry,pi raspberry motor odometry
2361,robot positioning using imu quaternion data,want use mpu9150 give position xy heading angle wheeled robot mpu9150 invensense digital motion processor give quaternion convert quaternion data xy-coordinate angle plot position vehicle,wheeled-robot imu sensor-fusion,sensor fusion imu wheeled robot
2362,battery question dw558 explorer small quadrocopter,bought dw558 quadrocopter http //www.gearbest.com/rc-quadcopters/pp_110531.html minutes battery dead understandable battery tiny battery included quadrocopter thinking buying spare batteries questions buy kind battery size property pay attention buy batteries included battery expect quadrocopter energic bad buy batteries mah buy batteries able charge charger got mah batteries buy specific charger batteries want buy comment appreciated batteries x5 http //www.gearbest.com/rc-quadcopter-parts/pp_196991.html and/or batteries charger http //www.gearbest.com/rc-quadcopter-parts/pp_331372.html thank much input think discovered new hobby wait spare batteries,quadcopter battery,quadcopter battery
2363,need help regarding development extended kalman filter sensor-data fusion odometry imu data,trying develop extended kalman filter ekf positioning wheeled vehicle robot frame static wheels driven motor rear wheels encoder want fuse odometry data data dof imu mathlab code call ekf uses data encoders accelerometer x gyroscope z-axis medium-size ekf inputs x priori state estimate vector sampling time p estimated state covariance vector z current measurement vector encoder left encoder right x-acceleration y-acceleration z-axis gyroscope output x posteriori state estimate vector p posteriori state covariance vector state vector x vector \begin bmatrix x \rightarrow x-position global frame \\ \dot x \rightarrow speed x-direction global frame \\ \ddot x \rightarrow acceleration x-direction global frame \\ \rightarrow y-position global frame \\ \dot \rightarrow speed y-direction global frame \\ \ddot \rightarrow acceleration y-direction global frame \\ \theta \rightarrow vehicle angle global frame \\ \dot \theta \rightarrow angular speed vehicle \end bmatrix measurement vector z vector \begin bmatrix \eta_ left \rightarrow wheelspeed pulses left wheel \\ \eta_ right \rightarrow wheelspeed pulses right wheel \\ \dot \theta_z \rightarrow gyroscopemeasurementinz-axisvehicleframe \\ a_x \rightarrow accelerometermeasurementx-axisvehicleframe \\ a_y \rightarrow accelerometermeasurementy-axisvehicleframe \end bmatrix function x p moodieekfmedium x p z sigma_ax sigma_ay sigma_atau sigma_odo sigma_acc sigma_gyro check input matrixes correct size rows columns size x rows ~= columns ~= error vector size incorrect end rows columns size z rows ~= columns ~= error data vector size incorrect end constants n0 r b q zeros q sigma_ax q sigma_ay q sigma_atau q q q deal small dfdx eye dfdx dfdx dfdx dfdx dfdx deal dfdx dfdx deal t^2 /2 dfda zeros dfda dfda dfda deal dhdn eye r zeros r r deal sigma_odo r sigma_gyro r r deal sigma_acc r r deal small predict next state xk f xk-1 xtemp zeros xtemp x t*x t^2 /2 *x xtemp x t*x u1 sigma_ax xtemp x u1 xtemp x t*x t^2 /2 *x xtemp x t*x u2 sigma_ay xtemp x u2 xtemp x t*x u3 sigma_atau xtemp x u3 x xtemp predict next state covariance pk dfdx pk-1 transpose dfdx dfda q transpose dfda p dfdx p transpose dfdx dfda q transpose dfda calculate kalman gain kk p transpose dhdx dhdx p dhdn r transpose dhdn ^-1 dhdx zeros x == x == dhdx dhdx deal dhdx dhdx deal dhdx dhdx deal t*n0 x /sqrt x ^2+x ^2 dhdx dhdx deal t*n0 x /sqrt x ^2+x ^2 end dhdx dhdx deal t*n0 x /sqrt x ^2+x ^2 dhdx dhdx deal t*n0 x /sqrt x ^2+x ^2 dhdx t*n0*b dhdx t*n0*b dhdx sin x dhdx -cos x dhdx x *cos x x *sin x dhdx cos x dhdx sin x dhdx -x *sin x x *cos x kk p transpose dhdx dhdx p transpose dhdx dhdn r transpose dhdn -1 update state h zeros n1 sigma_odo h t*n0 *sqrt x ^2+x ^2 t*n0*b *x n1 n2 normrnd sigma_odo h t*n0 *sqrt x ^2+x ^2 t*n0*b *x n2 n3 normrnd sigma_gyro h x n3 n4 normrnd sigma_acc h x *sin x x *cos x +n4 n5 sigma_acc h x *cos x x *sin x +n5 x x kk* z-h update state covariance p eye -kk*dhdx *p end filter schematic state transition equations use x_ t+1 x_ \cdot \dot x_ \frac t^ \cdot \ddot x_ \dot x_ t+1 \dot x_ \cdot \ddot x_ \ddot x_ t+1 \ddot x_ u_ y_ t+1 y_ \cdot \dot y_ \frac t^ \cdot \ddot \dot y_ t+1 \dot y_ \cdot \ddot y_ \ddot y_ t+1 \ddot y_ u_ \dot \theta_ t+1 \dot \theta_ \cdot \ddot \theta_ \ddot \theta_ t+1 \ddot \theta_ u_ observation equations use \eta_ left \frac \cdot n_ \cdot \pi \cdot r \cdot \sqrt \dot x^ \dot \frac \cdot n_ \cdot b \cdot \pi \cdot r \cdot \dot \theta \eta_ right \frac \cdot n_ \cdot \pi \cdot r \cdot \sqrt \dot x^ \dot \frac \cdot n_ \cdot b \cdot \pi \cdot r \cdot \dot \theta \dot \theta_ z \dot \theta a_ x \ddot x \sin \theta \ddot \cos \theta a_ \ddot x \cos \theta \ddot \sin \theta small-size ekf wanted test filter started smaller give odometry measurements input know receive amount pulses left right encoder vehicle driving straight line inputs x priori state estimate vector sampling time p estimated state covariance vector z current measurement vector encoder left encoder right output x posteriori state estimate vector p posteriori state covariance vector state vector x vector \begin bmatrix x \rightarrow x-position global frame \\ \dot x \rightarrow speed x-direction global frame \\ \rightarrow y-position global frame \\ \dot \rightarrow speed y-direction global frame \\ \theta \rightarrow vehicle angle global frame \\ \dot \theta \rightarrow angular speed vehicle \end bmatrix measurement vector z vector \begin bmatrix \eta_ left \rightarrow wheelspeed pulses left wheel \\ \eta_ right \rightarrow wheelspeed pulses right wheel \end bmatrix check input matrixes correct size rows columns size x rows ~= columns ~= error vector size incorrect end rows columns size z rows ~= columns ~= error data vector size incorrect end constants n0 r b q zeros q sigma_ax q sigma_ay q sigma_atau q q q deal small dfdx eye dfdx dfdx dfdx deal dfda zeros dfda dfda dfda deal dhdn eye r zeros r r deal sigma_odo r r deal small predict next state xk f xk-1 xtemp zeros xtemp x t*x u1 sigma_ax xtemp x u1 xtemp x t*x u2 sigma_ay xtemp x u2 xtemp x t*x u3 sigma_atau xtemp x u3 x xtemp predict next state covariance pk dfdx pk-1 transpose dfdx dfda q transpose dfda p dfdx p transpose dfdx dfda q transpose dfda calculate kalman gain kk p transpose dhdx dhdx p transpose dhdx dhdn r transpose dhdn ^-1 dhdx zeros x -6 x -6 dhdx dhdx deal t*n0 dhdx dhdx deal t*n0 dhdx dhdx deal t*n0 x /sqrt x ^2+x ^2 dhdx dhdx deal t*n0 x /sqrt x ^2+x ^2 end dhdx dhdx deal t*n0 x /sqrt x ^2+x ^2 dhdx dhdx deal t*n0 x /sqrt x ^2+x ^2 dhdx t*n0*b dhdx t*n0*b kk p transpose dhdx dhdx p transpose dhdx dhdn r transpose dhdn -1 update state h zeros n1 sigma_odo h t*n0 *sqrt x ^2+x ^2 t*n0*b *x n1 n2 normrnd sigma_odo h t*n0 *sqrt x ^2+x ^2 t*n0*b *x n2 x x kk* z-h update state covariance p eye -kk*dhdx *p end odometry observation equations wonder come observation equations odometry data v_ vl v c \dot \theta \cdot b \rightarrow v_ vl \sqrt \dot x^ \dot \dot \theta \cdot b problem try small-size ekf using matlab user interface seem drive straight line heading expect start state vector x= \begin bmatrix bmatrix meaning starting position global coordinate frame speed acceleration angle top right corner see measurement data give input wheelspeed counts wheel sampling period simulating straight driving vehicle top left corner see plot x coordinate state vector end predict+update cycle filter labeled timecycle bottom left corner plot angle state vector see cycles angle expect anyone please provide insights wrong solutions thinking use motion model explained question difference odometry data inserted predict step filter see problems see make small-size version testing purposes know measurements add update-step medium-size version know make observation equations state vector imply velocity acceleration use motion model update step euler-angle linked \theta euler-angle obtain digital motion processor dmp implemented imu problem angular velocity state matrix problem acceleration observation equations,kalman-filter imu sensor-fusion odometry,odometry kalman filter fusion imu sensor
2364,interface drone,bought drone quadcopter drone works like create application control drone pc phone computer phone interface aerial vehicle initial thoughts get rf detector detect signals sent drone replicate using new transmitter replace control circuit drone arduino send corresponding signals fly methods seem kind fetched hard sure otherwise done,quadcopter software radio-control wireless,quadcopter control wireless radio software
2365,check gazebo/ode functions called,trying take simple event atlas steps ground plane want see functions ode calls functions ode uses determine constraint forces see happen simulation running way like know constraint equations constraint forces ode using particular case thanks,ros dynamics gazebo,dynamics ros gazebo
2366,dc motors model run different speeds,wheels robot powered battery robot differential motion wheels running differnt speeds,mobile-robot motor,mobile robot motor
2367,addressing sample impoverishment particle filter,implemented particle filter algorithm state estimation robot several external range sensors transmitters environment gives information distance radius robot based time taken robot send acknowledgement using transmitters possible triangulate position robot particle filter initialized particles low update phase iteration range information external sensor received assigns higher weights particles radius external sensor particles weighted process low hence cases particle closer robot gets lower weight incorrect happens radius weight pdf resampling phase stage lower weighted particle correct negligible weight gets lost higher weighted particle gets picked happens first iteration range information sensor arrives robot kidnapped googling said problem called sample impoverishment common approach resample particle variance low effective sample size number particles particles assigned negligible weights particles higher weights diversity particles lost resampling phase variance higher resampling done removes lower weighted particle hence diversity particles lost isnt opposite idea ess understanding sample impoverishment correct way issue fixed pointers help appreciated,mobile-robot localization particle-filter probability,particle probability localization mobile robot filter
2368,interpretation unsampled particles particle filters,implemented particle filters years experimenting things particle filters learned resolve robot kidnapping problem introducing new particles left particles unsampled population interpretation unsampled particles context effect localization output,localization algorithm particle-filter,filter particle algorithm localization
2369,localization robot find coordinates according known map,third-year electrical engineering student working intelligent autonomous robot summer vacations robot trying make supposed used rescue operations information know position person coordinates person json file changed challenge rescued building fire know rooms building map know robot placed building start rescue operation means localise robot placed unknown position known environment robot plan person rescued gyroscope accelerometer magnetometer ultrasonic sensors localising job use gps module camera purpose object rescued whose location known terms coordinates changed surrounded walls sides adding walls map according research particle filter method used localization robot deal landmarks walls fixed shown map image variable depending location object rescued provided json file path planning known position target position sure determine starting position json file json file containing coordinates object rescued change change challenge json file provided sd card robot read written code robot read json file hence coordinates object rescued map building known,localization particle-filter,filter particle localization
2370,determining graspable range robot arm,dof robot arm want object grasping experiments robot mounted table object placed different adjacent table robot pick object gripper parallel normal object table pointing downwards point grasping tables adjustable heights given height difference fixed range positions robot arm achieve perpendicular pose trying figure optimum relative distance tables range positions maximum way compute given robot arm kinematics solution applies robot arms e.g optimum tables height important arm kinova mico https //www.youtube.com/watch v=gurjtumivko thanks,robotic-arm kinematics,kinematics arm robotic
2371,sensors collaborative robots,research collaborative robotics area interest type sensor used kind machines look robots fanuc universal robots noticed come equipped sensors sold add-on inherent collaborative robots customers need buy sensors add-on advantages disadvantages thanks help,sensors industrial-robot,sensors industrial robot
2372,ir distance sensor,trying make ir distance sensor seen online goal see distance ir transmitter ir sensor example uses ir led ambient light timing track distance way find distance lets say ir remote sensor accurate meter open ideas tracking distance objects weither bluetooth/ir/ultrasonic,sensors,sensors
2373,pseudocode work basis flight controller,programming flight controller arduino researched people written notes obfuscated decided easier better write pseudocode work happen constant arduino loop read rx signal calculate desired pitch roll yaw angles rx input signal escs using pwm order match desired pitch roll yaw rx input imu values using kalman filter reduce noise compare filtered imu values vs. rx input find errors desired outcome vs. actual outcome use pid algo settle errors imu vs. rx rinse repeat suggestions appreciated,arduino microcontroller uav,microcontroller uav arduino
2374,portable accurate sensor measure position hand relative body,team working wearable glove capture data hand movements use human-computer interface variety applications major applications translation sign language shown https //www.youtube.com/watch v=7kxrztdo39k right translate letters numbers signs require person hold hand position signs want able translate words non-stationary signs position hands matters signing words example matters hand front forehead eyes chest cheeks etc need portable accurate position sensor tried getting position imu accelerometer gyroscope magnetometer guess many problems double integration noise accelerometer bias device provide accurate position information portable wearable example worn chest pocket headband/cap etc ... creative edit details going emphasize certain aspects design clear based people comments current problem position detection due errors double integration accelerometer data solution powerful kalman filter think unlikely uses portable device need absolute position hand space/on earth need hand position relative stable point body chest device hand measure position relative wearable device body know technology exists guess use magnets ultrasound bend sensors em waves creative,sensors sensor-error precise-positioning,precise positioning sensors sensor error
2375,difference slam reconstruction,reading paper http //arxiv.org/abs/1310.2053 role rgb-d benchmark datasets overview see following words thanks accurate depth data published papers present broad range rgb-d setups addressing well-known problems computer vision microsoft kinect ranging slam reconstruction realtime face hand tracking motion capturing gait analysis thought term slam reconstruction thing paper says opposite bunch citations tell apart opinion mapping slam term reconstruction localization essential part mapping find difference slam reconstruction wrong author misclassfying,slam 3d-reconstruction,slam reconstruction
2376,difference rosberry pi builds,went go install ros rassberry pi found different variants difference go learn differences future updates link rosberrypi downloads talking http //wiki.ros.org/rosberrypi/setting,ros raspberry-pi,pi ros raspberry
2377,stereo vision outdoor obstacle detection,trying detect obstacles meters outdoor environment meaning want able detect obstacles robot thinking using stereo vision unsure fact possible buy expensive hardware possible anyone success possible kind sensors give decent point cloud range outdoors need sensor fit medium size robot needs expensive limited budget thanks,sensors stereo-vision,sensors stereo vision
2378,unable install ros kinetic ubuntu,trying install ros kinetic kame ubuntu trying first step setup sources list getting create /etc/apt/sources.list.d/ros-latest.list permission denied,ros irobot-create,create ros irobot
2379,conversion gps longitude latitude x local reference frame,like use gps data measurement input extended kalman filter need convert gps longitude lattitude x coordinate found information equirectangular projection given formulas x r_ earth \cdot \lambda \cdot cos \phi_0 r_ earth \cdot \phi think formulas use axis x- y-axis local frame parallel north south axis earth vehicle starting local reference frame heading straight y-direction compas angle put vehicle starting position measure angle \alpha north compass vehicle relationship longitude lattitude x local frame,kalman-filter gps,filter kalman gps
2380,dmp used simulating physics,read paper structural bootstrapping novel generative mechanism faster efficient acquisition action-knowledge introduces concept called structural bootstrapping semantic event chains dynamic movement primitives confused little bit according knowledge robotarm controlled pddl-like planner pddl file qualitative physics engine predict future events paper says qualitative physics engine consists dynamic movement primitive dmp learned motion capture data question dmp used simulating physics,motion-planning algorithm machine-learning,motion machine planning learning algorithm
2381,replacing wheels create2,possible replace wheels create2 robot standard shaft/coupling,irobot-create roomba,create roomba irobot
2382,measure diffrent battery voltages arduino,possible measure voltage different batteries arduino able use resistor divider voltage divider resistors analog pin read voltage battery supplying arduino system looks battery power regulator arduino resistor divider attached unregulated battery gnd common measure voltage battery given different circuit e.g different ground loop,arduino power,power arduino
2383,name linkage carriage video,trying find name nomenclature linkage carriage driven dual linear servo actuator arrangement following youtube videos servo basic concepts youtube x linear servo application linkage carriage appears able rotate degree arc metal linkage carriage system called,mechanism arm,arm mechanism
2384,nameerror global name defined,execute following code k == passive sendcommandascii elif k == safe sendcommandascii elif k == full sendcommandascii elif k == clean sendcommandascii elif k == dock sendcommandascii elif k == beep sendcommandascii elif k == reset sendcommandascii elif k == callbackkey.up true motionchange true elif k == callbackkey.down true motionchange true elif k == counterclockwise callbackkey.left true motionchange true elif k == clockwise callbackkey.right true motionchange true errors traceback recent call last file c \python27_2\lib\lib-tk\tkinter.py line __call__ return self.func *args file c /python27_2/irobot.py line callbackkey sendcommandascii nameerror global name defined line program solve,irobot-create python,python create irobot
2385,inverse kinematics computation -- alpha angle values included,given desired transform matrix end effector relevant base frame p560 john j. craig book introduction robotics mechanics control computes inverse kinematic solutions puma correct wrong modified dh parameters gets following set equations theta angles noticed alpha angles calculations question alpha angle values used calculation desired given end effector transform independent axes twist angles robot,inverse-kinematics,inverse kinematics
2386,heading yaw rate measurements,working field automated vehicles domain passenger commercial vehicles studying get regarding measurement state relative position relative velocity relative heading roation yaw rate surrounding objects vehicles using sensors everything possible measure using on-board sensors found literature available measuring vehicle heading yaw rate vehicles baffling given extreme precision laser based sensing using time stamps looking reference literature experiments estimation yaw rate vehicle heading see literature available lack thereof direct way measuring yaw rate available using lidar camera consecutive time stamps scans data requires data correct hence think due inaccuracies involved method used correct available sensors give accurate heading yaw rate information vehicles sources research papers welcome edit requires data correct mean given high sensitivity error heading yaw rate high vehicle speeds values computed using sensor information accurate enough put use practice,localization,localization
2387,difference roboearth knowrob,able differentiate platforms roboearth knowrob,theory cloud,theory cloud
2388,odometry motion model kalman filter error mean,planning using odometry model prediction stage extended kalman filter state transition equations f x_t a_t \begin bmatrix x_ t+1 x_t \frac \delta s_r \delta s_l \cdot \cos \theta_t +u_1 \\ y_ t+1 y_t \frac \delta s_r \delta s_l \cdot \sin \theta_t u_2 \\ \theta_ t+1 \theta_t \frac \delta s_r \delta s_l b \cdot \sin \theta_t +u_3 \end bmatrix \delta s_r \delta s_l \frac n_0 \cdot \cdot \pi \cdot r x_t \begin bmatrix x_t y_t \theta_t\end bmatrix ^t state matrix containing xy-coordinate heading \theta vehicle global reference frame \delta s_r \delta s_l distance travelled right left wheel b distance center vehicle wheel n encoder pulses count sampling period total pulses count wheelturn r wheel radius u_1 u_2 u_3 random noise \sigma^2 doubt noise mean wheelslip make estimated distance travelled shorter measured distance,kalman-filter odometry noise,filter odometry noise kalman
2389,gps observation equations kalman filter,design extended kalman filter position estimation vehicle searching observation equations inserting gps data longitude latitude update step filter state vector filter x_t \begin bmatrix x_t y_t \phi_t\end bmatrix contains x coordinate vehicle local reference frame angle vehicle standing relative x-axis observation equations look h x_t \begin bmatrix longitude f x_t y_t \\ latitude f x_t \end bmatrix anybody fill,kalman-filter gps,filter kalman gps
2390,equations motion pendulum-like system,trying get equations motion pendulum system spherical pendulum want describe system using spherical coordinates lot information want describe system using x z coordinates euler angles phi theta psi roll pitch yaw mass want assume mass position orientation relation inertial frame pendulum system mass symmetric actuated notice simplification system needed actuate mass resulting forces torques taken account force f acting x-axis direction mass reference frame torque acting z-axis mass reference frame gravitational force acting center mass negative direction z-axis inertial reference frame order clear misconceptions forces generated think mass differential drive robot using fans wheels cable connecting mass anchor point assumed rigid works distance constraint modeled \|r_ anchor r_ mass \| cable\_length r_ anchor position anchor point mass connected cable r_ mass position mass constraint makes similar spherical joints anchor point mass futhermore cable assumed mass important note rigid connection calbe meant modeled distant constraint refered looking help solving system obtain equations motion thanks advance,kinematics dynamics,dynamics kinematics
2391,combine working cartesian coordinates,"trying control dobot arm arm moves angles whereas need work cartesian coordinates inverse kinematics equations polar coordinates implemented x z coordinates working combine coordinates order work add going desired place combine coordinates got help https //github.com/maxosprojects/open-dobot manage move dobot edit written codes qt added triangles used angle calculations //forearmlength=160mm reararmlength=135mm float dobotinversekinematics :gotox float x //func x-axis float h=qsqrt qpow lengthreararm,2 -qpow x,2 //height ground qlist float zeffect=gotoz h //trying find effect x movement z-axis float cosq=h/lengthreararm //desired joint angle float joint2=qradianstodegrees qacos cosq //move range control joint2 joint2 joint2=0 qdebug joint2nan return joint2 qlist float dobotinversekinematics :gotoy float //func y-axis qlist float result float actualdist=lengthforearm+disttotool //distance end effector float x= qsqrt qpow actualdist,2 +qpow y,2 -actualdist //calculating x movement caused movement float joint1=qradianstodegrees qacos actualdist/ actualdist+x //desired joint angle float joint2=gotox x //the angle calculation movement x axis joint1 joint1 joint1=0 qdebug joint1nan result.append joint1 result.append joint2 return result qlist float dobotinversekinematics :gotoz float z //func z-axis qlist float result float joint3=qsqrt qpow -qpow z,2.0 //desired joint angle float temp=160-qsqrt qpow -qpow z,2.0 float joint2=qsqrt qpow lengthreararm,2 -qpow temp,2.0 /lengthreararm //desired joint angle joint3 joint3 joint3=0 qdebug joint3nan joint2=qacos joint2 joint3=qacos joint3 result.append joint2 result.append joint3 return result",robotic-arm inverse-kinematics c++,c inverse kinematics arm robotic
2392,type motor hooked bike,title briefly explains question type motor powerful cycle plan convert cycle electric bike mounting motor controlling raspberry pi arduino board,motor electric,electric motor
2393,possible use lipo charger lab bench power supply,thought building lab bench power supply comes cheaper love build things ... lipo charger imax b6ac bought quadcopter came idea use charger lab bench power supply ... questions work make work,power,power
2394,examples zeno behaviour real world,behaviour zeno phenomenon stated behavior system making infinite number jumps finite amount time important control system problem ideal systems zeno behavior exist real systems examples noise external factors deviate system achieving zeno,mobile-robot control,mobile control robot
2395,cheap toy robotic arms move,cheap toy robotic arms move move load words real industrial robotic arms cheap toys,robotic-arm,arm robotic
2396,good low cost actuators braille tablet controlled arduino,want make pin matrix controlled spring electromagnets small motors spring viable option something what’s shown image new arduino hardware general input appreciated know arduino end clue hardware part technical expertise know electromagnets good option control individual pins clusters springs disadvantage pushing option viable individual motors many pins,arduino motor electronics,electronics motor arduino
2397,running cycle brushless outrunner motors,possible convert cycle electric bike using brushless outrunner motors rc planes multicopter helicopter etc possible specs motors need enough power bring cycle speed need gear system,motor power electric,power motor electric
2398,calibrate magnetometer imu precise yaw,using sparkfun razor imu sensor incorporates accelerometer gyroscope magnetometer giving euler angles yaw pitch roll using firmware link processing sketch calibration magnetometer give precise measurements yaw imprecise using sensor measuring azimuth altitude stellar objects altitude correct azimuth yaw several questions better way calibrate magnetometer calibration sufficient using madgwick kalman filter nonlinearity present sensor yaw offset constant changes -12 degrees correct value southwest measure nonlinearity yaw measurements use madgwick kalman apply quaternions believe applying final yaw measurements job,kalman-filter imu calibration magnetometer precise-positioning,magnetometer precise kalman calibration positioning filter imu
2399,covariance check,localization data estimated generated covariance matrix like see covariance correct check plotting covariance,localization slam visualization,visualization slam localization
2400,dh parameters change scaled robot model,actual dh parameters robot d1 d2 d3 a1 a2 di ai zero use inverse kinematics analytic closed form computation measure virtual distances environment asking theta angles yeld computations dependent scale distances edit scale factor unknown,inverse-kinematics dh-parameters 3d-model,model inverse kinematics parameters dh
2401,building rc airbus a340,planning build scale version airbus a340 title suggests questions build ... template/plans build please reply links ... control plane cc3d revolution fly ground station ground telemetry application help please send link ... make landing gears fancy spending £50 live london ... want make landing gears shock absorbing want make nose gear steering mechanism servos ... make outer shell edf motors ready spend much time effort build want build costly going hobby built hope apply knowledge build ...,servos,servos
2402,accelerometer gyro magnetometer sensor fusion material resource survey,hardware engineer studied lot sensor spec accel gyro magnetometer including custom made fluxgate studied matrix quadarion complex number moving calibration seen lot article calibration sure best solution fix offset mis-alignment axis anyone point best open source code interested output results related flight quadchopter gps interested directional math drilling pipes toolface inclination position important thesis paper cover open-source example code c application need kalnman filter advance post data capture processing tip getting involved maths,control kalman-filter imu calibration precise-positioning,control precise kalman calibration positioning filter imu
2403,basic components mode quad,want know essential components need multirotor inorder mode carrying device/reference piece track,localization,localization
2404,find ros package kinetic driver-base,find package ros site saw maintainable migrate package jade/indigo became package kinetic important dependency quad-gazebo pacakge,ros,ros
2405,kind motors powerfull robotic arm,building robotic arm specifications meter weight made motors base rotating whole arm left right rotating motor rotating second half arm claw used grabbing able lift least weight speed degrees seconds degrees second resulting kind motor best project servo much torque need please give explanation calculate torque needed give example motors need and/or gearbox models links,motor robotic-arm stepper-motor servos torque,stepper torque motor robotic servos arm
2406,matching features computed stereo pair tracked,working slam-like application using variable baseline stereo rig assuming trying perform visual slam using stereo camera initialization routine involve producing point cloud features detect first pair images map created cameras start moving keep original features responsible map need estimate pose feature matching stereo pair cameras perform matching initial set images second set see many features visible get coordinates efficient way instance locating points clouds,slam computer-vision stereo-vision,stereo slam computer vision
2407,determining position map lidar,need determine position robot lidar known high horizontal plane gives distance nearest point angular degree points rotation environment known map position object lidar susceptible hit question based scatter plot lidar returning retrieve position robot map need x position map frame theta angle map frame robot frame tried match objects map groups points based distance identifying objects way lidar sees retrieve robot position unsuccessful put want make slam mapping part possible kind algorithms first step stop robot acquiring data seems easier process,localization lidar precise-positioning,precise lidar positioning localization
2408,shield imu magnetic interferences,experienced drifting coming magnetic fields wondered possible shield imu external influences possible imu rely external fields earth magnetic field alternatives imus less susceptible magnetic interferences need rotational data sensor use translational output,sensors imu rotation,sensors imu rotation
2409,make simple arduino insect robot,want make simple arduino based programmable insect robot want walk legs legs made hard aluminum wire needs legs planning use arduino nano questions arrange servos wire motion want turn sideways read good theory making insect robots,arduino,arduino
2410,difference cc3d revolution mini cc3d revolution,came doubt ... title suggests difference flight controller big price difference size difference know ... function way flight controller differ size answers appreciated sid,quadcopter microcontroller,quadcopter microcontroller
2411,lidar points landmarks,trying implement graphslam/sam lidar papers read generate directed graph expected lidar measurements landmarks similar image taken square root slam paper dellaert practice point clouds obtain lidar similar taken kitti car collected dataset seems algorithms sift point clouds accurate used technique find features consecutive point clouds find landmarks slam algorithms using points point cloud,localization slam lidar,lidar slam localization
2412,power solution raspberry pi robot,building pi car gear motors 190-250mah max want use usb power bank power raspberry pi gear motors power raspberry pi want use power bank source power pi car connect rpi motor controller l298n usb power bank,motor raspberry-pi power,pi raspberry power motor
2413,types motor use particular application,want create amateur wire looping machine arduino similar functionality machine need automatic wire feeding purposes part done want automate wire loop creation process assuming straight wires new world motors robotics etc. please descriptive possible video tell motors makes initial wire bending spins create loop wire working galvanized steel gauge mm diameter type motors recommended application taking account need accurate positioning repeat ability need torque creates loop work type material close ones video going industrial grade machine running time need expensive.. want bankrupt end project links included recommended products great thanks,motor,motor
2414,axis gimbal stabilization system replace axis accelerometer,tarot zyx-gs 3-axis gimbal stabilization system zyx13 sensor gives value roll tilt pan.the axis give value x z.so use gimbal stabiliztion system place accelerometer,quadcopter sensors accelerometer,quadcopter sensors accelerometer
2415,quadrature encoder signal dc motor noisy,starting robotics got dc gear motor quadrature encoder https //www.pololu.com/product/2824 plan hook motor driver connected tiva launchpad curious starting playing oscilloscope voltage source e.g. plug motor power lines variable voltage source axis spins expected v. problems start try check encoder works plug source encoder gnd/vcc try monitor encoder output motor running check yellow encoder output cable referencing green encoder gnd cable made video shows representative output lines usb old oscilloscope took video using phone see video output look anything beautiful square waves see documentation degraded noisy sin wave correct frequency encoder amplitude sin constant changes time locks looks ideal square wave second gets wonky lines encoder b output act way act way time e.g. lock square time brief glorious moments clarity motors think bad motor checked using vcc=12v made difference changing amplitude output note posted question reddit https //www.reddit.com/r/robotics/comments/502vjt/roboredditors_my_quadrature_encoder_output_is/,motor quadrature-encoder,quadrature motor encoder
2416,use gimbal system simplistic quadcopter imu axis accelerometer,gimbal system want use sensor place imu axsis accelerometer quadcopter,quadcopter accelerometer gyroscope,quadcopter gyroscope accelerometer
2417,torque transmission efficiency using bycicle chain/setup robot,robot gear attached motor linked gear attached wheels bicycle chain using bicycle wheel transmission set parts robots movements using bicycle chain affect power transmission efficiency impact torque,mobile-robot torque gearing,mobile gearing torque robot
2418,c++ library use program robotic manipulator involving inverse kinematics,came robotics library rl unclear real purpose fk/ik library graphical simulator rl poor documentation clear use im looking c++ library apis solve fk/if thank,inverse-kinematics c++ forward-kinematics,c inverse kinematics
2419,types actuators industrial bots use,particular example robot interests http //www.scmp.com/tech/innovation/article/1829834/foxconns-foxbot-army-close-hitting-chinese-market-track-meet-30-cent see first image bigger robot left particular shoulder pitch joint support curious know hard balance strength precision types robots want know close hobbyist get something similar rotary tables w/ worm gears http //www.velmex.com/products/rotary_tables/motorized-rotary-tables.html looking actuation schemes research thanks,motor robotic-arm actuator torque,actuator torque arm motor robotic
2420,technique increase pov resolution,thought technique increase resolution pov persistence vision display usual pov display leds arranged strip spun circle limiting factors increasing radial resolution circumference circular path led follows depending speed pov wheel minimum time required decided microcontroller change led color case rgb factor led width increases color pixel neighboring pixel led changes color brightness fix slit front led -- like help improve resolution pov display effect reducing width circumference led traversing use fast microcontroller narrow slit obtain high resolution dimension least clear implemented looking experienced person tell work,microcontroller electronics,electronics microcontroller
2421,upload sketches arduino raspberry pi,robotics project raspberry pi arduino arduino uno connected raspberry pi using raspberry pi putty ssh want setup user interface raspberry pi want use arduino ide work load arduino sketch system,arduino raspberry-pi embedded-systems first-robotics linux,raspberry embedded arduino robotics systems linux pi first
2422,ekf slam laser scanned datasets usage,laser scanner scanned data use implementation ekf slam someone provide implementation ekf slam python pseudo datasets,slam ekf first-robotics,robotics ekf slam
2423,communication swarm robotics,hey trying research swarm robotics trying find helpful information articles/papers read process setting communication protocols different robots instance using lan connection robot need wireless adapter begin setting network say 5-10 smaller robots someone help understand devices connect communicate networks understand basics ip addressing researched complexities advice direction appreciated,wireless,wireless
